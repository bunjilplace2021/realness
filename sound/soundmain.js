/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./node_modules/@babel/runtime/helpers/arrayLikeToArray.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/arrayLikeToArray.js ***!
  \*****************************************************************/
/*! unknown exports (runtime-defined) */
/*! runtime requirements: module */
/*! CommonJS bailout: module.exports is used directly at 11:0-14 */
/***/ ((module) => {

function _arrayLikeToArray(arr, len) {
  if (len == null || len > arr.length) len = arr.length;

  for (var i = 0, arr2 = new Array(len); i < len; i++) {
    arr2[i] = arr[i];
  }

  return arr2;
}

module.exports = _arrayLikeToArray;

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/arrayWithHoles.js":
/*!***************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/arrayWithHoles.js ***!
  \***************************************************************/
/*! unknown exports (runtime-defined) */
/*! runtime requirements: module */
/*! CommonJS bailout: module.exports is used directly at 5:0-14 */
/***/ ((module) => {

function _arrayWithHoles(arr) {
  if (Array.isArray(arr)) return arr;
}

module.exports = _arrayWithHoles;

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/classCallCheck.js":
/*!***************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/classCallCheck.js ***!
  \***************************************************************/
/*! unknown exports (runtime-defined) */
/*! runtime requirements: module */
/*! CommonJS bailout: module.exports is used directly at 7:0-14 */
/***/ ((module) => {

function _classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}

module.exports = _classCallCheck;

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/createClass.js":
/*!************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/createClass.js ***!
  \************************************************************/
/*! unknown exports (runtime-defined) */
/*! runtime requirements: module */
/*! CommonJS bailout: module.exports is used directly at 17:0-14 */
/***/ ((module) => {

function _defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}

function _createClass(Constructor, protoProps, staticProps) {
  if (protoProps) _defineProperties(Constructor.prototype, protoProps);
  if (staticProps) _defineProperties(Constructor, staticProps);
  return Constructor;
}

module.exports = _createClass;

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/iterableToArrayLimit.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/iterableToArrayLimit.js ***!
  \*********************************************************************/
/*! unknown exports (runtime-defined) */
/*! runtime requirements: module */
/*! CommonJS bailout: module.exports is used directly at 28:0-14 */
/***/ ((module) => {

function _iterableToArrayLimit(arr, i) {
  if (typeof Symbol === "undefined" || !(Symbol.iterator in Object(arr))) return;
  var _arr = [];
  var _n = true;
  var _d = false;
  var _e = undefined;

  try {
    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {
      _arr.push(_s.value);

      if (i && _arr.length === i) break;
    }
  } catch (err) {
    _d = true;
    _e = err;
  } finally {
    try {
      if (!_n && _i["return"] != null) _i["return"]();
    } finally {
      if (_d) throw _e;
    }
  }

  return _arr;
}

module.exports = _iterableToArrayLimit;

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/nonIterableRest.js":
/*!****************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/nonIterableRest.js ***!
  \****************************************************************/
/*! unknown exports (runtime-defined) */
/*! runtime requirements: module */
/*! CommonJS bailout: module.exports is used directly at 5:0-14 */
/***/ ((module) => {

function _nonIterableRest() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}

module.exports = _nonIterableRest;

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/slicedToArray.js":
/*!**************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/slicedToArray.js ***!
  \**************************************************************/
/*! unknown exports (runtime-defined) */
/*! runtime requirements: module, __webpack_require__ */
/*! CommonJS bailout: module.exports is used directly at 13:0-14 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var arrayWithHoles = __webpack_require__(/*! ./arrayWithHoles */ "./node_modules/@babel/runtime/helpers/arrayWithHoles.js");

var iterableToArrayLimit = __webpack_require__(/*! ./iterableToArrayLimit */ "./node_modules/@babel/runtime/helpers/iterableToArrayLimit.js");

var unsupportedIterableToArray = __webpack_require__(/*! ./unsupportedIterableToArray */ "./node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js");

var nonIterableRest = __webpack_require__(/*! ./nonIterableRest */ "./node_modules/@babel/runtime/helpers/nonIterableRest.js");

function _slicedToArray(arr, i) {
  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();
}

module.exports = _slicedToArray;

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js ***!
  \***************************************************************************/
/*! unknown exports (runtime-defined) */
/*! runtime requirements: module, __webpack_require__ */
/*! CommonJS bailout: module.exports is used directly at 12:0-14 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var arrayLikeToArray = __webpack_require__(/*! ./arrayLikeToArray */ "./node_modules/@babel/runtime/helpers/arrayLikeToArray.js");

function _unsupportedIterableToArray(o, minLen) {
  if (!o) return;
  if (typeof o === "string") return arrayLikeToArray(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor) n = o.constructor.name;
  if (n === "Map" || n === "Set") return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);
}

module.exports = _unsupportedIterableToArray;

/***/ }),

/***/ "./node_modules/@firebase/app/dist/index.esm.js":
/*!******************************************************!*\
  !*** ./node_modules/@firebase/app/dist/index.esm.js ***!
  \******************************************************/
/*! namespace exports */
/*! export default [provided] [no usage info] [missing usage info prevents renaming] */
/*! export firebase [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_exports__, __webpack_require__.r, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__,
/* harmony export */   "firebase": () => /* binding */ firebase$1
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _firebase_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @firebase/util */ "./node_modules/@firebase/util/dist/index.esm.js");
/* harmony import */ var _firebase_component__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @firebase/component */ "./node_modules/@firebase/component/dist/index.esm.js");
/* harmony import */ var _firebase_logger__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @firebase/logger */ "./node_modules/@firebase/logger/dist/index.esm.js");
;




/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
var _a;
var ERRORS = (_a = {},
    _a["no-app" /* NO_APP */] = "No Firebase App '{$appName}' has been created - " +
        'call Firebase App.initializeApp()',
    _a["bad-app-name" /* BAD_APP_NAME */] = "Illegal App name: '{$appName}",
    _a["duplicate-app" /* DUPLICATE_APP */] = "Firebase App named '{$appName}' already exists",
    _a["app-deleted" /* APP_DELETED */] = "Firebase App named '{$appName}' already deleted",
    _a["invalid-app-argument" /* INVALID_APP_ARGUMENT */] = 'firebase.{$appName}() takes either no argument or a ' +
        'Firebase App instance.',
    _a["invalid-log-argument" /* INVALID_LOG_ARGUMENT */] = 'First argument to `onLog` must be null or a function.',
    _a);
var ERROR_FACTORY = new _firebase_util__WEBPACK_IMPORTED_MODULE_0__.ErrorFactory('app', 'Firebase', ERRORS);

var name$1 = "@firebase/app";
var version = "0.6.13";

var name$2 = "@firebase/analytics";

var name$3 = "@firebase/auth";

var name$4 = "@firebase/database";

var name$5 = "@firebase/functions";

var name$6 = "@firebase/installations";

var name$7 = "@firebase/messaging";

var name$8 = "@firebase/performance";

var name$9 = "@firebase/remote-config";

var name$a = "@firebase/storage";

var name$b = "@firebase/firestore";

var name$c = "firebase-wrapper";

/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
var _a$1;
var DEFAULT_ENTRY_NAME = '[DEFAULT]';
var PLATFORM_LOG_STRING = (_a$1 = {},
    _a$1[name$1] = 'fire-core',
    _a$1[name$2] = 'fire-analytics',
    _a$1[name$3] = 'fire-auth',
    _a$1[name$4] = 'fire-rtdb',
    _a$1[name$5] = 'fire-fn',
    _a$1[name$6] = 'fire-iid',
    _a$1[name$7] = 'fire-fcm',
    _a$1[name$8] = 'fire-perf',
    _a$1[name$9] = 'fire-rc',
    _a$1[name$a] = 'fire-gcs',
    _a$1[name$b] = 'fire-fst',
    _a$1['fire-js'] = 'fire-js',
    _a$1[name$c] = 'fire-js-all',
    _a$1);

/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
var logger = new _firebase_logger__WEBPACK_IMPORTED_MODULE_2__.Logger('@firebase/app');

/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * Global context object for a collection of services using
 * a shared authentication state.
 */
var FirebaseAppImpl = /** @class */ (function () {
    function FirebaseAppImpl(options, config, firebase_) {
        var e_1, _a;
        var _this = this;
        this.firebase_ = firebase_;
        this.isDeleted_ = false;
        this.name_ = config.name;
        this.automaticDataCollectionEnabled_ =
            config.automaticDataCollectionEnabled || false;
        this.options_ = (0,_firebase_util__WEBPACK_IMPORTED_MODULE_0__.deepCopy)(options);
        this.container = new _firebase_component__WEBPACK_IMPORTED_MODULE_1__.ComponentContainer(config.name);
        // add itself to container
        this._addComponent(new _firebase_component__WEBPACK_IMPORTED_MODULE_1__.Component('app', function () { return _this; }, "PUBLIC" /* PUBLIC */));
        try {
            // populate ComponentContainer with existing components
            for (var _b = (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__values)(this.firebase_.INTERNAL.components.values()), _c = _b.next(); !_c.done; _c = _b.next()) {
                var component = _c.value;
                this._addComponent(component);
            }
        }
        catch (e_1_1) { e_1 = { error: e_1_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
            }
            finally { if (e_1) throw e_1.error; }
        }
    }
    Object.defineProperty(FirebaseAppImpl.prototype, "automaticDataCollectionEnabled", {
        get: function () {
            this.checkDestroyed_();
            return this.automaticDataCollectionEnabled_;
        },
        set: function (val) {
            this.checkDestroyed_();
            this.automaticDataCollectionEnabled_ = val;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FirebaseAppImpl.prototype, "name", {
        get: function () {
            this.checkDestroyed_();
            return this.name_;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FirebaseAppImpl.prototype, "options", {
        get: function () {
            this.checkDestroyed_();
            return this.options_;
        },
        enumerable: false,
        configurable: true
    });
    FirebaseAppImpl.prototype.delete = function () {
        var _this = this;
        return new Promise(function (resolve) {
            _this.checkDestroyed_();
            resolve();
        })
            .then(function () {
            _this.firebase_.INTERNAL.removeApp(_this.name_);
            return Promise.all(_this.container.getProviders().map(function (provider) { return provider.delete(); }));
        })
            .then(function () {
            _this.isDeleted_ = true;
        });
    };
    /**
     * Return a service instance associated with this app (creating it
     * on demand), identified by the passed instanceIdentifier.
     *
     * NOTE: Currently storage and functions are the only ones that are leveraging this
     * functionality. They invoke it by calling:
     *
     * ```javascript
     * firebase.app().storage('STORAGE BUCKET ID')
     * ```
     *
     * The service name is passed to this already
     * @internal
     */
    FirebaseAppImpl.prototype._getService = function (name, instanceIdentifier) {
        if (instanceIdentifier === void 0) { instanceIdentifier = DEFAULT_ENTRY_NAME; }
        this.checkDestroyed_();
        // getImmediate will always succeed because _getService is only called for registered components.
        return this.container.getProvider(name).getImmediate({
            identifier: instanceIdentifier
        });
    };
    /**
     * Remove a service instance from the cache, so we will create a new instance for this service
     * when people try to get this service again.
     *
     * NOTE: currently only firestore is using this functionality to support firestore shutdown.
     *
     * @param name The service name
     * @param instanceIdentifier instance identifier in case multiple instances are allowed
     * @internal
     */
    FirebaseAppImpl.prototype._removeServiceInstance = function (name, instanceIdentifier) {
        if (instanceIdentifier === void 0) { instanceIdentifier = DEFAULT_ENTRY_NAME; }
        // eslint-disable-next-line @typescript-eslint/no-explicit-any
        this.container.getProvider(name).clearInstance(instanceIdentifier);
    };
    /**
     * @param component the component being added to this app's container
     */
    FirebaseAppImpl.prototype._addComponent = function (component) {
        try {
            this.container.addComponent(component);
        }
        catch (e) {
            logger.debug("Component " + component.name + " failed to register with FirebaseApp " + this.name, e);
        }
    };
    FirebaseAppImpl.prototype._addOrOverwriteComponent = function (component) {
        this.container.addOrOverwriteComponent(component);
    };
    /**
     * This function will throw an Error if the App has already been deleted -
     * use before performing API actions on the App.
     */
    FirebaseAppImpl.prototype.checkDestroyed_ = function () {
        if (this.isDeleted_) {
            throw ERROR_FACTORY.create("app-deleted" /* APP_DELETED */, { appName: this.name_ });
        }
    };
    return FirebaseAppImpl;
}());
// Prevent dead-code elimination of these methods w/o invalid property
// copying.
(FirebaseAppImpl.prototype.name && FirebaseAppImpl.prototype.options) ||
    FirebaseAppImpl.prototype.delete ||
    console.log('dc');

var version$1 = "8.0.1";

/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * Because auth can't share code with other components, we attach the utility functions
 * in an internal namespace to share code.
 * This function return a firebase namespace object without
 * any utility functions, so it can be shared between the regular firebaseNamespace and
 * the lite version.
 */
function createFirebaseNamespaceCore(firebaseAppImpl) {
    var apps = {};
    // eslint-disable-next-line @typescript-eslint/no-explicit-any
    var components = new Map();
    // A namespace is a plain JavaScript Object.
    var namespace = {
        // Hack to prevent Babel from modifying the object returned
        // as the firebase namespace.
        // @ts-ignore
        __esModule: true,
        initializeApp: initializeApp,
        // @ts-ignore
        app: app,
        registerVersion: registerVersion,
        setLogLevel: _firebase_logger__WEBPACK_IMPORTED_MODULE_2__.setLogLevel,
        onLog: onLog,
        // @ts-ignore
        apps: null,
        SDK_VERSION: version$1,
        INTERNAL: {
            registerComponent: registerComponent,
            removeApp: removeApp,
            components: components,
            useAsService: useAsService
        }
    };
    // Inject a circular default export to allow Babel users who were previously
    // using:
    //
    //   import firebase from 'firebase';
    //   which becomes: var firebase = require('firebase').default;
    //
    // instead of
    //
    //   import * as firebase from 'firebase';
    //   which becomes: var firebase = require('firebase');
    // eslint-disable-next-line @typescript-eslint/no-explicit-any
    namespace['default'] = namespace;
    // firebase.apps is a read-only getter.
    Object.defineProperty(namespace, 'apps', {
        get: getApps
    });
    /**
     * Called by App.delete() - but before any services associated with the App
     * are deleted.
     */
    function removeApp(name) {
        delete apps[name];
    }
    /**
     * Get the App object for a given name (or DEFAULT).
     */
    function app(name) {
        name = name || DEFAULT_ENTRY_NAME;
        if (!(0,_firebase_util__WEBPACK_IMPORTED_MODULE_0__.contains)(apps, name)) {
            throw ERROR_FACTORY.create("no-app" /* NO_APP */, { appName: name });
        }
        return apps[name];
    }
    // @ts-ignore
    app['App'] = firebaseAppImpl;
    function initializeApp(options, rawConfig) {
        if (rawConfig === void 0) { rawConfig = {}; }
        if (typeof rawConfig !== 'object' || rawConfig === null) {
            var name_1 = rawConfig;
            rawConfig = { name: name_1 };
        }
        var config = rawConfig;
        if (config.name === undefined) {
            config.name = DEFAULT_ENTRY_NAME;
        }
        var name = config.name;
        if (typeof name !== 'string' || !name) {
            throw ERROR_FACTORY.create("bad-app-name" /* BAD_APP_NAME */, {
                appName: String(name)
            });
        }
        if ((0,_firebase_util__WEBPACK_IMPORTED_MODULE_0__.contains)(apps, name)) {
            throw ERROR_FACTORY.create("duplicate-app" /* DUPLICATE_APP */, { appName: name });
        }
        var app = new firebaseAppImpl(options, config, namespace);
        apps[name] = app;
        return app;
    }
    /*
     * Return an array of all the non-deleted FirebaseApps.
     */
    function getApps() {
        // Make a copy so caller cannot mutate the apps list.
        return Object.keys(apps).map(function (name) { return apps[name]; });
    }
    function registerComponent(component) {
        var e_1, _a;
        var componentName = component.name;
        if (components.has(componentName)) {
            logger.debug("There were multiple attempts to register component " + componentName + ".");
            return component.type === "PUBLIC" /* PUBLIC */
                ? // eslint-disable-next-line @typescript-eslint/no-explicit-any
                    namespace[componentName]
                : null;
        }
        components.set(componentName, component);
        // create service namespace for public components
        if (component.type === "PUBLIC" /* PUBLIC */) {
            // The Service namespace is an accessor function ...
            var serviceNamespace = function (appArg) {
                if (appArg === void 0) { appArg = app(); }
                // eslint-disable-next-line @typescript-eslint/no-explicit-any
                if (typeof appArg[componentName] !== 'function') {
                    // Invalid argument.
                    // This happens in the following case: firebase.storage('gs:/')
                    throw ERROR_FACTORY.create("invalid-app-argument" /* INVALID_APP_ARGUMENT */, {
                        appName: componentName
                    });
                }
                // Forward service instance lookup to the FirebaseApp.
                // eslint-disable-next-line @typescript-eslint/no-explicit-any
                return appArg[componentName]();
            };
            // ... and a container for service-level properties.
            if (component.serviceProps !== undefined) {
                (0,_firebase_util__WEBPACK_IMPORTED_MODULE_0__.deepExtend)(serviceNamespace, component.serviceProps);
            }
            // eslint-disable-next-line @typescript-eslint/no-explicit-any
            namespace[componentName] = serviceNamespace;
            // Patch the FirebaseAppImpl prototype
            // eslint-disable-next-line @typescript-eslint/no-explicit-any
            firebaseAppImpl.prototype[componentName] =
                // TODO: The eslint disable can be removed and the 'ignoreRestArgs'
                // option added to the no-explicit-any rule when ESlint releases it.
                // eslint-disable-next-line @typescript-eslint/no-explicit-any
                function () {
                    var args = [];
                    for (var _i = 0; _i < arguments.length; _i++) {
                        args[_i] = arguments[_i];
                    }
                    var serviceFxn = this._getService.bind(this, componentName);
                    return serviceFxn.apply(this, component.multipleInstances ? args : []);
                };
        }
        try {
            // add the component to existing app instances
            for (var _b = (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__values)(Object.keys(apps)), _c = _b.next(); !_c.done; _c = _b.next()) {
                var appName = _c.value;
                apps[appName]._addComponent(component);
            }
        }
        catch (e_1_1) { e_1 = { error: e_1_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
            }
            finally { if (e_1) throw e_1.error; }
        }
        return component.type === "PUBLIC" /* PUBLIC */
            ? // eslint-disable-next-line @typescript-eslint/no-explicit-any
                namespace[componentName]
            : null;
    }
    function registerVersion(libraryKeyOrName, version, variant) {
        var _a;
        // TODO: We can use this check to whitelist strings when/if we set up
        // a good whitelist system.
        var library = (_a = PLATFORM_LOG_STRING[libraryKeyOrName]) !== null && _a !== void 0 ? _a : libraryKeyOrName;
        if (variant) {
            library += "-" + variant;
        }
        var libraryMismatch = library.match(/\s|\//);
        var versionMismatch = version.match(/\s|\//);
        if (libraryMismatch || versionMismatch) {
            var warning = [
                "Unable to register library \"" + library + "\" with version \"" + version + "\":"
            ];
            if (libraryMismatch) {
                warning.push("library name \"" + library + "\" contains illegal characters (whitespace or \"/\")");
            }
            if (libraryMismatch && versionMismatch) {
                warning.push('and');
            }
            if (versionMismatch) {
                warning.push("version name \"" + version + "\" contains illegal characters (whitespace or \"/\")");
            }
            logger.warn(warning.join(' '));
            return;
        }
        registerComponent(new _firebase_component__WEBPACK_IMPORTED_MODULE_1__.Component(library + "-version", function () { return ({ library: library, version: version }); }, "VERSION" /* VERSION */));
    }
    function onLog(logCallback, options) {
        if (logCallback !== null && typeof logCallback !== 'function') {
            throw ERROR_FACTORY.create("invalid-log-argument" /* INVALID_LOG_ARGUMENT */, {
                appName: name
            });
        }
        (0,_firebase_logger__WEBPACK_IMPORTED_MODULE_2__.setUserLogHandler)(logCallback, options);
    }
    // Map the requested service to a registered service name
    // (used to map auth to serverAuth service when needed).
    function useAsService(app, name) {
        if (name === 'serverAuth') {
            return null;
        }
        var useService = name;
        return useService;
    }
    return namespace;
}

/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * Return a firebase namespace object.
 *
 * In production, this will be called exactly once and the result
 * assigned to the 'firebase' global.  It may be called multiple times
 * in unit tests.
 */
function createFirebaseNamespace() {
    var namespace = createFirebaseNamespaceCore(FirebaseAppImpl);
    namespace.INTERNAL = (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_3__.__assign)({}, namespace.INTERNAL), { createFirebaseNamespace: createFirebaseNamespace,
        extendNamespace: extendNamespace,
        createSubscribe: _firebase_util__WEBPACK_IMPORTED_MODULE_0__.createSubscribe,
        ErrorFactory: _firebase_util__WEBPACK_IMPORTED_MODULE_0__.ErrorFactory,
        deepExtend: _firebase_util__WEBPACK_IMPORTED_MODULE_0__.deepExtend });
    /**
     * Patch the top-level firebase namespace with additional properties.
     *
     * firebase.INTERNAL.extendNamespace()
     */
    function extendNamespace(props) {
        (0,_firebase_util__WEBPACK_IMPORTED_MODULE_0__.deepExtend)(namespace, props);
    }
    return namespace;
}
var firebase = createFirebaseNamespace();

/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
var PlatformLoggerService = /** @class */ (function () {
    function PlatformLoggerService(container) {
        this.container = container;
    }
    // In initial implementation, this will be called by installations on
    // auth token refresh, and installations will send this string.
    PlatformLoggerService.prototype.getPlatformInfoString = function () {
        var providers = this.container.getProviders();
        // Loop through providers and get library/version pairs from any that are
        // version components.
        return providers
            .map(function (provider) {
            if (isVersionServiceProvider(provider)) {
                var service = provider.getImmediate();
                return service.library + "/" + service.version;
            }
            else {
                return null;
            }
        })
            .filter(function (logString) { return logString; })
            .join(' ');
    };
    return PlatformLoggerService;
}());
/**
 *
 * @param provider check if this provider provides a VersionService
 *
 * NOTE: Using Provider<'app-version'> is a hack to indicate that the provider
 * provides VersionService. The provider is not necessarily a 'app-version'
 * provider.
 */
function isVersionServiceProvider(provider) {
    var component = provider.getComponent();
    return (component === null || component === void 0 ? void 0 : component.type) === "VERSION" /* VERSION */;
}

/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
function registerCoreComponents(firebase, variant) {
    firebase.INTERNAL.registerComponent(new _firebase_component__WEBPACK_IMPORTED_MODULE_1__.Component('platform-logger', function (container) { return new PlatformLoggerService(container); }, "PRIVATE" /* PRIVATE */));
    // Register `app` package.
    firebase.registerVersion(name$1, version, variant);
    // Register platform SDK identifier (no version).
    firebase.registerVersion('fire-js', '');
}

/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Firebase Lite detection test
// eslint-disable-next-line @typescript-eslint/no-explicit-any
if ((0,_firebase_util__WEBPACK_IMPORTED_MODULE_0__.isBrowser)() && self.firebase !== undefined) {
    logger.warn("\n    Warning: Firebase is already defined in the global scope. Please make sure\n    Firebase library is only loaded once.\n  ");
    // eslint-disable-next-line
    var sdkVersion = self.firebase.SDK_VERSION;
    if (sdkVersion && sdkVersion.indexOf('LITE') >= 0) {
        logger.warn("\n    Warning: You are trying to load Firebase while using Firebase Performance standalone script.\n    You should load Firebase Performance with this instance of Firebase to avoid loading duplicate code.\n    ");
    }
}
var initializeApp = firebase.initializeApp;
// TODO: This disable can be removed and the 'ignoreRestArgs' option added to
// the no-explicit-any rule when ESlint releases it.
// eslint-disable-next-line @typescript-eslint/no-explicit-any
firebase.initializeApp = function () {
    var args = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        args[_i] = arguments[_i];
    }
    // Environment check before initializing app
    // Do the check in initializeApp, so people have a chance to disable it by setting logLevel
    // in @firebase/logger
    if ((0,_firebase_util__WEBPACK_IMPORTED_MODULE_0__.isNode)()) {
        logger.warn("\n      Warning: This is a browser-targeted Firebase bundle but it appears it is being\n      run in a Node environment.  If running in a Node environment, make sure you\n      are using the bundle specified by the \"main\" field in package.json.\n      \n      If you are using Webpack, you can specify \"main\" as the first item in\n      \"resolve.mainFields\":\n      https://webpack.js.org/configuration/resolve/#resolvemainfields\n      \n      If using Rollup, use the @rollup/plugin-node-resolve plugin and specify \"main\"\n      as the first item in \"mainFields\", e.g. ['main', 'module'].\n      https://github.com/rollup/@rollup/plugin-node-resolve\n      ");
    }
    return initializeApp.apply(undefined, args);
};
var firebase$1 = firebase;
registerCoreComponents(firebase$1);

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (firebase$1);

//# sourceMappingURL=index.esm.js.map


/***/ }),

/***/ "./node_modules/@firebase/component/dist/index.esm.js":
/*!************************************************************!*\
  !*** ./node_modules/@firebase/component/dist/index.esm.js ***!
  \************************************************************/
/*! namespace exports */
/*! export Component [provided] [no usage info] [missing usage info prevents renaming] */
/*! export ComponentContainer [provided] [no usage info] [missing usage info prevents renaming] */
/*! export Provider [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Component": () => /* binding */ Component,
/* harmony export */   "ComponentContainer": () => /* binding */ ComponentContainer,
/* harmony export */   "Provider": () => /* binding */ Provider
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _firebase_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @firebase/util */ "./node_modules/@firebase/util/dist/index.esm.js");
;


/**
 * Component for service name T, e.g. `auth`, `auth-internal`
 */
var Component = /** @class */ (function () {
    /**
     *
     * @param name The public service name, e.g. app, auth, firestore, database
     * @param instanceFactory Service factory responsible for creating the public interface
     * @param type whether the service provided by the component is public or private
     */
    function Component(name, instanceFactory, type) {
        this.name = name;
        this.instanceFactory = instanceFactory;
        this.type = type;
        this.multipleInstances = false;
        /**
         * Properties to be added to the service namespace
         */
        this.serviceProps = {};
        this.instantiationMode = "LAZY" /* LAZY */;
    }
    Component.prototype.setInstantiationMode = function (mode) {
        this.instantiationMode = mode;
        return this;
    };
    Component.prototype.setMultipleInstances = function (multipleInstances) {
        this.multipleInstances = multipleInstances;
        return this;
    };
    Component.prototype.setServiceProps = function (props) {
        this.serviceProps = props;
        return this;
    };
    return Component;
}());

/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
var DEFAULT_ENTRY_NAME = '[DEFAULT]';

/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * Provider for instance for service name T, e.g. 'auth', 'auth-internal'
 * NameServiceMapping[T] is an alias for the type of the instance
 */
var Provider = /** @class */ (function () {
    function Provider(name, container) {
        this.name = name;
        this.container = container;
        this.component = null;
        this.instances = new Map();
        this.instancesDeferred = new Map();
    }
    /**
     * @param identifier A provider can provide mulitple instances of a service
     * if this.component.multipleInstances is true.
     */
    Provider.prototype.get = function (identifier) {
        if (identifier === void 0) { identifier = DEFAULT_ENTRY_NAME; }
        // if multipleInstances is not supported, use the default name
        var normalizedIdentifier = this.normalizeInstanceIdentifier(identifier);
        if (!this.instancesDeferred.has(normalizedIdentifier)) {
            var deferred = new _firebase_util__WEBPACK_IMPORTED_MODULE_0__.Deferred();
            this.instancesDeferred.set(normalizedIdentifier, deferred);
            // If the service instance is available, resolve the promise with it immediately
            try {
                var instance = this.getOrInitializeService(normalizedIdentifier);
                if (instance) {
                    deferred.resolve(instance);
                }
            }
            catch (e) {
                // when the instance factory throws an exception during get(), it should not cause
                // a fatal error. We just return the unresolved promise in this case.
            }
        }
        return this.instancesDeferred.get(normalizedIdentifier).promise;
    };
    Provider.prototype.getImmediate = function (options) {
        var _a = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({ identifier: DEFAULT_ENTRY_NAME, optional: false }, options), identifier = _a.identifier, optional = _a.optional;
        // if multipleInstances is not supported, use the default name
        var normalizedIdentifier = this.normalizeInstanceIdentifier(identifier);
        try {
            var instance = this.getOrInitializeService(normalizedIdentifier);
            if (!instance) {
                if (optional) {
                    return null;
                }
                throw Error("Service " + this.name + " is not available");
            }
            return instance;
        }
        catch (e) {
            if (optional) {
                return null;
            }
            else {
                throw e;
            }
        }
    };
    Provider.prototype.getComponent = function () {
        return this.component;
    };
    Provider.prototype.setComponent = function (component) {
        var e_1, _a;
        if (component.name !== this.name) {
            throw Error("Mismatching Component " + component.name + " for Provider " + this.name + ".");
        }
        if (this.component) {
            throw Error("Component for " + this.name + " has already been provided");
        }
        this.component = component;
        // if the service is eager, initialize the default instance
        if (isComponentEager(component)) {
            try {
                this.getOrInitializeService(DEFAULT_ENTRY_NAME);
            }
            catch (e) {
                // when the instance factory for an eager Component throws an exception during the eager
                // initialization, it should not cause a fatal error.
                // TODO: Investigate if we need to make it configurable, because some component may want to cause
                // a fatal error in this case?
            }
        }
        try {
            // Create service instances for the pending promises and resolve them
            // NOTE: if this.multipleInstances is false, only the default instance will be created
            // and all promises with resolve with it regardless of the identifier.
            for (var _b = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__values)(this.instancesDeferred.entries()), _c = _b.next(); !_c.done; _c = _b.next()) {
                var _d = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__read)(_c.value, 2), instanceIdentifier = _d[0], instanceDeferred = _d[1];
                var normalizedIdentifier = this.normalizeInstanceIdentifier(instanceIdentifier);
                try {
                    // `getOrInitializeService()` should always return a valid instance since a component is guaranteed. use ! to make typescript happy.
                    var instance = this.getOrInitializeService(normalizedIdentifier);
                    instanceDeferred.resolve(instance);
                }
                catch (e) {
                    // when the instance factory throws an exception, it should not cause
                    // a fatal error. We just leave the promise unresolved.
                }
            }
        }
        catch (e_1_1) { e_1 = { error: e_1_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
            }
            finally { if (e_1) throw e_1.error; }
        }
    };
    Provider.prototype.clearInstance = function (identifier) {
        if (identifier === void 0) { identifier = DEFAULT_ENTRY_NAME; }
        this.instancesDeferred.delete(identifier);
        this.instances.delete(identifier);
    };
    // app.delete() will call this method on every provider to delete the services
    // TODO: should we mark the provider as deleted?
    Provider.prototype.delete = function () {
        return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(this, void 0, void 0, function () {
            var services;
            return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__generator)(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        services = Array.from(this.instances.values());
                        return [4 /*yield*/, Promise.all((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__spread)(services
                                .filter(function (service) { return 'INTERNAL' in service; }) // legacy services
                                // eslint-disable-next-line @typescript-eslint/no-explicit-any
                                .map(function (service) { return service.INTERNAL.delete(); }), services
                                .filter(function (service) { return '_delete' in service; }) // modularized services
                                // eslint-disable-next-line @typescript-eslint/no-explicit-any
                                .map(function (service) { return service._delete(); })))];
                    case 1:
                        _a.sent();
                        return [2 /*return*/];
                }
            });
        });
    };
    Provider.prototype.isComponentSet = function () {
        return this.component != null;
    };
    Provider.prototype.getOrInitializeService = function (identifier) {
        var instance = this.instances.get(identifier);
        if (!instance && this.component) {
            instance = this.component.instanceFactory(this.container, normalizeIdentifierForFactory(identifier));
            this.instances.set(identifier, instance);
        }
        return instance || null;
    };
    Provider.prototype.normalizeInstanceIdentifier = function (identifier) {
        if (this.component) {
            return this.component.multipleInstances ? identifier : DEFAULT_ENTRY_NAME;
        }
        else {
            return identifier; // assume multiple instances are supported before the component is provided.
        }
    };
    return Provider;
}());
// undefined should be passed to the service factory for the default instance
function normalizeIdentifierForFactory(identifier) {
    return identifier === DEFAULT_ENTRY_NAME ? undefined : identifier;
}
function isComponentEager(component) {
    return component.instantiationMode === "EAGER" /* EAGER */;
}

/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * ComponentContainer that provides Providers for service name T, e.g. `auth`, `auth-internal`
 */
var ComponentContainer = /** @class */ (function () {
    function ComponentContainer(name) {
        this.name = name;
        this.providers = new Map();
    }
    /**
     *
     * @param component Component being added
     * @param overwrite When a component with the same name has already been registered,
     * if overwrite is true: overwrite the existing component with the new component and create a new
     * provider with the new component. It can be useful in tests where you want to use different mocks
     * for different tests.
     * if overwrite is false: throw an exception
     */
    ComponentContainer.prototype.addComponent = function (component) {
        var provider = this.getProvider(component.name);
        if (provider.isComponentSet()) {
            throw new Error("Component " + component.name + " has already been registered with " + this.name);
        }
        provider.setComponent(component);
    };
    ComponentContainer.prototype.addOrOverwriteComponent = function (component) {
        var provider = this.getProvider(component.name);
        if (provider.isComponentSet()) {
            // delete the existing provider from the container, so we can register the new component
            this.providers.delete(component.name);
        }
        this.addComponent(component);
    };
    /**
     * getProvider provides a type safe interface where it can only be called with a field name
     * present in NameServiceMapping interface.
     *
     * Firebase SDKs providing services should extend NameServiceMapping interface to register
     * themselves.
     */
    ComponentContainer.prototype.getProvider = function (name) {
        if (this.providers.has(name)) {
            return this.providers.get(name);
        }
        // create a Provider for a service that hasn't registered with Firebase
        var provider = new Provider(name, this);
        this.providers.set(name, provider);
        return provider;
    };
    ComponentContainer.prototype.getProviders = function () {
        return Array.from(this.providers.values());
    };
    return ComponentContainer;
}());


//# sourceMappingURL=index.esm.js.map


/***/ }),

/***/ "./node_modules/@firebase/logger/dist/index.esm.js":
/*!*********************************************************!*\
  !*** ./node_modules/@firebase/logger/dist/index.esm.js ***!
  \*********************************************************/
/*! namespace exports */
/*! export LogLevel [provided] [no usage info] [missing usage info prevents renaming] */
/*! export Logger [provided] [no usage info] [missing usage info prevents renaming] */
/*! export setLogLevel [provided] [no usage info] [missing usage info prevents renaming] */
/*! export setUserLogHandler [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "LogLevel": () => /* binding */ LogLevel,
/* harmony export */   "Logger": () => /* binding */ Logger,
/* harmony export */   "setLogLevel": () => /* binding */ setLogLevel,
/* harmony export */   "setUserLogHandler": () => /* binding */ setUserLogHandler
/* harmony export */ });
/*! *****************************************************************************
Copyright (c) Microsoft Corporation. All rights reserved.
Licensed under the Apache License, Version 2.0 (the "License"); you may not use
this file except in compliance with the License. You may obtain a copy of the
License at http://www.apache.org/licenses/LICENSE-2.0

THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED
WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
MERCHANTABLITY OR NON-INFRINGEMENT.

See the Apache Version 2.0 License for specific language governing permissions
and limitations under the License.
***************************************************************************** */

function __spreadArrays() {
    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
    for (var r = Array(s), k = 0, i = 0; i < il; i++)
        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
            r[k] = a[j];
    return r;
}

/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
var _a;
/**
 * A container for all of the Logger instances
 */
var instances = [];
/**
 * The JS SDK supports 5 log levels and also allows a user the ability to
 * silence the logs altogether.
 *
 * The order is a follows:
 * DEBUG < VERBOSE < INFO < WARN < ERROR
 *
 * All of the log types above the current log level will be captured (i.e. if
 * you set the log level to `INFO`, errors will still be logged, but `DEBUG` and
 * `VERBOSE` logs will not)
 */
var LogLevel;
(function (LogLevel) {
    LogLevel[LogLevel["DEBUG"] = 0] = "DEBUG";
    LogLevel[LogLevel["VERBOSE"] = 1] = "VERBOSE";
    LogLevel[LogLevel["INFO"] = 2] = "INFO";
    LogLevel[LogLevel["WARN"] = 3] = "WARN";
    LogLevel[LogLevel["ERROR"] = 4] = "ERROR";
    LogLevel[LogLevel["SILENT"] = 5] = "SILENT";
})(LogLevel || (LogLevel = {}));
var levelStringToEnum = {
    'debug': LogLevel.DEBUG,
    'verbose': LogLevel.VERBOSE,
    'info': LogLevel.INFO,
    'warn': LogLevel.WARN,
    'error': LogLevel.ERROR,
    'silent': LogLevel.SILENT
};
/**
 * The default log level
 */
var defaultLogLevel = LogLevel.INFO;
/**
 * By default, `console.debug` is not displayed in the developer console (in
 * chrome). To avoid forcing users to have to opt-in to these logs twice
 * (i.e. once for firebase, and once in the console), we are sending `DEBUG`
 * logs to the `console.log` function.
 */
var ConsoleMethod = (_a = {},
    _a[LogLevel.DEBUG] = 'log',
    _a[LogLevel.VERBOSE] = 'log',
    _a[LogLevel.INFO] = 'info',
    _a[LogLevel.WARN] = 'warn',
    _a[LogLevel.ERROR] = 'error',
    _a);
/**
 * The default log handler will forward DEBUG, VERBOSE, INFO, WARN, and ERROR
 * messages on to their corresponding console counterparts (if the log method
 * is supported by the current log level)
 */
var defaultLogHandler = function (instance, logType) {
    var args = [];
    for (var _i = 2; _i < arguments.length; _i++) {
        args[_i - 2] = arguments[_i];
    }
    if (logType < instance.logLevel) {
        return;
    }
    var now = new Date().toISOString();
    var method = ConsoleMethod[logType];
    if (method) {
        console[method].apply(console, __spreadArrays(["[" + now + "]  " + instance.name + ":"], args));
    }
    else {
        throw new Error("Attempted to log a message with an invalid logType (value: " + logType + ")");
    }
};
var Logger = /** @class */ (function () {
    /**
     * Gives you an instance of a Logger to capture messages according to
     * Firebase's logging scheme.
     *
     * @param name The name that the logs will be associated with
     */
    function Logger(name) {
        this.name = name;
        /**
         * The log level of the given Logger instance.
         */
        this._logLevel = defaultLogLevel;
        /**
         * The main (internal) log handler for the Logger instance.
         * Can be set to a new function in internal package code but not by user.
         */
        this._logHandler = defaultLogHandler;
        /**
         * The optional, additional, user-defined log handler for the Logger instance.
         */
        this._userLogHandler = null;
        /**
         * Capture the current instance for later use
         */
        instances.push(this);
    }
    Object.defineProperty(Logger.prototype, "logLevel", {
        get: function () {
            return this._logLevel;
        },
        set: function (val) {
            if (!(val in LogLevel)) {
                throw new TypeError("Invalid value \"" + val + "\" assigned to `logLevel`");
            }
            this._logLevel = val;
        },
        enumerable: false,
        configurable: true
    });
    // Workaround for setter/getter having to be the same type.
    Logger.prototype.setLogLevel = function (val) {
        this._logLevel = typeof val === 'string' ? levelStringToEnum[val] : val;
    };
    Object.defineProperty(Logger.prototype, "logHandler", {
        get: function () {
            return this._logHandler;
        },
        set: function (val) {
            if (typeof val !== 'function') {
                throw new TypeError('Value assigned to `logHandler` must be a function');
            }
            this._logHandler = val;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(Logger.prototype, "userLogHandler", {
        get: function () {
            return this._userLogHandler;
        },
        set: function (val) {
            this._userLogHandler = val;
        },
        enumerable: false,
        configurable: true
    });
    /**
     * The functions below are all based on the `console` interface
     */
    Logger.prototype.debug = function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        this._userLogHandler && this._userLogHandler.apply(this, __spreadArrays([this, LogLevel.DEBUG], args));
        this._logHandler.apply(this, __spreadArrays([this, LogLevel.DEBUG], args));
    };
    Logger.prototype.log = function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        this._userLogHandler && this._userLogHandler.apply(this, __spreadArrays([this, LogLevel.VERBOSE], args));
        this._logHandler.apply(this, __spreadArrays([this, LogLevel.VERBOSE], args));
    };
    Logger.prototype.info = function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        this._userLogHandler && this._userLogHandler.apply(this, __spreadArrays([this, LogLevel.INFO], args));
        this._logHandler.apply(this, __spreadArrays([this, LogLevel.INFO], args));
    };
    Logger.prototype.warn = function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        this._userLogHandler && this._userLogHandler.apply(this, __spreadArrays([this, LogLevel.WARN], args));
        this._logHandler.apply(this, __spreadArrays([this, LogLevel.WARN], args));
    };
    Logger.prototype.error = function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        this._userLogHandler && this._userLogHandler.apply(this, __spreadArrays([this, LogLevel.ERROR], args));
        this._logHandler.apply(this, __spreadArrays([this, LogLevel.ERROR], args));
    };
    return Logger;
}());
function setLogLevel(level) {
    instances.forEach(function (inst) {
        inst.setLogLevel(level);
    });
}
function setUserLogHandler(logCallback, options) {
    var _loop_1 = function (instance) {
        var customLogLevel = null;
        if (options && options.level) {
            customLogLevel = levelStringToEnum[options.level];
        }
        if (logCallback === null) {
            instance.userLogHandler = null;
        }
        else {
            instance.userLogHandler = function (instance, level) {
                var args = [];
                for (var _i = 2; _i < arguments.length; _i++) {
                    args[_i - 2] = arguments[_i];
                }
                var message = args
                    .map(function (arg) {
                    if (arg == null) {
                        return null;
                    }
                    else if (typeof arg === 'string') {
                        return arg;
                    }
                    else if (typeof arg === 'number' || typeof arg === 'boolean') {
                        return arg.toString();
                    }
                    else if (arg instanceof Error) {
                        return arg.message;
                    }
                    else {
                        try {
                            return JSON.stringify(arg);
                        }
                        catch (ignored) {
                            return null;
                        }
                    }
                })
                    .filter(function (arg) { return arg; })
                    .join(' ');
                if (level >= (customLogLevel !== null && customLogLevel !== void 0 ? customLogLevel : instance.logLevel)) {
                    logCallback({
                        level: LogLevel[level].toLowerCase(),
                        message: message,
                        args: args,
                        type: instance.name
                    });
                }
            };
        }
    };
    for (var _i = 0, instances_1 = instances; _i < instances_1.length; _i++) {
        var instance = instances_1[_i];
        _loop_1(instance);
    }
}


//# sourceMappingURL=index.esm.js.map


/***/ }),

/***/ "./node_modules/@firebase/storage/dist/index.esm.js":
/*!**********************************************************!*\
  !*** ./node_modules/@firebase/storage/dist/index.esm.js ***!
  \**********************************************************/
/*! namespace exports */
/*! export registerStorage [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "registerStorage": () => /* binding */ registerStorage
/* harmony export */ });
/* harmony import */ var _firebase_app__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @firebase/app */ "./node_modules/@firebase/app/dist/index.esm.js");
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _firebase_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @firebase/util */ "./node_modules/@firebase/util/dist/index.esm.js");
/* harmony import */ var _firebase_component__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @firebase/component */ "./node_modules/@firebase/component/dist/index.esm.js");
;




/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * @fileoverview Constants used in the Firebase Storage library.
 */
/**
 * Domain name for firebase storage.
 */
var DEFAULT_HOST = 'firebasestorage.googleapis.com';
/**
 * The key in Firebase config json for the storage bucket.
 */
var CONFIG_STORAGE_BUCKET_KEY = 'storageBucket';
/**
 * 2 minutes
 *
 * The timeout for all operations except upload.
 */
var DEFAULT_MAX_OPERATION_RETRY_TIME = 2 * 60 * 1000;
/**
 * 10 minutes
 *
 * The timeout for upload.
 */
var DEFAULT_MAX_UPLOAD_RETRY_TIME = 10 * 60 * 1000;

var FirebaseStorageError = /** @class */ (function (_super) {
    (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__extends)(FirebaseStorageError, _super);
    function FirebaseStorageError(code, message) {
        var _this = _super.call(this, prependCode(code), "Firebase Storage: " + message + " (" + prependCode(code) + ")") || this;
        _this.customData = { serverResponse: null };
        // Without this, `instanceof FirebaseStorageError`, in tests for example,
        // returns false.
        Object.setPrototypeOf(_this, FirebaseStorageError.prototype);
        return _this;
    }
    FirebaseStorageError.prototype.codeEquals = function (code) {
        return prependCode(code) === this.code;
    };
    Object.defineProperty(FirebaseStorageError.prototype, "message", {
        get: function () {
            if (this.customData.serverResponse) {
                return this.message + "\n" + this.customData.serverResponse;
            }
            else {
                return this.message;
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FirebaseStorageError.prototype, "serverResponse", {
        get: function () {
            return this.customData.serverResponse;
        },
        set: function (serverResponse) {
            this.customData.serverResponse = serverResponse;
        },
        enumerable: false,
        configurable: true
    });
    return FirebaseStorageError;
}(_firebase_util__WEBPACK_IMPORTED_MODULE_1__.FirebaseError));
var Code = {
    // Shared between all platforms
    UNKNOWN: 'unknown',
    OBJECT_NOT_FOUND: 'object-not-found',
    BUCKET_NOT_FOUND: 'bucket-not-found',
    PROJECT_NOT_FOUND: 'project-not-found',
    QUOTA_EXCEEDED: 'quota-exceeded',
    UNAUTHENTICATED: 'unauthenticated',
    UNAUTHORIZED: 'unauthorized',
    RETRY_LIMIT_EXCEEDED: 'retry-limit-exceeded',
    INVALID_CHECKSUM: 'invalid-checksum',
    CANCELED: 'canceled',
    // JS specific
    INVALID_EVENT_NAME: 'invalid-event-name',
    INVALID_URL: 'invalid-url',
    INVALID_DEFAULT_BUCKET: 'invalid-default-bucket',
    NO_DEFAULT_BUCKET: 'no-default-bucket',
    CANNOT_SLICE_BLOB: 'cannot-slice-blob',
    SERVER_FILE_WRONG_SIZE: 'server-file-wrong-size',
    NO_DOWNLOAD_URL: 'no-download-url',
    INVALID_ARGUMENT: 'invalid-argument',
    INVALID_ARGUMENT_COUNT: 'invalid-argument-count',
    APP_DELETED: 'app-deleted',
    INVALID_ROOT_OPERATION: 'invalid-root-operation',
    INVALID_FORMAT: 'invalid-format',
    INTERNAL_ERROR: 'internal-error',
    UNSUPPORTED_ENVIRONMENT: 'unsupported-environment'
};
function prependCode(code) {
    return 'storage/' + code;
}
function unknown() {
    var message = 'An unknown error occurred, please check the error payload for ' +
        'server response.';
    return new FirebaseStorageError(Code.UNKNOWN, message);
}
function objectNotFound(path) {
    return new FirebaseStorageError(Code.OBJECT_NOT_FOUND, "Object '" + path + "' does not exist.");
}
function quotaExceeded(bucket) {
    return new FirebaseStorageError(Code.QUOTA_EXCEEDED, "Quota for bucket '" +
        bucket +
        "' exceeded, please view quota on " +
        'https://firebase.google.com/pricing/.');
}
function unauthenticated() {
    var message = 'User is not authenticated, please authenticate using Firebase ' +
        'Authentication and try again.';
    return new FirebaseStorageError(Code.UNAUTHENTICATED, message);
}
function unauthorized(path) {
    return new FirebaseStorageError(Code.UNAUTHORIZED, "User does not have permission to access '" + path + "'.");
}
function retryLimitExceeded() {
    return new FirebaseStorageError(Code.RETRY_LIMIT_EXCEEDED, 'Max retry time for operation exceeded, please try again.');
}
function canceled() {
    return new FirebaseStorageError(Code.CANCELED, 'User canceled the upload/download.');
}
function invalidUrl(url) {
    return new FirebaseStorageError(Code.INVALID_URL, "Invalid URL '" + url + "'.");
}
function invalidDefaultBucket(bucket) {
    return new FirebaseStorageError(Code.INVALID_DEFAULT_BUCKET, "Invalid default bucket '" + bucket + "'.");
}
function noDefaultBucket() {
    return new FirebaseStorageError(Code.NO_DEFAULT_BUCKET, 'No default bucket ' +
        "found. Did you set the '" +
        CONFIG_STORAGE_BUCKET_KEY +
        "' property when initializing the app?");
}
function cannotSliceBlob() {
    return new FirebaseStorageError(Code.CANNOT_SLICE_BLOB, 'Cannot slice blob for upload. Please retry the upload.');
}
function serverFileWrongSize() {
    return new FirebaseStorageError(Code.SERVER_FILE_WRONG_SIZE, 'Server recorded incorrect upload file size, please retry the upload.');
}
function noDownloadURL() {
    return new FirebaseStorageError(Code.NO_DOWNLOAD_URL, 'The given file does not have any download URLs.');
}
function invalidArgument(message) {
    return new FirebaseStorageError(Code.INVALID_ARGUMENT, message);
}
function appDeleted() {
    return new FirebaseStorageError(Code.APP_DELETED, 'The Firebase app was deleted.');
}
/**
 * @param name - The name of the operation that was invalid.
 */
function invalidRootOperation(name) {
    return new FirebaseStorageError(Code.INVALID_ROOT_OPERATION, "The operation '" +
        name +
        "' cannot be performed on a root reference, create a non-root " +
        "reference using child, such as .child('file.png').");
}
/**
 * @param format - The format that was not valid.
 * @param message - A message describing the format violation.
 */
function invalidFormat(format, message) {
    return new FirebaseStorageError(Code.INVALID_FORMAT, "String does not match format '" + format + "': " + message);
}
/**
 * @param message - A message describing the internal error.
 */
function internalError(message) {
    throw new FirebaseStorageError(Code.INTERNAL_ERROR, 'Internal error: ' + message);
}

/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
var StringFormat = {
    RAW: 'raw',
    BASE64: 'base64',
    BASE64URL: 'base64url',
    DATA_URL: 'data_url'
};
var StringData = /** @class */ (function () {
    function StringData(data, contentType) {
        this.data = data;
        this.contentType = contentType || null;
    }
    return StringData;
}());
function dataFromString(format, stringData) {
    switch (format) {
        case StringFormat.RAW:
            return new StringData(utf8Bytes_(stringData));
        case StringFormat.BASE64:
        case StringFormat.BASE64URL:
            return new StringData(base64Bytes_(format, stringData));
        case StringFormat.DATA_URL:
            return new StringData(dataURLBytes_(stringData), dataURLContentType_(stringData));
        // do nothing
    }
    // assert(false);
    throw unknown();
}
function utf8Bytes_(value) {
    var b = [];
    for (var i = 0; i < value.length; i++) {
        var c = value.charCodeAt(i);
        if (c <= 127) {
            b.push(c);
        }
        else {
            if (c <= 2047) {
                b.push(192 | (c >> 6), 128 | (c & 63));
            }
            else {
                if ((c & 64512) === 55296) {
                    // The start of a surrogate pair.
                    var valid = i < value.length - 1 && (value.charCodeAt(i + 1) & 64512) === 56320;
                    if (!valid) {
                        // The second surrogate wasn't there.
                        b.push(239, 191, 189);
                    }
                    else {
                        var hi = c;
                        var lo = value.charCodeAt(++i);
                        c = 65536 | ((hi & 1023) << 10) | (lo & 1023);
                        b.push(240 | (c >> 18), 128 | ((c >> 12) & 63), 128 | ((c >> 6) & 63), 128 | (c & 63));
                    }
                }
                else {
                    if ((c & 64512) === 56320) {
                        // Invalid low surrogate.
                        b.push(239, 191, 189);
                    }
                    else {
                        b.push(224 | (c >> 12), 128 | ((c >> 6) & 63), 128 | (c & 63));
                    }
                }
            }
        }
    }
    return new Uint8Array(b);
}
function percentEncodedBytes_(value) {
    var decoded;
    try {
        decoded = decodeURIComponent(value);
    }
    catch (e) {
        throw invalidFormat(StringFormat.DATA_URL, 'Malformed data URL.');
    }
    return utf8Bytes_(decoded);
}
function base64Bytes_(format, value) {
    switch (format) {
        case StringFormat.BASE64: {
            var hasMinus = value.indexOf('-') !== -1;
            var hasUnder = value.indexOf('_') !== -1;
            if (hasMinus || hasUnder) {
                var invalidChar = hasMinus ? '-' : '_';
                throw invalidFormat(format, "Invalid character '" +
                    invalidChar +
                    "' found: is it base64url encoded?");
            }
            break;
        }
        case StringFormat.BASE64URL: {
            var hasPlus = value.indexOf('+') !== -1;
            var hasSlash = value.indexOf('/') !== -1;
            if (hasPlus || hasSlash) {
                var invalidChar = hasPlus ? '+' : '/';
                throw invalidFormat(format, "Invalid character '" + invalidChar + "' found: is it base64 encoded?");
            }
            value = value.replace(/-/g, '+').replace(/_/g, '/');
            break;
        }
        // do nothing
    }
    var bytes;
    try {
        bytes = atob(value);
    }
    catch (e) {
        throw invalidFormat(format, 'Invalid character found');
    }
    var array = new Uint8Array(bytes.length);
    for (var i = 0; i < bytes.length; i++) {
        array[i] = bytes.charCodeAt(i);
    }
    return array;
}
var DataURLParts = /** @class */ (function () {
    function DataURLParts(dataURL) {
        this.base64 = false;
        this.contentType = null;
        var matches = dataURL.match(/^data:([^,]+)?,/);
        if (matches === null) {
            throw invalidFormat(StringFormat.DATA_URL, "Must be formatted 'data:[<mediatype>][;base64],<data>");
        }
        var middle = matches[1] || null;
        if (middle != null) {
            this.base64 = endsWith(middle, ';base64');
            this.contentType = this.base64
                ? middle.substring(0, middle.length - ';base64'.length)
                : middle;
        }
        this.rest = dataURL.substring(dataURL.indexOf(',') + 1);
    }
    return DataURLParts;
}());
function dataURLBytes_(dataUrl) {
    var parts = new DataURLParts(dataUrl);
    if (parts.base64) {
        return base64Bytes_(StringFormat.BASE64, parts.rest);
    }
    else {
        return percentEncodedBytes_(parts.rest);
    }
}
function dataURLContentType_(dataUrl) {
    var parts = new DataURLParts(dataUrl);
    return parts.contentType;
}
function endsWith(s, end) {
    var longEnough = s.length >= end.length;
    if (!longEnough) {
        return false;
    }
    return s.substring(s.length - end.length) === end;
}

/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
var TaskEvent = {
    /** Triggered whenever the task changes or progress is updated. */
    STATE_CHANGED: 'state_changed'
};
var InternalTaskState = {
    RUNNING: 'running',
    PAUSING: 'pausing',
    PAUSED: 'paused',
    SUCCESS: 'success',
    CANCELING: 'canceling',
    CANCELED: 'canceled',
    ERROR: 'error'
};
var TaskState = {
    /** The task is currently transferring data. */
    RUNNING: 'running',
    /** The task was paused by the user. */
    PAUSED: 'paused',
    /** The task completed successfully. */
    SUCCESS: 'success',
    /** The task was canceled. */
    CANCELED: 'canceled',
    /** The task failed with an error. */
    ERROR: 'error'
};
function taskStateFromInternalTaskState(state) {
    switch (state) {
        case InternalTaskState.RUNNING:
        case InternalTaskState.PAUSING:
        case InternalTaskState.CANCELING:
            return TaskState.RUNNING;
        case InternalTaskState.PAUSED:
            return TaskState.PAUSED;
        case InternalTaskState.SUCCESS:
            return TaskState.SUCCESS;
        case InternalTaskState.CANCELED:
            return TaskState.CANCELED;
        case InternalTaskState.ERROR:
            return TaskState.ERROR;
        default:
            // TODO(andysoto): assert(false);
            return TaskState.ERROR;
    }
}

/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
var ErrorCode;
(function (ErrorCode) {
    ErrorCode[ErrorCode["NO_ERROR"] = 0] = "NO_ERROR";
    ErrorCode[ErrorCode["NETWORK_ERROR"] = 1] = "NETWORK_ERROR";
    ErrorCode[ErrorCode["ABORT"] = 2] = "ABORT";
})(ErrorCode || (ErrorCode = {}));

/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * We use this instead of goog.net.XhrIo because goog.net.XhrIo is hyuuuuge and
 * doesn't work in React Native on Android.
 */
var NetworkXhrIo = /** @class */ (function () {
    function NetworkXhrIo() {
        var _this = this;
        this.sent_ = false;
        this.xhr_ = new XMLHttpRequest();
        this.errorCode_ = ErrorCode.NO_ERROR;
        this.sendPromise_ = new Promise(function (resolve) {
            _this.xhr_.addEventListener('abort', function () {
                _this.errorCode_ = ErrorCode.ABORT;
                resolve(_this);
            });
            _this.xhr_.addEventListener('error', function () {
                _this.errorCode_ = ErrorCode.NETWORK_ERROR;
                resolve(_this);
            });
            _this.xhr_.addEventListener('load', function () {
                resolve(_this);
            });
        });
    }
    /**
     * @override
     */
    NetworkXhrIo.prototype.send = function (url, method, body, headers) {
        if (this.sent_) {
            throw internalError('cannot .send() more than once');
        }
        this.sent_ = true;
        this.xhr_.open(method, url, true);
        if (headers !== undefined) {
            for (var key in headers) {
                if (headers.hasOwnProperty(key)) {
                    this.xhr_.setRequestHeader(key, headers[key].toString());
                }
            }
        }
        if (body !== undefined) {
            this.xhr_.send(body);
        }
        else {
            this.xhr_.send();
        }
        return this.sendPromise_;
    };
    /**
     * @override
     */
    NetworkXhrIo.prototype.getErrorCode = function () {
        if (!this.sent_) {
            throw internalError('cannot .getErrorCode() before sending');
        }
        return this.errorCode_;
    };
    /**
     * @override
     */
    NetworkXhrIo.prototype.getStatus = function () {
        if (!this.sent_) {
            throw internalError('cannot .getStatus() before sending');
        }
        try {
            return this.xhr_.status;
        }
        catch (e) {
            return -1;
        }
    };
    /**
     * @override
     */
    NetworkXhrIo.prototype.getResponseText = function () {
        if (!this.sent_) {
            throw internalError('cannot .getResponseText() before sending');
        }
        return this.xhr_.responseText;
    };
    /**
     * Aborts the request.
     * @override
     */
    NetworkXhrIo.prototype.abort = function () {
        this.xhr_.abort();
    };
    /**
     * @override
     */
    NetworkXhrIo.prototype.getResponseHeader = function (header) {
        return this.xhr_.getResponseHeader(header);
    };
    /**
     * @override
     */
    NetworkXhrIo.prototype.addUploadProgressListener = function (listener) {
        if (this.xhr_.upload != null) {
            this.xhr_.upload.addEventListener('progress', listener);
        }
    };
    /**
     * @override
     */
    NetworkXhrIo.prototype.removeUploadProgressListener = function (listener) {
        if (this.xhr_.upload != null) {
            this.xhr_.upload.removeEventListener('progress', listener);
        }
    };
    return NetworkXhrIo;
}());

/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * Factory-like class for creating XhrIo instances.
 */
var XhrIoPool = /** @class */ (function () {
    function XhrIoPool() {
    }
    XhrIoPool.prototype.createXhrIo = function () {
        return new NetworkXhrIo();
    };
    return XhrIoPool;
}());

/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
function isJustDef(p) {
    return p !== void 0;
}
// eslint-disable-next-line @typescript-eslint/ban-types
function isFunction(p) {
    return typeof p === 'function';
}
function isNonArrayObject(p) {
    return typeof p === 'object' && !Array.isArray(p);
}
function isString(p) {
    return typeof p === 'string' || p instanceof String;
}
function isNativeBlob(p) {
    return isNativeBlobDefined() && p instanceof Blob;
}
function isNativeBlobDefined() {
    return typeof Blob !== 'undefined';
}
function validateNumber(argument, minValue, maxValue, value) {
    if (value < minValue) {
        throw new FirebaseStorageError(Code.INVALID_ARGUMENT, "Invalid value for '" + argument + "'. Expected " + minValue + " or greater.");
    }
    if (value > maxValue) {
        throw new FirebaseStorageError(Code.INVALID_ARGUMENT, "Invalid value for '" + argument + "'. Expected " + maxValue + " or less.");
    }
}

/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
function getBlobBuilder() {
    if (typeof BlobBuilder !== 'undefined') {
        return BlobBuilder;
    }
    else if (typeof WebKitBlobBuilder !== 'undefined') {
        return WebKitBlobBuilder;
    }
    else {
        return undefined;
    }
}
/**
 * Concatenates one or more values together and converts them to a Blob.
 *
 * @param args The values that will make up the resulting blob.
 * @return The blob.
 */
function getBlob() {
    var args = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        args[_i] = arguments[_i];
    }
    var BlobBuilder = getBlobBuilder();
    if (BlobBuilder !== undefined) {
        var bb = new BlobBuilder();
        for (var i = 0; i < args.length; i++) {
            bb.append(args[i]);
        }
        return bb.getBlob();
    }
    else {
        if (isNativeBlobDefined()) {
            return new Blob(args);
        }
        else {
            throw new FirebaseStorageError(Code.UNSUPPORTED_ENVIRONMENT, "This browser doesn't seem to support creating Blobs");
        }
    }
}
/**
 * Slices the blob. The returned blob contains data from the start byte
 * (inclusive) till the end byte (exclusive). Negative indices cannot be used.
 *
 * @param blob The blob to be sliced.
 * @param start Index of the starting byte.
 * @param end Index of the ending byte.
 * @return The blob slice or null if not supported.
 */
function sliceBlob(blob, start, end) {
    if (blob.webkitSlice) {
        return blob.webkitSlice(start, end);
    }
    else if (blob.mozSlice) {
        return blob.mozSlice(start, end);
    }
    else if (blob.slice) {
        return blob.slice(start, end);
    }
    return null;
}

/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * @param opt_elideCopy - If true, doesn't copy mutable input data
 *     (e.g. Uint8Arrays). Pass true only if you know the objects will not be
 *     modified after this blob's construction.
 */
var FbsBlob = /** @class */ (function () {
    function FbsBlob(data, elideCopy) {
        var size = 0;
        var blobType = '';
        if (isNativeBlob(data)) {
            this.data_ = data;
            size = data.size;
            blobType = data.type;
        }
        else if (data instanceof ArrayBuffer) {
            if (elideCopy) {
                this.data_ = new Uint8Array(data);
            }
            else {
                this.data_ = new Uint8Array(data.byteLength);
                this.data_.set(new Uint8Array(data));
            }
            size = this.data_.length;
        }
        else if (data instanceof Uint8Array) {
            if (elideCopy) {
                this.data_ = data;
            }
            else {
                this.data_ = new Uint8Array(data.length);
                this.data_.set(data);
            }
            size = data.length;
        }
        this.size_ = size;
        this.type_ = blobType;
    }
    FbsBlob.prototype.size = function () {
        return this.size_;
    };
    FbsBlob.prototype.type = function () {
        return this.type_;
    };
    FbsBlob.prototype.slice = function (startByte, endByte) {
        if (isNativeBlob(this.data_)) {
            var realBlob = this.data_;
            var sliced = sliceBlob(realBlob, startByte, endByte);
            if (sliced === null) {
                return null;
            }
            return new FbsBlob(sliced);
        }
        else {
            var slice = new Uint8Array(this.data_.buffer, startByte, endByte - startByte);
            return new FbsBlob(slice, true);
        }
    };
    FbsBlob.getBlob = function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        if (isNativeBlobDefined()) {
            var blobby = args.map(function (val) {
                if (val instanceof FbsBlob) {
                    return val.data_;
                }
                else {
                    return val;
                }
            });
            return new FbsBlob(getBlob.apply(null, blobby));
        }
        else {
            var uint8Arrays = args.map(function (val) {
                if (isString(val)) {
                    return dataFromString(StringFormat.RAW, val).data;
                }
                else {
                    // Blobs don't exist, so this has to be a Uint8Array.
                    return val.data_;
                }
            });
            var finalLength_1 = 0;
            uint8Arrays.forEach(function (array) {
                finalLength_1 += array.byteLength;
            });
            var merged_1 = new Uint8Array(finalLength_1);
            var index_1 = 0;
            uint8Arrays.forEach(function (array) {
                for (var i = 0; i < array.length; i++) {
                    merged_1[index_1++] = array[i];
                }
            });
            return new FbsBlob(merged_1, true);
        }
    };
    FbsBlob.prototype.uploadData = function () {
        return this.data_;
    };
    return FbsBlob;
}());

/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
var Location = /** @class */ (function () {
    function Location(bucket, path) {
        this.bucket = bucket;
        this.path_ = path;
    }
    Object.defineProperty(Location.prototype, "path", {
        get: function () {
            return this.path_;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(Location.prototype, "isRoot", {
        get: function () {
            return this.path.length === 0;
        },
        enumerable: false,
        configurable: true
    });
    Location.prototype.fullServerUrl = function () {
        var encode = encodeURIComponent;
        return '/b/' + encode(this.bucket) + '/o/' + encode(this.path);
    };
    Location.prototype.bucketOnlyServerUrl = function () {
        var encode = encodeURIComponent;
        return '/b/' + encode(this.bucket) + '/o';
    };
    Location.makeFromBucketSpec = function (bucketString) {
        var bucketLocation;
        try {
            bucketLocation = Location.makeFromUrl(bucketString);
        }
        catch (e) {
            // Not valid URL, use as-is. This lets you put bare bucket names in
            // config.
            return new Location(bucketString, '');
        }
        if (bucketLocation.path === '') {
            return bucketLocation;
        }
        else {
            throw invalidDefaultBucket(bucketString);
        }
    };
    Location.makeFromUrl = function (url) {
        var location = null;
        var bucketDomain = '([A-Za-z0-9.\\-_]+)';
        function gsModify(loc) {
            if (loc.path.charAt(loc.path.length - 1) === '/') {
                loc.path_ = loc.path_.slice(0, -1);
            }
        }
        var gsPath = '(/(.*))?$';
        var gsRegex = new RegExp('^gs://' + bucketDomain + gsPath, 'i');
        var gsIndices = { bucket: 1, path: 3 };
        function httpModify(loc) {
            loc.path_ = decodeURIComponent(loc.path);
        }
        var version = 'v[A-Za-z0-9_]+';
        var firebaseStorageHost = DEFAULT_HOST.replace(/[.]/g, '\\.');
        var firebaseStoragePath = '(/([^?#]*).*)?$';
        var firebaseStorageRegExp = new RegExp("^https?://" + firebaseStorageHost + "/" + version + "/b/" + bucketDomain + "/o" + firebaseStoragePath, 'i');
        var firebaseStorageIndices = { bucket: 1, path: 3 };
        var cloudStorageHost = '(?:storage.googleapis.com|storage.cloud.google.com)';
        var cloudStoragePath = '([^?#]*)';
        var cloudStorageRegExp = new RegExp("^https?://" + cloudStorageHost + "/" + bucketDomain + "/" + cloudStoragePath, 'i');
        var cloudStorageIndices = { bucket: 1, path: 2 };
        var groups = [
            { regex: gsRegex, indices: gsIndices, postModify: gsModify },
            {
                regex: firebaseStorageRegExp,
                indices: firebaseStorageIndices,
                postModify: httpModify
            },
            {
                regex: cloudStorageRegExp,
                indices: cloudStorageIndices,
                postModify: httpModify
            }
        ];
        for (var i = 0; i < groups.length; i++) {
            var group = groups[i];
            var captures = group.regex.exec(url);
            if (captures) {
                var bucketValue = captures[group.indices.bucket];
                var pathValue = captures[group.indices.path];
                if (!pathValue) {
                    pathValue = '';
                }
                location = new Location(bucketValue, pathValue);
                group.postModify(location);
                break;
            }
        }
        if (location == null) {
            throw invalidUrl(url);
        }
        return location;
    };
    return Location;
}());

/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * Returns the Object resulting from parsing the given JSON, or null if the
 * given string does not represent a JSON object.
 */
function jsonObjectOrNull(s) {
    var obj;
    try {
        obj = JSON.parse(s);
    }
    catch (e) {
        return null;
    }
    if (isNonArrayObject(obj)) {
        return obj;
    }
    else {
        return null;
    }
}

/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * @fileoverview Contains helper methods for manipulating paths.
 */
/**
 * @return Null if the path is already at the root.
 */
function parent(path) {
    if (path.length === 0) {
        return null;
    }
    var index = path.lastIndexOf('/');
    if (index === -1) {
        return '';
    }
    var newPath = path.slice(0, index);
    return newPath;
}
function child(path, childPath) {
    var canonicalChildPath = childPath
        .split('/')
        .filter(function (component) { return component.length > 0; })
        .join('/');
    if (path.length === 0) {
        return canonicalChildPath;
    }
    else {
        return path + '/' + canonicalChildPath;
    }
}
/**
 * Returns the last component of a path.
 * '/foo/bar' -> 'bar'
 * '/foo/bar/baz/' -> 'baz/'
 * '/a' -> 'a'
 */
function lastComponent(path) {
    var index = path.lastIndexOf('/', path.length - 2);
    if (index === -1) {
        return path;
    }
    else {
        return path.slice(index + 1);
    }
}

/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
function makeUrl(urlPart) {
    return "https://" + DEFAULT_HOST + "/v0" + urlPart;
}
function makeQueryString(params) {
    var encode = encodeURIComponent;
    var queryPart = '?';
    for (var key in params) {
        if (params.hasOwnProperty(key)) {
            var nextPart = encode(key) + '=' + encode(params[key]);
            queryPart = queryPart + nextPart + '&';
        }
    }
    // Chop off the extra '&' or '?' on the end
    queryPart = queryPart.slice(0, -1);
    return queryPart;
}

/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
function noXform_(metadata, value) {
    return value;
}
var Mapping = /** @class */ (function () {
    function Mapping(server, local, writable, xform) {
        this.server = server;
        this.local = local || server;
        this.writable = !!writable;
        this.xform = xform || noXform_;
    }
    return Mapping;
}());
var mappings_ = null;
function xformPath(fullPath) {
    if (!isString(fullPath) || fullPath.length < 2) {
        return fullPath;
    }
    else {
        return lastComponent(fullPath);
    }
}
function getMappings() {
    if (mappings_) {
        return mappings_;
    }
    var mappings = [];
    mappings.push(new Mapping('bucket'));
    mappings.push(new Mapping('generation'));
    mappings.push(new Mapping('metageneration'));
    mappings.push(new Mapping('name', 'fullPath', true));
    function mappingsXformPath(_metadata, fullPath) {
        return xformPath(fullPath);
    }
    var nameMapping = new Mapping('name');
    nameMapping.xform = mappingsXformPath;
    mappings.push(nameMapping);
    /**
     * Coerces the second param to a number, if it is defined.
     */
    function xformSize(_metadata, size) {
        if (size !== undefined) {
            return Number(size);
        }
        else {
            return size;
        }
    }
    var sizeMapping = new Mapping('size');
    sizeMapping.xform = xformSize;
    mappings.push(sizeMapping);
    mappings.push(new Mapping('timeCreated'));
    mappings.push(new Mapping('updated'));
    mappings.push(new Mapping('md5Hash', null, true));
    mappings.push(new Mapping('cacheControl', null, true));
    mappings.push(new Mapping('contentDisposition', null, true));
    mappings.push(new Mapping('contentEncoding', null, true));
    mappings.push(new Mapping('contentLanguage', null, true));
    mappings.push(new Mapping('contentType', null, true));
    mappings.push(new Mapping('metadata', 'customMetadata', true));
    mappings_ = mappings;
    return mappings_;
}
function addRef(metadata, service) {
    function generateRef() {
        var bucket = metadata['bucket'];
        var path = metadata['fullPath'];
        var loc = new Location(bucket, path);
        return service.makeStorageReference(loc);
    }
    Object.defineProperty(metadata, 'ref', { get: generateRef });
}
function fromResource(service, resource, mappings) {
    var metadata = {};
    metadata['type'] = 'file';
    var len = mappings.length;
    for (var i = 0; i < len; i++) {
        var mapping = mappings[i];
        metadata[mapping.local] = mapping.xform(metadata, resource[mapping.server]);
    }
    addRef(metadata, service);
    return metadata;
}
function fromResourceString(service, resourceString, mappings) {
    var obj = jsonObjectOrNull(resourceString);
    if (obj === null) {
        return null;
    }
    var resource = obj;
    return fromResource(service, resource, mappings);
}
function downloadUrlFromResourceString(metadata, resourceString) {
    var obj = jsonObjectOrNull(resourceString);
    if (obj === null) {
        return null;
    }
    if (!isString(obj['downloadTokens'])) {
        // This can happen if objects are uploaded through GCS and retrieved
        // through list, so we don't want to throw an Error.
        return null;
    }
    var tokens = obj['downloadTokens'];
    if (tokens.length === 0) {
        return null;
    }
    var encode = encodeURIComponent;
    var tokensList = tokens.split(',');
    var urls = tokensList.map(function (token) {
        var bucket = metadata['bucket'];
        var path = metadata['fullPath'];
        var urlPart = '/b/' + encode(bucket) + '/o/' + encode(path);
        var base = makeUrl(urlPart);
        var queryString = makeQueryString({
            alt: 'media',
            token: token
        });
        return base + queryString;
    });
    return urls[0];
}
function toResourceString(metadata, mappings) {
    var resource = {};
    var len = mappings.length;
    for (var i = 0; i < len; i++) {
        var mapping = mappings[i];
        if (mapping.writable) {
            resource[mapping.server] = metadata[mapping.local];
        }
    }
    return JSON.stringify(resource);
}

/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
var PREFIXES_KEY = 'prefixes';
var ITEMS_KEY = 'items';
function fromBackendResponse(service, bucket, resource) {
    var listResult = {
        prefixes: [],
        items: [],
        nextPageToken: resource['nextPageToken']
    };
    if (resource[PREFIXES_KEY]) {
        for (var _i = 0, _a = resource[PREFIXES_KEY]; _i < _a.length; _i++) {
            var path = _a[_i];
            var pathWithoutTrailingSlash = path.replace(/\/$/, '');
            var reference = service.makeStorageReference(new Location(bucket, pathWithoutTrailingSlash));
            listResult.prefixes.push(reference);
        }
    }
    if (resource[ITEMS_KEY]) {
        for (var _b = 0, _c = resource[ITEMS_KEY]; _b < _c.length; _b++) {
            var item = _c[_b];
            var reference = service.makeStorageReference(new Location(bucket, item['name']));
            listResult.items.push(reference);
        }
    }
    return listResult;
}
function fromResponseString(service, bucket, resourceString) {
    var obj = jsonObjectOrNull(resourceString);
    if (obj === null) {
        return null;
    }
    var resource = obj;
    return fromBackendResponse(service, bucket, resource);
}

var RequestInfo = /** @class */ (function () {
    function RequestInfo(url, method, 
    /**
     * Returns the value with which to resolve the request's promise. Only called
     * if the request is successful. Throw from this function to reject the
     * returned Request's promise with the thrown error.
     * Note: The XhrIo passed to this function may be reused after this callback
     * returns. Do not keep a reference to it in any way.
     */
    handler, timeout) {
        this.url = url;
        this.method = method;
        this.handler = handler;
        this.timeout = timeout;
        this.urlParams = {};
        this.headers = {};
        this.body = null;
        this.errorHandler = null;
        /**
         * Called with the current number of bytes uploaded and total size (-1 if not
         * computable) of the request body (i.e. used to report upload progress).
         */
        this.progressCallback = null;
        this.successCodes = [200];
        this.additionalRetryCodes = [];
    }
    return RequestInfo;
}());

/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * Throws the UNKNOWN FirebaseStorageError if cndn is false.
 */
function handlerCheck(cndn) {
    if (!cndn) {
        throw unknown();
    }
}
function metadataHandler(service, mappings) {
    function handler(xhr, text) {
        var metadata = fromResourceString(service, text, mappings);
        handlerCheck(metadata !== null);
        return metadata;
    }
    return handler;
}
function listHandler(service, bucket) {
    function handler(xhr, text) {
        var listResult = fromResponseString(service, bucket, text);
        handlerCheck(listResult !== null);
        return listResult;
    }
    return handler;
}
function downloadUrlHandler(service, mappings) {
    function handler(xhr, text) {
        var metadata = fromResourceString(service, text, mappings);
        handlerCheck(metadata !== null);
        return downloadUrlFromResourceString(metadata, text);
    }
    return handler;
}
function sharedErrorHandler(location) {
    function errorHandler(xhr, err) {
        var newErr;
        if (xhr.getStatus() === 401) {
            newErr = unauthenticated();
        }
        else {
            if (xhr.getStatus() === 402) {
                newErr = quotaExceeded(location.bucket);
            }
            else {
                if (xhr.getStatus() === 403) {
                    newErr = unauthorized(location.path);
                }
                else {
                    newErr = err;
                }
            }
        }
        newErr.serverResponse = err.serverResponse;
        return newErr;
    }
    return errorHandler;
}
function objectErrorHandler(location) {
    var shared = sharedErrorHandler(location);
    function errorHandler(xhr, err) {
        var newErr = shared(xhr, err);
        if (xhr.getStatus() === 404) {
            newErr = objectNotFound(location.path);
        }
        newErr.serverResponse = err.serverResponse;
        return newErr;
    }
    return errorHandler;
}
function getMetadata(service, location, mappings) {
    var urlPart = location.fullServerUrl();
    var url = makeUrl(urlPart);
    var method = 'GET';
    var timeout = service.maxOperationRetryTime;
    var requestInfo = new RequestInfo(url, method, metadataHandler(service, mappings), timeout);
    requestInfo.errorHandler = objectErrorHandler(location);
    return requestInfo;
}
function list(service, location, delimiter, pageToken, maxResults) {
    var urlParams = {};
    if (location.isRoot) {
        urlParams['prefix'] = '';
    }
    else {
        urlParams['prefix'] = location.path + '/';
    }
    if (delimiter && delimiter.length > 0) {
        urlParams['delimiter'] = delimiter;
    }
    if (pageToken) {
        urlParams['pageToken'] = pageToken;
    }
    if (maxResults) {
        urlParams['maxResults'] = maxResults;
    }
    var urlPart = location.bucketOnlyServerUrl();
    var url = makeUrl(urlPart);
    var method = 'GET';
    var timeout = service.maxOperationRetryTime;
    var requestInfo = new RequestInfo(url, method, listHandler(service, location.bucket), timeout);
    requestInfo.urlParams = urlParams;
    requestInfo.errorHandler = sharedErrorHandler(location);
    return requestInfo;
}
function getDownloadUrl(service, location, mappings) {
    var urlPart = location.fullServerUrl();
    var url = makeUrl(urlPart);
    var method = 'GET';
    var timeout = service.maxOperationRetryTime;
    var requestInfo = new RequestInfo(url, method, downloadUrlHandler(service, mappings), timeout);
    requestInfo.errorHandler = objectErrorHandler(location);
    return requestInfo;
}
function updateMetadata(service, location, metadata, mappings) {
    var urlPart = location.fullServerUrl();
    var url = makeUrl(urlPart);
    var method = 'PATCH';
    var body = toResourceString(metadata, mappings);
    var headers = { 'Content-Type': 'application/json; charset=utf-8' };
    var timeout = service.maxOperationRetryTime;
    var requestInfo = new RequestInfo(url, method, metadataHandler(service, mappings), timeout);
    requestInfo.headers = headers;
    requestInfo.body = body;
    requestInfo.errorHandler = objectErrorHandler(location);
    return requestInfo;
}
function deleteObject(service, location) {
    var urlPart = location.fullServerUrl();
    var url = makeUrl(urlPart);
    var method = 'DELETE';
    var timeout = service.maxOperationRetryTime;
    function handler(_xhr, _text) { }
    var requestInfo = new RequestInfo(url, method, handler, timeout);
    requestInfo.successCodes = [200, 204];
    requestInfo.errorHandler = objectErrorHandler(location);
    return requestInfo;
}
function determineContentType_(metadata, blob) {
    return ((metadata && metadata['contentType']) ||
        (blob && blob.type()) ||
        'application/octet-stream');
}
function metadataForUpload_(location, blob, metadata) {
    var metadataClone = Object.assign({}, metadata);
    metadataClone['fullPath'] = location.path;
    metadataClone['size'] = blob.size();
    if (!metadataClone['contentType']) {
        metadataClone['contentType'] = determineContentType_(null, blob);
    }
    return metadataClone;
}
function multipartUpload(service, location, mappings, blob, metadata) {
    var urlPart = location.bucketOnlyServerUrl();
    var headers = {
        'X-Goog-Upload-Protocol': 'multipart'
    };
    function genBoundary() {
        var str = '';
        for (var i = 0; i < 2; i++) {
            str = str + Math.random().toString().slice(2);
        }
        return str;
    }
    var boundary = genBoundary();
    headers['Content-Type'] = 'multipart/related; boundary=' + boundary;
    var metadata_ = metadataForUpload_(location, blob, metadata);
    var metadataString = toResourceString(metadata_, mappings);
    var preBlobPart = '--' +
        boundary +
        '\r\n' +
        'Content-Type: application/json; charset=utf-8\r\n\r\n' +
        metadataString +
        '\r\n--' +
        boundary +
        '\r\n' +
        'Content-Type: ' +
        metadata_['contentType'] +
        '\r\n\r\n';
    var postBlobPart = '\r\n--' + boundary + '--';
    var body = FbsBlob.getBlob(preBlobPart, blob, postBlobPart);
    if (body === null) {
        throw cannotSliceBlob();
    }
    var urlParams = { name: metadata_['fullPath'] };
    var url = makeUrl(urlPart);
    var method = 'POST';
    var timeout = service.maxUploadRetryTime;
    var requestInfo = new RequestInfo(url, method, metadataHandler(service, mappings), timeout);
    requestInfo.urlParams = urlParams;
    requestInfo.headers = headers;
    requestInfo.body = body.uploadData();
    requestInfo.errorHandler = sharedErrorHandler(location);
    return requestInfo;
}
/**
 * @param current The number of bytes that have been uploaded so far.
 * @param total The total number of bytes in the upload.
 * @param opt_finalized True if the server has finished the upload.
 * @param opt_metadata The upload metadata, should
 *     only be passed if opt_finalized is true.
 */
var ResumableUploadStatus = /** @class */ (function () {
    function ResumableUploadStatus(current, total, finalized, metadata) {
        this.current = current;
        this.total = total;
        this.finalized = !!finalized;
        this.metadata = metadata || null;
    }
    return ResumableUploadStatus;
}());
function checkResumeHeader_(xhr, allowed) {
    var status = null;
    try {
        status = xhr.getResponseHeader('X-Goog-Upload-Status');
    }
    catch (e) {
        handlerCheck(false);
    }
    var allowedStatus = allowed || ['active'];
    handlerCheck(!!status && allowedStatus.indexOf(status) !== -1);
    return status;
}
function createResumableUpload(service, location, mappings, blob, metadata) {
    var urlPart = location.bucketOnlyServerUrl();
    var metadataForUpload = metadataForUpload_(location, blob, metadata);
    var urlParams = { name: metadataForUpload['fullPath'] };
    var url = makeUrl(urlPart);
    var method = 'POST';
    var headers = {
        'X-Goog-Upload-Protocol': 'resumable',
        'X-Goog-Upload-Command': 'start',
        'X-Goog-Upload-Header-Content-Length': blob.size(),
        'X-Goog-Upload-Header-Content-Type': metadataForUpload['contentType'],
        'Content-Type': 'application/json; charset=utf-8'
    };
    var body = toResourceString(metadataForUpload, mappings);
    var timeout = service.maxUploadRetryTime;
    function handler(xhr) {
        checkResumeHeader_(xhr);
        var url;
        try {
            url = xhr.getResponseHeader('X-Goog-Upload-URL');
        }
        catch (e) {
            handlerCheck(false);
        }
        handlerCheck(isString(url));
        return url;
    }
    var requestInfo = new RequestInfo(url, method, handler, timeout);
    requestInfo.urlParams = urlParams;
    requestInfo.headers = headers;
    requestInfo.body = body;
    requestInfo.errorHandler = sharedErrorHandler(location);
    return requestInfo;
}
/**
 * @param url From a call to fbs.requests.createResumableUpload.
 */
function getResumableUploadStatus(service, location, url, blob) {
    var headers = { 'X-Goog-Upload-Command': 'query' };
    function handler(xhr) {
        var status = checkResumeHeader_(xhr, ['active', 'final']);
        var sizeString = null;
        try {
            sizeString = xhr.getResponseHeader('X-Goog-Upload-Size-Received');
        }
        catch (e) {
            handlerCheck(false);
        }
        if (!sizeString) {
            // null or empty string
            handlerCheck(false);
        }
        var size = Number(sizeString);
        handlerCheck(!isNaN(size));
        return new ResumableUploadStatus(size, blob.size(), status === 'final');
    }
    var method = 'POST';
    var timeout = service.maxUploadRetryTime;
    var requestInfo = new RequestInfo(url, method, handler, timeout);
    requestInfo.headers = headers;
    requestInfo.errorHandler = sharedErrorHandler(location);
    return requestInfo;
}
/**
 * Any uploads via the resumable upload API must transfer a number of bytes
 * that is a multiple of this number.
 */
var resumableUploadChunkSize = 256 * 1024;
/**
 * @param url From a call to fbs.requests.createResumableUpload.
 * @param chunkSize Number of bytes to upload.
 * @param status The previous status.
 *     If not passed or null, we start from the beginning.
 * @throws fbs.Error If the upload is already complete, the passed in status
 *     has a final size inconsistent with the blob, or the blob cannot be sliced
 *     for upload.
 */
function continueResumableUpload(location, service, url, blob, chunkSize, mappings, status, progressCallback) {
    // TODO(andysoto): standardize on internal asserts
    // assert(!(opt_status && opt_status.finalized));
    var status_ = new ResumableUploadStatus(0, 0);
    if (status) {
        status_.current = status.current;
        status_.total = status.total;
    }
    else {
        status_.current = 0;
        status_.total = blob.size();
    }
    if (blob.size() !== status_.total) {
        throw serverFileWrongSize();
    }
    var bytesLeft = status_.total - status_.current;
    var bytesToUpload = bytesLeft;
    if (chunkSize > 0) {
        bytesToUpload = Math.min(bytesToUpload, chunkSize);
    }
    var startByte = status_.current;
    var endByte = startByte + bytesToUpload;
    var uploadCommand = bytesToUpload === bytesLeft ? 'upload, finalize' : 'upload';
    var headers = {
        'X-Goog-Upload-Command': uploadCommand,
        'X-Goog-Upload-Offset': status_.current
    };
    var body = blob.slice(startByte, endByte);
    if (body === null) {
        throw cannotSliceBlob();
    }
    function handler(xhr, text) {
        // TODO(andysoto): Verify the MD5 of each uploaded range:
        // the 'x-range-md5' header comes back with status code 308 responses.
        // We'll only be able to bail out though, because you can't re-upload a
        // range that you previously uploaded.
        var uploadStatus = checkResumeHeader_(xhr, ['active', 'final']);
        var newCurrent = status_.current + bytesToUpload;
        var size = blob.size();
        var metadata;
        if (uploadStatus === 'final') {
            metadata = metadataHandler(service, mappings)(xhr, text);
        }
        else {
            metadata = null;
        }
        return new ResumableUploadStatus(newCurrent, size, uploadStatus === 'final', metadata);
    }
    var method = 'POST';
    var timeout = service.maxUploadRetryTime;
    var requestInfo = new RequestInfo(url, method, handler, timeout);
    requestInfo.headers = headers;
    requestInfo.body = body.uploadData();
    requestInfo.progressCallback = progressCallback || null;
    requestInfo.errorHandler = sharedErrorHandler(location);
    return requestInfo;
}

/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
var Observer = /** @class */ (function () {
    function Observer(nextOrObserver, error, complete) {
        var asFunctions = isFunction(nextOrObserver) || error != null || complete != null;
        if (asFunctions) {
            this.next = nextOrObserver;
            this.error = error;
            this.complete = complete;
        }
        else {
            var observer = nextOrObserver;
            this.next = observer.next;
            this.error = observer.error;
            this.complete = observer.complete;
        }
    }
    return Observer;
}());

var UploadTaskSnapshot = /** @class */ (function () {
    function UploadTaskSnapshot(bytesTransferred, totalBytes, state, metadata, task, ref) {
        this.bytesTransferred = bytesTransferred;
        this.totalBytes = totalBytes;
        this.state = state;
        this.metadata = metadata;
        this.task = task;
        this.ref = ref;
    }
    return UploadTaskSnapshot;
}());

/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * Returns a function that invokes f with its arguments asynchronously as a
 * microtask, i.e. as soon as possible after the current script returns back
 * into browser code.
 */
// eslint-disable-next-line @typescript-eslint/ban-types
function async(f) {
    return function () {
        var argsToForward = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            argsToForward[_i] = arguments[_i];
        }
        // eslint-disable-next-line @typescript-eslint/no-floating-promises
        Promise.resolve().then(function () { return f.apply(void 0, argsToForward); });
    };
}

/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * Represents a blob being uploaded. Can be used to pause/resume/cancel the
 * upload and manage callbacks for various events.
 */
var UploadTask = /** @class */ (function () {
    /**
     * @param ref - The firebaseStorage.Reference object this task came
     *     from, untyped to avoid cyclic dependencies.
     * @param blob - The blob to upload.
     */
    function UploadTask(ref, blob, metadata) {
        var _this = this;
        if (metadata === void 0) { metadata = null; }
        /**
         * @internal
         */
        this._transferred = 0;
        this._needToFetchStatus = false;
        this._needToFetchMetadata = false;
        this._observers = [];
        this._error = undefined;
        this._uploadUrl = undefined;
        this._request = undefined;
        this._chunkMultiplier = 1;
        this._resolve = undefined;
        this._reject = undefined;
        this._ref = ref;
        this._blob = blob;
        this._metadata = metadata;
        this._mappings = getMappings();
        this._resumable = this._shouldDoResumable(this._blob);
        this._state = InternalTaskState.RUNNING;
        this._errorHandler = function (error) {
            _this._request = undefined;
            _this._chunkMultiplier = 1;
            if (error.codeEquals(Code.CANCELED)) {
                _this._needToFetchStatus = true;
                _this.completeTransitions_();
            }
            else {
                _this._error = error;
                _this._transition(InternalTaskState.ERROR);
            }
        };
        this._metadataErrorHandler = function (error) {
            _this._request = undefined;
            if (error.codeEquals(Code.CANCELED)) {
                _this.completeTransitions_();
            }
            else {
                _this._error = error;
                _this._transition(InternalTaskState.ERROR);
            }
        };
        this._promise = new Promise(function (resolve, reject) {
            _this._resolve = resolve;
            _this._reject = reject;
            _this._start();
        });
        // Prevent uncaught rejections on the internal promise from bubbling out
        // to the top level with a dummy handler.
        this._promise.then(null, function () { });
    }
    UploadTask.prototype._makeProgressCallback = function () {
        var _this = this;
        var sizeBefore = this._transferred;
        return function (loaded) { return _this._updateProgress(sizeBefore + loaded); };
    };
    UploadTask.prototype._shouldDoResumable = function (blob) {
        return blob.size() > 256 * 1024;
    };
    UploadTask.prototype._start = function () {
        if (this._state !== InternalTaskState.RUNNING) {
            // This can happen if someone pauses us in a resume callback, for example.
            return;
        }
        if (this._request !== undefined) {
            return;
        }
        if (this._resumable) {
            if (this._uploadUrl === undefined) {
                this._createResumable();
            }
            else {
                if (this._needToFetchStatus) {
                    this._fetchStatus();
                }
                else {
                    if (this._needToFetchMetadata) {
                        // Happens if we miss the metadata on upload completion.
                        this._fetchMetadata();
                    }
                    else {
                        this._continueUpload();
                    }
                }
            }
        }
        else {
            this._oneShotUpload();
        }
    };
    UploadTask.prototype._resolveToken = function (callback) {
        var _this = this;
        // eslint-disable-next-line @typescript-eslint/no-floating-promises
        this._ref.storage.getAuthToken().then(function (authToken) {
            switch (_this._state) {
                case InternalTaskState.RUNNING:
                    callback(authToken);
                    break;
                case InternalTaskState.CANCELING:
                    _this._transition(InternalTaskState.CANCELED);
                    break;
                case InternalTaskState.PAUSING:
                    _this._transition(InternalTaskState.PAUSED);
                    break;
            }
        });
    };
    // TODO(andysoto): assert false
    UploadTask.prototype._createResumable = function () {
        var _this = this;
        this._resolveToken(function (authToken) {
            var requestInfo = createResumableUpload(_this._ref.storage, _this._ref._location, _this._mappings, _this._blob, _this._metadata);
            var createRequest = _this._ref.storage.makeRequest(requestInfo, authToken);
            _this._request = createRequest;
            createRequest.getPromise().then(function (url) {
                _this._request = undefined;
                _this._uploadUrl = url;
                _this._needToFetchStatus = false;
                _this.completeTransitions_();
            }, _this._errorHandler);
        });
    };
    UploadTask.prototype._fetchStatus = function () {
        var _this = this;
        // TODO(andysoto): assert(this.uploadUrl_ !== null);
        var url = this._uploadUrl;
        this._resolveToken(function (authToken) {
            var requestInfo = getResumableUploadStatus(_this._ref.storage, _this._ref._location, url, _this._blob);
            var statusRequest = _this._ref.storage.makeRequest(requestInfo, authToken);
            _this._request = statusRequest;
            statusRequest.getPromise().then(function (status) {
                status = status;
                _this._request = undefined;
                _this._updateProgress(status.current);
                _this._needToFetchStatus = false;
                if (status.finalized) {
                    _this._needToFetchMetadata = true;
                }
                _this.completeTransitions_();
            }, _this._errorHandler);
        });
    };
    UploadTask.prototype._continueUpload = function () {
        var _this = this;
        var chunkSize = resumableUploadChunkSize * this._chunkMultiplier;
        var status = new ResumableUploadStatus(this._transferred, this._blob.size());
        // TODO(andysoto): assert(this.uploadUrl_ !== null);
        var url = this._uploadUrl;
        this._resolveToken(function (authToken) {
            var requestInfo;
            try {
                requestInfo = continueResumableUpload(_this._ref._location, _this._ref.storage, url, _this._blob, chunkSize, _this._mappings, status, _this._makeProgressCallback());
            }
            catch (e) {
                _this._error = e;
                _this._transition(InternalTaskState.ERROR);
                return;
            }
            var uploadRequest = _this._ref.storage.makeRequest(requestInfo, authToken);
            _this._request = uploadRequest;
            uploadRequest
                .getPromise()
                .then(function (newStatus) {
                _this._increaseMultiplier();
                _this._request = undefined;
                _this._updateProgress(newStatus.current);
                if (newStatus.finalized) {
                    _this._metadata = newStatus.metadata;
                    _this._transition(InternalTaskState.SUCCESS);
                }
                else {
                    _this.completeTransitions_();
                }
            }, _this._errorHandler);
        });
    };
    UploadTask.prototype._increaseMultiplier = function () {
        var currentSize = resumableUploadChunkSize * this._chunkMultiplier;
        // Max chunk size is 32M.
        if (currentSize < 32 * 1024 * 1024) {
            this._chunkMultiplier *= 2;
        }
    };
    UploadTask.prototype._fetchMetadata = function () {
        var _this = this;
        this._resolveToken(function (authToken) {
            var requestInfo = getMetadata(_this._ref.storage, _this._ref._location, _this._mappings);
            var metadataRequest = _this._ref.storage.makeRequest(requestInfo, authToken);
            _this._request = metadataRequest;
            metadataRequest.getPromise().then(function (metadata) {
                _this._request = undefined;
                _this._metadata = metadata;
                _this._transition(InternalTaskState.SUCCESS);
            }, _this._metadataErrorHandler);
        });
    };
    UploadTask.prototype._oneShotUpload = function () {
        var _this = this;
        this._resolveToken(function (authToken) {
            var requestInfo = multipartUpload(_this._ref.storage, _this._ref._location, _this._mappings, _this._blob, _this._metadata);
            var multipartRequest = _this._ref.storage.makeRequest(requestInfo, authToken);
            _this._request = multipartRequest;
            multipartRequest.getPromise().then(function (metadata) {
                _this._request = undefined;
                _this._metadata = metadata;
                _this._updateProgress(_this._blob.size());
                _this._transition(InternalTaskState.SUCCESS);
            }, _this._errorHandler);
        });
    };
    UploadTask.prototype._updateProgress = function (transferred) {
        var old = this._transferred;
        this._transferred = transferred;
        // A progress update can make the "transferred" value smaller (e.g. a
        // partial upload not completed by server, after which the "transferred"
        // value may reset to the value at the beginning of the request).
        if (this._transferred !== old) {
            this._notifyObservers();
        }
    };
    UploadTask.prototype._transition = function (state) {
        if (this._state === state) {
            return;
        }
        switch (state) {
            case InternalTaskState.CANCELING:
                // TODO(andysoto):
                // assert(this.state_ === InternalTaskState.RUNNING ||
                //        this.state_ === InternalTaskState.PAUSING);
                this._state = state;
                if (this._request !== undefined) {
                    this._request.cancel();
                }
                break;
            case InternalTaskState.PAUSING:
                // TODO(andysoto):
                // assert(this.state_ === InternalTaskState.RUNNING);
                this._state = state;
                if (this._request !== undefined) {
                    this._request.cancel();
                }
                break;
            case InternalTaskState.RUNNING:
                // TODO(andysoto):
                // assert(this.state_ === InternalTaskState.PAUSED ||
                //        this.state_ === InternalTaskState.PAUSING);
                var wasPaused = this._state === InternalTaskState.PAUSED;
                this._state = state;
                if (wasPaused) {
                    this._notifyObservers();
                    this._start();
                }
                break;
            case InternalTaskState.PAUSED:
                // TODO(andysoto):
                // assert(this.state_ === InternalTaskState.PAUSING);
                this._state = state;
                this._notifyObservers();
                break;
            case InternalTaskState.CANCELED:
                // TODO(andysoto):
                // assert(this.state_ === InternalTaskState.PAUSED ||
                //        this.state_ === InternalTaskState.CANCELING);
                this._error = canceled();
                this._state = state;
                this._notifyObservers();
                break;
            case InternalTaskState.ERROR:
                // TODO(andysoto):
                // assert(this.state_ === InternalTaskState.RUNNING ||
                //        this.state_ === InternalTaskState.PAUSING ||
                //        this.state_ === InternalTaskState.CANCELING);
                this._state = state;
                this._notifyObservers();
                break;
            case InternalTaskState.SUCCESS:
                // TODO(andysoto):
                // assert(this.state_ === InternalTaskState.RUNNING ||
                //        this.state_ === InternalTaskState.PAUSING ||
                //        this.state_ === InternalTaskState.CANCELING);
                this._state = state;
                this._notifyObservers();
                break;
        }
    };
    UploadTask.prototype.completeTransitions_ = function () {
        switch (this._state) {
            case InternalTaskState.PAUSING:
                this._transition(InternalTaskState.PAUSED);
                break;
            case InternalTaskState.CANCELING:
                this._transition(InternalTaskState.CANCELED);
                break;
            case InternalTaskState.RUNNING:
                this._start();
                break;
        }
    };
    Object.defineProperty(UploadTask.prototype, "snapshot", {
        get: function () {
            var externalState = taskStateFromInternalTaskState(this._state);
            return new UploadTaskSnapshot(this._transferred, this._blob.size(), externalState, this._metadata, this, this._ref);
        },
        enumerable: false,
        configurable: true
    });
    /**
     * Adds a callback for an event.
     * @param type - The type of event to listen for.
     */
    UploadTask.prototype.on = function (type, nextOrObserver, error, completed) {
        var _this = this;
        var observer = new Observer(nextOrObserver, error, completed);
        this._addObserver(observer);
        return function () {
            _this._removeObserver(observer);
        };
    };
    /**
     * This object behaves like a Promise, and resolves with its snapshot data
     * when the upload completes.
     * @param onFulfilled - The fulfillment callback. Promise chaining works as normal.
     * @param onRejected - The rejection callback.
     */
    UploadTask.prototype.then = function (onFulfilled, onRejected) {
        // These casts are needed so that TypeScript can infer the types of the
        // resulting Promise.
        return this._promise.then(onFulfilled, onRejected);
    };
    /**
     * Equivalent to calling `then(null, onRejected)`.
     */
    UploadTask.prototype.catch = function (onRejected) {
        return this.then(null, onRejected);
    };
    /**
     * Adds the given observer.
     */
    UploadTask.prototype._addObserver = function (observer) {
        this._observers.push(observer);
        this._notifyObserver(observer);
    };
    /**
     * Removes the given observer.
     */
    UploadTask.prototype._removeObserver = function (observer) {
        var i = this._observers.indexOf(observer);
        if (i !== -1) {
            this._observers.splice(i, 1);
        }
    };
    UploadTask.prototype._notifyObservers = function () {
        var _this = this;
        this._finishPromise();
        var observers = this._observers.slice();
        observers.forEach(function (observer) {
            _this._notifyObserver(observer);
        });
    };
    UploadTask.prototype._finishPromise = function () {
        if (this._resolve !== undefined) {
            var triggered = true;
            switch (taskStateFromInternalTaskState(this._state)) {
                case TaskState.SUCCESS:
                    async(this._resolve.bind(null, this.snapshot))();
                    break;
                case TaskState.CANCELED:
                case TaskState.ERROR:
                    var toCall = this._reject;
                    async(toCall.bind(null, this._error))();
                    break;
                default:
                    triggered = false;
                    break;
            }
            if (triggered) {
                this._resolve = undefined;
                this._reject = undefined;
            }
        }
    };
    UploadTask.prototype._notifyObserver = function (observer) {
        var externalState = taskStateFromInternalTaskState(this._state);
        switch (externalState) {
            case TaskState.RUNNING:
            case TaskState.PAUSED:
                if (observer.next) {
                    async(observer.next.bind(observer, this.snapshot))();
                }
                break;
            case TaskState.SUCCESS:
                if (observer.complete) {
                    async(observer.complete.bind(observer))();
                }
                break;
            case TaskState.CANCELED:
            case TaskState.ERROR:
                if (observer.error) {
                    async(observer.error.bind(observer, this._error))();
                }
                break;
            default:
                // TODO(andysoto): assert(false);
                if (observer.error) {
                    async(observer.error.bind(observer, this._error))();
                }
        }
    };
    /**
     * Resumes a paused task. Has no effect on a currently running or failed task.
     * @returns True if the operation took effect, false if ignored.
     */
    UploadTask.prototype.resume = function () {
        var valid = this._state === InternalTaskState.PAUSED ||
            this._state === InternalTaskState.PAUSING;
        if (valid) {
            this._transition(InternalTaskState.RUNNING);
        }
        return valid;
    };
    /**
     * Pauses a currently running task. Has no effect on a paused or failed task.
     * @returns True if the operation took effect, false if ignored.
     */
    UploadTask.prototype.pause = function () {
        var valid = this._state === InternalTaskState.RUNNING;
        if (valid) {
            this._transition(InternalTaskState.PAUSING);
        }
        return valid;
    };
    /**
     * Cancels a currently running or paused task. Has no effect on a complete or
     * failed task.
     * @returns True if the operation took effect, false if ignored.
     */
    UploadTask.prototype.cancel = function () {
        var valid = this._state === InternalTaskState.RUNNING ||
            this._state === InternalTaskState.PAUSING;
        if (valid) {
            this._transition(InternalTaskState.CANCELING);
        }
        return valid;
    };
    return UploadTask;
}());

/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * Provides methods to interact with a bucket in the Firebase Storage service.
 * @param location - An fbs.location, or the URL at
 *     which to base this object, in one of the following forms:
 *         gs://<bucket>/<object-path>
 *         http[s]://firebasestorage.googleapis.com/
 *                     <api-version>/b/<bucket>/o/<object-path>
 *     Any query or fragment strings will be ignored in the http[s]
 *     format. If no value is passed, the storage object will use a URL based on
 *     the project ID of the base firebase.App instance.
 */
var Reference = /** @class */ (function () {
    function Reference(_service, location) {
        this._service = _service;
        if (location instanceof Location) {
            this._location = location;
        }
        else {
            this._location = Location.makeFromUrl(location);
        }
    }
    /**
     * @returns The URL for the bucket and path this object references,
     *     in the form gs://<bucket>/<object-path>
     * @override
     */
    Reference.prototype.toString = function () {
        return 'gs://' + this._location.bucket + '/' + this._location.path;
    };
    Reference.prototype.newRef = function (service, location) {
        return new Reference(service, location);
    };
    Object.defineProperty(Reference.prototype, "root", {
        /**
         * @returns An reference to the root of this
         *     object's bucket.
         */
        get: function () {
            var location = new Location(this._location.bucket, '');
            return this.newRef(this._service, location);
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(Reference.prototype, "bucket", {
        get: function () {
            return this._location.bucket;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(Reference.prototype, "fullPath", {
        get: function () {
            return this._location.path;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(Reference.prototype, "name", {
        get: function () {
            return lastComponent(this._location.path);
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(Reference.prototype, "storage", {
        get: function () {
            return this._service;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(Reference.prototype, "parent", {
        get: function () {
            var newPath = parent(this._location.path);
            if (newPath === null) {
                return null;
            }
            var location = new Location(this._location.bucket, newPath);
            return new Reference(this._service, location);
        },
        enumerable: false,
        configurable: true
    });
    Reference.prototype._throwIfRoot = function (name) {
        if (this._location.path === '') {
            throw invalidRootOperation(name);
        }
    };
    return Reference;
}());
/**
 * Uploads a blob to this object's location.
 * @public
 * @param ref - Storage Reference where data should be uploaded.
 * @param data - The data to upload.
 * @param metadata - Metadata for the newly uploaded string.
 * @returns An UploadTask that lets you control and
 *     observe the upload.
 */
function uploadBytesResumable(ref, data, metadata) {
    if (metadata === void 0) { metadata = null; }
    ref._throwIfRoot('uploadBytesResumable');
    return new UploadTask(ref, new FbsBlob(data), metadata);
}
/**
 * Uploads a string to this object's location.
 * @public
 * @param ref - Storage Reference where string should be uploaded.
 * @param value - The string to upload.
 * @param format - The format of the string to upload.
 * @param metadata - Metadata for the newly uploaded object.
 * @returns An UploadTask that lets you control and
 *     observe the upload.
 */
function uploadString(ref, value, format, metadata) {
    if (format === void 0) { format = StringFormat.RAW; }
    ref._throwIfRoot('putString');
    var data = dataFromString(format, value);
    var metadataClone = (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__assign)({}, metadata);
    if (metadataClone['contentType'] == null && data.contentType != null) {
        metadataClone['contentType'] = data.contentType;
    }
    return new UploadTask(ref, new FbsBlob(data.data, true), metadataClone);
}
/**
 * List all items (files) and prefixes (folders) under this storage reference.
 *
 * This is a helper method for calling list() repeatedly until there are
 * no more results. The default pagination size is 1000.
 *
 * Note: The results may not be consistent if objects are changed while this
 * operation is running.
 *
 * Warning: listAll may potentially consume too many resources if there are
 * too many results.
 * @public
 * @param ref - Storage Reference to get list from.
 *
 * @returns A Promise that resolves with all the items and prefixes under
 *      the current storage reference. `prefixes` contains references to
 *      sub-directories and `items` contains references to objects in this
 *      folder. `nextPageToken` is never returned.
 */
function listAll(ref) {
    var accumulator = {
        prefixes: [],
        items: []
    };
    return listAllHelper(ref, accumulator).then(function () { return accumulator; });
}
/**
 * Separated from listAll because async functions can't use "arguments".
 * @internal
 * @param ref
 * @param accumulator
 * @param pageToken
 */
function listAllHelper(ref, accumulator, pageToken) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__awaiter)(this, void 0, void 0, function () {
        var opt, nextPage;
        var _a, _b;
        return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__generator)(this, function (_c) {
            switch (_c.label) {
                case 0:
                    opt = {
                        // maxResults is 1000 by default.
                        pageToken: pageToken
                    };
                    return [4 /*yield*/, list$1(ref, opt)];
                case 1:
                    nextPage = _c.sent();
                    (_a = accumulator.prefixes).push.apply(_a, nextPage.prefixes);
                    (_b = accumulator.items).push.apply(_b, nextPage.items);
                    if (!(nextPage.nextPageToken != null)) return [3 /*break*/, 3];
                    return [4 /*yield*/, listAllHelper(ref, accumulator, nextPage.nextPageToken)];
                case 2:
                    _c.sent();
                    _c.label = 3;
                case 3: return [2 /*return*/];
            }
        });
    });
}
/**
 * List items (files) and prefixes (folders) under this storage reference.
 *
 * List API is only available for Firebase Rules Version 2.
 *
 * GCS is a key-blob store. Firebase Storage imposes the semantic of '/'
 * delimited folder structure.
 * Refer to GCS's List API if you want to learn more.
 *
 * To adhere to Firebase Rules's Semantics, Firebase Storage does not
 * support objects whose paths end with "/" or contain two consecutive
 * "/"s. Firebase Storage List API will filter these unsupported objects.
 * list() may fail if there are too many unsupported objects in the bucket.
 * @public
 *
 * @param ref - Storage Reference to get list from.
 * @param options - See ListOptions for details.
 * @returns A Promise that resolves with the items and prefixes.
 *      `prefixes` contains references to sub-folders and `items`
 *      contains references to objects in this folder. `nextPageToken`
 *      can be used to get the rest of the results.
 */
function list$1(ref, options) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__awaiter)(this, void 0, void 0, function () {
        var authToken, op, requestInfo;
        return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__generator)(this, function (_a) {
            switch (_a.label) {
                case 0:
                    if (options != null) {
                        if (typeof options.maxResults === 'number') {
                            validateNumber('options.maxResults', 
                            /* minValue= */ 1, 
                            /* maxValue= */ 1000, options.maxResults);
                        }
                    }
                    return [4 /*yield*/, ref.storage.getAuthToken()];
                case 1:
                    authToken = _a.sent();
                    op = options || {};
                    requestInfo = list(ref.storage, ref._location, 
                    /*delimiter= */ '/', op.pageToken, op.maxResults);
                    return [2 /*return*/, ref.storage.makeRequest(requestInfo, authToken).getPromise()];
            }
        });
    });
}
/**
 * A promise that resolves with the metadata for this object. If this
 * object doesn't exist or metadata cannot be retreived, the promise is
 * rejected.
 * @public
 * @param ref - Storage Reference to get metadata from.
 */
function getMetadata$1(ref) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__awaiter)(this, void 0, void 0, function () {
        var authToken, requestInfo;
        return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__generator)(this, function (_a) {
            switch (_a.label) {
                case 0:
                    ref._throwIfRoot('getMetadata');
                    return [4 /*yield*/, ref.storage.getAuthToken()];
                case 1:
                    authToken = _a.sent();
                    requestInfo = getMetadata(ref.storage, ref._location, getMappings());
                    return [2 /*return*/, ref.storage.makeRequest(requestInfo, authToken).getPromise()];
            }
        });
    });
}
/**
 * Updates the metadata for this object.
 * @public
 * @param ref - Storage Reference to update metadata for.
 * @param metadata - The new metadata for the object.
 *     Only values that have been explicitly set will be changed. Explicitly
 *     setting a value to null will remove the metadata.
 * @returns A promise that resolves
 *     with the new metadata for this object.
 *     See `firebaseStorage.Reference.prototype.getMetadata`
 */
function updateMetadata$1(ref, metadata) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__awaiter)(this, void 0, void 0, function () {
        var authToken, requestInfo;
        return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__generator)(this, function (_a) {
            switch (_a.label) {
                case 0:
                    ref._throwIfRoot('updateMetadata');
                    return [4 /*yield*/, ref.storage.getAuthToken()];
                case 1:
                    authToken = _a.sent();
                    requestInfo = updateMetadata(ref.storage, ref._location, metadata, getMappings());
                    return [2 /*return*/, ref.storage.makeRequest(requestInfo, authToken).getPromise()];
            }
        });
    });
}
/**
 * Returns the download URL for the given Reference.
 * @public
 * @returns A promise that resolves with the download
 *     URL for this object.
 */
function getDownloadURL(ref) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__awaiter)(this, void 0, void 0, function () {
        var authToken, requestInfo;
        return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__generator)(this, function (_a) {
            switch (_a.label) {
                case 0:
                    ref._throwIfRoot('getDownloadURL');
                    return [4 /*yield*/, ref.storage.getAuthToken()];
                case 1:
                    authToken = _a.sent();
                    requestInfo = getDownloadUrl(ref.storage, ref._location, getMappings());
                    return [2 /*return*/, ref.storage
                            .makeRequest(requestInfo, authToken)
                            .getPromise()
                            .then(function (url) {
                            if (url === null) {
                                throw noDownloadURL();
                            }
                            return url;
                        })];
            }
        });
    });
}
/**
 * Deletes the object at this location.
 * @public
 * @param ref - Storage Reference for object to delete.
 * @returns A promise that resolves if the deletion succeeds.
 */
function deleteObject$1(ref) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__awaiter)(this, void 0, void 0, function () {
        var authToken, requestInfo;
        return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__generator)(this, function (_a) {
            switch (_a.label) {
                case 0:
                    ref._throwIfRoot('deleteObject');
                    return [4 /*yield*/, ref.storage.getAuthToken()];
                case 1:
                    authToken = _a.sent();
                    requestInfo = deleteObject(ref.storage, ref._location);
                    return [2 /*return*/, ref.storage.makeRequest(requestInfo, authToken).getPromise()];
            }
        });
    });
}
/**
 * Returns reference for object obtained by appending `childPath` to `ref`.
 * @internal
 *
 * @param ref - Storage Reference to get child of.
 * @param childPath - Child path from provided ref.
 * @returns A reference to the object obtained by
 * appending childPath, removing any duplicate, beginning, or trailing
 * slashes.
 */
function getChild(ref, childPath) {
    var newPath = child(ref._location.path, childPath);
    var location = new Location(ref._location.bucket, newPath);
    return new Reference(ref.storage, location);
}

/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
var UploadTaskSnapshotCompat = /** @class */ (function () {
    function UploadTaskSnapshotCompat(_delegate, task, ref) {
        this._delegate = _delegate;
        this.task = task;
        this.ref = ref;
    }
    Object.defineProperty(UploadTaskSnapshotCompat.prototype, "bytesTransferred", {
        get: function () {
            return this._delegate.bytesTransferred;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(UploadTaskSnapshotCompat.prototype, "metadata", {
        get: function () {
            return this._delegate.metadata;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(UploadTaskSnapshotCompat.prototype, "state", {
        get: function () {
            return this._delegate.state;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(UploadTaskSnapshotCompat.prototype, "totalBytes", {
        get: function () {
            return this._delegate.totalBytes;
        },
        enumerable: false,
        configurable: true
    });
    return UploadTaskSnapshotCompat;
}());

/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
var UploadTaskCompat = /** @class */ (function () {
    function UploadTaskCompat(_delegate, _ref) {
        this._delegate = _delegate;
        this._ref = _ref;
        this.cancel = this._delegate.cancel.bind(this._delegate);
        this.catch = this._delegate.catch.bind(this._delegate);
        this.pause = this._delegate.pause.bind(this._delegate);
        this.resume = this._delegate.resume.bind(this._delegate);
        this._snapshot = new UploadTaskSnapshotCompat(this._delegate.snapshot, this, this._ref);
    }
    Object.defineProperty(UploadTaskCompat.prototype, "snapshot", {
        get: function () {
            return this._snapshot;
        },
        enumerable: false,
        configurable: true
    });
    UploadTaskCompat.prototype.then = function (onFulfilled, onRejected) {
        var _this = this;
        return this._delegate.then(function (snapshot) {
            if (onFulfilled) {
                return onFulfilled(new UploadTaskSnapshotCompat(snapshot, _this, _this._ref));
            }
        }, onRejected);
    };
    UploadTaskCompat.prototype.on = function (type, nextOrObserver, error, completed) {
        var _this = this;
        var wrappedNextOrObserver = undefined;
        if (!!nextOrObserver) {
            if (typeof nextOrObserver === 'function') {
                wrappedNextOrObserver = function (taskSnapshot) {
                    return nextOrObserver(new UploadTaskSnapshotCompat(taskSnapshot, _this, _this._ref));
                };
            }
            else {
                wrappedNextOrObserver = {
                    next: !!nextOrObserver.next
                        ? function (taskSnapshot) {
                            return nextOrObserver.next(new UploadTaskSnapshotCompat(taskSnapshot, _this, _this._ref));
                        }
                        : undefined,
                    complete: nextOrObserver.complete || undefined,
                    error: nextOrObserver.error || undefined
                };
            }
        }
        return this._delegate.on(type, wrappedNextOrObserver, error || undefined, completed || undefined);
    };
    return UploadTaskCompat;
}());

/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
var ListResultCompat = /** @class */ (function () {
    function ListResultCompat(_delegate, _service) {
        this._delegate = _delegate;
        this._service = _service;
    }
    Object.defineProperty(ListResultCompat.prototype, "prefixes", {
        get: function () {
            var _this = this;
            return this._delegate.prefixes.map(function (ref) { return new ReferenceCompat(ref, _this._service); });
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ListResultCompat.prototype, "items", {
        get: function () {
            var _this = this;
            return this._delegate.items.map(function (ref) { return new ReferenceCompat(ref, _this._service); });
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ListResultCompat.prototype, "nextPageToken", {
        get: function () {
            return this._delegate.nextPageToken || null;
        },
        enumerable: false,
        configurable: true
    });
    return ListResultCompat;
}());

/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *  http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
var ReferenceCompat = /** @class */ (function () {
    function ReferenceCompat(_delegate, storage) {
        this._delegate = _delegate;
        this.storage = storage;
    }
    Object.defineProperty(ReferenceCompat.prototype, "name", {
        get: function () {
            return this._delegate.name;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ReferenceCompat.prototype, "bucket", {
        get: function () {
            return this._delegate.bucket;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ReferenceCompat.prototype, "fullPath", {
        get: function () {
            return this._delegate.fullPath;
        },
        enumerable: false,
        configurable: true
    });
    ReferenceCompat.prototype.toString = function () {
        return this._delegate.toString();
    };
    /**
     * @returns A reference to the object obtained by
     * appending childPath, removing any duplicate, beginning, or trailing
     * slashes.
     */
    ReferenceCompat.prototype.child = function (childPath) {
        var reference = getChild(this._delegate, childPath);
        return new ReferenceCompat(reference, this.storage);
    };
    Object.defineProperty(ReferenceCompat.prototype, "root", {
        get: function () {
            return new ReferenceCompat(this._delegate.root, this.storage);
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ReferenceCompat.prototype, "parent", {
        /**
         * @returns A reference to the parent of the
         * current object, or null if the current object is the root.
         */
        get: function () {
            var reference = this._delegate.parent;
            if (reference == null) {
                return null;
            }
            return new ReferenceCompat(reference, this.storage);
        },
        enumerable: false,
        configurable: true
    });
    /**
     * Uploads a blob to this object's location.
     * @param data - The blob to upload.
     * @returns An UploadTask that lets you control and
     * observe the upload.
     */
    ReferenceCompat.prototype.put = function (data, metadata) {
        this._throwIfRoot('put');
        return new UploadTaskCompat(uploadBytesResumable(this._delegate, data, metadata), this);
    };
    /**
     * Uploads a string to this object's location.
     * @param value - The string to upload.
     * @param format - The format of the string to upload.
     * @returns An UploadTask that lets you control and
     * observe the upload.
     */
    ReferenceCompat.prototype.putString = function (value, format, metadata) {
        if (format === void 0) { format = StringFormat.RAW; }
        this._throwIfRoot('putString');
        return new UploadTaskCompat(uploadString(this._delegate, value, format, metadata), this);
    };
    /**
     * List all items (files) and prefixes (folders) under this storage reference.
     *
     * This is a helper method for calling list() repeatedly until there are
     * no more results. The default pagination size is 1000.
     *
     * Note: The results may not be consistent if objects are changed while this
     * operation is running.
     *
     * Warning: listAll may potentially consume too many resources if there are
     * too many results.
     *
     * @returns A Promise that resolves with all the items and prefixes under
     *  the current storage reference. `prefixes` contains references to
     *  sub-directories and `items` contains references to objects in this
     *  folder. `nextPageToken` is never returned.
     */
    ReferenceCompat.prototype.listAll = function () {
        var _this = this;
        return listAll(this._delegate).then(function (r) { return new ListResultCompat(r, _this.storage); });
    };
    /**
     * List items (files) and prefixes (folders) under this storage reference.
     *
     * List API is only available for Firebase Rules Version 2.
     *
     * GCS is a key-blob store. Firebase Storage imposes the semantic of '/'
     * delimited folder structure. Refer to GCS's List API if you want to learn more.
     *
     * To adhere to Firebase Rules's Semantics, Firebase Storage does not
     * support objects whose paths end with "/" or contain two consecutive
     * "/"s. Firebase Storage List API will filter these unsupported objects.
     * list() may fail if there are too many unsupported objects in the bucket.
     *
     * @param options - See ListOptions for details.
     * @returns A Promise that resolves with the items and prefixes.
     * `prefixes` contains references to sub-folders and `items`
     * contains references to objects in this folder. `nextPageToken`
     * can be used to get the rest of the results.
     */
    ReferenceCompat.prototype.list = function (options) {
        var _this = this;
        return list$1(this._delegate, options).then(function (r) { return new ListResultCompat(r, _this.storage); });
    };
    /**
     * A promise that resolves with the metadata for this object. If this
     * object doesn't exist or metadata cannot be retreived, the promise is
     * rejected.
     */
    ReferenceCompat.prototype.getMetadata = function () {
        return getMetadata$1(this._delegate);
    };
    /**
     * Updates the metadata for this object.
     * @param metadata - The new metadata for the object.
     * Only values that have been explicitly set will be changed. Explicitly
     * setting a value to null will remove the metadata.
     * @returns A promise that resolves
     * with the new metadata for this object.
     * @see firebaseStorage.Reference.prototype.getMetadata
     */
    ReferenceCompat.prototype.updateMetadata = function (metadata) {
        return updateMetadata$1(this._delegate, metadata);
    };
    /**
     * @returns A promise that resolves with the download
     * URL for this object.
     */
    ReferenceCompat.prototype.getDownloadURL = function () {
        return getDownloadURL(this._delegate);
    };
    /**
     * Deletes the object at this location.
     * @returns A promise that resolves if the deletion succeeds.
     */
    ReferenceCompat.prototype.delete = function () {
        this._throwIfRoot('delete');
        return deleteObject$1(this._delegate);
    };
    ReferenceCompat.prototype._throwIfRoot = function (name) {
        if (this._delegate._location.path === '') {
            throw invalidRootOperation(name);
        }
    };
    return ReferenceCompat;
}());

/**
 * A request whose promise always fails.
 */
var FailRequest = /** @class */ (function () {
    function FailRequest(error) {
        this.promise_ = Promise.reject(error);
    }
    /** @inheritDoc */
    FailRequest.prototype.getPromise = function () {
        return this.promise_;
    };
    /** @inheritDoc */
    FailRequest.prototype.cancel = function (_appDelete) {
    };
    return FailRequest;
}());

/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * @param f May be invoked
 *     before the function returns.
 * @param callback Get all the arguments passed to the function
 *     passed to f, including the initial boolean.
 */
function start(f, 
// eslint-disable-next-line @typescript-eslint/no-explicit-any
callback, timeout) {
    // TODO(andysoto): make this code cleaner (probably refactor into an actual
    // type instead of a bunch of functions with state shared in the closure)
    var waitSeconds = 1;
    // Would type this as "number" but that doesn't work for Node so ¯\_(ツ)_/¯
    // TODO: find a way to exclude Node type definition for storage because storage only works in browser
    // eslint-disable-next-line @typescript-eslint/no-explicit-any
    var timeoutId = null;
    var hitTimeout = false;
    var cancelState = 0;
    function canceled() {
        return cancelState === 2;
    }
    var triggeredCallback = false;
    function triggerCallback() {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        if (!triggeredCallback) {
            triggeredCallback = true;
            callback.apply(null, args);
        }
    }
    function callWithDelay(millis) {
        timeoutId = setTimeout(function () {
            timeoutId = null;
            f(handler, canceled());
        }, millis);
    }
    function handler(success) {
        var args = [];
        for (var _i = 1; _i < arguments.length; _i++) {
            args[_i - 1] = arguments[_i];
        }
        if (triggeredCallback) {
            return;
        }
        if (success) {
            triggerCallback.call.apply(triggerCallback, (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__spreadArrays)([null, success], args));
            return;
        }
        var mustStop = canceled() || hitTimeout;
        if (mustStop) {
            triggerCallback.call.apply(triggerCallback, (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__spreadArrays)([null, success], args));
            return;
        }
        if (waitSeconds < 64) {
            /* TODO(andysoto): don't back off so quickly if we know we're offline. */
            waitSeconds *= 2;
        }
        var waitMillis;
        if (cancelState === 1) {
            cancelState = 2;
            waitMillis = 0;
        }
        else {
            waitMillis = (waitSeconds + Math.random()) * 1000;
        }
        callWithDelay(waitMillis);
    }
    var stopped = false;
    function stop(wasTimeout) {
        if (stopped) {
            return;
        }
        stopped = true;
        if (triggeredCallback) {
            return;
        }
        if (timeoutId !== null) {
            if (!wasTimeout) {
                cancelState = 2;
            }
            clearTimeout(timeoutId);
            callWithDelay(0);
        }
        else {
            if (!wasTimeout) {
                cancelState = 1;
            }
        }
    }
    callWithDelay(0);
    setTimeout(function () {
        hitTimeout = true;
        stop(true);
    }, timeout);
    return stop;
}
/**
 * Stops the retry loop from repeating.
 * If the function is currently "in between" retries, it is invoked immediately
 * with the second parameter as "true". Otherwise, it will be invoked once more
 * after the current invocation finishes iff the current invocation would have
 * triggered another retry.
 */
function stop(id) {
    id(false);
}

/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
var NetworkRequest = /** @class */ (function () {
    function NetworkRequest(url, method, headers, body, successCodes, additionalRetryCodes, callback, errorCallback, timeout, progressCallback, pool) {
        var _this = this;
        this.pendingXhr_ = null;
        this.backoffId_ = null;
        this.canceled_ = false;
        this.appDelete_ = false;
        this.url_ = url;
        this.method_ = method;
        this.headers_ = headers;
        this.body_ = body;
        this.successCodes_ = successCodes.slice();
        this.additionalRetryCodes_ = additionalRetryCodes.slice();
        this.callback_ = callback;
        this.errorCallback_ = errorCallback;
        this.progressCallback_ = progressCallback;
        this.timeout_ = timeout;
        this.pool_ = pool;
        this.promise_ = new Promise(function (resolve, reject) {
            _this.resolve_ = resolve;
            _this.reject_ = reject;
            _this.start_();
        });
    }
    /**
     * Actually starts the retry loop.
     */
    NetworkRequest.prototype.start_ = function () {
        var self = this;
        function doTheRequest(backoffCallback, canceled) {
            if (canceled) {
                backoffCallback(false, new RequestEndStatus(false, null, true));
                return;
            }
            var xhr = self.pool_.createXhrIo();
            self.pendingXhr_ = xhr;
            function progressListener(progressEvent) {
                var loaded = progressEvent.loaded;
                var total = progressEvent.lengthComputable ? progressEvent.total : -1;
                if (self.progressCallback_ !== null) {
                    self.progressCallback_(loaded, total);
                }
            }
            if (self.progressCallback_ !== null) {
                xhr.addUploadProgressListener(progressListener);
            }
            // eslint-disable-next-line @typescript-eslint/no-floating-promises
            xhr
                .send(self.url_, self.method_, self.body_, self.headers_)
                .then(function (xhr) {
                if (self.progressCallback_ !== null) {
                    xhr.removeUploadProgressListener(progressListener);
                }
                self.pendingXhr_ = null;
                xhr = xhr;
                var hitServer = xhr.getErrorCode() === ErrorCode.NO_ERROR;
                var status = xhr.getStatus();
                if (!hitServer || self.isRetryStatusCode_(status)) {
                    var wasCanceled = xhr.getErrorCode() === ErrorCode.ABORT;
                    backoffCallback(false, new RequestEndStatus(false, null, wasCanceled));
                    return;
                }
                var successCode = self.successCodes_.indexOf(status) !== -1;
                backoffCallback(true, new RequestEndStatus(successCode, xhr));
            });
        }
        /**
         * @param requestWentThrough - True if the request eventually went
         *     through, false if it hit the retry limit or was canceled.
         */
        function backoffDone(requestWentThrough, status) {
            var resolve = self.resolve_;
            var reject = self.reject_;
            var xhr = status.xhr;
            if (status.wasSuccessCode) {
                try {
                    var result = self.callback_(xhr, xhr.getResponseText());
                    if (isJustDef(result)) {
                        resolve(result);
                    }
                    else {
                        resolve();
                    }
                }
                catch (e) {
                    reject(e);
                }
            }
            else {
                if (xhr !== null) {
                    var err = unknown();
                    err.serverResponse = xhr.getResponseText();
                    if (self.errorCallback_) {
                        reject(self.errorCallback_(xhr, err));
                    }
                    else {
                        reject(err);
                    }
                }
                else {
                    if (status.canceled) {
                        var err = self.appDelete_ ? appDeleted() : canceled();
                        reject(err);
                    }
                    else {
                        var err = retryLimitExceeded();
                        reject(err);
                    }
                }
            }
        }
        if (this.canceled_) {
            backoffDone(false, new RequestEndStatus(false, null, true));
        }
        else {
            this.backoffId_ = start(doTheRequest, backoffDone, this.timeout_);
        }
    };
    /** @inheritDoc */
    NetworkRequest.prototype.getPromise = function () {
        return this.promise_;
    };
    /** @inheritDoc */
    NetworkRequest.prototype.cancel = function (appDelete) {
        this.canceled_ = true;
        this.appDelete_ = appDelete || false;
        if (this.backoffId_ !== null) {
            stop(this.backoffId_);
        }
        if (this.pendingXhr_ !== null) {
            this.pendingXhr_.abort();
        }
    };
    NetworkRequest.prototype.isRetryStatusCode_ = function (status) {
        // The codes for which to retry came from this page:
        // https://cloud.google.com/storage/docs/exponential-backoff
        var isFiveHundredCode = status >= 500 && status < 600;
        var extraRetryCodes = [
            // Request Timeout: web server didn't receive full request in time.
            408,
            // Too Many Requests: you're getting rate-limited, basically.
            429
        ];
        var isExtraRetryCode = extraRetryCodes.indexOf(status) !== -1;
        var isRequestSpecificRetryCode = this.additionalRetryCodes_.indexOf(status) !== -1;
        return isFiveHundredCode || isExtraRetryCode || isRequestSpecificRetryCode;
    };
    return NetworkRequest;
}());
/**
 * A collection of information about the result of a network request.
 * @param opt_canceled - Defaults to false.
 */
var RequestEndStatus = /** @class */ (function () {
    function RequestEndStatus(wasSuccessCode, xhr, canceled) {
        this.wasSuccessCode = wasSuccessCode;
        this.xhr = xhr;
        this.canceled = !!canceled;
    }
    return RequestEndStatus;
}());
function addAuthHeader_(headers, authToken) {
    if (authToken !== null && authToken.length > 0) {
        headers['Authorization'] = 'Firebase ' + authToken;
    }
}
function addVersionHeader_(headers) {
    var version = typeof _firebase_app__WEBPACK_IMPORTED_MODULE_0__.default !== 'undefined' ? _firebase_app__WEBPACK_IMPORTED_MODULE_0__.default.SDK_VERSION : 'AppManager';
    headers['X-Firebase-Storage-Version'] = 'webjs/' + version;
}
function addGmpidHeader_(headers, appId) {
    if (appId) {
        headers['X-Firebase-GMPID'] = appId;
    }
}
function makeRequest(requestInfo, appId, authToken, pool) {
    var queryPart = makeQueryString(requestInfo.urlParams);
    var url = requestInfo.url + queryPart;
    var headers = Object.assign({}, requestInfo.headers);
    addGmpidHeader_(headers, appId);
    addAuthHeader_(headers, authToken);
    addVersionHeader_(headers);
    return new NetworkRequest(url, requestInfo.method, headers, requestInfo.body, requestInfo.successCodes, requestInfo.additionalRetryCodes, requestInfo.handler, requestInfo.errorHandler, requestInfo.timeout, requestInfo.progressCallback, pool);
}

/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
function isUrl(path) {
    return /^[A-Za-z]+:\/\//.test(path);
}
/**
 * Returns a firebaseStorage.Reference for the given url.
 */
function refFromURL(service, url) {
    return new Reference(service, url);
}
/**
 * Returns a firebaseStorage.Reference for the given path in the default
 * bucket.
 */
function refFromPath(ref, path) {
    if (ref instanceof StorageService) {
        var service = ref;
        if (service._bucket == null) {
            throw noDefaultBucket();
        }
        var reference = new Reference(service, service._bucket);
        if (path != null) {
            return refFromPath(reference, path);
        }
        else {
            return reference;
        }
    }
    else {
        // ref is a Reference
        if (path !== undefined) {
            if (path.includes('..')) {
                throw invalidArgument('`path` param cannot contain ".."');
            }
            return getChild(ref, path);
        }
        else {
            return ref;
        }
    }
}
function ref(serviceOrRef, pathOrUrl) {
    if (pathOrUrl && isUrl(pathOrUrl)) {
        if (serviceOrRef instanceof StorageService) {
            return refFromURL(serviceOrRef, pathOrUrl);
        }
        else {
            throw invalidArgument('To use ref(service, url), the first argument must be a Storage instance.');
        }
    }
    else {
        return refFromPath(serviceOrRef, pathOrUrl);
    }
}
function extractBucket(config) {
    var bucketString = config === null || config === void 0 ? void 0 : config[CONFIG_STORAGE_BUCKET_KEY];
    if (bucketString == null) {
        return null;
    }
    return Location.makeFromBucketSpec(bucketString);
}
/**
 * A service that provides Firebase Storage Reference instances.
 * @param opt_url - gs:// url to a custom Storage Bucket
 */
var StorageService = /** @class */ (function () {
    function StorageService(app, 
    /**
     * @internal
     */
    _authProvider, 
    /**
     * @internal
     */
    _pool, 
    /**
     * @internal
     */
    _url) {
        this.app = app;
        this._authProvider = _authProvider;
        this._pool = _pool;
        this._url = _url;
        /**
         * @internal
         */
        this._bucket = null;
        this._appId = null;
        this._deleted = false;
        this._maxOperationRetryTime = DEFAULT_MAX_OPERATION_RETRY_TIME;
        this._maxUploadRetryTime = DEFAULT_MAX_UPLOAD_RETRY_TIME;
        this._requests = new Set();
        if (_url != null) {
            this._bucket = Location.makeFromBucketSpec(_url);
        }
        else {
            this._bucket = extractBucket(this.app.options);
        }
    }
    Object.defineProperty(StorageService.prototype, "maxUploadRetryTime", {
        get: function () {
            return this._maxUploadRetryTime;
        },
        set: function (time) {
            validateNumber('time', 
            /* minValue=*/ 0, 
            /* maxValue= */ Number.POSITIVE_INFINITY, time);
            this._maxUploadRetryTime = time;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(StorageService.prototype, "maxOperationRetryTime", {
        get: function () {
            return this._maxOperationRetryTime;
        },
        set: function (time) {
            validateNumber('time', 
            /* minValue=*/ 0, 
            /* maxValue= */ Number.POSITIVE_INFINITY, time);
            this._maxOperationRetryTime = time;
        },
        enumerable: false,
        configurable: true
    });
    StorageService.prototype.getAuthToken = function () {
        return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__awaiter)(this, void 0, void 0, function () {
            var auth, tokenData;
            return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__generator)(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        auth = this._authProvider.getImmediate({ optional: true });
                        if (!auth) return [3 /*break*/, 2];
                        return [4 /*yield*/, auth.getToken()];
                    case 1:
                        tokenData = _a.sent();
                        if (tokenData !== null) {
                            return [2 /*return*/, tokenData.accessToken];
                        }
                        _a.label = 2;
                    case 2: return [2 /*return*/, null];
                }
            });
        });
    };
    /**
     * Stop running requests and prevent more from being created.
     * @internal
     */
    StorageService.prototype._delete = function () {
        this._deleted = true;
        this._requests.forEach(function (request) { return request.cancel(); });
        this._requests.clear();
        return Promise.resolve();
    };
    /**
     * Returns a new firebaseStorage.Reference object referencing this StorageService
     * at the given Location.
     */
    StorageService.prototype.makeStorageReference = function (loc) {
        return new Reference(this, loc);
    };
    /**
     * @internal
     * @param requestInfo - HTTP RequestInfo object
     * @param authToken - Firebase auth token
     */
    StorageService.prototype.makeRequest = function (requestInfo, authToken) {
        var _this = this;
        if (!this._deleted) {
            var request_1 = makeRequest(requestInfo, this._appId, authToken, this._pool);
            this._requests.add(request_1);
            // Request removes itself from set when complete.
            request_1.getPromise().then(function () { return _this._requests.delete(request_1); }, function () { return _this._requests.delete(request_1); });
            return request_1;
        }
        else {
            return new FailRequest(appDeleted());
        }
    };
    return StorageService;
}());

/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * A service that provides firebaseStorage.Reference instances.
 * @param opt_url gs:// url to a custom Storage Bucket
 */
var StorageServiceCompat = /** @class */ (function () {
    function StorageServiceCompat(app, _delegate) {
        var _this = this;
        this.app = app;
        this._delegate = _delegate;
        this.INTERNAL = {
            /**
             * Called when the associated app is deleted.
             */
            delete: function () {
                return _this._delegate._delete();
            }
        };
    }
    Object.defineProperty(StorageServiceCompat.prototype, "maxOperationRetryTime", {
        get: function () {
            return this._delegate.maxOperationRetryTime;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(StorageServiceCompat.prototype, "maxUploadRetryTime", {
        get: function () {
            return this._delegate.maxUploadRetryTime;
        },
        enumerable: false,
        configurable: true
    });
    /**
     * Returns a firebaseStorage.Reference for the given path in the default
     * bucket.
     */
    StorageServiceCompat.prototype.ref = function (path) {
        if (isUrl(path)) {
            throw invalidArgument('ref() expected a child path but got a URL, use refFromURL instead.');
        }
        return new ReferenceCompat(ref(this._delegate, path), this);
    };
    /**
     * Returns a firebaseStorage.Reference object for the given absolute URL,
     * which must be a gs:// or http[s]:// URL.
     */
    StorageServiceCompat.prototype.refFromURL = function (url) {
        if (!isUrl(url)) {
            throw invalidArgument('refFromURL() expected a full URL but got a child path, use ref() instead.');
        }
        try {
            Location.makeFromUrl(url);
        }
        catch (e) {
            throw invalidArgument('refFromUrl() expected a valid full URL but got an invalid one.');
        }
        return new ReferenceCompat(ref(this._delegate, url), this);
    };
    StorageServiceCompat.prototype.setMaxUploadRetryTime = function (time) {
        this._delegate.maxUploadRetryTime = time;
    };
    StorageServiceCompat.prototype.setMaxOperationRetryTime = function (time) {
        this._delegate.maxOperationRetryTime = time;
    };
    return StorageServiceCompat;
}());

var name = "@firebase/storage";
var version = "0.4.2";

/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * Type constant for Firebase Storage.
 */
var STORAGE_TYPE = 'storage';
function factory(container, url) {
    // Dependencies
    // TODO: This should eventually be 'app-compat'
    var app = container.getProvider('app').getImmediate();
    var authProvider = container.getProvider('auth-internal');
    // TODO: get StorageService instance from component framework instead
    // of creating a new one.
    var storageServiceCompat = new StorageServiceCompat(app, new StorageService(app, authProvider, new XhrIoPool(), url));
    return storageServiceCompat;
}
function registerStorage(instance) {
    var namespaceExports = {
        // no-inline
        TaskState: TaskState,
        TaskEvent: TaskEvent,
        StringFormat: StringFormat,
        Storage: StorageService,
        Reference: ReferenceCompat
    };
    instance.INTERNAL.registerComponent(new _firebase_component__WEBPACK_IMPORTED_MODULE_2__.Component(STORAGE_TYPE, factory, "PUBLIC" /* PUBLIC */)
        .setServiceProps(namespaceExports)
        .setMultipleInstances(true));
    instance.registerVersion(name, version);
}
registerStorage(_firebase_app__WEBPACK_IMPORTED_MODULE_0__.default);


//# sourceMappingURL=index.esm.js.map


/***/ }),

/***/ "./node_modules/@firebase/util/dist/index.esm.js":
/*!*******************************************************!*\
  !*** ./node_modules/@firebase/util/dist/index.esm.js ***!
  \*******************************************************/
/*! namespace exports */
/*! export CONSTANTS [provided] [no usage info] [missing usage info prevents renaming] */
/*! export Deferred [provided] [no usage info] [missing usage info prevents renaming] */
/*! export ErrorFactory [provided] [no usage info] [missing usage info prevents renaming] */
/*! export FirebaseError [provided] [no usage info] [missing usage info prevents renaming] */
/*! export MAX_VALUE_MILLIS [provided] [no usage info] [missing usage info prevents renaming] */
/*! export RANDOM_FACTOR [provided] [no usage info] [missing usage info prevents renaming] */
/*! export Sha1 [provided] [no usage info] [missing usage info prevents renaming] */
/*! export areCookiesEnabled [provided] [no usage info] [missing usage info prevents renaming] */
/*! export assert [provided] [no usage info] [missing usage info prevents renaming] */
/*! export assertionError [provided] [no usage info] [missing usage info prevents renaming] */
/*! export async [provided] [no usage info] [missing usage info prevents renaming] */
/*! export base64 [provided] [no usage info] [missing usage info prevents renaming] */
/*! export base64Decode [provided] [no usage info] [missing usage info prevents renaming] */
/*! export base64Encode [provided] [no usage info] [missing usage info prevents renaming] */
/*! export calculateBackoffMillis [provided] [no usage info] [missing usage info prevents renaming] */
/*! export contains [provided] [no usage info] [missing usage info prevents renaming] */
/*! export createSubscribe [provided] [no usage info] [missing usage info prevents renaming] */
/*! export decode [provided] [no usage info] [missing usage info prevents renaming] */
/*! export deepCopy [provided] [no usage info] [missing usage info prevents renaming] */
/*! export deepExtend [provided] [no usage info] [missing usage info prevents renaming] */
/*! export errorPrefix [provided] [no usage info] [missing usage info prevents renaming] */
/*! export getUA [provided] [no usage info] [missing usage info prevents renaming] */
/*! export isAdmin [provided] [no usage info] [missing usage info prevents renaming] */
/*! export isBrowser [provided] [no usage info] [missing usage info prevents renaming] */
/*! export isBrowserExtension [provided] [no usage info] [missing usage info prevents renaming] */
/*! export isElectron [provided] [no usage info] [missing usage info prevents renaming] */
/*! export isEmpty [provided] [no usage info] [missing usage info prevents renaming] */
/*! export isIE [provided] [no usage info] [missing usage info prevents renaming] */
/*! export isIndexedDBAvailable [provided] [no usage info] [missing usage info prevents renaming] */
/*! export isMobileCordova [provided] [no usage info] [missing usage info prevents renaming] */
/*! export isNode [provided] [no usage info] [missing usage info prevents renaming] */
/*! export isNodeSdk [provided] [no usage info] [missing usage info prevents renaming] */
/*! export isReactNative [provided] [no usage info] [missing usage info prevents renaming] */
/*! export isSafari [provided] [no usage info] [missing usage info prevents renaming] */
/*! export isUWP [provided] [no usage info] [missing usage info prevents renaming] */
/*! export isValidFormat [provided] [no usage info] [missing usage info prevents renaming] */
/*! export isValidTimestamp [provided] [no usage info] [missing usage info prevents renaming] */
/*! export issuedAtTime [provided] [no usage info] [missing usage info prevents renaming] */
/*! export jsonEval [provided] [no usage info] [missing usage info prevents renaming] */
/*! export map [provided] [no usage info] [missing usage info prevents renaming] */
/*! export ordinal [provided] [no usage info] [missing usage info prevents renaming] */
/*! export querystring [provided] [no usage info] [missing usage info prevents renaming] */
/*! export querystringDecode [provided] [no usage info] [missing usage info prevents renaming] */
/*! export safeGet [provided] [no usage info] [missing usage info prevents renaming] */
/*! export stringLength [provided] [no usage info] [missing usage info prevents renaming] */
/*! export stringToByteArray [provided] [no usage info] [missing usage info prevents renaming] */
/*! export stringify [provided] [no usage info] [missing usage info prevents renaming] */
/*! export validateArgCount [provided] [no usage info] [missing usage info prevents renaming] */
/*! export validateCallback [provided] [no usage info] [missing usage info prevents renaming] */
/*! export validateContextObject [provided] [no usage info] [missing usage info prevents renaming] */
/*! export validateIndexedDBOpenable [provided] [no usage info] [missing usage info prevents renaming] */
/*! export validateNamespace [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.g, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "CONSTANTS": () => /* binding */ CONSTANTS,
/* harmony export */   "Deferred": () => /* binding */ Deferred,
/* harmony export */   "ErrorFactory": () => /* binding */ ErrorFactory,
/* harmony export */   "FirebaseError": () => /* binding */ FirebaseError,
/* harmony export */   "MAX_VALUE_MILLIS": () => /* binding */ MAX_VALUE_MILLIS,
/* harmony export */   "RANDOM_FACTOR": () => /* binding */ RANDOM_FACTOR,
/* harmony export */   "Sha1": () => /* binding */ Sha1,
/* harmony export */   "areCookiesEnabled": () => /* binding */ areCookiesEnabled,
/* harmony export */   "assert": () => /* binding */ assert,
/* harmony export */   "assertionError": () => /* binding */ assertionError,
/* harmony export */   "async": () => /* binding */ async,
/* harmony export */   "base64": () => /* binding */ base64,
/* harmony export */   "base64Decode": () => /* binding */ base64Decode,
/* harmony export */   "base64Encode": () => /* binding */ base64Encode,
/* harmony export */   "calculateBackoffMillis": () => /* binding */ calculateBackoffMillis,
/* harmony export */   "contains": () => /* binding */ contains,
/* harmony export */   "createSubscribe": () => /* binding */ createSubscribe,
/* harmony export */   "decode": () => /* binding */ decode,
/* harmony export */   "deepCopy": () => /* binding */ deepCopy,
/* harmony export */   "deepExtend": () => /* binding */ deepExtend,
/* harmony export */   "errorPrefix": () => /* binding */ errorPrefix,
/* harmony export */   "getUA": () => /* binding */ getUA,
/* harmony export */   "isAdmin": () => /* binding */ isAdmin,
/* harmony export */   "isBrowser": () => /* binding */ isBrowser,
/* harmony export */   "isBrowserExtension": () => /* binding */ isBrowserExtension,
/* harmony export */   "isElectron": () => /* binding */ isElectron,
/* harmony export */   "isEmpty": () => /* binding */ isEmpty,
/* harmony export */   "isIE": () => /* binding */ isIE,
/* harmony export */   "isIndexedDBAvailable": () => /* binding */ isIndexedDBAvailable,
/* harmony export */   "isMobileCordova": () => /* binding */ isMobileCordova,
/* harmony export */   "isNode": () => /* binding */ isNode,
/* harmony export */   "isNodeSdk": () => /* binding */ isNodeSdk,
/* harmony export */   "isReactNative": () => /* binding */ isReactNative,
/* harmony export */   "isSafari": () => /* binding */ isSafari,
/* harmony export */   "isUWP": () => /* binding */ isUWP,
/* harmony export */   "isValidFormat": () => /* binding */ isValidFormat,
/* harmony export */   "isValidTimestamp": () => /* binding */ isValidTimestamp,
/* harmony export */   "issuedAtTime": () => /* binding */ issuedAtTime,
/* harmony export */   "jsonEval": () => /* binding */ jsonEval,
/* harmony export */   "map": () => /* binding */ map,
/* harmony export */   "ordinal": () => /* binding */ ordinal,
/* harmony export */   "querystring": () => /* binding */ querystring,
/* harmony export */   "querystringDecode": () => /* binding */ querystringDecode,
/* harmony export */   "safeGet": () => /* binding */ safeGet,
/* harmony export */   "stringLength": () => /* binding */ stringLength,
/* harmony export */   "stringToByteArray": () => /* binding */ stringToByteArray$1,
/* harmony export */   "stringify": () => /* binding */ stringify,
/* harmony export */   "validateArgCount": () => /* binding */ validateArgCount,
/* harmony export */   "validateCallback": () => /* binding */ validateCallback,
/* harmony export */   "validateContextObject": () => /* binding */ validateContextObject,
/* harmony export */   "validateIndexedDBOpenable": () => /* binding */ validateIndexedDBOpenable,
/* harmony export */   "validateNamespace": () => /* binding */ validateNamespace
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
;

/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * @fileoverview Firebase constants.  Some of these (@defines) can be overridden at compile-time.
 */
var CONSTANTS = {
    /**
     * @define {boolean} Whether this is the client Node.js SDK.
     */
    NODE_CLIENT: false,
    /**
     * @define {boolean} Whether this is the Admin Node.js SDK.
     */
    NODE_ADMIN: false,
    /**
     * Firebase SDK Version
     */
    SDK_VERSION: '${JSCORE_VERSION}'
};

/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * Throws an error if the provided assertion is falsy
 */
var assert = function (assertion, message) {
    if (!assertion) {
        throw assertionError(message);
    }
};
/**
 * Returns an Error object suitable for throwing.
 */
var assertionError = function (message) {
    return new Error('Firebase Database (' +
        CONSTANTS.SDK_VERSION +
        ') INTERNAL ASSERT FAILED: ' +
        message);
};

/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
var stringToByteArray = function (str) {
    // TODO(user): Use native implementations if/when available
    var out = [];
    var p = 0;
    for (var i = 0; i < str.length; i++) {
        var c = str.charCodeAt(i);
        if (c < 128) {
            out[p++] = c;
        }
        else if (c < 2048) {
            out[p++] = (c >> 6) | 192;
            out[p++] = (c & 63) | 128;
        }
        else if ((c & 0xfc00) === 0xd800 &&
            i + 1 < str.length &&
            (str.charCodeAt(i + 1) & 0xfc00) === 0xdc00) {
            // Surrogate Pair
            c = 0x10000 + ((c & 0x03ff) << 10) + (str.charCodeAt(++i) & 0x03ff);
            out[p++] = (c >> 18) | 240;
            out[p++] = ((c >> 12) & 63) | 128;
            out[p++] = ((c >> 6) & 63) | 128;
            out[p++] = (c & 63) | 128;
        }
        else {
            out[p++] = (c >> 12) | 224;
            out[p++] = ((c >> 6) & 63) | 128;
            out[p++] = (c & 63) | 128;
        }
    }
    return out;
};
/**
 * Turns an array of numbers into the string given by the concatenation of the
 * characters to which the numbers correspond.
 * @param bytes Array of numbers representing characters.
 * @return Stringification of the array.
 */
var byteArrayToString = function (bytes) {
    // TODO(user): Use native implementations if/when available
    var out = [];
    var pos = 0, c = 0;
    while (pos < bytes.length) {
        var c1 = bytes[pos++];
        if (c1 < 128) {
            out[c++] = String.fromCharCode(c1);
        }
        else if (c1 > 191 && c1 < 224) {
            var c2 = bytes[pos++];
            out[c++] = String.fromCharCode(((c1 & 31) << 6) | (c2 & 63));
        }
        else if (c1 > 239 && c1 < 365) {
            // Surrogate Pair
            var c2 = bytes[pos++];
            var c3 = bytes[pos++];
            var c4 = bytes[pos++];
            var u = (((c1 & 7) << 18) | ((c2 & 63) << 12) | ((c3 & 63) << 6) | (c4 & 63)) -
                0x10000;
            out[c++] = String.fromCharCode(0xd800 + (u >> 10));
            out[c++] = String.fromCharCode(0xdc00 + (u & 1023));
        }
        else {
            var c2 = bytes[pos++];
            var c3 = bytes[pos++];
            out[c++] = String.fromCharCode(((c1 & 15) << 12) | ((c2 & 63) << 6) | (c3 & 63));
        }
    }
    return out.join('');
};
// We define it as an object literal instead of a class because a class compiled down to es5 can't
// be treeshaked. https://github.com/rollup/rollup/issues/1691
// Static lookup maps, lazily populated by init_()
var base64 = {
    /**
     * Maps bytes to characters.
     */
    byteToCharMap_: null,
    /**
     * Maps characters to bytes.
     */
    charToByteMap_: null,
    /**
     * Maps bytes to websafe characters.
     * @private
     */
    byteToCharMapWebSafe_: null,
    /**
     * Maps websafe characters to bytes.
     * @private
     */
    charToByteMapWebSafe_: null,
    /**
     * Our default alphabet, shared between
     * ENCODED_VALS and ENCODED_VALS_WEBSAFE
     */
    ENCODED_VALS_BASE: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' + 'abcdefghijklmnopqrstuvwxyz' + '0123456789',
    /**
     * Our default alphabet. Value 64 (=) is special; it means "nothing."
     */
    get ENCODED_VALS() {
        return this.ENCODED_VALS_BASE + '+/=';
    },
    /**
     * Our websafe alphabet.
     */
    get ENCODED_VALS_WEBSAFE() {
        return this.ENCODED_VALS_BASE + '-_.';
    },
    /**
     * Whether this browser supports the atob and btoa functions. This extension
     * started at Mozilla but is now implemented by many browsers. We use the
     * ASSUME_* variables to avoid pulling in the full useragent detection library
     * but still allowing the standard per-browser compilations.
     *
     */
    HAS_NATIVE_SUPPORT: typeof atob === 'function',
    /**
     * Base64-encode an array of bytes.
     *
     * @param input An array of bytes (numbers with
     *     value in [0, 255]) to encode.
     * @param webSafe Boolean indicating we should use the
     *     alternative alphabet.
     * @return The base64 encoded string.
     */
    encodeByteArray: function (input, webSafe) {
        if (!Array.isArray(input)) {
            throw Error('encodeByteArray takes an array as a parameter');
        }
        this.init_();
        var byteToCharMap = webSafe
            ? this.byteToCharMapWebSafe_
            : this.byteToCharMap_;
        var output = [];
        for (var i = 0; i < input.length; i += 3) {
            var byte1 = input[i];
            var haveByte2 = i + 1 < input.length;
            var byte2 = haveByte2 ? input[i + 1] : 0;
            var haveByte3 = i + 2 < input.length;
            var byte3 = haveByte3 ? input[i + 2] : 0;
            var outByte1 = byte1 >> 2;
            var outByte2 = ((byte1 & 0x03) << 4) | (byte2 >> 4);
            var outByte3 = ((byte2 & 0x0f) << 2) | (byte3 >> 6);
            var outByte4 = byte3 & 0x3f;
            if (!haveByte3) {
                outByte4 = 64;
                if (!haveByte2) {
                    outByte3 = 64;
                }
            }
            output.push(byteToCharMap[outByte1], byteToCharMap[outByte2], byteToCharMap[outByte3], byteToCharMap[outByte4]);
        }
        return output.join('');
    },
    /**
     * Base64-encode a string.
     *
     * @param input A string to encode.
     * @param webSafe If true, we should use the
     *     alternative alphabet.
     * @return The base64 encoded string.
     */
    encodeString: function (input, webSafe) {
        // Shortcut for Mozilla browsers that implement
        // a native base64 encoder in the form of "btoa/atob"
        if (this.HAS_NATIVE_SUPPORT && !webSafe) {
            return btoa(input);
        }
        return this.encodeByteArray(stringToByteArray(input), webSafe);
    },
    /**
     * Base64-decode a string.
     *
     * @param input to decode.
     * @param webSafe True if we should use the
     *     alternative alphabet.
     * @return string representing the decoded value.
     */
    decodeString: function (input, webSafe) {
        // Shortcut for Mozilla browsers that implement
        // a native base64 encoder in the form of "btoa/atob"
        if (this.HAS_NATIVE_SUPPORT && !webSafe) {
            return atob(input);
        }
        return byteArrayToString(this.decodeStringToByteArray(input, webSafe));
    },
    /**
     * Base64-decode a string.
     *
     * In base-64 decoding, groups of four characters are converted into three
     * bytes.  If the encoder did not apply padding, the input length may not
     * be a multiple of 4.
     *
     * In this case, the last group will have fewer than 4 characters, and
     * padding will be inferred.  If the group has one or two characters, it decodes
     * to one byte.  If the group has three characters, it decodes to two bytes.
     *
     * @param input Input to decode.
     * @param webSafe True if we should use the web-safe alphabet.
     * @return bytes representing the decoded value.
     */
    decodeStringToByteArray: function (input, webSafe) {
        this.init_();
        var charToByteMap = webSafe
            ? this.charToByteMapWebSafe_
            : this.charToByteMap_;
        var output = [];
        for (var i = 0; i < input.length;) {
            var byte1 = charToByteMap[input.charAt(i++)];
            var haveByte2 = i < input.length;
            var byte2 = haveByte2 ? charToByteMap[input.charAt(i)] : 0;
            ++i;
            var haveByte3 = i < input.length;
            var byte3 = haveByte3 ? charToByteMap[input.charAt(i)] : 64;
            ++i;
            var haveByte4 = i < input.length;
            var byte4 = haveByte4 ? charToByteMap[input.charAt(i)] : 64;
            ++i;
            if (byte1 == null || byte2 == null || byte3 == null || byte4 == null) {
                throw Error();
            }
            var outByte1 = (byte1 << 2) | (byte2 >> 4);
            output.push(outByte1);
            if (byte3 !== 64) {
                var outByte2 = ((byte2 << 4) & 0xf0) | (byte3 >> 2);
                output.push(outByte2);
                if (byte4 !== 64) {
                    var outByte3 = ((byte3 << 6) & 0xc0) | byte4;
                    output.push(outByte3);
                }
            }
        }
        return output;
    },
    /**
     * Lazy static initialization function. Called before
     * accessing any of the static map variables.
     * @private
     */
    init_: function () {
        if (!this.byteToCharMap_) {
            this.byteToCharMap_ = {};
            this.charToByteMap_ = {};
            this.byteToCharMapWebSafe_ = {};
            this.charToByteMapWebSafe_ = {};
            // We want quick mappings back and forth, so we precompute two maps.
            for (var i = 0; i < this.ENCODED_VALS.length; i++) {
                this.byteToCharMap_[i] = this.ENCODED_VALS.charAt(i);
                this.charToByteMap_[this.byteToCharMap_[i]] = i;
                this.byteToCharMapWebSafe_[i] = this.ENCODED_VALS_WEBSAFE.charAt(i);
                this.charToByteMapWebSafe_[this.byteToCharMapWebSafe_[i]] = i;
                // Be forgiving when decoding and correctly decode both encodings.
                if (i >= this.ENCODED_VALS_BASE.length) {
                    this.charToByteMap_[this.ENCODED_VALS_WEBSAFE.charAt(i)] = i;
                    this.charToByteMapWebSafe_[this.ENCODED_VALS.charAt(i)] = i;
                }
            }
        }
    }
};
/**
 * URL-safe base64 encoding
 */
var base64Encode = function (str) {
    var utf8Bytes = stringToByteArray(str);
    return base64.encodeByteArray(utf8Bytes, true);
};
/**
 * URL-safe base64 decoding
 *
 * NOTE: DO NOT use the global atob() function - it does NOT support the
 * base64Url variant encoding.
 *
 * @param str To be decoded
 * @return Decoded result, if possible
 */
var base64Decode = function (str) {
    try {
        return base64.decodeString(str, true);
    }
    catch (e) {
        console.error('base64Decode failed: ', e);
    }
    return null;
};

/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * Do a deep-copy of basic JavaScript Objects or Arrays.
 */
function deepCopy(value) {
    return deepExtend(undefined, value);
}
/**
 * Copy properties from source to target (recursively allows extension
 * of Objects and Arrays).  Scalar values in the target are over-written.
 * If target is undefined, an object of the appropriate type will be created
 * (and returned).
 *
 * We recursively copy all child properties of plain Objects in the source- so
 * that namespace- like dictionaries are merged.
 *
 * Note that the target can be a function, in which case the properties in
 * the source Object are copied onto it as static properties of the Function.
 *
 * Note: we don't merge __proto__ to prevent prototype pollution
 */
function deepExtend(target, source) {
    if (!(source instanceof Object)) {
        return source;
    }
    switch (source.constructor) {
        case Date:
            // Treat Dates like scalars; if the target date object had any child
            // properties - they will be lost!
            var dateValue = source;
            return new Date(dateValue.getTime());
        case Object:
            if (target === undefined) {
                target = {};
            }
            break;
        case Array:
            // Always copy the array source and overwrite the target.
            target = [];
            break;
        default:
            // Not a plain Object - treat it as a scalar.
            return source;
    }
    for (var prop in source) {
        // use isValidKey to guard against prototype pollution. See https://snyk.io/vuln/SNYK-JS-LODASH-450202
        if (!source.hasOwnProperty(prop) || !isValidKey(prop)) {
            continue;
        }
        target[prop] = deepExtend(target[prop], source[prop]);
    }
    return target;
}
function isValidKey(key) {
    return key !== '__proto__';
}

/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
var Deferred = /** @class */ (function () {
    function Deferred() {
        var _this = this;
        this.reject = function () { };
        this.resolve = function () { };
        this.promise = new Promise(function (resolve, reject) {
            _this.resolve = resolve;
            _this.reject = reject;
        });
    }
    /**
     * Our API internals are not promiseified and cannot because our callback APIs have subtle expectations around
     * invoking promises inline, which Promises are forbidden to do. This method accepts an optional node-style callback
     * and returns a node-style callback which will resolve or reject the Deferred's promise.
     */
    Deferred.prototype.wrapCallback = function (callback) {
        var _this = this;
        return function (error, value) {
            if (error) {
                _this.reject(error);
            }
            else {
                _this.resolve(value);
            }
            if (typeof callback === 'function') {
                // Attaching noop handler just in case developer wasn't expecting
                // promises
                _this.promise.catch(function () { });
                // Some of our callbacks don't expect a value and our own tests
                // assert that the parameter length is 1
                if (callback.length === 1) {
                    callback(error);
                }
                else {
                    callback(error, value);
                }
            }
        };
    };
    return Deferred;
}());

/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * Returns navigator.userAgent string or '' if it's not defined.
 * @return user agent string
 */
function getUA() {
    if (typeof navigator !== 'undefined' &&
        typeof navigator['userAgent'] === 'string') {
        return navigator['userAgent'];
    }
    else {
        return '';
    }
}
/**
 * Detect Cordova / PhoneGap / Ionic frameworks on a mobile device.
 *
 * Deliberately does not rely on checking `file://` URLs (as this fails PhoneGap
 * in the Ripple emulator) nor Cordova `onDeviceReady`, which would normally
 * wait for a callback.
 */
function isMobileCordova() {
    return (typeof window !== 'undefined' &&
        // @ts-ignore Setting up an broadly applicable index signature for Window
        // just to deal with this case would probably be a bad idea.
        !!(window['cordova'] || window['phonegap'] || window['PhoneGap']) &&
        /ios|iphone|ipod|ipad|android|blackberry|iemobile/i.test(getUA()));
}
/**
 * Detect Node.js.
 *
 * @return true if Node.js environment is detected.
 */
// Node detection logic from: https://github.com/iliakan/detect-node/
function isNode() {
    try {
        return (Object.prototype.toString.call(__webpack_require__.g.process) === '[object process]');
    }
    catch (e) {
        return false;
    }
}
/**
 * Detect Browser Environment
 */
function isBrowser() {
    return typeof self === 'object' && self.self === self;
}
function isBrowserExtension() {
    var runtime = typeof chrome === 'object'
        ? chrome.runtime
        : typeof browser === 'object'
            ? browser.runtime
            : undefined;
    return typeof runtime === 'object' && runtime.id !== undefined;
}
/**
 * Detect React Native.
 *
 * @return true if ReactNative environment is detected.
 */
function isReactNative() {
    return (typeof navigator === 'object' && navigator['product'] === 'ReactNative');
}
/** Detects Electron apps. */
function isElectron() {
    return getUA().indexOf('Electron/') >= 0;
}
/** Detects Internet Explorer. */
function isIE() {
    var ua = getUA();
    return ua.indexOf('MSIE ') >= 0 || ua.indexOf('Trident/') >= 0;
}
/** Detects Universal Windows Platform apps. */
function isUWP() {
    return getUA().indexOf('MSAppHost/') >= 0;
}
/**
 * Detect whether the current SDK build is the Node version.
 *
 * @return true if it's the Node SDK build.
 */
function isNodeSdk() {
    return CONSTANTS.NODE_CLIENT === true || CONSTANTS.NODE_ADMIN === true;
}
/** Returns true if we are running in Safari. */
function isSafari() {
    return (!isNode() &&
        navigator.userAgent.includes('Safari') &&
        !navigator.userAgent.includes('Chrome'));
}
/**
 * This method checks if indexedDB is supported by current browser/service worker context
 * @return true if indexedDB is supported by current browser/service worker context
 */
function isIndexedDBAvailable() {
    return 'indexedDB' in self && indexedDB != null;
}
/**
 * This method validates browser context for indexedDB by opening a dummy indexedDB database and reject
 * if errors occur during the database open operation.
 */
function validateIndexedDBOpenable() {
    return new Promise(function (resolve, reject) {
        try {
            var preExist_1 = true;
            var DB_CHECK_NAME_1 = 'validate-browser-context-for-indexeddb-analytics-module';
            var request_1 = window.indexedDB.open(DB_CHECK_NAME_1);
            request_1.onsuccess = function () {
                request_1.result.close();
                // delete database only when it doesn't pre-exist
                if (!preExist_1) {
                    window.indexedDB.deleteDatabase(DB_CHECK_NAME_1);
                }
                resolve(true);
            };
            request_1.onupgradeneeded = function () {
                preExist_1 = false;
            };
            request_1.onerror = function () {
                var _a;
                reject(((_a = request_1.error) === null || _a === void 0 ? void 0 : _a.message) || '');
            };
        }
        catch (error) {
            reject(error);
        }
    });
}
/**
 *
 * This method checks whether cookie is enabled within current browser
 * @return true if cookie is enabled within current browser
 */
function areCookiesEnabled() {
    if (!navigator || !navigator.cookieEnabled) {
        return false;
    }
    return true;
}

/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
var ERROR_NAME = 'FirebaseError';
// Based on code from:
// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error#Custom_Error_Types
var FirebaseError = /** @class */ (function (_super) {
    (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__extends)(FirebaseError, _super);
    function FirebaseError(code, message, customData) {
        var _this = _super.call(this, message) || this;
        _this.code = code;
        _this.customData = customData;
        _this.name = ERROR_NAME;
        // Fix For ES5
        // https://github.com/Microsoft/TypeScript-wiki/blob/master/Breaking-Changes.md#extending-built-ins-like-error-array-and-map-may-no-longer-work
        Object.setPrototypeOf(_this, FirebaseError.prototype);
        // Maintains proper stack trace for where our error was thrown.
        // Only available on V8.
        if (Error.captureStackTrace) {
            Error.captureStackTrace(_this, ErrorFactory.prototype.create);
        }
        return _this;
    }
    return FirebaseError;
}(Error));
var ErrorFactory = /** @class */ (function () {
    function ErrorFactory(service, serviceName, errors) {
        this.service = service;
        this.serviceName = serviceName;
        this.errors = errors;
    }
    ErrorFactory.prototype.create = function (code) {
        var data = [];
        for (var _i = 1; _i < arguments.length; _i++) {
            data[_i - 1] = arguments[_i];
        }
        var customData = data[0] || {};
        var fullCode = this.service + "/" + code;
        var template = this.errors[code];
        var message = template ? replaceTemplate(template, customData) : 'Error';
        // Service Name: Error message (service/code).
        var fullMessage = this.serviceName + ": " + message + " (" + fullCode + ").";
        var error = new FirebaseError(fullCode, fullMessage, customData);
        return error;
    };
    return ErrorFactory;
}());
function replaceTemplate(template, data) {
    return template.replace(PATTERN, function (_, key) {
        var value = data[key];
        return value != null ? String(value) : "<" + key + "?>";
    });
}
var PATTERN = /\{\$([^}]+)}/g;

/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * Evaluates a JSON string into a javascript object.
 *
 * @param {string} str A string containing JSON.
 * @return {*} The javascript object representing the specified JSON.
 */
function jsonEval(str) {
    return JSON.parse(str);
}
/**
 * Returns JSON representing a javascript object.
 * @param {*} data Javascript object to be stringified.
 * @return {string} The JSON contents of the object.
 */
function stringify(data) {
    return JSON.stringify(data);
}

/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * Decodes a Firebase auth. token into constituent parts.
 *
 * Notes:
 * - May return with invalid / incomplete claims if there's no native base64 decoding support.
 * - Doesn't check if the token is actually valid.
 */
var decode = function (token) {
    var header = {}, claims = {}, data = {}, signature = '';
    try {
        var parts = token.split('.');
        header = jsonEval(base64Decode(parts[0]) || '');
        claims = jsonEval(base64Decode(parts[1]) || '');
        signature = parts[2];
        data = claims['d'] || {};
        delete claims['d'];
    }
    catch (e) { }
    return {
        header: header,
        claims: claims,
        data: data,
        signature: signature
    };
};
/**
 * Decodes a Firebase auth. token and checks the validity of its time-based claims. Will return true if the
 * token is within the time window authorized by the 'nbf' (not-before) and 'iat' (issued-at) claims.
 *
 * Notes:
 * - May return a false negative if there's no native base64 decoding support.
 * - Doesn't check if the token is actually valid.
 */
var isValidTimestamp = function (token) {
    var claims = decode(token).claims;
    var now = Math.floor(new Date().getTime() / 1000);
    var validSince = 0, validUntil = 0;
    if (typeof claims === 'object') {
        if (claims.hasOwnProperty('nbf')) {
            validSince = claims['nbf'];
        }
        else if (claims.hasOwnProperty('iat')) {
            validSince = claims['iat'];
        }
        if (claims.hasOwnProperty('exp')) {
            validUntil = claims['exp'];
        }
        else {
            // token will expire after 24h by default
            validUntil = validSince + 86400;
        }
    }
    return (!!now &&
        !!validSince &&
        !!validUntil &&
        now >= validSince &&
        now <= validUntil);
};
/**
 * Decodes a Firebase auth. token and returns its issued at time if valid, null otherwise.
 *
 * Notes:
 * - May return null if there's no native base64 decoding support.
 * - Doesn't check if the token is actually valid.
 */
var issuedAtTime = function (token) {
    var claims = decode(token).claims;
    if (typeof claims === 'object' && claims.hasOwnProperty('iat')) {
        return claims['iat'];
    }
    return null;
};
/**
 * Decodes a Firebase auth. token and checks the validity of its format. Expects a valid issued-at time.
 *
 * Notes:
 * - May return a false negative if there's no native base64 decoding support.
 * - Doesn't check if the token is actually valid.
 */
var isValidFormat = function (token) {
    var decoded = decode(token), claims = decoded.claims;
    return !!claims && typeof claims === 'object' && claims.hasOwnProperty('iat');
};
/**
 * Attempts to peer into an auth token and determine if it's an admin auth token by looking at the claims portion.
 *
 * Notes:
 * - May return a false negative if there's no native base64 decoding support.
 * - Doesn't check if the token is actually valid.
 */
var isAdmin = function (token) {
    var claims = decode(token).claims;
    return typeof claims === 'object' && claims['admin'] === true;
};

/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
function contains(obj, key) {
    return Object.prototype.hasOwnProperty.call(obj, key);
}
function safeGet(obj, key) {
    if (Object.prototype.hasOwnProperty.call(obj, key)) {
        return obj[key];
    }
    else {
        return undefined;
    }
}
function isEmpty(obj) {
    for (var key in obj) {
        if (Object.prototype.hasOwnProperty.call(obj, key)) {
            return false;
        }
    }
    return true;
}
function map(obj, fn, contextObj) {
    var res = {};
    for (var key in obj) {
        if (Object.prototype.hasOwnProperty.call(obj, key)) {
            res[key] = fn.call(contextObj, obj[key], key, obj);
        }
    }
    return res;
}

/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * Returns a querystring-formatted string (e.g. &arg=val&arg2=val2) from a
 * params object (e.g. {arg: 'val', arg2: 'val2'})
 * Note: You must prepend it with ? when adding it to a URL.
 */
function querystring(querystringParams) {
    var params = [];
    var _loop_1 = function (key, value) {
        if (Array.isArray(value)) {
            value.forEach(function (arrayVal) {
                params.push(encodeURIComponent(key) + '=' + encodeURIComponent(arrayVal));
            });
        }
        else {
            params.push(encodeURIComponent(key) + '=' + encodeURIComponent(value));
        }
    };
    for (var _i = 0, _a = Object.entries(querystringParams); _i < _a.length; _i++) {
        var _b = _a[_i], key = _b[0], value = _b[1];
        _loop_1(key, value);
    }
    return params.length ? '&' + params.join('&') : '';
}
/**
 * Decodes a querystring (e.g. ?arg=val&arg2=val2) into a params object
 * (e.g. {arg: 'val', arg2: 'val2'})
 */
function querystringDecode(querystring) {
    var obj = {};
    var tokens = querystring.replace(/^\?/, '').split('&');
    tokens.forEach(function (token) {
        if (token) {
            var key = token.split('=');
            obj[key[0]] = key[1];
        }
    });
    return obj;
}

/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * @fileoverview SHA-1 cryptographic hash.
 * Variable names follow the notation in FIPS PUB 180-3:
 * http://csrc.nist.gov/publications/fips/fips180-3/fips180-3_final.pdf.
 *
 * Usage:
 *   var sha1 = new sha1();
 *   sha1.update(bytes);
 *   var hash = sha1.digest();
 *
 * Performance:
 *   Chrome 23:   ~400 Mbit/s
 *   Firefox 16:  ~250 Mbit/s
 *
 */
/**
 * SHA-1 cryptographic hash constructor.
 *
 * The properties declared here are discussed in the above algorithm document.
 * @constructor
 * @final
 * @struct
 */
var Sha1 = /** @class */ (function () {
    function Sha1() {
        /**
         * Holds the previous values of accumulated variables a-e in the compress_
         * function.
         * @private
         */
        this.chain_ = [];
        /**
         * A buffer holding the partially computed hash result.
         * @private
         */
        this.buf_ = [];
        /**
         * An array of 80 bytes, each a part of the message to be hashed.  Referred to
         * as the message schedule in the docs.
         * @private
         */
        this.W_ = [];
        /**
         * Contains data needed to pad messages less than 64 bytes.
         * @private
         */
        this.pad_ = [];
        /**
         * @private {number}
         */
        this.inbuf_ = 0;
        /**
         * @private {number}
         */
        this.total_ = 0;
        this.blockSize = 512 / 8;
        this.pad_[0] = 128;
        for (var i = 1; i < this.blockSize; ++i) {
            this.pad_[i] = 0;
        }
        this.reset();
    }
    Sha1.prototype.reset = function () {
        this.chain_[0] = 0x67452301;
        this.chain_[1] = 0xefcdab89;
        this.chain_[2] = 0x98badcfe;
        this.chain_[3] = 0x10325476;
        this.chain_[4] = 0xc3d2e1f0;
        this.inbuf_ = 0;
        this.total_ = 0;
    };
    /**
     * Internal compress helper function.
     * @param buf Block to compress.
     * @param offset Offset of the block in the buffer.
     * @private
     */
    Sha1.prototype.compress_ = function (buf, offset) {
        if (!offset) {
            offset = 0;
        }
        var W = this.W_;
        // get 16 big endian words
        if (typeof buf === 'string') {
            for (var i = 0; i < 16; i++) {
                // TODO(user): [bug 8140122] Recent versions of Safari for Mac OS and iOS
                // have a bug that turns the post-increment ++ operator into pre-increment
                // during JIT compilation.  We have code that depends heavily on SHA-1 for
                // correctness and which is affected by this bug, so I've removed all uses
                // of post-increment ++ in which the result value is used.  We can revert
                // this change once the Safari bug
                // (https://bugs.webkit.org/show_bug.cgi?id=109036) has been fixed and
                // most clients have been updated.
                W[i] =
                    (buf.charCodeAt(offset) << 24) |
                        (buf.charCodeAt(offset + 1) << 16) |
                        (buf.charCodeAt(offset + 2) << 8) |
                        buf.charCodeAt(offset + 3);
                offset += 4;
            }
        }
        else {
            for (var i = 0; i < 16; i++) {
                W[i] =
                    (buf[offset] << 24) |
                        (buf[offset + 1] << 16) |
                        (buf[offset + 2] << 8) |
                        buf[offset + 3];
                offset += 4;
            }
        }
        // expand to 80 words
        for (var i = 16; i < 80; i++) {
            var t = W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16];
            W[i] = ((t << 1) | (t >>> 31)) & 0xffffffff;
        }
        var a = this.chain_[0];
        var b = this.chain_[1];
        var c = this.chain_[2];
        var d = this.chain_[3];
        var e = this.chain_[4];
        var f, k;
        // TODO(user): Try to unroll this loop to speed up the computation.
        for (var i = 0; i < 80; i++) {
            if (i < 40) {
                if (i < 20) {
                    f = d ^ (b & (c ^ d));
                    k = 0x5a827999;
                }
                else {
                    f = b ^ c ^ d;
                    k = 0x6ed9eba1;
                }
            }
            else {
                if (i < 60) {
                    f = (b & c) | (d & (b | c));
                    k = 0x8f1bbcdc;
                }
                else {
                    f = b ^ c ^ d;
                    k = 0xca62c1d6;
                }
            }
            var t = (((a << 5) | (a >>> 27)) + f + e + k + W[i]) & 0xffffffff;
            e = d;
            d = c;
            c = ((b << 30) | (b >>> 2)) & 0xffffffff;
            b = a;
            a = t;
        }
        this.chain_[0] = (this.chain_[0] + a) & 0xffffffff;
        this.chain_[1] = (this.chain_[1] + b) & 0xffffffff;
        this.chain_[2] = (this.chain_[2] + c) & 0xffffffff;
        this.chain_[3] = (this.chain_[3] + d) & 0xffffffff;
        this.chain_[4] = (this.chain_[4] + e) & 0xffffffff;
    };
    Sha1.prototype.update = function (bytes, length) {
        // TODO(johnlenz): tighten the function signature and remove this check
        if (bytes == null) {
            return;
        }
        if (length === undefined) {
            length = bytes.length;
        }
        var lengthMinusBlock = length - this.blockSize;
        var n = 0;
        // Using local instead of member variables gives ~5% speedup on Firefox 16.
        var buf = this.buf_;
        var inbuf = this.inbuf_;
        // The outer while loop should execute at most twice.
        while (n < length) {
            // When we have no data in the block to top up, we can directly process the
            // input buffer (assuming it contains sufficient data). This gives ~25%
            // speedup on Chrome 23 and ~15% speedup on Firefox 16, but requires that
            // the data is provided in large chunks (or in multiples of 64 bytes).
            if (inbuf === 0) {
                while (n <= lengthMinusBlock) {
                    this.compress_(bytes, n);
                    n += this.blockSize;
                }
            }
            if (typeof bytes === 'string') {
                while (n < length) {
                    buf[inbuf] = bytes.charCodeAt(n);
                    ++inbuf;
                    ++n;
                    if (inbuf === this.blockSize) {
                        this.compress_(buf);
                        inbuf = 0;
                        // Jump to the outer loop so we use the full-block optimization.
                        break;
                    }
                }
            }
            else {
                while (n < length) {
                    buf[inbuf] = bytes[n];
                    ++inbuf;
                    ++n;
                    if (inbuf === this.blockSize) {
                        this.compress_(buf);
                        inbuf = 0;
                        // Jump to the outer loop so we use the full-block optimization.
                        break;
                    }
                }
            }
        }
        this.inbuf_ = inbuf;
        this.total_ += length;
    };
    /** @override */
    Sha1.prototype.digest = function () {
        var digest = [];
        var totalBits = this.total_ * 8;
        // Add pad 0x80 0x00*.
        if (this.inbuf_ < 56) {
            this.update(this.pad_, 56 - this.inbuf_);
        }
        else {
            this.update(this.pad_, this.blockSize - (this.inbuf_ - 56));
        }
        // Add # bits.
        for (var i = this.blockSize - 1; i >= 56; i--) {
            this.buf_[i] = totalBits & 255;
            totalBits /= 256; // Don't use bit-shifting here!
        }
        this.compress_(this.buf_);
        var n = 0;
        for (var i = 0; i < 5; i++) {
            for (var j = 24; j >= 0; j -= 8) {
                digest[n] = (this.chain_[i] >> j) & 255;
                ++n;
            }
        }
        return digest;
    };
    return Sha1;
}());

/**
 * Helper to make a Subscribe function (just like Promise helps make a
 * Thenable).
 *
 * @param executor Function which can make calls to a single Observer
 *     as a proxy.
 * @param onNoObservers Callback when count of Observers goes to zero.
 */
function createSubscribe(executor, onNoObservers) {
    var proxy = new ObserverProxy(executor, onNoObservers);
    return proxy.subscribe.bind(proxy);
}
/**
 * Implement fan-out for any number of Observers attached via a subscribe
 * function.
 */
var ObserverProxy = /** @class */ (function () {
    /**
     * @param executor Function which can make calls to a single Observer
     *     as a proxy.
     * @param onNoObservers Callback when count of Observers goes to zero.
     */
    function ObserverProxy(executor, onNoObservers) {
        var _this = this;
        this.observers = [];
        this.unsubscribes = [];
        this.observerCount = 0;
        // Micro-task scheduling by calling task.then().
        this.task = Promise.resolve();
        this.finalized = false;
        this.onNoObservers = onNoObservers;
        // Call the executor asynchronously so subscribers that are called
        // synchronously after the creation of the subscribe function
        // can still receive the very first value generated in the executor.
        this.task
            .then(function () {
            executor(_this);
        })
            .catch(function (e) {
            _this.error(e);
        });
    }
    ObserverProxy.prototype.next = function (value) {
        this.forEachObserver(function (observer) {
            observer.next(value);
        });
    };
    ObserverProxy.prototype.error = function (error) {
        this.forEachObserver(function (observer) {
            observer.error(error);
        });
        this.close(error);
    };
    ObserverProxy.prototype.complete = function () {
        this.forEachObserver(function (observer) {
            observer.complete();
        });
        this.close();
    };
    /**
     * Subscribe function that can be used to add an Observer to the fan-out list.
     *
     * - We require that no event is sent to a subscriber sychronously to their
     *   call to subscribe().
     */
    ObserverProxy.prototype.subscribe = function (nextOrObserver, error, complete) {
        var _this = this;
        var observer;
        if (nextOrObserver === undefined &&
            error === undefined &&
            complete === undefined) {
            throw new Error('Missing Observer.');
        }
        // Assemble an Observer object when passed as callback functions.
        if (implementsAnyMethods(nextOrObserver, [
            'next',
            'error',
            'complete'
        ])) {
            observer = nextOrObserver;
        }
        else {
            observer = {
                next: nextOrObserver,
                error: error,
                complete: complete
            };
        }
        if (observer.next === undefined) {
            observer.next = noop;
        }
        if (observer.error === undefined) {
            observer.error = noop;
        }
        if (observer.complete === undefined) {
            observer.complete = noop;
        }
        var unsub = this.unsubscribeOne.bind(this, this.observers.length);
        // Attempt to subscribe to a terminated Observable - we
        // just respond to the Observer with the final error or complete
        // event.
        if (this.finalized) {
            // eslint-disable-next-line @typescript-eslint/no-floating-promises
            this.task.then(function () {
                try {
                    if (_this.finalError) {
                        observer.error(_this.finalError);
                    }
                    else {
                        observer.complete();
                    }
                }
                catch (e) {
                    // nothing
                }
                return;
            });
        }
        this.observers.push(observer);
        return unsub;
    };
    // Unsubscribe is synchronous - we guarantee that no events are sent to
    // any unsubscribed Observer.
    ObserverProxy.prototype.unsubscribeOne = function (i) {
        if (this.observers === undefined || this.observers[i] === undefined) {
            return;
        }
        delete this.observers[i];
        this.observerCount -= 1;
        if (this.observerCount === 0 && this.onNoObservers !== undefined) {
            this.onNoObservers(this);
        }
    };
    ObserverProxy.prototype.forEachObserver = function (fn) {
        if (this.finalized) {
            // Already closed by previous event....just eat the additional values.
            return;
        }
        // Since sendOne calls asynchronously - there is no chance that
        // this.observers will become undefined.
        for (var i = 0; i < this.observers.length; i++) {
            this.sendOne(i, fn);
        }
    };
    // Call the Observer via one of it's callback function. We are careful to
    // confirm that the observe has not been unsubscribed since this asynchronous
    // function had been queued.
    ObserverProxy.prototype.sendOne = function (i, fn) {
        var _this = this;
        // Execute the callback asynchronously
        // eslint-disable-next-line @typescript-eslint/no-floating-promises
        this.task.then(function () {
            if (_this.observers !== undefined && _this.observers[i] !== undefined) {
                try {
                    fn(_this.observers[i]);
                }
                catch (e) {
                    // Ignore exceptions raised in Observers or missing methods of an
                    // Observer.
                    // Log error to console. b/31404806
                    if (typeof console !== 'undefined' && console.error) {
                        console.error(e);
                    }
                }
            }
        });
    };
    ObserverProxy.prototype.close = function (err) {
        var _this = this;
        if (this.finalized) {
            return;
        }
        this.finalized = true;
        if (err !== undefined) {
            this.finalError = err;
        }
        // Proxy is no longer needed - garbage collect references
        // eslint-disable-next-line @typescript-eslint/no-floating-promises
        this.task.then(function () {
            _this.observers = undefined;
            _this.onNoObservers = undefined;
        });
    };
    return ObserverProxy;
}());
/** Turn synchronous function into one called asynchronously. */
// eslint-disable-next-line @typescript-eslint/ban-types
function async(fn, onError) {
    return function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        Promise.resolve(true)
            .then(function () {
            fn.apply(void 0, args);
        })
            .catch(function (error) {
            if (onError) {
                onError(error);
            }
        });
    };
}
/**
 * Return true if the object passed in implements any of the named methods.
 */
function implementsAnyMethods(obj, methods) {
    if (typeof obj !== 'object' || obj === null) {
        return false;
    }
    for (var _i = 0, methods_1 = methods; _i < methods_1.length; _i++) {
        var method = methods_1[_i];
        if (method in obj && typeof obj[method] === 'function') {
            return true;
        }
    }
    return false;
}
function noop() {
    // do nothing
}

/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * Check to make sure the appropriate number of arguments are provided for a public function.
 * Throws an error if it fails.
 *
 * @param fnName The function name
 * @param minCount The minimum number of arguments to allow for the function call
 * @param maxCount The maximum number of argument to allow for the function call
 * @param argCount The actual number of arguments provided.
 */
var validateArgCount = function (fnName, minCount, maxCount, argCount) {
    var argError;
    if (argCount < minCount) {
        argError = 'at least ' + minCount;
    }
    else if (argCount > maxCount) {
        argError = maxCount === 0 ? 'none' : 'no more than ' + maxCount;
    }
    if (argError) {
        var error = fnName +
            ' failed: Was called with ' +
            argCount +
            (argCount === 1 ? ' argument.' : ' arguments.') +
            ' Expects ' +
            argError +
            '.';
        throw new Error(error);
    }
};
/**
 * Generates a string to prefix an error message about failed argument validation
 *
 * @param fnName The function name
 * @param argumentNumber The index of the argument
 * @param optional Whether or not the argument is optional
 * @return The prefix to add to the error thrown for validation.
 */
function errorPrefix(fnName, argumentNumber, optional) {
    var argName = '';
    switch (argumentNumber) {
        case 1:
            argName = optional ? 'first' : 'First';
            break;
        case 2:
            argName = optional ? 'second' : 'Second';
            break;
        case 3:
            argName = optional ? 'third' : 'Third';
            break;
        case 4:
            argName = optional ? 'fourth' : 'Fourth';
            break;
        default:
            throw new Error('errorPrefix called with argumentNumber > 4.  Need to update it?');
    }
    var error = fnName + ' failed: ';
    error += argName + ' argument ';
    return error;
}
/**
 * @param fnName
 * @param argumentNumber
 * @param namespace
 * @param optional
 */
function validateNamespace(fnName, argumentNumber, namespace, optional) {
    if (optional && !namespace) {
        return;
    }
    if (typeof namespace !== 'string') {
        //TODO: I should do more validation here. We only allow certain chars in namespaces.
        throw new Error(errorPrefix(fnName, argumentNumber, optional) +
            'must be a valid firebase namespace.');
    }
}
function validateCallback(fnName, argumentNumber, 
// eslint-disable-next-line @typescript-eslint/ban-types
callback, optional) {
    if (optional && !callback) {
        return;
    }
    if (typeof callback !== 'function') {
        throw new Error(errorPrefix(fnName, argumentNumber, optional) +
            'must be a valid function.');
    }
}
function validateContextObject(fnName, argumentNumber, context, optional) {
    if (optional && !context) {
        return;
    }
    if (typeof context !== 'object' || context === null) {
        throw new Error(errorPrefix(fnName, argumentNumber, optional) +
            'must be a valid context object.');
    }
}

/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Code originally came from goog.crypt.stringToUtf8ByteArray, but for some reason they
// automatically replaced '\r\n' with '\n', and they didn't handle surrogate pairs,
// so it's been modified.
// Note that not all Unicode characters appear as single characters in JavaScript strings.
// fromCharCode returns the UTF-16 encoding of a character - so some Unicode characters
// use 2 characters in Javascript.  All 4-byte UTF-8 characters begin with a first
// character in the range 0xD800 - 0xDBFF (the first character of a so-called surrogate
// pair).
// See http://www.ecma-international.org/ecma-262/5.1/#sec-15.1.3
/**
 * @param {string} str
 * @return {Array}
 */
var stringToByteArray$1 = function (str) {
    var out = [];
    var p = 0;
    for (var i = 0; i < str.length; i++) {
        var c = str.charCodeAt(i);
        // Is this the lead surrogate in a surrogate pair?
        if (c >= 0xd800 && c <= 0xdbff) {
            var high = c - 0xd800; // the high 10 bits.
            i++;
            assert(i < str.length, 'Surrogate pair missing trail surrogate.');
            var low = str.charCodeAt(i) - 0xdc00; // the low 10 bits.
            c = 0x10000 + (high << 10) + low;
        }
        if (c < 128) {
            out[p++] = c;
        }
        else if (c < 2048) {
            out[p++] = (c >> 6) | 192;
            out[p++] = (c & 63) | 128;
        }
        else if (c < 65536) {
            out[p++] = (c >> 12) | 224;
            out[p++] = ((c >> 6) & 63) | 128;
            out[p++] = (c & 63) | 128;
        }
        else {
            out[p++] = (c >> 18) | 240;
            out[p++] = ((c >> 12) & 63) | 128;
            out[p++] = ((c >> 6) & 63) | 128;
            out[p++] = (c & 63) | 128;
        }
    }
    return out;
};
/**
 * Calculate length without actually converting; useful for doing cheaper validation.
 * @param {string} str
 * @return {number}
 */
var stringLength = function (str) {
    var p = 0;
    for (var i = 0; i < str.length; i++) {
        var c = str.charCodeAt(i);
        if (c < 128) {
            p++;
        }
        else if (c < 2048) {
            p += 2;
        }
        else if (c >= 0xd800 && c <= 0xdbff) {
            // Lead surrogate of a surrogate pair.  The pair together will take 4 bytes to represent.
            p += 4;
            i++; // skip trail surrogate.
        }
        else {
            p += 3;
        }
    }
    return p;
};

/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * The amount of milliseconds to exponentially increase.
 */
var DEFAULT_INTERVAL_MILLIS = 1000;
/**
 * The factor to backoff by.
 * Should be a number greater than 1.
 */
var DEFAULT_BACKOFF_FACTOR = 2;
/**
 * The maximum milliseconds to increase to.
 *
 * <p>Visible for testing
 */
var MAX_VALUE_MILLIS = 4 * 60 * 60 * 1000; // Four hours, like iOS and Android.
/**
 * The percentage of backoff time to randomize by.
 * See
 * http://go/safe-client-behavior#step-1-determine-the-appropriate-retry-interval-to-handle-spike-traffic
 * for context.
 *
 * <p>Visible for testing
 */
var RANDOM_FACTOR = 0.5;
/**
 * Based on the backoff method from
 * https://github.com/google/closure-library/blob/master/closure/goog/math/exponentialbackoff.js.
 * Extracted here so we don't need to pass metadata and a stateful ExponentialBackoff object around.
 */
function calculateBackoffMillis(backoffCount, intervalMillis, backoffFactor) {
    if (intervalMillis === void 0) { intervalMillis = DEFAULT_INTERVAL_MILLIS; }
    if (backoffFactor === void 0) { backoffFactor = DEFAULT_BACKOFF_FACTOR; }
    // Calculates an exponentially increasing value.
    // Deviation: calculates value from count and a constant interval, so we only need to save value
    // and count to restore state.
    var currBaseValue = intervalMillis * Math.pow(backoffFactor, backoffCount);
    // A random "fuzz" to avoid waves of retries.
    // Deviation: randomFactor is required.
    var randomWait = Math.round(
    // A fraction of the backoff value to add/subtract.
    // Deviation: changes multiplication order to improve readability.
    RANDOM_FACTOR *
        currBaseValue *
        // A random float (rounded to int by Math.round above) in the range [-1, 1]. Determines
        // if we add or subtract.
        (Math.random() - 0.5) *
        2);
    // Limits backoff to max to avoid effectively permanent backoff.
    return Math.min(MAX_VALUE_MILLIS, currBaseValue + randomWait);
}

/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * Provide English ordinal letters after a number
 */
function ordinal(i) {
    if (!Number.isFinite(i)) {
        return "" + i;
    }
    return i + indicator(i);
}
function indicator(i) {
    i = Math.abs(i);
    var cent = i % 100;
    if (cent >= 10 && cent <= 20) {
        return 'th';
    }
    var dec = i % 10;
    if (dec === 1) {
        return 'st';
    }
    if (dec === 2) {
        return 'nd';
    }
    if (dec === 3) {
        return 'rd';
    }
    return 'th';
}


//# sourceMappingURL=index.esm.js.map


/***/ }),

/***/ "./node_modules/async/dist/async.js":
/*!******************************************!*\
  !*** ./node_modules/async/dist/async.js ***!
  \******************************************/
/*! unknown exports (runtime-defined) */
/*! runtime requirements: __webpack_exports__, top-level-this-exports, module.loaded, module.id, module, __webpack_require__.nmd, __webpack_require__.g, __webpack_require__.* */
/*! CommonJS bailout: this is used directly at 5:2-6 */
/*! CommonJS bailout: exports is used directly at 2:73-80 */
/***/ (function(module, exports, __webpack_require__) {

/* module decorator */ module = __webpack_require__.nmd(module);
(function (global, factory) {
   true ? factory(exports) :
  0;
}(this, (function (exports) { 'use strict';

function slice(arrayLike, start) {
    start = start|0;
    var newLen = Math.max(arrayLike.length - start, 0);
    var newArr = Array(newLen);
    for(var idx = 0; idx < newLen; idx++)  {
        newArr[idx] = arrayLike[start + idx];
    }
    return newArr;
}

/**
 * Creates a continuation function with some arguments already applied.
 *
 * Useful as a shorthand when combined with other control flow functions. Any
 * arguments passed to the returned function are added to the arguments
 * originally passed to apply.
 *
 * @name apply
 * @static
 * @memberOf module:Utils
 * @method
 * @category Util
 * @param {Function} fn - The function you want to eventually apply all
 * arguments to. Invokes with (arguments...).
 * @param {...*} arguments... - Any number of arguments to automatically apply
 * when the continuation is called.
 * @returns {Function} the partially-applied function
 * @example
 *
 * // using apply
 * async.parallel([
 *     async.apply(fs.writeFile, 'testfile1', 'test1'),
 *     async.apply(fs.writeFile, 'testfile2', 'test2')
 * ]);
 *
 *
 * // the same process without using apply
 * async.parallel([
 *     function(callback) {
 *         fs.writeFile('testfile1', 'test1', callback);
 *     },
 *     function(callback) {
 *         fs.writeFile('testfile2', 'test2', callback);
 *     }
 * ]);
 *
 * // It's possible to pass any number of additional arguments when calling the
 * // continuation:
 *
 * node> var fn = async.apply(sys.puts, 'one');
 * node> fn('two', 'three');
 * one
 * two
 * three
 */
var apply = function(fn/*, ...args*/) {
    var args = slice(arguments, 1);
    return function(/*callArgs*/) {
        var callArgs = slice(arguments);
        return fn.apply(null, args.concat(callArgs));
    };
};

var initialParams = function (fn) {
    return function (/*...args, callback*/) {
        var args = slice(arguments);
        var callback = args.pop();
        fn.call(this, args, callback);
    };
};

/**
 * Checks if `value` is the
 * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)
 * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an object, else `false`.
 * @example
 *
 * _.isObject({});
 * // => true
 *
 * _.isObject([1, 2, 3]);
 * // => true
 *
 * _.isObject(_.noop);
 * // => true
 *
 * _.isObject(null);
 * // => false
 */
function isObject(value) {
  var type = typeof value;
  return value != null && (type == 'object' || type == 'function');
}

var hasSetImmediate = typeof setImmediate === 'function' && setImmediate;
var hasNextTick = typeof process === 'object' && typeof process.nextTick === 'function';

function fallback(fn) {
    setTimeout(fn, 0);
}

function wrap(defer) {
    return function (fn/*, ...args*/) {
        var args = slice(arguments, 1);
        defer(function () {
            fn.apply(null, args);
        });
    };
}

var _defer;

if (hasSetImmediate) {
    _defer = setImmediate;
} else if (hasNextTick) {
    _defer = process.nextTick;
} else {
    _defer = fallback;
}

var setImmediate$1 = wrap(_defer);

/**
 * Take a sync function and make it async, passing its return value to a
 * callback. This is useful for plugging sync functions into a waterfall,
 * series, or other async functions. Any arguments passed to the generated
 * function will be passed to the wrapped function (except for the final
 * callback argument). Errors thrown will be passed to the callback.
 *
 * If the function passed to `asyncify` returns a Promise, that promises's
 * resolved/rejected state will be used to call the callback, rather than simply
 * the synchronous return value.
 *
 * This also means you can asyncify ES2017 `async` functions.
 *
 * @name asyncify
 * @static
 * @memberOf module:Utils
 * @method
 * @alias wrapSync
 * @category Util
 * @param {Function} func - The synchronous function, or Promise-returning
 * function to convert to an {@link AsyncFunction}.
 * @returns {AsyncFunction} An asynchronous wrapper of the `func`. To be
 * invoked with `(args..., callback)`.
 * @example
 *
 * // passing a regular synchronous function
 * async.waterfall([
 *     async.apply(fs.readFile, filename, "utf8"),
 *     async.asyncify(JSON.parse),
 *     function (data, next) {
 *         // data is the result of parsing the text.
 *         // If there was a parsing error, it would have been caught.
 *     }
 * ], callback);
 *
 * // passing a function returning a promise
 * async.waterfall([
 *     async.apply(fs.readFile, filename, "utf8"),
 *     async.asyncify(function (contents) {
 *         return db.model.create(contents);
 *     }),
 *     function (model, next) {
 *         // `model` is the instantiated model object.
 *         // If there was an error, this function would be skipped.
 *     }
 * ], callback);
 *
 * // es2017 example, though `asyncify` is not needed if your JS environment
 * // supports async functions out of the box
 * var q = async.queue(async.asyncify(async function(file) {
 *     var intermediateStep = await processFile(file);
 *     return await somePromise(intermediateStep)
 * }));
 *
 * q.push(files);
 */
function asyncify(func) {
    return initialParams(function (args, callback) {
        var result;
        try {
            result = func.apply(this, args);
        } catch (e) {
            return callback(e);
        }
        // if result is Promise object
        if (isObject(result) && typeof result.then === 'function') {
            result.then(function(value) {
                invokeCallback(callback, null, value);
            }, function(err) {
                invokeCallback(callback, err.message ? err : new Error(err));
            });
        } else {
            callback(null, result);
        }
    });
}

function invokeCallback(callback, error, value) {
    try {
        callback(error, value);
    } catch (e) {
        setImmediate$1(rethrow, e);
    }
}

function rethrow(error) {
    throw error;
}

var supportsSymbol = typeof Symbol === 'function';

function isAsync(fn) {
    return supportsSymbol && fn[Symbol.toStringTag] === 'AsyncFunction';
}

function wrapAsync(asyncFn) {
    return isAsync(asyncFn) ? asyncify(asyncFn) : asyncFn;
}

function applyEach$1(eachfn) {
    return function(fns/*, ...args*/) {
        var args = slice(arguments, 1);
        var go = initialParams(function(args, callback) {
            var that = this;
            return eachfn(fns, function (fn, cb) {
                wrapAsync(fn).apply(that, args.concat(cb));
            }, callback);
        });
        if (args.length) {
            return go.apply(this, args);
        }
        else {
            return go;
        }
    };
}

/** Detect free variable `global` from Node.js. */
var freeGlobal = typeof __webpack_require__.g == 'object' && __webpack_require__.g && __webpack_require__.g.Object === Object && __webpack_require__.g;

/** Detect free variable `self`. */
var freeSelf = typeof self == 'object' && self && self.Object === Object && self;

/** Used as a reference to the global object. */
var root = freeGlobal || freeSelf || Function('return this')();

/** Built-in value references. */
var Symbol$1 = root.Symbol;

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * Used to resolve the
 * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
 * of values.
 */
var nativeObjectToString = objectProto.toString;

/** Built-in value references. */
var symToStringTag$1 = Symbol$1 ? Symbol$1.toStringTag : undefined;

/**
 * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.
 *
 * @private
 * @param {*} value The value to query.
 * @returns {string} Returns the raw `toStringTag`.
 */
function getRawTag(value) {
  var isOwn = hasOwnProperty.call(value, symToStringTag$1),
      tag = value[symToStringTag$1];

  try {
    value[symToStringTag$1] = undefined;
    var unmasked = true;
  } catch (e) {}

  var result = nativeObjectToString.call(value);
  if (unmasked) {
    if (isOwn) {
      value[symToStringTag$1] = tag;
    } else {
      delete value[symToStringTag$1];
    }
  }
  return result;
}

/** Used for built-in method references. */
var objectProto$1 = Object.prototype;

/**
 * Used to resolve the
 * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
 * of values.
 */
var nativeObjectToString$1 = objectProto$1.toString;

/**
 * Converts `value` to a string using `Object.prototype.toString`.
 *
 * @private
 * @param {*} value The value to convert.
 * @returns {string} Returns the converted string.
 */
function objectToString(value) {
  return nativeObjectToString$1.call(value);
}

/** `Object#toString` result references. */
var nullTag = '[object Null]';
var undefinedTag = '[object Undefined]';

/** Built-in value references. */
var symToStringTag = Symbol$1 ? Symbol$1.toStringTag : undefined;

/**
 * The base implementation of `getTag` without fallbacks for buggy environments.
 *
 * @private
 * @param {*} value The value to query.
 * @returns {string} Returns the `toStringTag`.
 */
function baseGetTag(value) {
  if (value == null) {
    return value === undefined ? undefinedTag : nullTag;
  }
  return (symToStringTag && symToStringTag in Object(value))
    ? getRawTag(value)
    : objectToString(value);
}

/** `Object#toString` result references. */
var asyncTag = '[object AsyncFunction]';
var funcTag = '[object Function]';
var genTag = '[object GeneratorFunction]';
var proxyTag = '[object Proxy]';

/**
 * Checks if `value` is classified as a `Function` object.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a function, else `false`.
 * @example
 *
 * _.isFunction(_);
 * // => true
 *
 * _.isFunction(/abc/);
 * // => false
 */
function isFunction(value) {
  if (!isObject(value)) {
    return false;
  }
  // The use of `Object#toString` avoids issues with the `typeof` operator
  // in Safari 9 which returns 'object' for typed arrays and other constructors.
  var tag = baseGetTag(value);
  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;
}

/** Used as references for various `Number` constants. */
var MAX_SAFE_INTEGER = 9007199254740991;

/**
 * Checks if `value` is a valid array-like length.
 *
 * **Note:** This method is loosely based on
 * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.
 * @example
 *
 * _.isLength(3);
 * // => true
 *
 * _.isLength(Number.MIN_VALUE);
 * // => false
 *
 * _.isLength(Infinity);
 * // => false
 *
 * _.isLength('3');
 * // => false
 */
function isLength(value) {
  return typeof value == 'number' &&
    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;
}

/**
 * Checks if `value` is array-like. A value is considered array-like if it's
 * not a function and has a `value.length` that's an integer greater than or
 * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is array-like, else `false`.
 * @example
 *
 * _.isArrayLike([1, 2, 3]);
 * // => true
 *
 * _.isArrayLike(document.body.children);
 * // => true
 *
 * _.isArrayLike('abc');
 * // => true
 *
 * _.isArrayLike(_.noop);
 * // => false
 */
function isArrayLike(value) {
  return value != null && isLength(value.length) && !isFunction(value);
}

// A temporary value used to identify if the loop should be broken.
// See #1064, #1293
var breakLoop = {};

/**
 * This method returns `undefined`.
 *
 * @static
 * @memberOf _
 * @since 2.3.0
 * @category Util
 * @example
 *
 * _.times(2, _.noop);
 * // => [undefined, undefined]
 */
function noop() {
  // No operation performed.
}

function once(fn) {
    return function () {
        if (fn === null) return;
        var callFn = fn;
        fn = null;
        callFn.apply(this, arguments);
    };
}

var iteratorSymbol = typeof Symbol === 'function' && Symbol.iterator;

var getIterator = function (coll) {
    return iteratorSymbol && coll[iteratorSymbol] && coll[iteratorSymbol]();
};

/**
 * The base implementation of `_.times` without support for iteratee shorthands
 * or max array length checks.
 *
 * @private
 * @param {number} n The number of times to invoke `iteratee`.
 * @param {Function} iteratee The function invoked per iteration.
 * @returns {Array} Returns the array of results.
 */
function baseTimes(n, iteratee) {
  var index = -1,
      result = Array(n);

  while (++index < n) {
    result[index] = iteratee(index);
  }
  return result;
}

/**
 * Checks if `value` is object-like. A value is object-like if it's not `null`
 * and has a `typeof` result of "object".
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
 * @example
 *
 * _.isObjectLike({});
 * // => true
 *
 * _.isObjectLike([1, 2, 3]);
 * // => true
 *
 * _.isObjectLike(_.noop);
 * // => false
 *
 * _.isObjectLike(null);
 * // => false
 */
function isObjectLike(value) {
  return value != null && typeof value == 'object';
}

/** `Object#toString` result references. */
var argsTag = '[object Arguments]';

/**
 * The base implementation of `_.isArguments`.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an `arguments` object,
 */
function baseIsArguments(value) {
  return isObjectLike(value) && baseGetTag(value) == argsTag;
}

/** Used for built-in method references. */
var objectProto$3 = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty$2 = objectProto$3.hasOwnProperty;

/** Built-in value references. */
var propertyIsEnumerable = objectProto$3.propertyIsEnumerable;

/**
 * Checks if `value` is likely an `arguments` object.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an `arguments` object,
 *  else `false`.
 * @example
 *
 * _.isArguments(function() { return arguments; }());
 * // => true
 *
 * _.isArguments([1, 2, 3]);
 * // => false
 */
var isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {
  return isObjectLike(value) && hasOwnProperty$2.call(value, 'callee') &&
    !propertyIsEnumerable.call(value, 'callee');
};

/**
 * Checks if `value` is classified as an `Array` object.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an array, else `false`.
 * @example
 *
 * _.isArray([1, 2, 3]);
 * // => true
 *
 * _.isArray(document.body.children);
 * // => false
 *
 * _.isArray('abc');
 * // => false
 *
 * _.isArray(_.noop);
 * // => false
 */
var isArray = Array.isArray;

/**
 * This method returns `false`.
 *
 * @static
 * @memberOf _
 * @since 4.13.0
 * @category Util
 * @returns {boolean} Returns `false`.
 * @example
 *
 * _.times(2, _.stubFalse);
 * // => [false, false]
 */
function stubFalse() {
  return false;
}

/** Detect free variable `exports`. */
var freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;

/** Detect free variable `module`. */
var freeModule = freeExports && "object" == 'object' && module && !module.nodeType && module;

/** Detect the popular CommonJS extension `module.exports`. */
var moduleExports = freeModule && freeModule.exports === freeExports;

/** Built-in value references. */
var Buffer = moduleExports ? root.Buffer : undefined;

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined;

/**
 * Checks if `value` is a buffer.
 *
 * @static
 * @memberOf _
 * @since 4.3.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.
 * @example
 *
 * _.isBuffer(new Buffer(2));
 * // => true
 *
 * _.isBuffer(new Uint8Array(2));
 * // => false
 */
var isBuffer = nativeIsBuffer || stubFalse;

/** Used as references for various `Number` constants. */
var MAX_SAFE_INTEGER$1 = 9007199254740991;

/** Used to detect unsigned integer values. */
var reIsUint = /^(?:0|[1-9]\d*)$/;

/**
 * Checks if `value` is a valid array-like index.
 *
 * @private
 * @param {*} value The value to check.
 * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.
 * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.
 */
function isIndex(value, length) {
  var type = typeof value;
  length = length == null ? MAX_SAFE_INTEGER$1 : length;

  return !!length &&
    (type == 'number' ||
      (type != 'symbol' && reIsUint.test(value))) &&
        (value > -1 && value % 1 == 0 && value < length);
}

/** `Object#toString` result references. */
var argsTag$1 = '[object Arguments]';
var arrayTag = '[object Array]';
var boolTag = '[object Boolean]';
var dateTag = '[object Date]';
var errorTag = '[object Error]';
var funcTag$1 = '[object Function]';
var mapTag = '[object Map]';
var numberTag = '[object Number]';
var objectTag = '[object Object]';
var regexpTag = '[object RegExp]';
var setTag = '[object Set]';
var stringTag = '[object String]';
var weakMapTag = '[object WeakMap]';

var arrayBufferTag = '[object ArrayBuffer]';
var dataViewTag = '[object DataView]';
var float32Tag = '[object Float32Array]';
var float64Tag = '[object Float64Array]';
var int8Tag = '[object Int8Array]';
var int16Tag = '[object Int16Array]';
var int32Tag = '[object Int32Array]';
var uint8Tag = '[object Uint8Array]';
var uint8ClampedTag = '[object Uint8ClampedArray]';
var uint16Tag = '[object Uint16Array]';
var uint32Tag = '[object Uint32Array]';

/** Used to identify `toStringTag` values of typed arrays. */
var typedArrayTags = {};
typedArrayTags[float32Tag] = typedArrayTags[float64Tag] =
typedArrayTags[int8Tag] = typedArrayTags[int16Tag] =
typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =
typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =
typedArrayTags[uint32Tag] = true;
typedArrayTags[argsTag$1] = typedArrayTags[arrayTag] =
typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =
typedArrayTags[dataViewTag] = typedArrayTags[dateTag] =
typedArrayTags[errorTag] = typedArrayTags[funcTag$1] =
typedArrayTags[mapTag] = typedArrayTags[numberTag] =
typedArrayTags[objectTag] = typedArrayTags[regexpTag] =
typedArrayTags[setTag] = typedArrayTags[stringTag] =
typedArrayTags[weakMapTag] = false;

/**
 * The base implementation of `_.isTypedArray` without Node.js optimizations.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.
 */
function baseIsTypedArray(value) {
  return isObjectLike(value) &&
    isLength(value.length) && !!typedArrayTags[baseGetTag(value)];
}

/**
 * The base implementation of `_.unary` without support for storing metadata.
 *
 * @private
 * @param {Function} func The function to cap arguments for.
 * @returns {Function} Returns the new capped function.
 */
function baseUnary(func) {
  return function(value) {
    return func(value);
  };
}

/** Detect free variable `exports`. */
var freeExports$1 = typeof exports == 'object' && exports && !exports.nodeType && exports;

/** Detect free variable `module`. */
var freeModule$1 = freeExports$1 && "object" == 'object' && module && !module.nodeType && module;

/** Detect the popular CommonJS extension `module.exports`. */
var moduleExports$1 = freeModule$1 && freeModule$1.exports === freeExports$1;

/** Detect free variable `process` from Node.js. */
var freeProcess = moduleExports$1 && freeGlobal.process;

/** Used to access faster Node.js helpers. */
var nodeUtil = (function() {
  try {
    // Use `util.types` for Node.js 10+.
    var types = freeModule$1 && freeModule$1.require && freeModule$1.require('util').types;

    if (types) {
      return types;
    }

    // Legacy `process.binding('util')` for Node.js < 10.
    return freeProcess && freeProcess.binding && freeProcess.binding('util');
  } catch (e) {}
}());

/* Node.js helper references. */
var nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;

/**
 * Checks if `value` is classified as a typed array.
 *
 * @static
 * @memberOf _
 * @since 3.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.
 * @example
 *
 * _.isTypedArray(new Uint8Array);
 * // => true
 *
 * _.isTypedArray([]);
 * // => false
 */
var isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;

/** Used for built-in method references. */
var objectProto$2 = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty$1 = objectProto$2.hasOwnProperty;

/**
 * Creates an array of the enumerable property names of the array-like `value`.
 *
 * @private
 * @param {*} value The value to query.
 * @param {boolean} inherited Specify returning inherited property names.
 * @returns {Array} Returns the array of property names.
 */
function arrayLikeKeys(value, inherited) {
  var isArr = isArray(value),
      isArg = !isArr && isArguments(value),
      isBuff = !isArr && !isArg && isBuffer(value),
      isType = !isArr && !isArg && !isBuff && isTypedArray(value),
      skipIndexes = isArr || isArg || isBuff || isType,
      result = skipIndexes ? baseTimes(value.length, String) : [],
      length = result.length;

  for (var key in value) {
    if ((inherited || hasOwnProperty$1.call(value, key)) &&
        !(skipIndexes && (
           // Safari 9 has enumerable `arguments.length` in strict mode.
           key == 'length' ||
           // Node.js 0.10 has enumerable non-index properties on buffers.
           (isBuff && (key == 'offset' || key == 'parent')) ||
           // PhantomJS 2 has enumerable non-index properties on typed arrays.
           (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||
           // Skip index properties.
           isIndex(key, length)
        ))) {
      result.push(key);
    }
  }
  return result;
}

/** Used for built-in method references. */
var objectProto$5 = Object.prototype;

/**
 * Checks if `value` is likely a prototype object.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.
 */
function isPrototype(value) {
  var Ctor = value && value.constructor,
      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto$5;

  return value === proto;
}

/**
 * Creates a unary function that invokes `func` with its argument transformed.
 *
 * @private
 * @param {Function} func The function to wrap.
 * @param {Function} transform The argument transform.
 * @returns {Function} Returns the new function.
 */
function overArg(func, transform) {
  return function(arg) {
    return func(transform(arg));
  };
}

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeKeys = overArg(Object.keys, Object);

/** Used for built-in method references. */
var objectProto$4 = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty$3 = objectProto$4.hasOwnProperty;

/**
 * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names.
 */
function baseKeys(object) {
  if (!isPrototype(object)) {
    return nativeKeys(object);
  }
  var result = [];
  for (var key in Object(object)) {
    if (hasOwnProperty$3.call(object, key) && key != 'constructor') {
      result.push(key);
    }
  }
  return result;
}

/**
 * Creates an array of the own enumerable property names of `object`.
 *
 * **Note:** Non-object values are coerced to objects. See the
 * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)
 * for more details.
 *
 * @static
 * @since 0.1.0
 * @memberOf _
 * @category Object
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names.
 * @example
 *
 * function Foo() {
 *   this.a = 1;
 *   this.b = 2;
 * }
 *
 * Foo.prototype.c = 3;
 *
 * _.keys(new Foo);
 * // => ['a', 'b'] (iteration order is not guaranteed)
 *
 * _.keys('hi');
 * // => ['0', '1']
 */
function keys(object) {
  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);
}

function createArrayIterator(coll) {
    var i = -1;
    var len = coll.length;
    return function next() {
        return ++i < len ? {value: coll[i], key: i} : null;
    }
}

function createES2015Iterator(iterator) {
    var i = -1;
    return function next() {
        var item = iterator.next();
        if (item.done)
            return null;
        i++;
        return {value: item.value, key: i};
    }
}

function createObjectIterator(obj) {
    var okeys = keys(obj);
    var i = -1;
    var len = okeys.length;
    return function next() {
        var key = okeys[++i];
        return i < len ? {value: obj[key], key: key} : null;
    };
}

function iterator(coll) {
    if (isArrayLike(coll)) {
        return createArrayIterator(coll);
    }

    var iterator = getIterator(coll);
    return iterator ? createES2015Iterator(iterator) : createObjectIterator(coll);
}

function onlyOnce(fn) {
    return function() {
        if (fn === null) throw new Error("Callback was already called.");
        var callFn = fn;
        fn = null;
        callFn.apply(this, arguments);
    };
}

function _eachOfLimit(limit) {
    return function (obj, iteratee, callback) {
        callback = once(callback || noop);
        if (limit <= 0 || !obj) {
            return callback(null);
        }
        var nextElem = iterator(obj);
        var done = false;
        var running = 0;
        var looping = false;

        function iterateeCallback(err, value) {
            running -= 1;
            if (err) {
                done = true;
                callback(err);
            }
            else if (value === breakLoop || (done && running <= 0)) {
                done = true;
                return callback(null);
            }
            else if (!looping) {
                replenish();
            }
        }

        function replenish () {
            looping = true;
            while (running < limit && !done) {
                var elem = nextElem();
                if (elem === null) {
                    done = true;
                    if (running <= 0) {
                        callback(null);
                    }
                    return;
                }
                running += 1;
                iteratee(elem.value, elem.key, onlyOnce(iterateeCallback));
            }
            looping = false;
        }

        replenish();
    };
}

/**
 * The same as [`eachOf`]{@link module:Collections.eachOf} but runs a maximum of `limit` async operations at a
 * time.
 *
 * @name eachOfLimit
 * @static
 * @memberOf module:Collections
 * @method
 * @see [async.eachOf]{@link module:Collections.eachOf}
 * @alias forEachOfLimit
 * @category Collection
 * @param {Array|Iterable|Object} coll - A collection to iterate over.
 * @param {number} limit - The maximum number of async operations at a time.
 * @param {AsyncFunction} iteratee - An async function to apply to each
 * item in `coll`. The `key` is the item's key, or index in the case of an
 * array.
 * Invoked with (item, key, callback).
 * @param {Function} [callback] - A callback which is called when all
 * `iteratee` functions have finished, or an error occurs. Invoked with (err).
 */
function eachOfLimit(coll, limit, iteratee, callback) {
    _eachOfLimit(limit)(coll, wrapAsync(iteratee), callback);
}

function doLimit(fn, limit) {
    return function (iterable, iteratee, callback) {
        return fn(iterable, limit, iteratee, callback);
    };
}

// eachOf implementation optimized for array-likes
function eachOfArrayLike(coll, iteratee, callback) {
    callback = once(callback || noop);
    var index = 0,
        completed = 0,
        length = coll.length;
    if (length === 0) {
        callback(null);
    }

    function iteratorCallback(err, value) {
        if (err) {
            callback(err);
        } else if ((++completed === length) || value === breakLoop) {
            callback(null);
        }
    }

    for (; index < length; index++) {
        iteratee(coll[index], index, onlyOnce(iteratorCallback));
    }
}

// a generic version of eachOf which can handle array, object, and iterator cases.
var eachOfGeneric = doLimit(eachOfLimit, Infinity);

/**
 * Like [`each`]{@link module:Collections.each}, except that it passes the key (or index) as the second argument
 * to the iteratee.
 *
 * @name eachOf
 * @static
 * @memberOf module:Collections
 * @method
 * @alias forEachOf
 * @category Collection
 * @see [async.each]{@link module:Collections.each}
 * @param {Array|Iterable|Object} coll - A collection to iterate over.
 * @param {AsyncFunction} iteratee - A function to apply to each
 * item in `coll`.
 * The `key` is the item's key, or index in the case of an array.
 * Invoked with (item, key, callback).
 * @param {Function} [callback] - A callback which is called when all
 * `iteratee` functions have finished, or an error occurs. Invoked with (err).
 * @example
 *
 * var obj = {dev: "/dev.json", test: "/test.json", prod: "/prod.json"};
 * var configs = {};
 *
 * async.forEachOf(obj, function (value, key, callback) {
 *     fs.readFile(__dirname + value, "utf8", function (err, data) {
 *         if (err) return callback(err);
 *         try {
 *             configs[key] = JSON.parse(data);
 *         } catch (e) {
 *             return callback(e);
 *         }
 *         callback();
 *     });
 * }, function (err) {
 *     if (err) console.error(err.message);
 *     // configs is now a map of JSON data
 *     doSomethingWith(configs);
 * });
 */
var eachOf = function(coll, iteratee, callback) {
    var eachOfImplementation = isArrayLike(coll) ? eachOfArrayLike : eachOfGeneric;
    eachOfImplementation(coll, wrapAsync(iteratee), callback);
};

function doParallel(fn) {
    return function (obj, iteratee, callback) {
        return fn(eachOf, obj, wrapAsync(iteratee), callback);
    };
}

function _asyncMap(eachfn, arr, iteratee, callback) {
    callback = callback || noop;
    arr = arr || [];
    var results = [];
    var counter = 0;
    var _iteratee = wrapAsync(iteratee);

    eachfn(arr, function (value, _, callback) {
        var index = counter++;
        _iteratee(value, function (err, v) {
            results[index] = v;
            callback(err);
        });
    }, function (err) {
        callback(err, results);
    });
}

/**
 * Produces a new collection of values by mapping each value in `coll` through
 * the `iteratee` function. The `iteratee` is called with an item from `coll`
 * and a callback for when it has finished processing. Each of these callback
 * takes 2 arguments: an `error`, and the transformed item from `coll`. If
 * `iteratee` passes an error to its callback, the main `callback` (for the
 * `map` function) is immediately called with the error.
 *
 * Note, that since this function applies the `iteratee` to each item in
 * parallel, there is no guarantee that the `iteratee` functions will complete
 * in order. However, the results array will be in the same order as the
 * original `coll`.
 *
 * If `map` is passed an Object, the results will be an Array.  The results
 * will roughly be in the order of the original Objects' keys (but this can
 * vary across JavaScript engines).
 *
 * @name map
 * @static
 * @memberOf module:Collections
 * @method
 * @category Collection
 * @param {Array|Iterable|Object} coll - A collection to iterate over.
 * @param {AsyncFunction} iteratee - An async function to apply to each item in
 * `coll`.
 * The iteratee should complete with the transformed item.
 * Invoked with (item, callback).
 * @param {Function} [callback] - A callback which is called when all `iteratee`
 * functions have finished, or an error occurs. Results is an Array of the
 * transformed items from the `coll`. Invoked with (err, results).
 * @example
 *
 * async.map(['file1','file2','file3'], fs.stat, function(err, results) {
 *     // results is now an array of stats for each file
 * });
 */
var map = doParallel(_asyncMap);

/**
 * Applies the provided arguments to each function in the array, calling
 * `callback` after all functions have completed. If you only provide the first
 * argument, `fns`, then it will return a function which lets you pass in the
 * arguments as if it were a single function call. If more arguments are
 * provided, `callback` is required while `args` is still optional.
 *
 * @name applyEach
 * @static
 * @memberOf module:ControlFlow
 * @method
 * @category Control Flow
 * @param {Array|Iterable|Object} fns - A collection of {@link AsyncFunction}s
 * to all call with the same arguments
 * @param {...*} [args] - any number of separate arguments to pass to the
 * function.
 * @param {Function} [callback] - the final argument should be the callback,
 * called when all functions have completed processing.
 * @returns {Function} - If only the first argument, `fns`, is provided, it will
 * return a function which lets you pass in the arguments as if it were a single
 * function call. The signature is `(..args, callback)`. If invoked with any
 * arguments, `callback` is required.
 * @example
 *
 * async.applyEach([enableSearch, updateSchema], 'bucket', callback);
 *
 * // partial application example:
 * async.each(
 *     buckets,
 *     async.applyEach([enableSearch, updateSchema]),
 *     callback
 * );
 */
var applyEach = applyEach$1(map);

function doParallelLimit(fn) {
    return function (obj, limit, iteratee, callback) {
        return fn(_eachOfLimit(limit), obj, wrapAsync(iteratee), callback);
    };
}

/**
 * The same as [`map`]{@link module:Collections.map} but runs a maximum of `limit` async operations at a time.
 *
 * @name mapLimit
 * @static
 * @memberOf module:Collections
 * @method
 * @see [async.map]{@link module:Collections.map}
 * @category Collection
 * @param {Array|Iterable|Object} coll - A collection to iterate over.
 * @param {number} limit - The maximum number of async operations at a time.
 * @param {AsyncFunction} iteratee - An async function to apply to each item in
 * `coll`.
 * The iteratee should complete with the transformed item.
 * Invoked with (item, callback).
 * @param {Function} [callback] - A callback which is called when all `iteratee`
 * functions have finished, or an error occurs. Results is an array of the
 * transformed items from the `coll`. Invoked with (err, results).
 */
var mapLimit = doParallelLimit(_asyncMap);

/**
 * The same as [`map`]{@link module:Collections.map} but runs only a single async operation at a time.
 *
 * @name mapSeries
 * @static
 * @memberOf module:Collections
 * @method
 * @see [async.map]{@link module:Collections.map}
 * @category Collection
 * @param {Array|Iterable|Object} coll - A collection to iterate over.
 * @param {AsyncFunction} iteratee - An async function to apply to each item in
 * `coll`.
 * The iteratee should complete with the transformed item.
 * Invoked with (item, callback).
 * @param {Function} [callback] - A callback which is called when all `iteratee`
 * functions have finished, or an error occurs. Results is an array of the
 * transformed items from the `coll`. Invoked with (err, results).
 */
var mapSeries = doLimit(mapLimit, 1);

/**
 * The same as [`applyEach`]{@link module:ControlFlow.applyEach} but runs only a single async operation at a time.
 *
 * @name applyEachSeries
 * @static
 * @memberOf module:ControlFlow
 * @method
 * @see [async.applyEach]{@link module:ControlFlow.applyEach}
 * @category Control Flow
 * @param {Array|Iterable|Object} fns - A collection of {@link AsyncFunction}s to all
 * call with the same arguments
 * @param {...*} [args] - any number of separate arguments to pass to the
 * function.
 * @param {Function} [callback] - the final argument should be the callback,
 * called when all functions have completed processing.
 * @returns {Function} - If only the first argument is provided, it will return
 * a function which lets you pass in the arguments as if it were a single
 * function call.
 */
var applyEachSeries = applyEach$1(mapSeries);

/**
 * A specialized version of `_.forEach` for arrays without support for
 * iteratee shorthands.
 *
 * @private
 * @param {Array} [array] The array to iterate over.
 * @param {Function} iteratee The function invoked per iteration.
 * @returns {Array} Returns `array`.
 */
function arrayEach(array, iteratee) {
  var index = -1,
      length = array == null ? 0 : array.length;

  while (++index < length) {
    if (iteratee(array[index], index, array) === false) {
      break;
    }
  }
  return array;
}

/**
 * Creates a base function for methods like `_.forIn` and `_.forOwn`.
 *
 * @private
 * @param {boolean} [fromRight] Specify iterating from right to left.
 * @returns {Function} Returns the new base function.
 */
function createBaseFor(fromRight) {
  return function(object, iteratee, keysFunc) {
    var index = -1,
        iterable = Object(object),
        props = keysFunc(object),
        length = props.length;

    while (length--) {
      var key = props[fromRight ? length : ++index];
      if (iteratee(iterable[key], key, iterable) === false) {
        break;
      }
    }
    return object;
  };
}

/**
 * The base implementation of `baseForOwn` which iterates over `object`
 * properties returned by `keysFunc` and invokes `iteratee` for each property.
 * Iteratee functions may exit iteration early by explicitly returning `false`.
 *
 * @private
 * @param {Object} object The object to iterate over.
 * @param {Function} iteratee The function invoked per iteration.
 * @param {Function} keysFunc The function to get the keys of `object`.
 * @returns {Object} Returns `object`.
 */
var baseFor = createBaseFor();

/**
 * The base implementation of `_.forOwn` without support for iteratee shorthands.
 *
 * @private
 * @param {Object} object The object to iterate over.
 * @param {Function} iteratee The function invoked per iteration.
 * @returns {Object} Returns `object`.
 */
function baseForOwn(object, iteratee) {
  return object && baseFor(object, iteratee, keys);
}

/**
 * The base implementation of `_.findIndex` and `_.findLastIndex` without
 * support for iteratee shorthands.
 *
 * @private
 * @param {Array} array The array to inspect.
 * @param {Function} predicate The function invoked per iteration.
 * @param {number} fromIndex The index to search from.
 * @param {boolean} [fromRight] Specify iterating from right to left.
 * @returns {number} Returns the index of the matched value, else `-1`.
 */
function baseFindIndex(array, predicate, fromIndex, fromRight) {
  var length = array.length,
      index = fromIndex + (fromRight ? 1 : -1);

  while ((fromRight ? index-- : ++index < length)) {
    if (predicate(array[index], index, array)) {
      return index;
    }
  }
  return -1;
}

/**
 * The base implementation of `_.isNaN` without support for number objects.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.
 */
function baseIsNaN(value) {
  return value !== value;
}

/**
 * A specialized version of `_.indexOf` which performs strict equality
 * comparisons of values, i.e. `===`.
 *
 * @private
 * @param {Array} array The array to inspect.
 * @param {*} value The value to search for.
 * @param {number} fromIndex The index to search from.
 * @returns {number} Returns the index of the matched value, else `-1`.
 */
function strictIndexOf(array, value, fromIndex) {
  var index = fromIndex - 1,
      length = array.length;

  while (++index < length) {
    if (array[index] === value) {
      return index;
    }
  }
  return -1;
}

/**
 * The base implementation of `_.indexOf` without `fromIndex` bounds checks.
 *
 * @private
 * @param {Array} array The array to inspect.
 * @param {*} value The value to search for.
 * @param {number} fromIndex The index to search from.
 * @returns {number} Returns the index of the matched value, else `-1`.
 */
function baseIndexOf(array, value, fromIndex) {
  return value === value
    ? strictIndexOf(array, value, fromIndex)
    : baseFindIndex(array, baseIsNaN, fromIndex);
}

/**
 * Determines the best order for running the {@link AsyncFunction}s in `tasks`, based on
 * their requirements. Each function can optionally depend on other functions
 * being completed first, and each function is run as soon as its requirements
 * are satisfied.
 *
 * If any of the {@link AsyncFunction}s pass an error to their callback, the `auto` sequence
 * will stop. Further tasks will not execute (so any other functions depending
 * on it will not run), and the main `callback` is immediately called with the
 * error.
 *
 * {@link AsyncFunction}s also receive an object containing the results of functions which
 * have completed so far as the first argument, if they have dependencies. If a
 * task function has no dependencies, it will only be passed a callback.
 *
 * @name auto
 * @static
 * @memberOf module:ControlFlow
 * @method
 * @category Control Flow
 * @param {Object} tasks - An object. Each of its properties is either a
 * function or an array of requirements, with the {@link AsyncFunction} itself the last item
 * in the array. The object's key of a property serves as the name of the task
 * defined by that property, i.e. can be used when specifying requirements for
 * other tasks. The function receives one or two arguments:
 * * a `results` object, containing the results of the previously executed
 *   functions, only passed if the task has any dependencies,
 * * a `callback(err, result)` function, which must be called when finished,
 *   passing an `error` (which can be `null`) and the result of the function's
 *   execution.
 * @param {number} [concurrency=Infinity] - An optional `integer` for
 * determining the maximum number of tasks that can be run in parallel. By
 * default, as many as possible.
 * @param {Function} [callback] - An optional callback which is called when all
 * the tasks have been completed. It receives the `err` argument if any `tasks`
 * pass an error to their callback. Results are always returned; however, if an
 * error occurs, no further `tasks` will be performed, and the results object
 * will only contain partial results. Invoked with (err, results).
 * @returns undefined
 * @example
 *
 * async.auto({
 *     // this function will just be passed a callback
 *     readData: async.apply(fs.readFile, 'data.txt', 'utf-8'),
 *     showData: ['readData', function(results, cb) {
 *         // results.readData is the file's contents
 *         // ...
 *     }]
 * }, callback);
 *
 * async.auto({
 *     get_data: function(callback) {
 *         console.log('in get_data');
 *         // async code to get some data
 *         callback(null, 'data', 'converted to array');
 *     },
 *     make_folder: function(callback) {
 *         console.log('in make_folder');
 *         // async code to create a directory to store a file in
 *         // this is run at the same time as getting the data
 *         callback(null, 'folder');
 *     },
 *     write_file: ['get_data', 'make_folder', function(results, callback) {
 *         console.log('in write_file', JSON.stringify(results));
 *         // once there is some data and the directory exists,
 *         // write the data to a file in the directory
 *         callback(null, 'filename');
 *     }],
 *     email_link: ['write_file', function(results, callback) {
 *         console.log('in email_link', JSON.stringify(results));
 *         // once the file is written let's email a link to it...
 *         // results.write_file contains the filename returned by write_file.
 *         callback(null, {'file':results.write_file, 'email':'user@example.com'});
 *     }]
 * }, function(err, results) {
 *     console.log('err = ', err);
 *     console.log('results = ', results);
 * });
 */
var auto = function (tasks, concurrency, callback) {
    if (typeof concurrency === 'function') {
        // concurrency is optional, shift the args.
        callback = concurrency;
        concurrency = null;
    }
    callback = once(callback || noop);
    var keys$$1 = keys(tasks);
    var numTasks = keys$$1.length;
    if (!numTasks) {
        return callback(null);
    }
    if (!concurrency) {
        concurrency = numTasks;
    }

    var results = {};
    var runningTasks = 0;
    var hasError = false;

    var listeners = Object.create(null);

    var readyTasks = [];

    // for cycle detection:
    var readyToCheck = []; // tasks that have been identified as reachable
    // without the possibility of returning to an ancestor task
    var uncheckedDependencies = {};

    baseForOwn(tasks, function (task, key) {
        if (!isArray(task)) {
            // no dependencies
            enqueueTask(key, [task]);
            readyToCheck.push(key);
            return;
        }

        var dependencies = task.slice(0, task.length - 1);
        var remainingDependencies = dependencies.length;
        if (remainingDependencies === 0) {
            enqueueTask(key, task);
            readyToCheck.push(key);
            return;
        }
        uncheckedDependencies[key] = remainingDependencies;

        arrayEach(dependencies, function (dependencyName) {
            if (!tasks[dependencyName]) {
                throw new Error('async.auto task `' + key +
                    '` has a non-existent dependency `' +
                    dependencyName + '` in ' +
                    dependencies.join(', '));
            }
            addListener(dependencyName, function () {
                remainingDependencies--;
                if (remainingDependencies === 0) {
                    enqueueTask(key, task);
                }
            });
        });
    });

    checkForDeadlocks();
    processQueue();

    function enqueueTask(key, task) {
        readyTasks.push(function () {
            runTask(key, task);
        });
    }

    function processQueue() {
        if (readyTasks.length === 0 && runningTasks === 0) {
            return callback(null, results);
        }
        while(readyTasks.length && runningTasks < concurrency) {
            var run = readyTasks.shift();
            run();
        }

    }

    function addListener(taskName, fn) {
        var taskListeners = listeners[taskName];
        if (!taskListeners) {
            taskListeners = listeners[taskName] = [];
        }

        taskListeners.push(fn);
    }

    function taskComplete(taskName) {
        var taskListeners = listeners[taskName] || [];
        arrayEach(taskListeners, function (fn) {
            fn();
        });
        processQueue();
    }


    function runTask(key, task) {
        if (hasError) return;

        var taskCallback = onlyOnce(function(err, result) {
            runningTasks--;
            if (arguments.length > 2) {
                result = slice(arguments, 1);
            }
            if (err) {
                var safeResults = {};
                baseForOwn(results, function(val, rkey) {
                    safeResults[rkey] = val;
                });
                safeResults[key] = result;
                hasError = true;
                listeners = Object.create(null);

                callback(err, safeResults);
            } else {
                results[key] = result;
                taskComplete(key);
            }
        });

        runningTasks++;
        var taskFn = wrapAsync(task[task.length - 1]);
        if (task.length > 1) {
            taskFn(results, taskCallback);
        } else {
            taskFn(taskCallback);
        }
    }

    function checkForDeadlocks() {
        // Kahn's algorithm
        // https://en.wikipedia.org/wiki/Topological_sorting#Kahn.27s_algorithm
        // http://connalle.blogspot.com/2013/10/topological-sortingkahn-algorithm.html
        var currentTask;
        var counter = 0;
        while (readyToCheck.length) {
            currentTask = readyToCheck.pop();
            counter++;
            arrayEach(getDependents(currentTask), function (dependent) {
                if (--uncheckedDependencies[dependent] === 0) {
                    readyToCheck.push(dependent);
                }
            });
        }

        if (counter !== numTasks) {
            throw new Error(
                'async.auto cannot execute tasks due to a recursive dependency'
            );
        }
    }

    function getDependents(taskName) {
        var result = [];
        baseForOwn(tasks, function (task, key) {
            if (isArray(task) && baseIndexOf(task, taskName, 0) >= 0) {
                result.push(key);
            }
        });
        return result;
    }
};

/**
 * A specialized version of `_.map` for arrays without support for iteratee
 * shorthands.
 *
 * @private
 * @param {Array} [array] The array to iterate over.
 * @param {Function} iteratee The function invoked per iteration.
 * @returns {Array} Returns the new mapped array.
 */
function arrayMap(array, iteratee) {
  var index = -1,
      length = array == null ? 0 : array.length,
      result = Array(length);

  while (++index < length) {
    result[index] = iteratee(array[index], index, array);
  }
  return result;
}

/** `Object#toString` result references. */
var symbolTag = '[object Symbol]';

/**
 * Checks if `value` is classified as a `Symbol` primitive or object.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.
 * @example
 *
 * _.isSymbol(Symbol.iterator);
 * // => true
 *
 * _.isSymbol('abc');
 * // => false
 */
function isSymbol(value) {
  return typeof value == 'symbol' ||
    (isObjectLike(value) && baseGetTag(value) == symbolTag);
}

/** Used as references for various `Number` constants. */
var INFINITY = 1 / 0;

/** Used to convert symbols to primitives and strings. */
var symbolProto = Symbol$1 ? Symbol$1.prototype : undefined;
var symbolToString = symbolProto ? symbolProto.toString : undefined;

/**
 * The base implementation of `_.toString` which doesn't convert nullish
 * values to empty strings.
 *
 * @private
 * @param {*} value The value to process.
 * @returns {string} Returns the string.
 */
function baseToString(value) {
  // Exit early for strings to avoid a performance hit in some environments.
  if (typeof value == 'string') {
    return value;
  }
  if (isArray(value)) {
    // Recursively convert values (susceptible to call stack limits).
    return arrayMap(value, baseToString) + '';
  }
  if (isSymbol(value)) {
    return symbolToString ? symbolToString.call(value) : '';
  }
  var result = (value + '');
  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;
}

/**
 * The base implementation of `_.slice` without an iteratee call guard.
 *
 * @private
 * @param {Array} array The array to slice.
 * @param {number} [start=0] The start position.
 * @param {number} [end=array.length] The end position.
 * @returns {Array} Returns the slice of `array`.
 */
function baseSlice(array, start, end) {
  var index = -1,
      length = array.length;

  if (start < 0) {
    start = -start > length ? 0 : (length + start);
  }
  end = end > length ? length : end;
  if (end < 0) {
    end += length;
  }
  length = start > end ? 0 : ((end - start) >>> 0);
  start >>>= 0;

  var result = Array(length);
  while (++index < length) {
    result[index] = array[index + start];
  }
  return result;
}

/**
 * Casts `array` to a slice if it's needed.
 *
 * @private
 * @param {Array} array The array to inspect.
 * @param {number} start The start position.
 * @param {number} [end=array.length] The end position.
 * @returns {Array} Returns the cast slice.
 */
function castSlice(array, start, end) {
  var length = array.length;
  end = end === undefined ? length : end;
  return (!start && end >= length) ? array : baseSlice(array, start, end);
}

/**
 * Used by `_.trim` and `_.trimEnd` to get the index of the last string symbol
 * that is not found in the character symbols.
 *
 * @private
 * @param {Array} strSymbols The string symbols to inspect.
 * @param {Array} chrSymbols The character symbols to find.
 * @returns {number} Returns the index of the last unmatched string symbol.
 */
function charsEndIndex(strSymbols, chrSymbols) {
  var index = strSymbols.length;

  while (index-- && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}
  return index;
}

/**
 * Used by `_.trim` and `_.trimStart` to get the index of the first string symbol
 * that is not found in the character symbols.
 *
 * @private
 * @param {Array} strSymbols The string symbols to inspect.
 * @param {Array} chrSymbols The character symbols to find.
 * @returns {number} Returns the index of the first unmatched string symbol.
 */
function charsStartIndex(strSymbols, chrSymbols) {
  var index = -1,
      length = strSymbols.length;

  while (++index < length && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}
  return index;
}

/**
 * Converts an ASCII `string` to an array.
 *
 * @private
 * @param {string} string The string to convert.
 * @returns {Array} Returns the converted array.
 */
function asciiToArray(string) {
  return string.split('');
}

/** Used to compose unicode character classes. */
var rsAstralRange = '\\ud800-\\udfff';
var rsComboMarksRange = '\\u0300-\\u036f';
var reComboHalfMarksRange = '\\ufe20-\\ufe2f';
var rsComboSymbolsRange = '\\u20d0-\\u20ff';
var rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange;
var rsVarRange = '\\ufe0e\\ufe0f';

/** Used to compose unicode capture groups. */
var rsZWJ = '\\u200d';

/** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */
var reHasUnicode = RegExp('[' + rsZWJ + rsAstralRange  + rsComboRange + rsVarRange + ']');

/**
 * Checks if `string` contains Unicode symbols.
 *
 * @private
 * @param {string} string The string to inspect.
 * @returns {boolean} Returns `true` if a symbol is found, else `false`.
 */
function hasUnicode(string) {
  return reHasUnicode.test(string);
}

/** Used to compose unicode character classes. */
var rsAstralRange$1 = '\\ud800-\\udfff';
var rsComboMarksRange$1 = '\\u0300-\\u036f';
var reComboHalfMarksRange$1 = '\\ufe20-\\ufe2f';
var rsComboSymbolsRange$1 = '\\u20d0-\\u20ff';
var rsComboRange$1 = rsComboMarksRange$1 + reComboHalfMarksRange$1 + rsComboSymbolsRange$1;
var rsVarRange$1 = '\\ufe0e\\ufe0f';

/** Used to compose unicode capture groups. */
var rsAstral = '[' + rsAstralRange$1 + ']';
var rsCombo = '[' + rsComboRange$1 + ']';
var rsFitz = '\\ud83c[\\udffb-\\udfff]';
var rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')';
var rsNonAstral = '[^' + rsAstralRange$1 + ']';
var rsRegional = '(?:\\ud83c[\\udde6-\\uddff]){2}';
var rsSurrPair = '[\\ud800-\\udbff][\\udc00-\\udfff]';
var rsZWJ$1 = '\\u200d';

/** Used to compose unicode regexes. */
var reOptMod = rsModifier + '?';
var rsOptVar = '[' + rsVarRange$1 + ']?';
var rsOptJoin = '(?:' + rsZWJ$1 + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*';
var rsSeq = rsOptVar + reOptMod + rsOptJoin;
var rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';

/** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */
var reUnicode = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');

/**
 * Converts a Unicode `string` to an array.
 *
 * @private
 * @param {string} string The string to convert.
 * @returns {Array} Returns the converted array.
 */
function unicodeToArray(string) {
  return string.match(reUnicode) || [];
}

/**
 * Converts `string` to an array.
 *
 * @private
 * @param {string} string The string to convert.
 * @returns {Array} Returns the converted array.
 */
function stringToArray(string) {
  return hasUnicode(string)
    ? unicodeToArray(string)
    : asciiToArray(string);
}

/**
 * Converts `value` to a string. An empty string is returned for `null`
 * and `undefined` values. The sign of `-0` is preserved.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to convert.
 * @returns {string} Returns the converted string.
 * @example
 *
 * _.toString(null);
 * // => ''
 *
 * _.toString(-0);
 * // => '-0'
 *
 * _.toString([1, 2, 3]);
 * // => '1,2,3'
 */
function toString(value) {
  return value == null ? '' : baseToString(value);
}

/** Used to match leading and trailing whitespace. */
var reTrim = /^\s+|\s+$/g;

/**
 * Removes leading and trailing whitespace or specified characters from `string`.
 *
 * @static
 * @memberOf _
 * @since 3.0.0
 * @category String
 * @param {string} [string=''] The string to trim.
 * @param {string} [chars=whitespace] The characters to trim.
 * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
 * @returns {string} Returns the trimmed string.
 * @example
 *
 * _.trim('  abc  ');
 * // => 'abc'
 *
 * _.trim('-_-abc-_-', '_-');
 * // => 'abc'
 *
 * _.map(['  foo  ', '  bar  '], _.trim);
 * // => ['foo', 'bar']
 */
function trim(string, chars, guard) {
  string = toString(string);
  if (string && (guard || chars === undefined)) {
    return string.replace(reTrim, '');
  }
  if (!string || !(chars = baseToString(chars))) {
    return string;
  }
  var strSymbols = stringToArray(string),
      chrSymbols = stringToArray(chars),
      start = charsStartIndex(strSymbols, chrSymbols),
      end = charsEndIndex(strSymbols, chrSymbols) + 1;

  return castSlice(strSymbols, start, end).join('');
}

var FN_ARGS = /^(?:async\s+)?(function)?\s*[^\(]*\(\s*([^\)]*)\)/m;
var FN_ARG_SPLIT = /,/;
var FN_ARG = /(=.+)?(\s*)$/;
var STRIP_COMMENTS = /((\/\/.*$)|(\/\*[\s\S]*?\*\/))/mg;

function parseParams(func) {
    func = func.toString().replace(STRIP_COMMENTS, '');
    func = func.match(FN_ARGS)[2].replace(' ', '');
    func = func ? func.split(FN_ARG_SPLIT) : [];
    func = func.map(function (arg){
        return trim(arg.replace(FN_ARG, ''));
    });
    return func;
}

/**
 * A dependency-injected version of the [async.auto]{@link module:ControlFlow.auto} function. Dependent
 * tasks are specified as parameters to the function, after the usual callback
 * parameter, with the parameter names matching the names of the tasks it
 * depends on. This can provide even more readable task graphs which can be
 * easier to maintain.
 *
 * If a final callback is specified, the task results are similarly injected,
 * specified as named parameters after the initial error parameter.
 *
 * The autoInject function is purely syntactic sugar and its semantics are
 * otherwise equivalent to [async.auto]{@link module:ControlFlow.auto}.
 *
 * @name autoInject
 * @static
 * @memberOf module:ControlFlow
 * @method
 * @see [async.auto]{@link module:ControlFlow.auto}
 * @category Control Flow
 * @param {Object} tasks - An object, each of whose properties is an {@link AsyncFunction} of
 * the form 'func([dependencies...], callback). The object's key of a property
 * serves as the name of the task defined by that property, i.e. can be used
 * when specifying requirements for other tasks.
 * * The `callback` parameter is a `callback(err, result)` which must be called
 *   when finished, passing an `error` (which can be `null`) and the result of
 *   the function's execution. The remaining parameters name other tasks on
 *   which the task is dependent, and the results from those tasks are the
 *   arguments of those parameters.
 * @param {Function} [callback] - An optional callback which is called when all
 * the tasks have been completed. It receives the `err` argument if any `tasks`
 * pass an error to their callback, and a `results` object with any completed
 * task results, similar to `auto`.
 * @example
 *
 * //  The example from `auto` can be rewritten as follows:
 * async.autoInject({
 *     get_data: function(callback) {
 *         // async code to get some data
 *         callback(null, 'data', 'converted to array');
 *     },
 *     make_folder: function(callback) {
 *         // async code to create a directory to store a file in
 *         // this is run at the same time as getting the data
 *         callback(null, 'folder');
 *     },
 *     write_file: function(get_data, make_folder, callback) {
 *         // once there is some data and the directory exists,
 *         // write the data to a file in the directory
 *         callback(null, 'filename');
 *     },
 *     email_link: function(write_file, callback) {
 *         // once the file is written let's email a link to it...
 *         // write_file contains the filename returned by write_file.
 *         callback(null, {'file':write_file, 'email':'user@example.com'});
 *     }
 * }, function(err, results) {
 *     console.log('err = ', err);
 *     console.log('email_link = ', results.email_link);
 * });
 *
 * // If you are using a JS minifier that mangles parameter names, `autoInject`
 * // will not work with plain functions, since the parameter names will be
 * // collapsed to a single letter identifier.  To work around this, you can
 * // explicitly specify the names of the parameters your task function needs
 * // in an array, similar to Angular.js dependency injection.
 *
 * // This still has an advantage over plain `auto`, since the results a task
 * // depends on are still spread into arguments.
 * async.autoInject({
 *     //...
 *     write_file: ['get_data', 'make_folder', function(get_data, make_folder, callback) {
 *         callback(null, 'filename');
 *     }],
 *     email_link: ['write_file', function(write_file, callback) {
 *         callback(null, {'file':write_file, 'email':'user@example.com'});
 *     }]
 *     //...
 * }, function(err, results) {
 *     console.log('err = ', err);
 *     console.log('email_link = ', results.email_link);
 * });
 */
function autoInject(tasks, callback) {
    var newTasks = {};

    baseForOwn(tasks, function (taskFn, key) {
        var params;
        var fnIsAsync = isAsync(taskFn);
        var hasNoDeps =
            (!fnIsAsync && taskFn.length === 1) ||
            (fnIsAsync && taskFn.length === 0);

        if (isArray(taskFn)) {
            params = taskFn.slice(0, -1);
            taskFn = taskFn[taskFn.length - 1];

            newTasks[key] = params.concat(params.length > 0 ? newTask : taskFn);
        } else if (hasNoDeps) {
            // no dependencies, use the function as-is
            newTasks[key] = taskFn;
        } else {
            params = parseParams(taskFn);
            if (taskFn.length === 0 && !fnIsAsync && params.length === 0) {
                throw new Error("autoInject task functions require explicit parameters.");
            }

            // remove callback param
            if (!fnIsAsync) params.pop();

            newTasks[key] = params.concat(newTask);
        }

        function newTask(results, taskCb) {
            var newArgs = arrayMap(params, function (name) {
                return results[name];
            });
            newArgs.push(taskCb);
            wrapAsync(taskFn).apply(null, newArgs);
        }
    });

    auto(newTasks, callback);
}

// Simple doubly linked list (https://en.wikipedia.org/wiki/Doubly_linked_list) implementation
// used for queues. This implementation assumes that the node provided by the user can be modified
// to adjust the next and last properties. We implement only the minimal functionality
// for queue support.
function DLL() {
    this.head = this.tail = null;
    this.length = 0;
}

function setInitial(dll, node) {
    dll.length = 1;
    dll.head = dll.tail = node;
}

DLL.prototype.removeLink = function(node) {
    if (node.prev) node.prev.next = node.next;
    else this.head = node.next;
    if (node.next) node.next.prev = node.prev;
    else this.tail = node.prev;

    node.prev = node.next = null;
    this.length -= 1;
    return node;
};

DLL.prototype.empty = function () {
    while(this.head) this.shift();
    return this;
};

DLL.prototype.insertAfter = function(node, newNode) {
    newNode.prev = node;
    newNode.next = node.next;
    if (node.next) node.next.prev = newNode;
    else this.tail = newNode;
    node.next = newNode;
    this.length += 1;
};

DLL.prototype.insertBefore = function(node, newNode) {
    newNode.prev = node.prev;
    newNode.next = node;
    if (node.prev) node.prev.next = newNode;
    else this.head = newNode;
    node.prev = newNode;
    this.length += 1;
};

DLL.prototype.unshift = function(node) {
    if (this.head) this.insertBefore(this.head, node);
    else setInitial(this, node);
};

DLL.prototype.push = function(node) {
    if (this.tail) this.insertAfter(this.tail, node);
    else setInitial(this, node);
};

DLL.prototype.shift = function() {
    return this.head && this.removeLink(this.head);
};

DLL.prototype.pop = function() {
    return this.tail && this.removeLink(this.tail);
};

DLL.prototype.toArray = function () {
    var arr = Array(this.length);
    var curr = this.head;
    for(var idx = 0; idx < this.length; idx++) {
        arr[idx] = curr.data;
        curr = curr.next;
    }
    return arr;
};

DLL.prototype.remove = function (testFn) {
    var curr = this.head;
    while(!!curr) {
        var next = curr.next;
        if (testFn(curr)) {
            this.removeLink(curr);
        }
        curr = next;
    }
    return this;
};

function queue(worker, concurrency, payload) {
    if (concurrency == null) {
        concurrency = 1;
    }
    else if(concurrency === 0) {
        throw new Error('Concurrency must not be zero');
    }

    var _worker = wrapAsync(worker);
    var numRunning = 0;
    var workersList = [];

    var processingScheduled = false;
    function _insert(data, insertAtFront, callback) {
        if (callback != null && typeof callback !== 'function') {
            throw new Error('task callback must be a function');
        }
        q.started = true;
        if (!isArray(data)) {
            data = [data];
        }
        if (data.length === 0 && q.idle()) {
            // call drain immediately if there are no tasks
            return setImmediate$1(function() {
                q.drain();
            });
        }

        for (var i = 0, l = data.length; i < l; i++) {
            var item = {
                data: data[i],
                callback: callback || noop
            };

            if (insertAtFront) {
                q._tasks.unshift(item);
            } else {
                q._tasks.push(item);
            }
        }

        if (!processingScheduled) {
            processingScheduled = true;
            setImmediate$1(function() {
                processingScheduled = false;
                q.process();
            });
        }
    }

    function _next(tasks) {
        return function(err){
            numRunning -= 1;

            for (var i = 0, l = tasks.length; i < l; i++) {
                var task = tasks[i];

                var index = baseIndexOf(workersList, task, 0);
                if (index === 0) {
                    workersList.shift();
                } else if (index > 0) {
                    workersList.splice(index, 1);
                }

                task.callback.apply(task, arguments);

                if (err != null) {
                    q.error(err, task.data);
                }
            }

            if (numRunning <= (q.concurrency - q.buffer) ) {
                q.unsaturated();
            }

            if (q.idle()) {
                q.drain();
            }
            q.process();
        };
    }

    var isProcessing = false;
    var q = {
        _tasks: new DLL(),
        concurrency: concurrency,
        payload: payload,
        saturated: noop,
        unsaturated:noop,
        buffer: concurrency / 4,
        empty: noop,
        drain: noop,
        error: noop,
        started: false,
        paused: false,
        push: function (data, callback) {
            _insert(data, false, callback);
        },
        kill: function () {
            q.drain = noop;
            q._tasks.empty();
        },
        unshift: function (data, callback) {
            _insert(data, true, callback);
        },
        remove: function (testFn) {
            q._tasks.remove(testFn);
        },
        process: function () {
            // Avoid trying to start too many processing operations. This can occur
            // when callbacks resolve synchronously (#1267).
            if (isProcessing) {
                return;
            }
            isProcessing = true;
            while(!q.paused && numRunning < q.concurrency && q._tasks.length){
                var tasks = [], data = [];
                var l = q._tasks.length;
                if (q.payload) l = Math.min(l, q.payload);
                for (var i = 0; i < l; i++) {
                    var node = q._tasks.shift();
                    tasks.push(node);
                    workersList.push(node);
                    data.push(node.data);
                }

                numRunning += 1;

                if (q._tasks.length === 0) {
                    q.empty();
                }

                if (numRunning === q.concurrency) {
                    q.saturated();
                }

                var cb = onlyOnce(_next(tasks));
                _worker(data, cb);
            }
            isProcessing = false;
        },
        length: function () {
            return q._tasks.length;
        },
        running: function () {
            return numRunning;
        },
        workersList: function () {
            return workersList;
        },
        idle: function() {
            return q._tasks.length + numRunning === 0;
        },
        pause: function () {
            q.paused = true;
        },
        resume: function () {
            if (q.paused === false) { return; }
            q.paused = false;
            setImmediate$1(q.process);
        }
    };
    return q;
}

/**
 * A cargo of tasks for the worker function to complete. Cargo inherits all of
 * the same methods and event callbacks as [`queue`]{@link module:ControlFlow.queue}.
 * @typedef {Object} CargoObject
 * @memberOf module:ControlFlow
 * @property {Function} length - A function returning the number of items
 * waiting to be processed. Invoke like `cargo.length()`.
 * @property {number} payload - An `integer` for determining how many tasks
 * should be process per round. This property can be changed after a `cargo` is
 * created to alter the payload on-the-fly.
 * @property {Function} push - Adds `task` to the `queue`. The callback is
 * called once the `worker` has finished processing the task. Instead of a
 * single task, an array of `tasks` can be submitted. The respective callback is
 * used for every task in the list. Invoke like `cargo.push(task, [callback])`.
 * @property {Function} saturated - A callback that is called when the
 * `queue.length()` hits the concurrency and further tasks will be queued.
 * @property {Function} empty - A callback that is called when the last item
 * from the `queue` is given to a `worker`.
 * @property {Function} drain - A callback that is called when the last item
 * from the `queue` has returned from the `worker`.
 * @property {Function} idle - a function returning false if there are items
 * waiting or being processed, or true if not. Invoke like `cargo.idle()`.
 * @property {Function} pause - a function that pauses the processing of tasks
 * until `resume()` is called. Invoke like `cargo.pause()`.
 * @property {Function} resume - a function that resumes the processing of
 * queued tasks when the queue is paused. Invoke like `cargo.resume()`.
 * @property {Function} kill - a function that removes the `drain` callback and
 * empties remaining tasks from the queue forcing it to go idle. Invoke like `cargo.kill()`.
 */

/**
 * Creates a `cargo` object with the specified payload. Tasks added to the
 * cargo will be processed altogether (up to the `payload` limit). If the
 * `worker` is in progress, the task is queued until it becomes available. Once
 * the `worker` has completed some tasks, each callback of those tasks is
 * called. Check out [these](https://camo.githubusercontent.com/6bbd36f4cf5b35a0f11a96dcd2e97711ffc2fb37/68747470733a2f2f662e636c6f75642e6769746875622e636f6d2f6173736574732f313637363837312f36383130382f62626330636662302d356632392d313165322d393734662d3333393763363464633835382e676966) [animations](https://camo.githubusercontent.com/f4810e00e1c5f5f8addbe3e9f49064fd5d102699/68747470733a2f2f662e636c6f75642e6769746875622e636f6d2f6173736574732f313637363837312f36383130312f38346339323036362d356632392d313165322d383134662d3964336430323431336266642e676966)
 * for how `cargo` and `queue` work.
 *
 * While [`queue`]{@link module:ControlFlow.queue} passes only one task to one of a group of workers
 * at a time, cargo passes an array of tasks to a single worker, repeating
 * when the worker is finished.
 *
 * @name cargo
 * @static
 * @memberOf module:ControlFlow
 * @method
 * @see [async.queue]{@link module:ControlFlow.queue}
 * @category Control Flow
 * @param {AsyncFunction} worker - An asynchronous function for processing an array
 * of queued tasks. Invoked with `(tasks, callback)`.
 * @param {number} [payload=Infinity] - An optional `integer` for determining
 * how many tasks should be processed per round; if omitted, the default is
 * unlimited.
 * @returns {module:ControlFlow.CargoObject} A cargo object to manage the tasks. Callbacks can
 * attached as certain properties to listen for specific events during the
 * lifecycle of the cargo and inner queue.
 * @example
 *
 * // create a cargo object with payload 2
 * var cargo = async.cargo(function(tasks, callback) {
 *     for (var i=0; i<tasks.length; i++) {
 *         console.log('hello ' + tasks[i].name);
 *     }
 *     callback();
 * }, 2);
 *
 * // add some items
 * cargo.push({name: 'foo'}, function(err) {
 *     console.log('finished processing foo');
 * });
 * cargo.push({name: 'bar'}, function(err) {
 *     console.log('finished processing bar');
 * });
 * cargo.push({name: 'baz'}, function(err) {
 *     console.log('finished processing baz');
 * });
 */
function cargo(worker, payload) {
    return queue(worker, 1, payload);
}

/**
 * The same as [`eachOf`]{@link module:Collections.eachOf} but runs only a single async operation at a time.
 *
 * @name eachOfSeries
 * @static
 * @memberOf module:Collections
 * @method
 * @see [async.eachOf]{@link module:Collections.eachOf}
 * @alias forEachOfSeries
 * @category Collection
 * @param {Array|Iterable|Object} coll - A collection to iterate over.
 * @param {AsyncFunction} iteratee - An async function to apply to each item in
 * `coll`.
 * Invoked with (item, key, callback).
 * @param {Function} [callback] - A callback which is called when all `iteratee`
 * functions have finished, or an error occurs. Invoked with (err).
 */
var eachOfSeries = doLimit(eachOfLimit, 1);

/**
 * Reduces `coll` into a single value using an async `iteratee` to return each
 * successive step. `memo` is the initial state of the reduction. This function
 * only operates in series.
 *
 * For performance reasons, it may make sense to split a call to this function
 * into a parallel map, and then use the normal `Array.prototype.reduce` on the
 * results. This function is for situations where each step in the reduction
 * needs to be async; if you can get the data before reducing it, then it's
 * probably a good idea to do so.
 *
 * @name reduce
 * @static
 * @memberOf module:Collections
 * @method
 * @alias inject
 * @alias foldl
 * @category Collection
 * @param {Array|Iterable|Object} coll - A collection to iterate over.
 * @param {*} memo - The initial state of the reduction.
 * @param {AsyncFunction} iteratee - A function applied to each item in the
 * array to produce the next step in the reduction.
 * The `iteratee` should complete with the next state of the reduction.
 * If the iteratee complete with an error, the reduction is stopped and the
 * main `callback` is immediately called with the error.
 * Invoked with (memo, item, callback).
 * @param {Function} [callback] - A callback which is called after all the
 * `iteratee` functions have finished. Result is the reduced value. Invoked with
 * (err, result).
 * @example
 *
 * async.reduce([1,2,3], 0, function(memo, item, callback) {
 *     // pointless async:
 *     process.nextTick(function() {
 *         callback(null, memo + item)
 *     });
 * }, function(err, result) {
 *     // result is now equal to the last value of memo, which is 6
 * });
 */
function reduce(coll, memo, iteratee, callback) {
    callback = once(callback || noop);
    var _iteratee = wrapAsync(iteratee);
    eachOfSeries(coll, function(x, i, callback) {
        _iteratee(memo, x, function(err, v) {
            memo = v;
            callback(err);
        });
    }, function(err) {
        callback(err, memo);
    });
}

/**
 * Version of the compose function that is more natural to read. Each function
 * consumes the return value of the previous function. It is the equivalent of
 * [compose]{@link module:ControlFlow.compose} with the arguments reversed.
 *
 * Each function is executed with the `this` binding of the composed function.
 *
 * @name seq
 * @static
 * @memberOf module:ControlFlow
 * @method
 * @see [async.compose]{@link module:ControlFlow.compose}
 * @category Control Flow
 * @param {...AsyncFunction} functions - the asynchronous functions to compose
 * @returns {Function} a function that composes the `functions` in order
 * @example
 *
 * // Requires lodash (or underscore), express3 and dresende's orm2.
 * // Part of an app, that fetches cats of the logged user.
 * // This example uses `seq` function to avoid overnesting and error
 * // handling clutter.
 * app.get('/cats', function(request, response) {
 *     var User = request.models.User;
 *     async.seq(
 *         _.bind(User.get, User),  // 'User.get' has signature (id, callback(err, data))
 *         function(user, fn) {
 *             user.getCats(fn);      // 'getCats' has signature (callback(err, data))
 *         }
 *     )(req.session.user_id, function (err, cats) {
 *         if (err) {
 *             console.error(err);
 *             response.json({ status: 'error', message: err.message });
 *         } else {
 *             response.json({ status: 'ok', message: 'Cats found', data: cats });
 *         }
 *     });
 * });
 */
function seq(/*...functions*/) {
    var _functions = arrayMap(arguments, wrapAsync);
    return function(/*...args*/) {
        var args = slice(arguments);
        var that = this;

        var cb = args[args.length - 1];
        if (typeof cb == 'function') {
            args.pop();
        } else {
            cb = noop;
        }

        reduce(_functions, args, function(newargs, fn, cb) {
            fn.apply(that, newargs.concat(function(err/*, ...nextargs*/) {
                var nextargs = slice(arguments, 1);
                cb(err, nextargs);
            }));
        },
        function(err, results) {
            cb.apply(that, [err].concat(results));
        });
    };
}

/**
 * Creates a function which is a composition of the passed asynchronous
 * functions. Each function consumes the return value of the function that
 * follows. Composing functions `f()`, `g()`, and `h()` would produce the result
 * of `f(g(h()))`, only this version uses callbacks to obtain the return values.
 *
 * Each function is executed with the `this` binding of the composed function.
 *
 * @name compose
 * @static
 * @memberOf module:ControlFlow
 * @method
 * @category Control Flow
 * @param {...AsyncFunction} functions - the asynchronous functions to compose
 * @returns {Function} an asynchronous function that is the composed
 * asynchronous `functions`
 * @example
 *
 * function add1(n, callback) {
 *     setTimeout(function () {
 *         callback(null, n + 1);
 *     }, 10);
 * }
 *
 * function mul3(n, callback) {
 *     setTimeout(function () {
 *         callback(null, n * 3);
 *     }, 10);
 * }
 *
 * var add1mul3 = async.compose(mul3, add1);
 * add1mul3(4, function (err, result) {
 *     // result now equals 15
 * });
 */
var compose = function(/*...args*/) {
    return seq.apply(null, slice(arguments).reverse());
};

var _concat = Array.prototype.concat;

/**
 * The same as [`concat`]{@link module:Collections.concat} but runs a maximum of `limit` async operations at a time.
 *
 * @name concatLimit
 * @static
 * @memberOf module:Collections
 * @method
 * @see [async.concat]{@link module:Collections.concat}
 * @category Collection
 * @param {Array|Iterable|Object} coll - A collection to iterate over.
 * @param {number} limit - The maximum number of async operations at a time.
 * @param {AsyncFunction} iteratee - A function to apply to each item in `coll`,
 * which should use an array as its result. Invoked with (item, callback).
 * @param {Function} [callback] - A callback which is called after all the
 * `iteratee` functions have finished, or an error occurs. Results is an array
 * containing the concatenated results of the `iteratee` function. Invoked with
 * (err, results).
 */
var concatLimit = function(coll, limit, iteratee, callback) {
    callback = callback || noop;
    var _iteratee = wrapAsync(iteratee);
    mapLimit(coll, limit, function(val, callback) {
        _iteratee(val, function(err /*, ...args*/) {
            if (err) return callback(err);
            return callback(null, slice(arguments, 1));
        });
    }, function(err, mapResults) {
        var result = [];
        for (var i = 0; i < mapResults.length; i++) {
            if (mapResults[i]) {
                result = _concat.apply(result, mapResults[i]);
            }
        }

        return callback(err, result);
    });
};

/**
 * Applies `iteratee` to each item in `coll`, concatenating the results. Returns
 * the concatenated list. The `iteratee`s are called in parallel, and the
 * results are concatenated as they return. There is no guarantee that the
 * results array will be returned in the original order of `coll` passed to the
 * `iteratee` function.
 *
 * @name concat
 * @static
 * @memberOf module:Collections
 * @method
 * @category Collection
 * @param {Array|Iterable|Object} coll - A collection to iterate over.
 * @param {AsyncFunction} iteratee - A function to apply to each item in `coll`,
 * which should use an array as its result. Invoked with (item, callback).
 * @param {Function} [callback(err)] - A callback which is called after all the
 * `iteratee` functions have finished, or an error occurs. Results is an array
 * containing the concatenated results of the `iteratee` function. Invoked with
 * (err, results).
 * @example
 *
 * async.concat(['dir1','dir2','dir3'], fs.readdir, function(err, files) {
 *     // files is now a list of filenames that exist in the 3 directories
 * });
 */
var concat = doLimit(concatLimit, Infinity);

/**
 * The same as [`concat`]{@link module:Collections.concat} but runs only a single async operation at a time.
 *
 * @name concatSeries
 * @static
 * @memberOf module:Collections
 * @method
 * @see [async.concat]{@link module:Collections.concat}
 * @category Collection
 * @param {Array|Iterable|Object} coll - A collection to iterate over.
 * @param {AsyncFunction} iteratee - A function to apply to each item in `coll`.
 * The iteratee should complete with an array an array of results.
 * Invoked with (item, callback).
 * @param {Function} [callback(err)] - A callback which is called after all the
 * `iteratee` functions have finished, or an error occurs. Results is an array
 * containing the concatenated results of the `iteratee` function. Invoked with
 * (err, results).
 */
var concatSeries = doLimit(concatLimit, 1);

/**
 * Returns a function that when called, calls-back with the values provided.
 * Useful as the first function in a [`waterfall`]{@link module:ControlFlow.waterfall}, or for plugging values in to
 * [`auto`]{@link module:ControlFlow.auto}.
 *
 * @name constant
 * @static
 * @memberOf module:Utils
 * @method
 * @category Util
 * @param {...*} arguments... - Any number of arguments to automatically invoke
 * callback with.
 * @returns {AsyncFunction} Returns a function that when invoked, automatically
 * invokes the callback with the previous given arguments.
 * @example
 *
 * async.waterfall([
 *     async.constant(42),
 *     function (value, next) {
 *         // value === 42
 *     },
 *     //...
 * ], callback);
 *
 * async.waterfall([
 *     async.constant(filename, "utf8"),
 *     fs.readFile,
 *     function (fileData, next) {
 *         //...
 *     }
 *     //...
 * ], callback);
 *
 * async.auto({
 *     hostname: async.constant("https://server.net/"),
 *     port: findFreePort,
 *     launchServer: ["hostname", "port", function (options, cb) {
 *         startServer(options, cb);
 *     }],
 *     //...
 * }, callback);
 */
var constant = function(/*...values*/) {
    var values = slice(arguments);
    var args = [null].concat(values);
    return function (/*...ignoredArgs, callback*/) {
        var callback = arguments[arguments.length - 1];
        return callback.apply(this, args);
    };
};

/**
 * This method returns the first argument it receives.
 *
 * @static
 * @since 0.1.0
 * @memberOf _
 * @category Util
 * @param {*} value Any value.
 * @returns {*} Returns `value`.
 * @example
 *
 * var object = { 'a': 1 };
 *
 * console.log(_.identity(object) === object);
 * // => true
 */
function identity(value) {
  return value;
}

function _createTester(check, getResult) {
    return function(eachfn, arr, iteratee, cb) {
        cb = cb || noop;
        var testPassed = false;
        var testResult;
        eachfn(arr, function(value, _, callback) {
            iteratee(value, function(err, result) {
                if (err) {
                    callback(err);
                } else if (check(result) && !testResult) {
                    testPassed = true;
                    testResult = getResult(true, value);
                    callback(null, breakLoop);
                } else {
                    callback();
                }
            });
        }, function(err) {
            if (err) {
                cb(err);
            } else {
                cb(null, testPassed ? testResult : getResult(false));
            }
        });
    };
}

function _findGetResult(v, x) {
    return x;
}

/**
 * Returns the first value in `coll` that passes an async truth test. The
 * `iteratee` is applied in parallel, meaning the first iteratee to return
 * `true` will fire the detect `callback` with that result. That means the
 * result might not be the first item in the original `coll` (in terms of order)
 * that passes the test.

 * If order within the original `coll` is important, then look at
 * [`detectSeries`]{@link module:Collections.detectSeries}.
 *
 * @name detect
 * @static
 * @memberOf module:Collections
 * @method
 * @alias find
 * @category Collections
 * @param {Array|Iterable|Object} coll - A collection to iterate over.
 * @param {AsyncFunction} iteratee - A truth test to apply to each item in `coll`.
 * The iteratee must complete with a boolean value as its result.
 * Invoked with (item, callback).
 * @param {Function} [callback] - A callback which is called as soon as any
 * iteratee returns `true`, or after all the `iteratee` functions have finished.
 * Result will be the first item in the array that passes the truth test
 * (iteratee) or the value `undefined` if none passed. Invoked with
 * (err, result).
 * @example
 *
 * async.detect(['file1','file2','file3'], function(filePath, callback) {
 *     fs.access(filePath, function(err) {
 *         callback(null, !err)
 *     });
 * }, function(err, result) {
 *     // result now equals the first file in the list that exists
 * });
 */
var detect = doParallel(_createTester(identity, _findGetResult));

/**
 * The same as [`detect`]{@link module:Collections.detect} but runs a maximum of `limit` async operations at a
 * time.
 *
 * @name detectLimit
 * @static
 * @memberOf module:Collections
 * @method
 * @see [async.detect]{@link module:Collections.detect}
 * @alias findLimit
 * @category Collections
 * @param {Array|Iterable|Object} coll - A collection to iterate over.
 * @param {number} limit - The maximum number of async operations at a time.
 * @param {AsyncFunction} iteratee - A truth test to apply to each item in `coll`.
 * The iteratee must complete with a boolean value as its result.
 * Invoked with (item, callback).
 * @param {Function} [callback] - A callback which is called as soon as any
 * iteratee returns `true`, or after all the `iteratee` functions have finished.
 * Result will be the first item in the array that passes the truth test
 * (iteratee) or the value `undefined` if none passed. Invoked with
 * (err, result).
 */
var detectLimit = doParallelLimit(_createTester(identity, _findGetResult));

/**
 * The same as [`detect`]{@link module:Collections.detect} but runs only a single async operation at a time.
 *
 * @name detectSeries
 * @static
 * @memberOf module:Collections
 * @method
 * @see [async.detect]{@link module:Collections.detect}
 * @alias findSeries
 * @category Collections
 * @param {Array|Iterable|Object} coll - A collection to iterate over.
 * @param {AsyncFunction} iteratee - A truth test to apply to each item in `coll`.
 * The iteratee must complete with a boolean value as its result.
 * Invoked with (item, callback).
 * @param {Function} [callback] - A callback which is called as soon as any
 * iteratee returns `true`, or after all the `iteratee` functions have finished.
 * Result will be the first item in the array that passes the truth test
 * (iteratee) or the value `undefined` if none passed. Invoked with
 * (err, result).
 */
var detectSeries = doLimit(detectLimit, 1);

function consoleFunc(name) {
    return function (fn/*, ...args*/) {
        var args = slice(arguments, 1);
        args.push(function (err/*, ...args*/) {
            var args = slice(arguments, 1);
            if (typeof console === 'object') {
                if (err) {
                    if (console.error) {
                        console.error(err);
                    }
                } else if (console[name]) {
                    arrayEach(args, function (x) {
                        console[name](x);
                    });
                }
            }
        });
        wrapAsync(fn).apply(null, args);
    };
}

/**
 * Logs the result of an [`async` function]{@link AsyncFunction} to the
 * `console` using `console.dir` to display the properties of the resulting object.
 * Only works in Node.js or in browsers that support `console.dir` and
 * `console.error` (such as FF and Chrome).
 * If multiple arguments are returned from the async function,
 * `console.dir` is called on each argument in order.
 *
 * @name dir
 * @static
 * @memberOf module:Utils
 * @method
 * @category Util
 * @param {AsyncFunction} function - The function you want to eventually apply
 * all arguments to.
 * @param {...*} arguments... - Any number of arguments to apply to the function.
 * @example
 *
 * // in a module
 * var hello = function(name, callback) {
 *     setTimeout(function() {
 *         callback(null, {hello: name});
 *     }, 1000);
 * };
 *
 * // in the node repl
 * node> async.dir(hello, 'world');
 * {hello: 'world'}
 */
var dir = consoleFunc('dir');

/**
 * The post-check version of [`during`]{@link module:ControlFlow.during}. To reflect the difference in
 * the order of operations, the arguments `test` and `fn` are switched.
 *
 * Also a version of [`doWhilst`]{@link module:ControlFlow.doWhilst} with asynchronous `test` function.
 * @name doDuring
 * @static
 * @memberOf module:ControlFlow
 * @method
 * @see [async.during]{@link module:ControlFlow.during}
 * @category Control Flow
 * @param {AsyncFunction} fn - An async function which is called each time
 * `test` passes. Invoked with (callback).
 * @param {AsyncFunction} test - asynchronous truth test to perform before each
 * execution of `fn`. Invoked with (...args, callback), where `...args` are the
 * non-error args from the previous callback of `fn`.
 * @param {Function} [callback] - A callback which is called after the test
 * function has failed and repeated execution of `fn` has stopped. `callback`
 * will be passed an error if one occurred, otherwise `null`.
 */
function doDuring(fn, test, callback) {
    callback = onlyOnce(callback || noop);
    var _fn = wrapAsync(fn);
    var _test = wrapAsync(test);

    function next(err/*, ...args*/) {
        if (err) return callback(err);
        var args = slice(arguments, 1);
        args.push(check);
        _test.apply(this, args);
    }

    function check(err, truth) {
        if (err) return callback(err);
        if (!truth) return callback(null);
        _fn(next);
    }

    check(null, true);

}

/**
 * The post-check version of [`whilst`]{@link module:ControlFlow.whilst}. To reflect the difference in
 * the order of operations, the arguments `test` and `iteratee` are switched.
 *
 * `doWhilst` is to `whilst` as `do while` is to `while` in plain JavaScript.
 *
 * @name doWhilst
 * @static
 * @memberOf module:ControlFlow
 * @method
 * @see [async.whilst]{@link module:ControlFlow.whilst}
 * @category Control Flow
 * @param {AsyncFunction} iteratee - A function which is called each time `test`
 * passes. Invoked with (callback).
 * @param {Function} test - synchronous truth test to perform after each
 * execution of `iteratee`. Invoked with any non-error callback results of
 * `iteratee`.
 * @param {Function} [callback] - A callback which is called after the test
 * function has failed and repeated execution of `iteratee` has stopped.
 * `callback` will be passed an error and any arguments passed to the final
 * `iteratee`'s callback. Invoked with (err, [results]);
 */
function doWhilst(iteratee, test, callback) {
    callback = onlyOnce(callback || noop);
    var _iteratee = wrapAsync(iteratee);
    var next = function(err/*, ...args*/) {
        if (err) return callback(err);
        var args = slice(arguments, 1);
        if (test.apply(this, args)) return _iteratee(next);
        callback.apply(null, [null].concat(args));
    };
    _iteratee(next);
}

/**
 * Like ['doWhilst']{@link module:ControlFlow.doWhilst}, except the `test` is inverted. Note the
 * argument ordering differs from `until`.
 *
 * @name doUntil
 * @static
 * @memberOf module:ControlFlow
 * @method
 * @see [async.doWhilst]{@link module:ControlFlow.doWhilst}
 * @category Control Flow
 * @param {AsyncFunction} iteratee - An async function which is called each time
 * `test` fails. Invoked with (callback).
 * @param {Function} test - synchronous truth test to perform after each
 * execution of `iteratee`. Invoked with any non-error callback results of
 * `iteratee`.
 * @param {Function} [callback] - A callback which is called after the test
 * function has passed and repeated execution of `iteratee` has stopped. `callback`
 * will be passed an error and any arguments passed to the final `iteratee`'s
 * callback. Invoked with (err, [results]);
 */
function doUntil(iteratee, test, callback) {
    doWhilst(iteratee, function() {
        return !test.apply(this, arguments);
    }, callback);
}

/**
 * Like [`whilst`]{@link module:ControlFlow.whilst}, except the `test` is an asynchronous function that
 * is passed a callback in the form of `function (err, truth)`. If error is
 * passed to `test` or `fn`, the main callback is immediately called with the
 * value of the error.
 *
 * @name during
 * @static
 * @memberOf module:ControlFlow
 * @method
 * @see [async.whilst]{@link module:ControlFlow.whilst}
 * @category Control Flow
 * @param {AsyncFunction} test - asynchronous truth test to perform before each
 * execution of `fn`. Invoked with (callback).
 * @param {AsyncFunction} fn - An async function which is called each time
 * `test` passes. Invoked with (callback).
 * @param {Function} [callback] - A callback which is called after the test
 * function has failed and repeated execution of `fn` has stopped. `callback`
 * will be passed an error, if one occurred, otherwise `null`.
 * @example
 *
 * var count = 0;
 *
 * async.during(
 *     function (callback) {
 *         return callback(null, count < 5);
 *     },
 *     function (callback) {
 *         count++;
 *         setTimeout(callback, 1000);
 *     },
 *     function (err) {
 *         // 5 seconds have passed
 *     }
 * );
 */
function during(test, fn, callback) {
    callback = onlyOnce(callback || noop);
    var _fn = wrapAsync(fn);
    var _test = wrapAsync(test);

    function next(err) {
        if (err) return callback(err);
        _test(check);
    }

    function check(err, truth) {
        if (err) return callback(err);
        if (!truth) return callback(null);
        _fn(next);
    }

    _test(check);
}

function _withoutIndex(iteratee) {
    return function (value, index, callback) {
        return iteratee(value, callback);
    };
}

/**
 * Applies the function `iteratee` to each item in `coll`, in parallel.
 * The `iteratee` is called with an item from the list, and a callback for when
 * it has finished. If the `iteratee` passes an error to its `callback`, the
 * main `callback` (for the `each` function) is immediately called with the
 * error.
 *
 * Note, that since this function applies `iteratee` to each item in parallel,
 * there is no guarantee that the iteratee functions will complete in order.
 *
 * @name each
 * @static
 * @memberOf module:Collections
 * @method
 * @alias forEach
 * @category Collection
 * @param {Array|Iterable|Object} coll - A collection to iterate over.
 * @param {AsyncFunction} iteratee - An async function to apply to
 * each item in `coll`. Invoked with (item, callback).
 * The array index is not passed to the iteratee.
 * If you need the index, use `eachOf`.
 * @param {Function} [callback] - A callback which is called when all
 * `iteratee` functions have finished, or an error occurs. Invoked with (err).
 * @example
 *
 * // assuming openFiles is an array of file names and saveFile is a function
 * // to save the modified contents of that file:
 *
 * async.each(openFiles, saveFile, function(err){
 *   // if any of the saves produced an error, err would equal that error
 * });
 *
 * // assuming openFiles is an array of file names
 * async.each(openFiles, function(file, callback) {
 *
 *     // Perform operation on file here.
 *     console.log('Processing file ' + file);
 *
 *     if( file.length > 32 ) {
 *       console.log('This file name is too long');
 *       callback('File name too long');
 *     } else {
 *       // Do work to process file here
 *       console.log('File processed');
 *       callback();
 *     }
 * }, function(err) {
 *     // if any of the file processing produced an error, err would equal that error
 *     if( err ) {
 *       // One of the iterations produced an error.
 *       // All processing will now stop.
 *       console.log('A file failed to process');
 *     } else {
 *       console.log('All files have been processed successfully');
 *     }
 * });
 */
function eachLimit(coll, iteratee, callback) {
    eachOf(coll, _withoutIndex(wrapAsync(iteratee)), callback);
}

/**
 * The same as [`each`]{@link module:Collections.each} but runs a maximum of `limit` async operations at a time.
 *
 * @name eachLimit
 * @static
 * @memberOf module:Collections
 * @method
 * @see [async.each]{@link module:Collections.each}
 * @alias forEachLimit
 * @category Collection
 * @param {Array|Iterable|Object} coll - A collection to iterate over.
 * @param {number} limit - The maximum number of async operations at a time.
 * @param {AsyncFunction} iteratee - An async function to apply to each item in
 * `coll`.
 * The array index is not passed to the iteratee.
 * If you need the index, use `eachOfLimit`.
 * Invoked with (item, callback).
 * @param {Function} [callback] - A callback which is called when all
 * `iteratee` functions have finished, or an error occurs. Invoked with (err).
 */
function eachLimit$1(coll, limit, iteratee, callback) {
    _eachOfLimit(limit)(coll, _withoutIndex(wrapAsync(iteratee)), callback);
}

/**
 * The same as [`each`]{@link module:Collections.each} but runs only a single async operation at a time.
 *
 * @name eachSeries
 * @static
 * @memberOf module:Collections
 * @method
 * @see [async.each]{@link module:Collections.each}
 * @alias forEachSeries
 * @category Collection
 * @param {Array|Iterable|Object} coll - A collection to iterate over.
 * @param {AsyncFunction} iteratee - An async function to apply to each
 * item in `coll`.
 * The array index is not passed to the iteratee.
 * If you need the index, use `eachOfSeries`.
 * Invoked with (item, callback).
 * @param {Function} [callback] - A callback which is called when all
 * `iteratee` functions have finished, or an error occurs. Invoked with (err).
 */
var eachSeries = doLimit(eachLimit$1, 1);

/**
 * Wrap an async function and ensure it calls its callback on a later tick of
 * the event loop.  If the function already calls its callback on a next tick,
 * no extra deferral is added. This is useful for preventing stack overflows
 * (`RangeError: Maximum call stack size exceeded`) and generally keeping
 * [Zalgo](http://blog.izs.me/post/59142742143/designing-apis-for-asynchrony)
 * contained. ES2017 `async` functions are returned as-is -- they are immune
 * to Zalgo's corrupting influences, as they always resolve on a later tick.
 *
 * @name ensureAsync
 * @static
 * @memberOf module:Utils
 * @method
 * @category Util
 * @param {AsyncFunction} fn - an async function, one that expects a node-style
 * callback as its last argument.
 * @returns {AsyncFunction} Returns a wrapped function with the exact same call
 * signature as the function passed in.
 * @example
 *
 * function sometimesAsync(arg, callback) {
 *     if (cache[arg]) {
 *         return callback(null, cache[arg]); // this would be synchronous!!
 *     } else {
 *         doSomeIO(arg, callback); // this IO would be asynchronous
 *     }
 * }
 *
 * // this has a risk of stack overflows if many results are cached in a row
 * async.mapSeries(args, sometimesAsync, done);
 *
 * // this will defer sometimesAsync's callback if necessary,
 * // preventing stack overflows
 * async.mapSeries(args, async.ensureAsync(sometimesAsync), done);
 */
function ensureAsync(fn) {
    if (isAsync(fn)) return fn;
    return initialParams(function (args, callback) {
        var sync = true;
        args.push(function () {
            var innerArgs = arguments;
            if (sync) {
                setImmediate$1(function () {
                    callback.apply(null, innerArgs);
                });
            } else {
                callback.apply(null, innerArgs);
            }
        });
        fn.apply(this, args);
        sync = false;
    });
}

function notId(v) {
    return !v;
}

/**
 * Returns `true` if every element in `coll` satisfies an async test. If any
 * iteratee call returns `false`, the main `callback` is immediately called.
 *
 * @name every
 * @static
 * @memberOf module:Collections
 * @method
 * @alias all
 * @category Collection
 * @param {Array|Iterable|Object} coll - A collection to iterate over.
 * @param {AsyncFunction} iteratee - An async truth test to apply to each item
 * in the collection in parallel.
 * The iteratee must complete with a boolean result value.
 * Invoked with (item, callback).
 * @param {Function} [callback] - A callback which is called after all the
 * `iteratee` functions have finished. Result will be either `true` or `false`
 * depending on the values of the async tests. Invoked with (err, result).
 * @example
 *
 * async.every(['file1','file2','file3'], function(filePath, callback) {
 *     fs.access(filePath, function(err) {
 *         callback(null, !err)
 *     });
 * }, function(err, result) {
 *     // if result is true then every file exists
 * });
 */
var every = doParallel(_createTester(notId, notId));

/**
 * The same as [`every`]{@link module:Collections.every} but runs a maximum of `limit` async operations at a time.
 *
 * @name everyLimit
 * @static
 * @memberOf module:Collections
 * @method
 * @see [async.every]{@link module:Collections.every}
 * @alias allLimit
 * @category Collection
 * @param {Array|Iterable|Object} coll - A collection to iterate over.
 * @param {number} limit - The maximum number of async operations at a time.
 * @param {AsyncFunction} iteratee - An async truth test to apply to each item
 * in the collection in parallel.
 * The iteratee must complete with a boolean result value.
 * Invoked with (item, callback).
 * @param {Function} [callback] - A callback which is called after all the
 * `iteratee` functions have finished. Result will be either `true` or `false`
 * depending on the values of the async tests. Invoked with (err, result).
 */
var everyLimit = doParallelLimit(_createTester(notId, notId));

/**
 * The same as [`every`]{@link module:Collections.every} but runs only a single async operation at a time.
 *
 * @name everySeries
 * @static
 * @memberOf module:Collections
 * @method
 * @see [async.every]{@link module:Collections.every}
 * @alias allSeries
 * @category Collection
 * @param {Array|Iterable|Object} coll - A collection to iterate over.
 * @param {AsyncFunction} iteratee - An async truth test to apply to each item
 * in the collection in series.
 * The iteratee must complete with a boolean result value.
 * Invoked with (item, callback).
 * @param {Function} [callback] - A callback which is called after all the
 * `iteratee` functions have finished. Result will be either `true` or `false`
 * depending on the values of the async tests. Invoked with (err, result).
 */
var everySeries = doLimit(everyLimit, 1);

/**
 * The base implementation of `_.property` without support for deep paths.
 *
 * @private
 * @param {string} key The key of the property to get.
 * @returns {Function} Returns the new accessor function.
 */
function baseProperty(key) {
  return function(object) {
    return object == null ? undefined : object[key];
  };
}

function filterArray(eachfn, arr, iteratee, callback) {
    var truthValues = new Array(arr.length);
    eachfn(arr, function (x, index, callback) {
        iteratee(x, function (err, v) {
            truthValues[index] = !!v;
            callback(err);
        });
    }, function (err) {
        if (err) return callback(err);
        var results = [];
        for (var i = 0; i < arr.length; i++) {
            if (truthValues[i]) results.push(arr[i]);
        }
        callback(null, results);
    });
}

function filterGeneric(eachfn, coll, iteratee, callback) {
    var results = [];
    eachfn(coll, function (x, index, callback) {
        iteratee(x, function (err, v) {
            if (err) {
                callback(err);
            } else {
                if (v) {
                    results.push({index: index, value: x});
                }
                callback();
            }
        });
    }, function (err) {
        if (err) {
            callback(err);
        } else {
            callback(null, arrayMap(results.sort(function (a, b) {
                return a.index - b.index;
            }), baseProperty('value')));
        }
    });
}

function _filter(eachfn, coll, iteratee, callback) {
    var filter = isArrayLike(coll) ? filterArray : filterGeneric;
    filter(eachfn, coll, wrapAsync(iteratee), callback || noop);
}

/**
 * Returns a new array of all the values in `coll` which pass an async truth
 * test. This operation is performed in parallel, but the results array will be
 * in the same order as the original.
 *
 * @name filter
 * @static
 * @memberOf module:Collections
 * @method
 * @alias select
 * @category Collection
 * @param {Array|Iterable|Object} coll - A collection to iterate over.
 * @param {Function} iteratee - A truth test to apply to each item in `coll`.
 * The `iteratee` is passed a `callback(err, truthValue)`, which must be called
 * with a boolean argument once it has completed. Invoked with (item, callback).
 * @param {Function} [callback] - A callback which is called after all the
 * `iteratee` functions have finished. Invoked with (err, results).
 * @example
 *
 * async.filter(['file1','file2','file3'], function(filePath, callback) {
 *     fs.access(filePath, function(err) {
 *         callback(null, !err)
 *     });
 * }, function(err, results) {
 *     // results now equals an array of the existing files
 * });
 */
var filter = doParallel(_filter);

/**
 * The same as [`filter`]{@link module:Collections.filter} but runs a maximum of `limit` async operations at a
 * time.
 *
 * @name filterLimit
 * @static
 * @memberOf module:Collections
 * @method
 * @see [async.filter]{@link module:Collections.filter}
 * @alias selectLimit
 * @category Collection
 * @param {Array|Iterable|Object} coll - A collection to iterate over.
 * @param {number} limit - The maximum number of async operations at a time.
 * @param {Function} iteratee - A truth test to apply to each item in `coll`.
 * The `iteratee` is passed a `callback(err, truthValue)`, which must be called
 * with a boolean argument once it has completed. Invoked with (item, callback).
 * @param {Function} [callback] - A callback which is called after all the
 * `iteratee` functions have finished. Invoked with (err, results).
 */
var filterLimit = doParallelLimit(_filter);

/**
 * The same as [`filter`]{@link module:Collections.filter} but runs only a single async operation at a time.
 *
 * @name filterSeries
 * @static
 * @memberOf module:Collections
 * @method
 * @see [async.filter]{@link module:Collections.filter}
 * @alias selectSeries
 * @category Collection
 * @param {Array|Iterable|Object} coll - A collection to iterate over.
 * @param {Function} iteratee - A truth test to apply to each item in `coll`.
 * The `iteratee` is passed a `callback(err, truthValue)`, which must be called
 * with a boolean argument once it has completed. Invoked with (item, callback).
 * @param {Function} [callback] - A callback which is called after all the
 * `iteratee` functions have finished. Invoked with (err, results)
 */
var filterSeries = doLimit(filterLimit, 1);

/**
 * Calls the asynchronous function `fn` with a callback parameter that allows it
 * to call itself again, in series, indefinitely.

 * If an error is passed to the callback then `errback` is called with the
 * error, and execution stops, otherwise it will never be called.
 *
 * @name forever
 * @static
 * @memberOf module:ControlFlow
 * @method
 * @category Control Flow
 * @param {AsyncFunction} fn - an async function to call repeatedly.
 * Invoked with (next).
 * @param {Function} [errback] - when `fn` passes an error to it's callback,
 * this function will be called, and execution stops. Invoked with (err).
 * @example
 *
 * async.forever(
 *     function(next) {
 *         // next is suitable for passing to things that need a callback(err [, whatever]);
 *         // it will result in this function being called again.
 *     },
 *     function(err) {
 *         // if next is called with a value in its first parameter, it will appear
 *         // in here as 'err', and execution will stop.
 *     }
 * );
 */
function forever(fn, errback) {
    var done = onlyOnce(errback || noop);
    var task = wrapAsync(ensureAsync(fn));

    function next(err) {
        if (err) return done(err);
        task(next);
    }
    next();
}

/**
 * The same as [`groupBy`]{@link module:Collections.groupBy} but runs a maximum of `limit` async operations at a time.
 *
 * @name groupByLimit
 * @static
 * @memberOf module:Collections
 * @method
 * @see [async.groupBy]{@link module:Collections.groupBy}
 * @category Collection
 * @param {Array|Iterable|Object} coll - A collection to iterate over.
 * @param {number} limit - The maximum number of async operations at a time.
 * @param {AsyncFunction} iteratee - An async function to apply to each item in
 * `coll`.
 * The iteratee should complete with a `key` to group the value under.
 * Invoked with (value, callback).
 * @param {Function} [callback] - A callback which is called when all `iteratee`
 * functions have finished, or an error occurs. Result is an `Object` whoses
 * properties are arrays of values which returned the corresponding key.
 */
var groupByLimit = function(coll, limit, iteratee, callback) {
    callback = callback || noop;
    var _iteratee = wrapAsync(iteratee);
    mapLimit(coll, limit, function(val, callback) {
        _iteratee(val, function(err, key) {
            if (err) return callback(err);
            return callback(null, {key: key, val: val});
        });
    }, function(err, mapResults) {
        var result = {};
        // from MDN, handle object having an `hasOwnProperty` prop
        var hasOwnProperty = Object.prototype.hasOwnProperty;

        for (var i = 0; i < mapResults.length; i++) {
            if (mapResults[i]) {
                var key = mapResults[i].key;
                var val = mapResults[i].val;

                if (hasOwnProperty.call(result, key)) {
                    result[key].push(val);
                } else {
                    result[key] = [val];
                }
            }
        }

        return callback(err, result);
    });
};

/**
 * Returns a new object, where each value corresponds to an array of items, from
 * `coll`, that returned the corresponding key. That is, the keys of the object
 * correspond to the values passed to the `iteratee` callback.
 *
 * Note: Since this function applies the `iteratee` to each item in parallel,
 * there is no guarantee that the `iteratee` functions will complete in order.
 * However, the values for each key in the `result` will be in the same order as
 * the original `coll`. For Objects, the values will roughly be in the order of
 * the original Objects' keys (but this can vary across JavaScript engines).
 *
 * @name groupBy
 * @static
 * @memberOf module:Collections
 * @method
 * @category Collection
 * @param {Array|Iterable|Object} coll - A collection to iterate over.
 * @param {AsyncFunction} iteratee - An async function to apply to each item in
 * `coll`.
 * The iteratee should complete with a `key` to group the value under.
 * Invoked with (value, callback).
 * @param {Function} [callback] - A callback which is called when all `iteratee`
 * functions have finished, or an error occurs. Result is an `Object` whoses
 * properties are arrays of values which returned the corresponding key.
 * @example
 *
 * async.groupBy(['userId1', 'userId2', 'userId3'], function(userId, callback) {
 *     db.findById(userId, function(err, user) {
 *         if (err) return callback(err);
 *         return callback(null, user.age);
 *     });
 * }, function(err, result) {
 *     // result is object containing the userIds grouped by age
 *     // e.g. { 30: ['userId1', 'userId3'], 42: ['userId2']};
 * });
 */
var groupBy = doLimit(groupByLimit, Infinity);

/**
 * The same as [`groupBy`]{@link module:Collections.groupBy} but runs only a single async operation at a time.
 *
 * @name groupBySeries
 * @static
 * @memberOf module:Collections
 * @method
 * @see [async.groupBy]{@link module:Collections.groupBy}
 * @category Collection
 * @param {Array|Iterable|Object} coll - A collection to iterate over.
 * @param {number} limit - The maximum number of async operations at a time.
 * @param {AsyncFunction} iteratee - An async function to apply to each item in
 * `coll`.
 * The iteratee should complete with a `key` to group the value under.
 * Invoked with (value, callback).
 * @param {Function} [callback] - A callback which is called when all `iteratee`
 * functions have finished, or an error occurs. Result is an `Object` whoses
 * properties are arrays of values which returned the corresponding key.
 */
var groupBySeries = doLimit(groupByLimit, 1);

/**
 * Logs the result of an `async` function to the `console`. Only works in
 * Node.js or in browsers that support `console.log` and `console.error` (such
 * as FF and Chrome). If multiple arguments are returned from the async
 * function, `console.log` is called on each argument in order.
 *
 * @name log
 * @static
 * @memberOf module:Utils
 * @method
 * @category Util
 * @param {AsyncFunction} function - The function you want to eventually apply
 * all arguments to.
 * @param {...*} arguments... - Any number of arguments to apply to the function.
 * @example
 *
 * // in a module
 * var hello = function(name, callback) {
 *     setTimeout(function() {
 *         callback(null, 'hello ' + name);
 *     }, 1000);
 * };
 *
 * // in the node repl
 * node> async.log(hello, 'world');
 * 'hello world'
 */
var log = consoleFunc('log');

/**
 * The same as [`mapValues`]{@link module:Collections.mapValues} but runs a maximum of `limit` async operations at a
 * time.
 *
 * @name mapValuesLimit
 * @static
 * @memberOf module:Collections
 * @method
 * @see [async.mapValues]{@link module:Collections.mapValues}
 * @category Collection
 * @param {Object} obj - A collection to iterate over.
 * @param {number} limit - The maximum number of async operations at a time.
 * @param {AsyncFunction} iteratee - A function to apply to each value and key
 * in `coll`.
 * The iteratee should complete with the transformed value as its result.
 * Invoked with (value, key, callback).
 * @param {Function} [callback] - A callback which is called when all `iteratee`
 * functions have finished, or an error occurs. `result` is a new object consisting
 * of each key from `obj`, with each transformed value on the right-hand side.
 * Invoked with (err, result).
 */
function mapValuesLimit(obj, limit, iteratee, callback) {
    callback = once(callback || noop);
    var newObj = {};
    var _iteratee = wrapAsync(iteratee);
    eachOfLimit(obj, limit, function(val, key, next) {
        _iteratee(val, key, function (err, result) {
            if (err) return next(err);
            newObj[key] = result;
            next();
        });
    }, function (err) {
        callback(err, newObj);
    });
}

/**
 * A relative of [`map`]{@link module:Collections.map}, designed for use with objects.
 *
 * Produces a new Object by mapping each value of `obj` through the `iteratee`
 * function. The `iteratee` is called each `value` and `key` from `obj` and a
 * callback for when it has finished processing. Each of these callbacks takes
 * two arguments: an `error`, and the transformed item from `obj`. If `iteratee`
 * passes an error to its callback, the main `callback` (for the `mapValues`
 * function) is immediately called with the error.
 *
 * Note, the order of the keys in the result is not guaranteed.  The keys will
 * be roughly in the order they complete, (but this is very engine-specific)
 *
 * @name mapValues
 * @static
 * @memberOf module:Collections
 * @method
 * @category Collection
 * @param {Object} obj - A collection to iterate over.
 * @param {AsyncFunction} iteratee - A function to apply to each value and key
 * in `coll`.
 * The iteratee should complete with the transformed value as its result.
 * Invoked with (value, key, callback).
 * @param {Function} [callback] - A callback which is called when all `iteratee`
 * functions have finished, or an error occurs. `result` is a new object consisting
 * of each key from `obj`, with each transformed value on the right-hand side.
 * Invoked with (err, result).
 * @example
 *
 * async.mapValues({
 *     f1: 'file1',
 *     f2: 'file2',
 *     f3: 'file3'
 * }, function (file, key, callback) {
 *   fs.stat(file, callback);
 * }, function(err, result) {
 *     // result is now a map of stats for each file, e.g.
 *     // {
 *     //     f1: [stats for file1],
 *     //     f2: [stats for file2],
 *     //     f3: [stats for file3]
 *     // }
 * });
 */

var mapValues = doLimit(mapValuesLimit, Infinity);

/**
 * The same as [`mapValues`]{@link module:Collections.mapValues} but runs only a single async operation at a time.
 *
 * @name mapValuesSeries
 * @static
 * @memberOf module:Collections
 * @method
 * @see [async.mapValues]{@link module:Collections.mapValues}
 * @category Collection
 * @param {Object} obj - A collection to iterate over.
 * @param {AsyncFunction} iteratee - A function to apply to each value and key
 * in `coll`.
 * The iteratee should complete with the transformed value as its result.
 * Invoked with (value, key, callback).
 * @param {Function} [callback] - A callback which is called when all `iteratee`
 * functions have finished, or an error occurs. `result` is a new object consisting
 * of each key from `obj`, with each transformed value on the right-hand side.
 * Invoked with (err, result).
 */
var mapValuesSeries = doLimit(mapValuesLimit, 1);

function has(obj, key) {
    return key in obj;
}

/**
 * Caches the results of an async function. When creating a hash to store
 * function results against, the callback is omitted from the hash and an
 * optional hash function can be used.
 *
 * If no hash function is specified, the first argument is used as a hash key,
 * which may work reasonably if it is a string or a data type that converts to a
 * distinct string. Note that objects and arrays will not behave reasonably.
 * Neither will cases where the other arguments are significant. In such cases,
 * specify your own hash function.
 *
 * The cache of results is exposed as the `memo` property of the function
 * returned by `memoize`.
 *
 * @name memoize
 * @static
 * @memberOf module:Utils
 * @method
 * @category Util
 * @param {AsyncFunction} fn - The async function to proxy and cache results from.
 * @param {Function} hasher - An optional function for generating a custom hash
 * for storing results. It has all the arguments applied to it apart from the
 * callback, and must be synchronous.
 * @returns {AsyncFunction} a memoized version of `fn`
 * @example
 *
 * var slow_fn = function(name, callback) {
 *     // do something
 *     callback(null, result);
 * };
 * var fn = async.memoize(slow_fn);
 *
 * // fn can now be used as if it were slow_fn
 * fn('some name', function() {
 *     // callback
 * });
 */
function memoize(fn, hasher) {
    var memo = Object.create(null);
    var queues = Object.create(null);
    hasher = hasher || identity;
    var _fn = wrapAsync(fn);
    var memoized = initialParams(function memoized(args, callback) {
        var key = hasher.apply(null, args);
        if (has(memo, key)) {
            setImmediate$1(function() {
                callback.apply(null, memo[key]);
            });
        } else if (has(queues, key)) {
            queues[key].push(callback);
        } else {
            queues[key] = [callback];
            _fn.apply(null, args.concat(function(/*args*/) {
                var args = slice(arguments);
                memo[key] = args;
                var q = queues[key];
                delete queues[key];
                for (var i = 0, l = q.length; i < l; i++) {
                    q[i].apply(null, args);
                }
            }));
        }
    });
    memoized.memo = memo;
    memoized.unmemoized = fn;
    return memoized;
}

/**
 * Calls `callback` on a later loop around the event loop. In Node.js this just
 * calls `process.nextTick`.  In the browser it will use `setImmediate` if
 * available, otherwise `setTimeout(callback, 0)`, which means other higher
 * priority events may precede the execution of `callback`.
 *
 * This is used internally for browser-compatibility purposes.
 *
 * @name nextTick
 * @static
 * @memberOf module:Utils
 * @method
 * @see [async.setImmediate]{@link module:Utils.setImmediate}
 * @category Util
 * @param {Function} callback - The function to call on a later loop around
 * the event loop. Invoked with (args...).
 * @param {...*} args... - any number of additional arguments to pass to the
 * callback on the next tick.
 * @example
 *
 * var call_order = [];
 * async.nextTick(function() {
 *     call_order.push('two');
 *     // call_order now equals ['one','two']
 * });
 * call_order.push('one');
 *
 * async.setImmediate(function (a, b, c) {
 *     // a, b, and c equal 1, 2, and 3
 * }, 1, 2, 3);
 */
var _defer$1;

if (hasNextTick) {
    _defer$1 = process.nextTick;
} else if (hasSetImmediate) {
    _defer$1 = setImmediate;
} else {
    _defer$1 = fallback;
}

var nextTick = wrap(_defer$1);

function _parallel(eachfn, tasks, callback) {
    callback = callback || noop;
    var results = isArrayLike(tasks) ? [] : {};

    eachfn(tasks, function (task, key, callback) {
        wrapAsync(task)(function (err, result) {
            if (arguments.length > 2) {
                result = slice(arguments, 1);
            }
            results[key] = result;
            callback(err);
        });
    }, function (err) {
        callback(err, results);
    });
}

/**
 * Run the `tasks` collection of functions in parallel, without waiting until
 * the previous function has completed. If any of the functions pass an error to
 * its callback, the main `callback` is immediately called with the value of the
 * error. Once the `tasks` have completed, the results are passed to the final
 * `callback` as an array.
 *
 * **Note:** `parallel` is about kicking-off I/O tasks in parallel, not about
 * parallel execution of code.  If your tasks do not use any timers or perform
 * any I/O, they will actually be executed in series.  Any synchronous setup
 * sections for each task will happen one after the other.  JavaScript remains
 * single-threaded.
 *
 * **Hint:** Use [`reflect`]{@link module:Utils.reflect} to continue the
 * execution of other tasks when a task fails.
 *
 * It is also possible to use an object instead of an array. Each property will
 * be run as a function and the results will be passed to the final `callback`
 * as an object instead of an array. This can be a more readable way of handling
 * results from {@link async.parallel}.
 *
 * @name parallel
 * @static
 * @memberOf module:ControlFlow
 * @method
 * @category Control Flow
 * @param {Array|Iterable|Object} tasks - A collection of
 * [async functions]{@link AsyncFunction} to run.
 * Each async function can complete with any number of optional `result` values.
 * @param {Function} [callback] - An optional callback to run once all the
 * functions have completed successfully. This function gets a results array
 * (or object) containing all the result arguments passed to the task callbacks.
 * Invoked with (err, results).
 *
 * @example
 * async.parallel([
 *     function(callback) {
 *         setTimeout(function() {
 *             callback(null, 'one');
 *         }, 200);
 *     },
 *     function(callback) {
 *         setTimeout(function() {
 *             callback(null, 'two');
 *         }, 100);
 *     }
 * ],
 * // optional callback
 * function(err, results) {
 *     // the results array will equal ['one','two'] even though
 *     // the second function had a shorter timeout.
 * });
 *
 * // an example using an object instead of an array
 * async.parallel({
 *     one: function(callback) {
 *         setTimeout(function() {
 *             callback(null, 1);
 *         }, 200);
 *     },
 *     two: function(callback) {
 *         setTimeout(function() {
 *             callback(null, 2);
 *         }, 100);
 *     }
 * }, function(err, results) {
 *     // results is now equals to: {one: 1, two: 2}
 * });
 */
function parallelLimit(tasks, callback) {
    _parallel(eachOf, tasks, callback);
}

/**
 * The same as [`parallel`]{@link module:ControlFlow.parallel} but runs a maximum of `limit` async operations at a
 * time.
 *
 * @name parallelLimit
 * @static
 * @memberOf module:ControlFlow
 * @method
 * @see [async.parallel]{@link module:ControlFlow.parallel}
 * @category Control Flow
 * @param {Array|Iterable|Object} tasks - A collection of
 * [async functions]{@link AsyncFunction} to run.
 * Each async function can complete with any number of optional `result` values.
 * @param {number} limit - The maximum number of async operations at a time.
 * @param {Function} [callback] - An optional callback to run once all the
 * functions have completed successfully. This function gets a results array
 * (or object) containing all the result arguments passed to the task callbacks.
 * Invoked with (err, results).
 */
function parallelLimit$1(tasks, limit, callback) {
    _parallel(_eachOfLimit(limit), tasks, callback);
}

/**
 * A queue of tasks for the worker function to complete.
 * @typedef {Object} QueueObject
 * @memberOf module:ControlFlow
 * @property {Function} length - a function returning the number of items
 * waiting to be processed. Invoke with `queue.length()`.
 * @property {boolean} started - a boolean indicating whether or not any
 * items have been pushed and processed by the queue.
 * @property {Function} running - a function returning the number of items
 * currently being processed. Invoke with `queue.running()`.
 * @property {Function} workersList - a function returning the array of items
 * currently being processed. Invoke with `queue.workersList()`.
 * @property {Function} idle - a function returning false if there are items
 * waiting or being processed, or true if not. Invoke with `queue.idle()`.
 * @property {number} concurrency - an integer for determining how many `worker`
 * functions should be run in parallel. This property can be changed after a
 * `queue` is created to alter the concurrency on-the-fly.
 * @property {Function} push - add a new task to the `queue`. Calls `callback`
 * once the `worker` has finished processing the task. Instead of a single task,
 * a `tasks` array can be submitted. The respective callback is used for every
 * task in the list. Invoke with `queue.push(task, [callback])`,
 * @property {Function} unshift - add a new task to the front of the `queue`.
 * Invoke with `queue.unshift(task, [callback])`.
 * @property {Function} remove - remove items from the queue that match a test
 * function.  The test function will be passed an object with a `data` property,
 * and a `priority` property, if this is a
 * [priorityQueue]{@link module:ControlFlow.priorityQueue} object.
 * Invoked with `queue.remove(testFn)`, where `testFn` is of the form
 * `function ({data, priority}) {}` and returns a Boolean.
 * @property {Function} saturated - a callback that is called when the number of
 * running workers hits the `concurrency` limit, and further tasks will be
 * queued.
 * @property {Function} unsaturated - a callback that is called when the number
 * of running workers is less than the `concurrency` & `buffer` limits, and
 * further tasks will not be queued.
 * @property {number} buffer - A minimum threshold buffer in order to say that
 * the `queue` is `unsaturated`.
 * @property {Function} empty - a callback that is called when the last item
 * from the `queue` is given to a `worker`.
 * @property {Function} drain - a callback that is called when the last item
 * from the `queue` has returned from the `worker`.
 * @property {Function} error - a callback that is called when a task errors.
 * Has the signature `function(error, task)`.
 * @property {boolean} paused - a boolean for determining whether the queue is
 * in a paused state.
 * @property {Function} pause - a function that pauses the processing of tasks
 * until `resume()` is called. Invoke with `queue.pause()`.
 * @property {Function} resume - a function that resumes the processing of
 * queued tasks when the queue is paused. Invoke with `queue.resume()`.
 * @property {Function} kill - a function that removes the `drain` callback and
 * empties remaining tasks from the queue forcing it to go idle. No more tasks
 * should be pushed to the queue after calling this function. Invoke with `queue.kill()`.
 */

/**
 * Creates a `queue` object with the specified `concurrency`. Tasks added to the
 * `queue` are processed in parallel (up to the `concurrency` limit). If all
 * `worker`s are in progress, the task is queued until one becomes available.
 * Once a `worker` completes a `task`, that `task`'s callback is called.
 *
 * @name queue
 * @static
 * @memberOf module:ControlFlow
 * @method
 * @category Control Flow
 * @param {AsyncFunction} worker - An async function for processing a queued task.
 * If you want to handle errors from an individual task, pass a callback to
 * `q.push()`. Invoked with (task, callback).
 * @param {number} [concurrency=1] - An `integer` for determining how many
 * `worker` functions should be run in parallel.  If omitted, the concurrency
 * defaults to `1`.  If the concurrency is `0`, an error is thrown.
 * @returns {module:ControlFlow.QueueObject} A queue object to manage the tasks. Callbacks can
 * attached as certain properties to listen for specific events during the
 * lifecycle of the queue.
 * @example
 *
 * // create a queue object with concurrency 2
 * var q = async.queue(function(task, callback) {
 *     console.log('hello ' + task.name);
 *     callback();
 * }, 2);
 *
 * // assign a callback
 * q.drain = function() {
 *     console.log('all items have been processed');
 * };
 *
 * // add some items to the queue
 * q.push({name: 'foo'}, function(err) {
 *     console.log('finished processing foo');
 * });
 * q.push({name: 'bar'}, function (err) {
 *     console.log('finished processing bar');
 * });
 *
 * // add some items to the queue (batch-wise)
 * q.push([{name: 'baz'},{name: 'bay'},{name: 'bax'}], function(err) {
 *     console.log('finished processing item');
 * });
 *
 * // add some items to the front of the queue
 * q.unshift({name: 'bar'}, function (err) {
 *     console.log('finished processing bar');
 * });
 */
var queue$1 = function (worker, concurrency) {
    var _worker = wrapAsync(worker);
    return queue(function (items, cb) {
        _worker(items[0], cb);
    }, concurrency, 1);
};

/**
 * The same as [async.queue]{@link module:ControlFlow.queue} only tasks are assigned a priority and
 * completed in ascending priority order.
 *
 * @name priorityQueue
 * @static
 * @memberOf module:ControlFlow
 * @method
 * @see [async.queue]{@link module:ControlFlow.queue}
 * @category Control Flow
 * @param {AsyncFunction} worker - An async function for processing a queued task.
 * If you want to handle errors from an individual task, pass a callback to
 * `q.push()`.
 * Invoked with (task, callback).
 * @param {number} concurrency - An `integer` for determining how many `worker`
 * functions should be run in parallel.  If omitted, the concurrency defaults to
 * `1`.  If the concurrency is `0`, an error is thrown.
 * @returns {module:ControlFlow.QueueObject} A priorityQueue object to manage the tasks. There are two
 * differences between `queue` and `priorityQueue` objects:
 * * `push(task, priority, [callback])` - `priority` should be a number. If an
 *   array of `tasks` is given, all tasks will be assigned the same priority.
 * * The `unshift` method was removed.
 */
var priorityQueue = function(worker, concurrency) {
    // Start with a normal queue
    var q = queue$1(worker, concurrency);

    // Override push to accept second parameter representing priority
    q.push = function(data, priority, callback) {
        if (callback == null) callback = noop;
        if (typeof callback !== 'function') {
            throw new Error('task callback must be a function');
        }
        q.started = true;
        if (!isArray(data)) {
            data = [data];
        }
        if (data.length === 0) {
            // call drain immediately if there are no tasks
            return setImmediate$1(function() {
                q.drain();
            });
        }

        priority = priority || 0;
        var nextNode = q._tasks.head;
        while (nextNode && priority >= nextNode.priority) {
            nextNode = nextNode.next;
        }

        for (var i = 0, l = data.length; i < l; i++) {
            var item = {
                data: data[i],
                priority: priority,
                callback: callback
            };

            if (nextNode) {
                q._tasks.insertBefore(nextNode, item);
            } else {
                q._tasks.push(item);
            }
        }
        setImmediate$1(q.process);
    };

    // Remove unshift function
    delete q.unshift;

    return q;
};

/**
 * Runs the `tasks` array of functions in parallel, without waiting until the
 * previous function has completed. Once any of the `tasks` complete or pass an
 * error to its callback, the main `callback` is immediately called. It's
 * equivalent to `Promise.race()`.
 *
 * @name race
 * @static
 * @memberOf module:ControlFlow
 * @method
 * @category Control Flow
 * @param {Array} tasks - An array containing [async functions]{@link AsyncFunction}
 * to run. Each function can complete with an optional `result` value.
 * @param {Function} callback - A callback to run once any of the functions have
 * completed. This function gets an error or result from the first function that
 * completed. Invoked with (err, result).
 * @returns undefined
 * @example
 *
 * async.race([
 *     function(callback) {
 *         setTimeout(function() {
 *             callback(null, 'one');
 *         }, 200);
 *     },
 *     function(callback) {
 *         setTimeout(function() {
 *             callback(null, 'two');
 *         }, 100);
 *     }
 * ],
 * // main callback
 * function(err, result) {
 *     // the result will be equal to 'two' as it finishes earlier
 * });
 */
function race(tasks, callback) {
    callback = once(callback || noop);
    if (!isArray(tasks)) return callback(new TypeError('First argument to race must be an array of functions'));
    if (!tasks.length) return callback();
    for (var i = 0, l = tasks.length; i < l; i++) {
        wrapAsync(tasks[i])(callback);
    }
}

/**
 * Same as [`reduce`]{@link module:Collections.reduce}, only operates on `array` in reverse order.
 *
 * @name reduceRight
 * @static
 * @memberOf module:Collections
 * @method
 * @see [async.reduce]{@link module:Collections.reduce}
 * @alias foldr
 * @category Collection
 * @param {Array} array - A collection to iterate over.
 * @param {*} memo - The initial state of the reduction.
 * @param {AsyncFunction} iteratee - A function applied to each item in the
 * array to produce the next step in the reduction.
 * The `iteratee` should complete with the next state of the reduction.
 * If the iteratee complete with an error, the reduction is stopped and the
 * main `callback` is immediately called with the error.
 * Invoked with (memo, item, callback).
 * @param {Function} [callback] - A callback which is called after all the
 * `iteratee` functions have finished. Result is the reduced value. Invoked with
 * (err, result).
 */
function reduceRight (array, memo, iteratee, callback) {
    var reversed = slice(array).reverse();
    reduce(reversed, memo, iteratee, callback);
}

/**
 * Wraps the async function in another function that always completes with a
 * result object, even when it errors.
 *
 * The result object has either the property `error` or `value`.
 *
 * @name reflect
 * @static
 * @memberOf module:Utils
 * @method
 * @category Util
 * @param {AsyncFunction} fn - The async function you want to wrap
 * @returns {Function} - A function that always passes null to it's callback as
 * the error. The second argument to the callback will be an `object` with
 * either an `error` or a `value` property.
 * @example
 *
 * async.parallel([
 *     async.reflect(function(callback) {
 *         // do some stuff ...
 *         callback(null, 'one');
 *     }),
 *     async.reflect(function(callback) {
 *         // do some more stuff but error ...
 *         callback('bad stuff happened');
 *     }),
 *     async.reflect(function(callback) {
 *         // do some more stuff ...
 *         callback(null, 'two');
 *     })
 * ],
 * // optional callback
 * function(err, results) {
 *     // values
 *     // results[0].value = 'one'
 *     // results[1].error = 'bad stuff happened'
 *     // results[2].value = 'two'
 * });
 */
function reflect(fn) {
    var _fn = wrapAsync(fn);
    return initialParams(function reflectOn(args, reflectCallback) {
        args.push(function callback(error, cbArg) {
            if (error) {
                reflectCallback(null, { error: error });
            } else {
                var value;
                if (arguments.length <= 2) {
                    value = cbArg;
                } else {
                    value = slice(arguments, 1);
                }
                reflectCallback(null, { value: value });
            }
        });

        return _fn.apply(this, args);
    });
}

/**
 * A helper function that wraps an array or an object of functions with `reflect`.
 *
 * @name reflectAll
 * @static
 * @memberOf module:Utils
 * @method
 * @see [async.reflect]{@link module:Utils.reflect}
 * @category Util
 * @param {Array|Object|Iterable} tasks - The collection of
 * [async functions]{@link AsyncFunction} to wrap in `async.reflect`.
 * @returns {Array} Returns an array of async functions, each wrapped in
 * `async.reflect`
 * @example
 *
 * let tasks = [
 *     function(callback) {
 *         setTimeout(function() {
 *             callback(null, 'one');
 *         }, 200);
 *     },
 *     function(callback) {
 *         // do some more stuff but error ...
 *         callback(new Error('bad stuff happened'));
 *     },
 *     function(callback) {
 *         setTimeout(function() {
 *             callback(null, 'two');
 *         }, 100);
 *     }
 * ];
 *
 * async.parallel(async.reflectAll(tasks),
 * // optional callback
 * function(err, results) {
 *     // values
 *     // results[0].value = 'one'
 *     // results[1].error = Error('bad stuff happened')
 *     // results[2].value = 'two'
 * });
 *
 * // an example using an object instead of an array
 * let tasks = {
 *     one: function(callback) {
 *         setTimeout(function() {
 *             callback(null, 'one');
 *         }, 200);
 *     },
 *     two: function(callback) {
 *         callback('two');
 *     },
 *     three: function(callback) {
 *         setTimeout(function() {
 *             callback(null, 'three');
 *         }, 100);
 *     }
 * };
 *
 * async.parallel(async.reflectAll(tasks),
 * // optional callback
 * function(err, results) {
 *     // values
 *     // results.one.value = 'one'
 *     // results.two.error = 'two'
 *     // results.three.value = 'three'
 * });
 */
function reflectAll(tasks) {
    var results;
    if (isArray(tasks)) {
        results = arrayMap(tasks, reflect);
    } else {
        results = {};
        baseForOwn(tasks, function(task, key) {
            results[key] = reflect.call(this, task);
        });
    }
    return results;
}

function reject$1(eachfn, arr, iteratee, callback) {
    _filter(eachfn, arr, function(value, cb) {
        iteratee(value, function(err, v) {
            cb(err, !v);
        });
    }, callback);
}

/**
 * The opposite of [`filter`]{@link module:Collections.filter}. Removes values that pass an `async` truth test.
 *
 * @name reject
 * @static
 * @memberOf module:Collections
 * @method
 * @see [async.filter]{@link module:Collections.filter}
 * @category Collection
 * @param {Array|Iterable|Object} coll - A collection to iterate over.
 * @param {Function} iteratee - An async truth test to apply to each item in
 * `coll`.
 * The should complete with a boolean value as its `result`.
 * Invoked with (item, callback).
 * @param {Function} [callback] - A callback which is called after all the
 * `iteratee` functions have finished. Invoked with (err, results).
 * @example
 *
 * async.reject(['file1','file2','file3'], function(filePath, callback) {
 *     fs.access(filePath, function(err) {
 *         callback(null, !err)
 *     });
 * }, function(err, results) {
 *     // results now equals an array of missing files
 *     createFiles(results);
 * });
 */
var reject = doParallel(reject$1);

/**
 * The same as [`reject`]{@link module:Collections.reject} but runs a maximum of `limit` async operations at a
 * time.
 *
 * @name rejectLimit
 * @static
 * @memberOf module:Collections
 * @method
 * @see [async.reject]{@link module:Collections.reject}
 * @category Collection
 * @param {Array|Iterable|Object} coll - A collection to iterate over.
 * @param {number} limit - The maximum number of async operations at a time.
 * @param {Function} iteratee - An async truth test to apply to each item in
 * `coll`.
 * The should complete with a boolean value as its `result`.
 * Invoked with (item, callback).
 * @param {Function} [callback] - A callback which is called after all the
 * `iteratee` functions have finished. Invoked with (err, results).
 */
var rejectLimit = doParallelLimit(reject$1);

/**
 * The same as [`reject`]{@link module:Collections.reject} but runs only a single async operation at a time.
 *
 * @name rejectSeries
 * @static
 * @memberOf module:Collections
 * @method
 * @see [async.reject]{@link module:Collections.reject}
 * @category Collection
 * @param {Array|Iterable|Object} coll - A collection to iterate over.
 * @param {Function} iteratee - An async truth test to apply to each item in
 * `coll`.
 * The should complete with a boolean value as its `result`.
 * Invoked with (item, callback).
 * @param {Function} [callback] - A callback which is called after all the
 * `iteratee` functions have finished. Invoked with (err, results).
 */
var rejectSeries = doLimit(rejectLimit, 1);

/**
 * Creates a function that returns `value`.
 *
 * @static
 * @memberOf _
 * @since 2.4.0
 * @category Util
 * @param {*} value The value to return from the new function.
 * @returns {Function} Returns the new constant function.
 * @example
 *
 * var objects = _.times(2, _.constant({ 'a': 1 }));
 *
 * console.log(objects);
 * // => [{ 'a': 1 }, { 'a': 1 }]
 *
 * console.log(objects[0] === objects[1]);
 * // => true
 */
function constant$1(value) {
  return function() {
    return value;
  };
}

/**
 * Attempts to get a successful response from `task` no more than `times` times
 * before returning an error. If the task is successful, the `callback` will be
 * passed the result of the successful task. If all attempts fail, the callback
 * will be passed the error and result (if any) of the final attempt.
 *
 * @name retry
 * @static
 * @memberOf module:ControlFlow
 * @method
 * @category Control Flow
 * @see [async.retryable]{@link module:ControlFlow.retryable}
 * @param {Object|number} [opts = {times: 5, interval: 0}| 5] - Can be either an
 * object with `times` and `interval` or a number.
 * * `times` - The number of attempts to make before giving up.  The default
 *   is `5`.
 * * `interval` - The time to wait between retries, in milliseconds.  The
 *   default is `0`. The interval may also be specified as a function of the
 *   retry count (see example).
 * * `errorFilter` - An optional synchronous function that is invoked on
 *   erroneous result. If it returns `true` the retry attempts will continue;
 *   if the function returns `false` the retry flow is aborted with the current
 *   attempt's error and result being returned to the final callback.
 *   Invoked with (err).
 * * If `opts` is a number, the number specifies the number of times to retry,
 *   with the default interval of `0`.
 * @param {AsyncFunction} task - An async function to retry.
 * Invoked with (callback).
 * @param {Function} [callback] - An optional callback which is called when the
 * task has succeeded, or after the final failed attempt. It receives the `err`
 * and `result` arguments of the last attempt at completing the `task`. Invoked
 * with (err, results).
 *
 * @example
 *
 * // The `retry` function can be used as a stand-alone control flow by passing
 * // a callback, as shown below:
 *
 * // try calling apiMethod 3 times
 * async.retry(3, apiMethod, function(err, result) {
 *     // do something with the result
 * });
 *
 * // try calling apiMethod 3 times, waiting 200 ms between each retry
 * async.retry({times: 3, interval: 200}, apiMethod, function(err, result) {
 *     // do something with the result
 * });
 *
 * // try calling apiMethod 10 times with exponential backoff
 * // (i.e. intervals of 100, 200, 400, 800, 1600, ... milliseconds)
 * async.retry({
 *   times: 10,
 *   interval: function(retryCount) {
 *     return 50 * Math.pow(2, retryCount);
 *   }
 * }, apiMethod, function(err, result) {
 *     // do something with the result
 * });
 *
 * // try calling apiMethod the default 5 times no delay between each retry
 * async.retry(apiMethod, function(err, result) {
 *     // do something with the result
 * });
 *
 * // try calling apiMethod only when error condition satisfies, all other
 * // errors will abort the retry control flow and return to final callback
 * async.retry({
 *   errorFilter: function(err) {
 *     return err.message === 'Temporary error'; // only retry on a specific error
 *   }
 * }, apiMethod, function(err, result) {
 *     // do something with the result
 * });
 *
 * // to retry individual methods that are not as reliable within other
 * // control flow functions, use the `retryable` wrapper:
 * async.auto({
 *     users: api.getUsers.bind(api),
 *     payments: async.retryable(3, api.getPayments.bind(api))
 * }, function(err, results) {
 *     // do something with the results
 * });
 *
 */
function retry(opts, task, callback) {
    var DEFAULT_TIMES = 5;
    var DEFAULT_INTERVAL = 0;

    var options = {
        times: DEFAULT_TIMES,
        intervalFunc: constant$1(DEFAULT_INTERVAL)
    };

    function parseTimes(acc, t) {
        if (typeof t === 'object') {
            acc.times = +t.times || DEFAULT_TIMES;

            acc.intervalFunc = typeof t.interval === 'function' ?
                t.interval :
                constant$1(+t.interval || DEFAULT_INTERVAL);

            acc.errorFilter = t.errorFilter;
        } else if (typeof t === 'number' || typeof t === 'string') {
            acc.times = +t || DEFAULT_TIMES;
        } else {
            throw new Error("Invalid arguments for async.retry");
        }
    }

    if (arguments.length < 3 && typeof opts === 'function') {
        callback = task || noop;
        task = opts;
    } else {
        parseTimes(options, opts);
        callback = callback || noop;
    }

    if (typeof task !== 'function') {
        throw new Error("Invalid arguments for async.retry");
    }

    var _task = wrapAsync(task);

    var attempt = 1;
    function retryAttempt() {
        _task(function(err) {
            if (err && attempt++ < options.times &&
                (typeof options.errorFilter != 'function' ||
                    options.errorFilter(err))) {
                setTimeout(retryAttempt, options.intervalFunc(attempt));
            } else {
                callback.apply(null, arguments);
            }
        });
    }

    retryAttempt();
}

/**
 * A close relative of [`retry`]{@link module:ControlFlow.retry}.  This method
 * wraps a task and makes it retryable, rather than immediately calling it
 * with retries.
 *
 * @name retryable
 * @static
 * @memberOf module:ControlFlow
 * @method
 * @see [async.retry]{@link module:ControlFlow.retry}
 * @category Control Flow
 * @param {Object|number} [opts = {times: 5, interval: 0}| 5] - optional
 * options, exactly the same as from `retry`
 * @param {AsyncFunction} task - the asynchronous function to wrap.
 * This function will be passed any arguments passed to the returned wrapper.
 * Invoked with (...args, callback).
 * @returns {AsyncFunction} The wrapped function, which when invoked, will
 * retry on an error, based on the parameters specified in `opts`.
 * This function will accept the same parameters as `task`.
 * @example
 *
 * async.auto({
 *     dep1: async.retryable(3, getFromFlakyService),
 *     process: ["dep1", async.retryable(3, function (results, cb) {
 *         maybeProcessData(results.dep1, cb);
 *     })]
 * }, callback);
 */
var retryable = function (opts, task) {
    if (!task) {
        task = opts;
        opts = null;
    }
    var _task = wrapAsync(task);
    return initialParams(function (args, callback) {
        function taskFn(cb) {
            _task.apply(null, args.concat(cb));
        }

        if (opts) retry(opts, taskFn, callback);
        else retry(taskFn, callback);

    });
};

/**
 * Run the functions in the `tasks` collection in series, each one running once
 * the previous function has completed. If any functions in the series pass an
 * error to its callback, no more functions are run, and `callback` is
 * immediately called with the value of the error. Otherwise, `callback`
 * receives an array of results when `tasks` have completed.
 *
 * It is also possible to use an object instead of an array. Each property will
 * be run as a function, and the results will be passed to the final `callback`
 * as an object instead of an array. This can be a more readable way of handling
 *  results from {@link async.series}.
 *
 * **Note** that while many implementations preserve the order of object
 * properties, the [ECMAScript Language Specification](http://www.ecma-international.org/ecma-262/5.1/#sec-8.6)
 * explicitly states that
 *
 * > The mechanics and order of enumerating the properties is not specified.
 *
 * So if you rely on the order in which your series of functions are executed,
 * and want this to work on all platforms, consider using an array.
 *
 * @name series
 * @static
 * @memberOf module:ControlFlow
 * @method
 * @category Control Flow
 * @param {Array|Iterable|Object} tasks - A collection containing
 * [async functions]{@link AsyncFunction} to run in series.
 * Each function can complete with any number of optional `result` values.
 * @param {Function} [callback] - An optional callback to run once all the
 * functions have completed. This function gets a results array (or object)
 * containing all the result arguments passed to the `task` callbacks. Invoked
 * with (err, result).
 * @example
 * async.series([
 *     function(callback) {
 *         // do some stuff ...
 *         callback(null, 'one');
 *     },
 *     function(callback) {
 *         // do some more stuff ...
 *         callback(null, 'two');
 *     }
 * ],
 * // optional callback
 * function(err, results) {
 *     // results is now equal to ['one', 'two']
 * });
 *
 * async.series({
 *     one: function(callback) {
 *         setTimeout(function() {
 *             callback(null, 1);
 *         }, 200);
 *     },
 *     two: function(callback){
 *         setTimeout(function() {
 *             callback(null, 2);
 *         }, 100);
 *     }
 * }, function(err, results) {
 *     // results is now equal to: {one: 1, two: 2}
 * });
 */
function series(tasks, callback) {
    _parallel(eachOfSeries, tasks, callback);
}

/**
 * Returns `true` if at least one element in the `coll` satisfies an async test.
 * If any iteratee call returns `true`, the main `callback` is immediately
 * called.
 *
 * @name some
 * @static
 * @memberOf module:Collections
 * @method
 * @alias any
 * @category Collection
 * @param {Array|Iterable|Object} coll - A collection to iterate over.
 * @param {AsyncFunction} iteratee - An async truth test to apply to each item
 * in the collections in parallel.
 * The iteratee should complete with a boolean `result` value.
 * Invoked with (item, callback).
 * @param {Function} [callback] - A callback which is called as soon as any
 * iteratee returns `true`, or after all the iteratee functions have finished.
 * Result will be either `true` or `false` depending on the values of the async
 * tests. Invoked with (err, result).
 * @example
 *
 * async.some(['file1','file2','file3'], function(filePath, callback) {
 *     fs.access(filePath, function(err) {
 *         callback(null, !err)
 *     });
 * }, function(err, result) {
 *     // if result is true then at least one of the files exists
 * });
 */
var some = doParallel(_createTester(Boolean, identity));

/**
 * The same as [`some`]{@link module:Collections.some} but runs a maximum of `limit` async operations at a time.
 *
 * @name someLimit
 * @static
 * @memberOf module:Collections
 * @method
 * @see [async.some]{@link module:Collections.some}
 * @alias anyLimit
 * @category Collection
 * @param {Array|Iterable|Object} coll - A collection to iterate over.
 * @param {number} limit - The maximum number of async operations at a time.
 * @param {AsyncFunction} iteratee - An async truth test to apply to each item
 * in the collections in parallel.
 * The iteratee should complete with a boolean `result` value.
 * Invoked with (item, callback).
 * @param {Function} [callback] - A callback which is called as soon as any
 * iteratee returns `true`, or after all the iteratee functions have finished.
 * Result will be either `true` or `false` depending on the values of the async
 * tests. Invoked with (err, result).
 */
var someLimit = doParallelLimit(_createTester(Boolean, identity));

/**
 * The same as [`some`]{@link module:Collections.some} but runs only a single async operation at a time.
 *
 * @name someSeries
 * @static
 * @memberOf module:Collections
 * @method
 * @see [async.some]{@link module:Collections.some}
 * @alias anySeries
 * @category Collection
 * @param {Array|Iterable|Object} coll - A collection to iterate over.
 * @param {AsyncFunction} iteratee - An async truth test to apply to each item
 * in the collections in series.
 * The iteratee should complete with a boolean `result` value.
 * Invoked with (item, callback).
 * @param {Function} [callback] - A callback which is called as soon as any
 * iteratee returns `true`, or after all the iteratee functions have finished.
 * Result will be either `true` or `false` depending on the values of the async
 * tests. Invoked with (err, result).
 */
var someSeries = doLimit(someLimit, 1);

/**
 * Sorts a list by the results of running each `coll` value through an async
 * `iteratee`.
 *
 * @name sortBy
 * @static
 * @memberOf module:Collections
 * @method
 * @category Collection
 * @param {Array|Iterable|Object} coll - A collection to iterate over.
 * @param {AsyncFunction} iteratee - An async function to apply to each item in
 * `coll`.
 * The iteratee should complete with a value to use as the sort criteria as
 * its `result`.
 * Invoked with (item, callback).
 * @param {Function} callback - A callback which is called after all the
 * `iteratee` functions have finished, or an error occurs. Results is the items
 * from the original `coll` sorted by the values returned by the `iteratee`
 * calls. Invoked with (err, results).
 * @example
 *
 * async.sortBy(['file1','file2','file3'], function(file, callback) {
 *     fs.stat(file, function(err, stats) {
 *         callback(err, stats.mtime);
 *     });
 * }, function(err, results) {
 *     // results is now the original array of files sorted by
 *     // modified date
 * });
 *
 * // By modifying the callback parameter the
 * // sorting order can be influenced:
 *
 * // ascending order
 * async.sortBy([1,9,3,5], function(x, callback) {
 *     callback(null, x);
 * }, function(err,result) {
 *     // result callback
 * });
 *
 * // descending order
 * async.sortBy([1,9,3,5], function(x, callback) {
 *     callback(null, x*-1);    //<- x*-1 instead of x, turns the order around
 * }, function(err,result) {
 *     // result callback
 * });
 */
function sortBy (coll, iteratee, callback) {
    var _iteratee = wrapAsync(iteratee);
    map(coll, function (x, callback) {
        _iteratee(x, function (err, criteria) {
            if (err) return callback(err);
            callback(null, {value: x, criteria: criteria});
        });
    }, function (err, results) {
        if (err) return callback(err);
        callback(null, arrayMap(results.sort(comparator), baseProperty('value')));
    });

    function comparator(left, right) {
        var a = left.criteria, b = right.criteria;
        return a < b ? -1 : a > b ? 1 : 0;
    }
}

/**
 * Sets a time limit on an asynchronous function. If the function does not call
 * its callback within the specified milliseconds, it will be called with a
 * timeout error. The code property for the error object will be `'ETIMEDOUT'`.
 *
 * @name timeout
 * @static
 * @memberOf module:Utils
 * @method
 * @category Util
 * @param {AsyncFunction} asyncFn - The async function to limit in time.
 * @param {number} milliseconds - The specified time limit.
 * @param {*} [info] - Any variable you want attached (`string`, `object`, etc)
 * to timeout Error for more information..
 * @returns {AsyncFunction} Returns a wrapped function that can be used with any
 * of the control flow functions.
 * Invoke this function with the same parameters as you would `asyncFunc`.
 * @example
 *
 * function myFunction(foo, callback) {
 *     doAsyncTask(foo, function(err, data) {
 *         // handle errors
 *         if (err) return callback(err);
 *
 *         // do some stuff ...
 *
 *         // return processed data
 *         return callback(null, data);
 *     });
 * }
 *
 * var wrapped = async.timeout(myFunction, 1000);
 *
 * // call `wrapped` as you would `myFunction`
 * wrapped({ bar: 'bar' }, function(err, data) {
 *     // if `myFunction` takes < 1000 ms to execute, `err`
 *     // and `data` will have their expected values
 *
 *     // else `err` will be an Error with the code 'ETIMEDOUT'
 * });
 */
function timeout(asyncFn, milliseconds, info) {
    var fn = wrapAsync(asyncFn);

    return initialParams(function (args, callback) {
        var timedOut = false;
        var timer;

        function timeoutCallback() {
            var name = asyncFn.name || 'anonymous';
            var error  = new Error('Callback function "' + name + '" timed out.');
            error.code = 'ETIMEDOUT';
            if (info) {
                error.info = info;
            }
            timedOut = true;
            callback(error);
        }

        args.push(function () {
            if (!timedOut) {
                callback.apply(null, arguments);
                clearTimeout(timer);
            }
        });

        // setup timer and call original function
        timer = setTimeout(timeoutCallback, milliseconds);
        fn.apply(null, args);
    });
}

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeCeil = Math.ceil;
var nativeMax = Math.max;

/**
 * The base implementation of `_.range` and `_.rangeRight` which doesn't
 * coerce arguments.
 *
 * @private
 * @param {number} start The start of the range.
 * @param {number} end The end of the range.
 * @param {number} step The value to increment or decrement by.
 * @param {boolean} [fromRight] Specify iterating from right to left.
 * @returns {Array} Returns the range of numbers.
 */
function baseRange(start, end, step, fromRight) {
  var index = -1,
      length = nativeMax(nativeCeil((end - start) / (step || 1)), 0),
      result = Array(length);

  while (length--) {
    result[fromRight ? length : ++index] = start;
    start += step;
  }
  return result;
}

/**
 * The same as [times]{@link module:ControlFlow.times} but runs a maximum of `limit` async operations at a
 * time.
 *
 * @name timesLimit
 * @static
 * @memberOf module:ControlFlow
 * @method
 * @see [async.times]{@link module:ControlFlow.times}
 * @category Control Flow
 * @param {number} count - The number of times to run the function.
 * @param {number} limit - The maximum number of async operations at a time.
 * @param {AsyncFunction} iteratee - The async function to call `n` times.
 * Invoked with the iteration index and a callback: (n, next).
 * @param {Function} callback - see [async.map]{@link module:Collections.map}.
 */
function timeLimit(count, limit, iteratee, callback) {
    var _iteratee = wrapAsync(iteratee);
    mapLimit(baseRange(0, count, 1), limit, _iteratee, callback);
}

/**
 * Calls the `iteratee` function `n` times, and accumulates results in the same
 * manner you would use with [map]{@link module:Collections.map}.
 *
 * @name times
 * @static
 * @memberOf module:ControlFlow
 * @method
 * @see [async.map]{@link module:Collections.map}
 * @category Control Flow
 * @param {number} n - The number of times to run the function.
 * @param {AsyncFunction} iteratee - The async function to call `n` times.
 * Invoked with the iteration index and a callback: (n, next).
 * @param {Function} callback - see {@link module:Collections.map}.
 * @example
 *
 * // Pretend this is some complicated async factory
 * var createUser = function(id, callback) {
 *     callback(null, {
 *         id: 'user' + id
 *     });
 * };
 *
 * // generate 5 users
 * async.times(5, function(n, next) {
 *     createUser(n, function(err, user) {
 *         next(err, user);
 *     });
 * }, function(err, users) {
 *     // we should now have 5 users
 * });
 */
var times = doLimit(timeLimit, Infinity);

/**
 * The same as [times]{@link module:ControlFlow.times} but runs only a single async operation at a time.
 *
 * @name timesSeries
 * @static
 * @memberOf module:ControlFlow
 * @method
 * @see [async.times]{@link module:ControlFlow.times}
 * @category Control Flow
 * @param {number} n - The number of times to run the function.
 * @param {AsyncFunction} iteratee - The async function to call `n` times.
 * Invoked with the iteration index and a callback: (n, next).
 * @param {Function} callback - see {@link module:Collections.map}.
 */
var timesSeries = doLimit(timeLimit, 1);

/**
 * A relative of `reduce`.  Takes an Object or Array, and iterates over each
 * element in series, each step potentially mutating an `accumulator` value.
 * The type of the accumulator defaults to the type of collection passed in.
 *
 * @name transform
 * @static
 * @memberOf module:Collections
 * @method
 * @category Collection
 * @param {Array|Iterable|Object} coll - A collection to iterate over.
 * @param {*} [accumulator] - The initial state of the transform.  If omitted,
 * it will default to an empty Object or Array, depending on the type of `coll`
 * @param {AsyncFunction} iteratee - A function applied to each item in the
 * collection that potentially modifies the accumulator.
 * Invoked with (accumulator, item, key, callback).
 * @param {Function} [callback] - A callback which is called after all the
 * `iteratee` functions have finished. Result is the transformed accumulator.
 * Invoked with (err, result).
 * @example
 *
 * async.transform([1,2,3], function(acc, item, index, callback) {
 *     // pointless async:
 *     process.nextTick(function() {
 *         acc.push(item * 2)
 *         callback(null)
 *     });
 * }, function(err, result) {
 *     // result is now equal to [2, 4, 6]
 * });
 *
 * @example
 *
 * async.transform({a: 1, b: 2, c: 3}, function (obj, val, key, callback) {
 *     setImmediate(function () {
 *         obj[key] = val * 2;
 *         callback();
 *     })
 * }, function (err, result) {
 *     // result is equal to {a: 2, b: 4, c: 6}
 * })
 */
function transform (coll, accumulator, iteratee, callback) {
    if (arguments.length <= 3) {
        callback = iteratee;
        iteratee = accumulator;
        accumulator = isArray(coll) ? [] : {};
    }
    callback = once(callback || noop);
    var _iteratee = wrapAsync(iteratee);

    eachOf(coll, function(v, k, cb) {
        _iteratee(accumulator, v, k, cb);
    }, function(err) {
        callback(err, accumulator);
    });
}

/**
 * It runs each task in series but stops whenever any of the functions were
 * successful. If one of the tasks were successful, the `callback` will be
 * passed the result of the successful task. If all tasks fail, the callback
 * will be passed the error and result (if any) of the final attempt.
 *
 * @name tryEach
 * @static
 * @memberOf module:ControlFlow
 * @method
 * @category Control Flow
 * @param {Array|Iterable|Object} tasks - A collection containing functions to
 * run, each function is passed a `callback(err, result)` it must call on
 * completion with an error `err` (which can be `null`) and an optional `result`
 * value.
 * @param {Function} [callback] - An optional callback which is called when one
 * of the tasks has succeeded, or all have failed. It receives the `err` and
 * `result` arguments of the last attempt at completing the `task`. Invoked with
 * (err, results).
 * @example
 * async.tryEach([
 *     function getDataFromFirstWebsite(callback) {
 *         // Try getting the data from the first website
 *         callback(err, data);
 *     },
 *     function getDataFromSecondWebsite(callback) {
 *         // First website failed,
 *         // Try getting the data from the backup website
 *         callback(err, data);
 *     }
 * ],
 * // optional callback
 * function(err, results) {
 *     Now do something with the data.
 * });
 *
 */
function tryEach(tasks, callback) {
    var error = null;
    var result;
    callback = callback || noop;
    eachSeries(tasks, function(task, callback) {
        wrapAsync(task)(function (err, res/*, ...args*/) {
            if (arguments.length > 2) {
                result = slice(arguments, 1);
            } else {
                result = res;
            }
            error = err;
            callback(!err);
        });
    }, function () {
        callback(error, result);
    });
}

/**
 * Undoes a [memoize]{@link module:Utils.memoize}d function, reverting it to the original,
 * unmemoized form. Handy for testing.
 *
 * @name unmemoize
 * @static
 * @memberOf module:Utils
 * @method
 * @see [async.memoize]{@link module:Utils.memoize}
 * @category Util
 * @param {AsyncFunction} fn - the memoized function
 * @returns {AsyncFunction} a function that calls the original unmemoized function
 */
function unmemoize(fn) {
    return function () {
        return (fn.unmemoized || fn).apply(null, arguments);
    };
}

/**
 * Repeatedly call `iteratee`, while `test` returns `true`. Calls `callback` when
 * stopped, or an error occurs.
 *
 * @name whilst
 * @static
 * @memberOf module:ControlFlow
 * @method
 * @category Control Flow
 * @param {Function} test - synchronous truth test to perform before each
 * execution of `iteratee`. Invoked with ().
 * @param {AsyncFunction} iteratee - An async function which is called each time
 * `test` passes. Invoked with (callback).
 * @param {Function} [callback] - A callback which is called after the test
 * function has failed and repeated execution of `iteratee` has stopped. `callback`
 * will be passed an error and any arguments passed to the final `iteratee`'s
 * callback. Invoked with (err, [results]);
 * @returns undefined
 * @example
 *
 * var count = 0;
 * async.whilst(
 *     function() { return count < 5; },
 *     function(callback) {
 *         count++;
 *         setTimeout(function() {
 *             callback(null, count);
 *         }, 1000);
 *     },
 *     function (err, n) {
 *         // 5 seconds have passed, n = 5
 *     }
 * );
 */
function whilst(test, iteratee, callback) {
    callback = onlyOnce(callback || noop);
    var _iteratee = wrapAsync(iteratee);
    if (!test()) return callback(null);
    var next = function(err/*, ...args*/) {
        if (err) return callback(err);
        if (test()) return _iteratee(next);
        var args = slice(arguments, 1);
        callback.apply(null, [null].concat(args));
    };
    _iteratee(next);
}

/**
 * Repeatedly call `iteratee` until `test` returns `true`. Calls `callback` when
 * stopped, or an error occurs. `callback` will be passed an error and any
 * arguments passed to the final `iteratee`'s callback.
 *
 * The inverse of [whilst]{@link module:ControlFlow.whilst}.
 *
 * @name until
 * @static
 * @memberOf module:ControlFlow
 * @method
 * @see [async.whilst]{@link module:ControlFlow.whilst}
 * @category Control Flow
 * @param {Function} test - synchronous truth test to perform before each
 * execution of `iteratee`. Invoked with ().
 * @param {AsyncFunction} iteratee - An async function which is called each time
 * `test` fails. Invoked with (callback).
 * @param {Function} [callback] - A callback which is called after the test
 * function has passed and repeated execution of `iteratee` has stopped. `callback`
 * will be passed an error and any arguments passed to the final `iteratee`'s
 * callback. Invoked with (err, [results]);
 */
function until(test, iteratee, callback) {
    whilst(function() {
        return !test.apply(this, arguments);
    }, iteratee, callback);
}

/**
 * Runs the `tasks` array of functions in series, each passing their results to
 * the next in the array. However, if any of the `tasks` pass an error to their
 * own callback, the next function is not executed, and the main `callback` is
 * immediately called with the error.
 *
 * @name waterfall
 * @static
 * @memberOf module:ControlFlow
 * @method
 * @category Control Flow
 * @param {Array} tasks - An array of [async functions]{@link AsyncFunction}
 * to run.
 * Each function should complete with any number of `result` values.
 * The `result` values will be passed as arguments, in order, to the next task.
 * @param {Function} [callback] - An optional callback to run once all the
 * functions have completed. This will be passed the results of the last task's
 * callback. Invoked with (err, [results]).
 * @returns undefined
 * @example
 *
 * async.waterfall([
 *     function(callback) {
 *         callback(null, 'one', 'two');
 *     },
 *     function(arg1, arg2, callback) {
 *         // arg1 now equals 'one' and arg2 now equals 'two'
 *         callback(null, 'three');
 *     },
 *     function(arg1, callback) {
 *         // arg1 now equals 'three'
 *         callback(null, 'done');
 *     }
 * ], function (err, result) {
 *     // result now equals 'done'
 * });
 *
 * // Or, with named functions:
 * async.waterfall([
 *     myFirstFunction,
 *     mySecondFunction,
 *     myLastFunction,
 * ], function (err, result) {
 *     // result now equals 'done'
 * });
 * function myFirstFunction(callback) {
 *     callback(null, 'one', 'two');
 * }
 * function mySecondFunction(arg1, arg2, callback) {
 *     // arg1 now equals 'one' and arg2 now equals 'two'
 *     callback(null, 'three');
 * }
 * function myLastFunction(arg1, callback) {
 *     // arg1 now equals 'three'
 *     callback(null, 'done');
 * }
 */
var waterfall = function(tasks, callback) {
    callback = once(callback || noop);
    if (!isArray(tasks)) return callback(new Error('First argument to waterfall must be an array of functions'));
    if (!tasks.length) return callback();
    var taskIndex = 0;

    function nextTask(args) {
        var task = wrapAsync(tasks[taskIndex++]);
        args.push(onlyOnce(next));
        task.apply(null, args);
    }

    function next(err/*, ...args*/) {
        if (err || taskIndex === tasks.length) {
            return callback.apply(null, arguments);
        }
        nextTask(slice(arguments, 1));
    }

    nextTask([]);
};

/**
 * An "async function" in the context of Async is an asynchronous function with
 * a variable number of parameters, with the final parameter being a callback.
 * (`function (arg1, arg2, ..., callback) {}`)
 * The final callback is of the form `callback(err, results...)`, which must be
 * called once the function is completed.  The callback should be called with a
 * Error as its first argument to signal that an error occurred.
 * Otherwise, if no error occurred, it should be called with `null` as the first
 * argument, and any additional `result` arguments that may apply, to signal
 * successful completion.
 * The callback must be called exactly once, ideally on a later tick of the
 * JavaScript event loop.
 *
 * This type of function is also referred to as a "Node-style async function",
 * or a "continuation passing-style function" (CPS). Most of the methods of this
 * library are themselves CPS/Node-style async functions, or functions that
 * return CPS/Node-style async functions.
 *
 * Wherever we accept a Node-style async function, we also directly accept an
 * [ES2017 `async` function]{@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/async_function}.
 * In this case, the `async` function will not be passed a final callback
 * argument, and any thrown error will be used as the `err` argument of the
 * implicit callback, and the return value will be used as the `result` value.
 * (i.e. a `rejected` of the returned Promise becomes the `err` callback
 * argument, and a `resolved` value becomes the `result`.)
 *
 * Note, due to JavaScript limitations, we can only detect native `async`
 * functions and not transpilied implementations.
 * Your environment must have `async`/`await` support for this to work.
 * (e.g. Node > v7.6, or a recent version of a modern browser).
 * If you are using `async` functions through a transpiler (e.g. Babel), you
 * must still wrap the function with [asyncify]{@link module:Utils.asyncify},
 * because the `async function` will be compiled to an ordinary function that
 * returns a promise.
 *
 * @typedef {Function} AsyncFunction
 * @static
 */

/**
 * Async is a utility module which provides straight-forward, powerful functions
 * for working with asynchronous JavaScript. Although originally designed for
 * use with [Node.js](http://nodejs.org) and installable via
 * `npm install --save async`, it can also be used directly in the browser.
 * @module async
 * @see AsyncFunction
 */


/**
 * A collection of `async` functions for manipulating collections, such as
 * arrays and objects.
 * @module Collections
 */

/**
 * A collection of `async` functions for controlling the flow through a script.
 * @module ControlFlow
 */

/**
 * A collection of `async` utility functions.
 * @module Utils
 */

var index = {
    apply: apply,
    applyEach: applyEach,
    applyEachSeries: applyEachSeries,
    asyncify: asyncify,
    auto: auto,
    autoInject: autoInject,
    cargo: cargo,
    compose: compose,
    concat: concat,
    concatLimit: concatLimit,
    concatSeries: concatSeries,
    constant: constant,
    detect: detect,
    detectLimit: detectLimit,
    detectSeries: detectSeries,
    dir: dir,
    doDuring: doDuring,
    doUntil: doUntil,
    doWhilst: doWhilst,
    during: during,
    each: eachLimit,
    eachLimit: eachLimit$1,
    eachOf: eachOf,
    eachOfLimit: eachOfLimit,
    eachOfSeries: eachOfSeries,
    eachSeries: eachSeries,
    ensureAsync: ensureAsync,
    every: every,
    everyLimit: everyLimit,
    everySeries: everySeries,
    filter: filter,
    filterLimit: filterLimit,
    filterSeries: filterSeries,
    forever: forever,
    groupBy: groupBy,
    groupByLimit: groupByLimit,
    groupBySeries: groupBySeries,
    log: log,
    map: map,
    mapLimit: mapLimit,
    mapSeries: mapSeries,
    mapValues: mapValues,
    mapValuesLimit: mapValuesLimit,
    mapValuesSeries: mapValuesSeries,
    memoize: memoize,
    nextTick: nextTick,
    parallel: parallelLimit,
    parallelLimit: parallelLimit$1,
    priorityQueue: priorityQueue,
    queue: queue$1,
    race: race,
    reduce: reduce,
    reduceRight: reduceRight,
    reflect: reflect,
    reflectAll: reflectAll,
    reject: reject,
    rejectLimit: rejectLimit,
    rejectSeries: rejectSeries,
    retry: retry,
    retryable: retryable,
    seq: seq,
    series: series,
    setImmediate: setImmediate$1,
    some: some,
    someLimit: someLimit,
    someSeries: someSeries,
    sortBy: sortBy,
    timeout: timeout,
    times: times,
    timesLimit: timeLimit,
    timesSeries: timesSeries,
    transform: transform,
    tryEach: tryEach,
    unmemoize: unmemoize,
    until: until,
    waterfall: waterfall,
    whilst: whilst,

    // aliases
    all: every,
    allLimit: everyLimit,
    allSeries: everySeries,
    any: some,
    anyLimit: someLimit,
    anySeries: someSeries,
    find: detect,
    findLimit: detectLimit,
    findSeries: detectSeries,
    forEach: eachLimit,
    forEachSeries: eachSeries,
    forEachLimit: eachLimit$1,
    forEachOf: eachOf,
    forEachOfSeries: eachOfSeries,
    forEachOfLimit: eachOfLimit,
    inject: reduce,
    foldl: reduce,
    foldr: reduceRight,
    select: filter,
    selectLimit: filterLimit,
    selectSeries: filterSeries,
    wrapSync: asyncify
};

exports['default'] = index;
exports.apply = apply;
exports.applyEach = applyEach;
exports.applyEachSeries = applyEachSeries;
exports.asyncify = asyncify;
exports.auto = auto;
exports.autoInject = autoInject;
exports.cargo = cargo;
exports.compose = compose;
exports.concat = concat;
exports.concatLimit = concatLimit;
exports.concatSeries = concatSeries;
exports.constant = constant;
exports.detect = detect;
exports.detectLimit = detectLimit;
exports.detectSeries = detectSeries;
exports.dir = dir;
exports.doDuring = doDuring;
exports.doUntil = doUntil;
exports.doWhilst = doWhilst;
exports.during = during;
exports.each = eachLimit;
exports.eachLimit = eachLimit$1;
exports.eachOf = eachOf;
exports.eachOfLimit = eachOfLimit;
exports.eachOfSeries = eachOfSeries;
exports.eachSeries = eachSeries;
exports.ensureAsync = ensureAsync;
exports.every = every;
exports.everyLimit = everyLimit;
exports.everySeries = everySeries;
exports.filter = filter;
exports.filterLimit = filterLimit;
exports.filterSeries = filterSeries;
exports.forever = forever;
exports.groupBy = groupBy;
exports.groupByLimit = groupByLimit;
exports.groupBySeries = groupBySeries;
exports.log = log;
exports.map = map;
exports.mapLimit = mapLimit;
exports.mapSeries = mapSeries;
exports.mapValues = mapValues;
exports.mapValuesLimit = mapValuesLimit;
exports.mapValuesSeries = mapValuesSeries;
exports.memoize = memoize;
exports.nextTick = nextTick;
exports.parallel = parallelLimit;
exports.parallelLimit = parallelLimit$1;
exports.priorityQueue = priorityQueue;
exports.queue = queue$1;
exports.race = race;
exports.reduce = reduce;
exports.reduceRight = reduceRight;
exports.reflect = reflect;
exports.reflectAll = reflectAll;
exports.reject = reject;
exports.rejectLimit = rejectLimit;
exports.rejectSeries = rejectSeries;
exports.retry = retry;
exports.retryable = retryable;
exports.seq = seq;
exports.series = series;
exports.setImmediate = setImmediate$1;
exports.some = some;
exports.someLimit = someLimit;
exports.someSeries = someSeries;
exports.sortBy = sortBy;
exports.timeout = timeout;
exports.times = times;
exports.timesLimit = timeLimit;
exports.timesSeries = timesSeries;
exports.transform = transform;
exports.tryEach = tryEach;
exports.unmemoize = unmemoize;
exports.until = until;
exports.waterfall = waterfall;
exports.whilst = whilst;
exports.all = every;
exports.allLimit = everyLimit;
exports.allSeries = everySeries;
exports.any = some;
exports.anyLimit = someLimit;
exports.anySeries = someSeries;
exports.find = detect;
exports.findLimit = detectLimit;
exports.findSeries = detectSeries;
exports.forEach = eachLimit;
exports.forEachSeries = eachSeries;
exports.forEachLimit = eachLimit$1;
exports.forEachOf = eachOf;
exports.forEachOfSeries = eachOfSeries;
exports.forEachOfLimit = eachOfLimit;
exports.inject = reduce;
exports.foldl = reduce;
exports.foldr = reduceRight;
exports.select = filter;
exports.selectLimit = filterLimit;
exports.selectSeries = filterSeries;
exports.wrapSync = asyncify;

Object.defineProperty(exports, '__esModule', { value: true });

})));


/***/ }),

/***/ "./node_modules/automation-events/build/es5/bundle.js":
/*!************************************************************!*\
  !*** ./node_modules/automation-events/build/es5/bundle.js ***!
  \************************************************************/
/*! unknown exports (runtime-defined) */
/*! runtime requirements: __webpack_exports__, top-level-this-exports, __webpack_require__ */
/*! CommonJS bailout: this is used directly at 5:2-6 */
/*! CommonJS bailout: exports is used directly at 2:75-82 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

(function (global, factory) {
     true ? factory(exports, __webpack_require__(/*! @babel/runtime/helpers/slicedToArray */ "./node_modules/@babel/runtime/helpers/slicedToArray.js"), __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "./node_modules/@babel/runtime/helpers/classCallCheck.js"), __webpack_require__(/*! @babel/runtime/helpers/createClass */ "./node_modules/@babel/runtime/helpers/createClass.js")) :
    0;
}(this, (function (exports, _slicedToArray, _classCallCheck, _createClass) { 'use strict';

    function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

    var _slicedToArray__default = /*#__PURE__*/_interopDefaultLegacy(_slicedToArray);
    var _classCallCheck__default = /*#__PURE__*/_interopDefaultLegacy(_classCallCheck);
    var _createClass__default = /*#__PURE__*/_interopDefaultLegacy(_createClass);

    var createExtendedExponentialRampToValueAutomationEvent = function createExtendedExponentialRampToValueAutomationEvent(value, endTime, insertTime) {
      return {
        endTime: endTime,
        insertTime: insertTime,
        type: 'exponentialRampToValue',
        value: value
      };
    };

    var createExtendedLinearRampToValueAutomationEvent = function createExtendedLinearRampToValueAutomationEvent(value, endTime, insertTime) {
      return {
        endTime: endTime,
        insertTime: insertTime,
        type: 'linearRampToValue',
        value: value
      };
    };

    var createSetValueAutomationEvent = function createSetValueAutomationEvent(value, startTime) {
      return {
        startTime: startTime,
        type: 'setValue',
        value: value
      };
    };

    var createSetValueCurveAutomationEvent = function createSetValueCurveAutomationEvent(values, startTime, duration) {
      return {
        duration: duration,
        startTime: startTime,
        type: 'setValueCurve',
        values: values
      };
    };

    var getTargetValueAtTime = function getTargetValueAtTime(time, valueAtStartTime, _ref) {
      var startTime = _ref.startTime,
          target = _ref.target,
          timeConstant = _ref.timeConstant;
      return target + (valueAtStartTime - target) * Math.exp((startTime - time) / timeConstant);
    };

    var isExponentialRampToValueAutomationEvent = function isExponentialRampToValueAutomationEvent(automationEvent) {
      return automationEvent.type === 'exponentialRampToValue';
    };

    var isLinearRampToValueAutomationEvent = function isLinearRampToValueAutomationEvent(automationEvent) {
      return automationEvent.type === 'linearRampToValue';
    };

    var isAnyRampToValueAutomationEvent = function isAnyRampToValueAutomationEvent(automationEvent) {
      return isExponentialRampToValueAutomationEvent(automationEvent) || isLinearRampToValueAutomationEvent(automationEvent);
    };

    var isSetValueAutomationEvent = function isSetValueAutomationEvent(automationEvent) {
      return automationEvent.type === 'setValue';
    };

    var isSetValueCurveAutomationEvent = function isSetValueCurveAutomationEvent(automationEvent) {
      return automationEvent.type === 'setValueCurve';
    };

    var getValueOfAutomationEventAtIndexAtTime = function getValueOfAutomationEventAtIndexAtTime(automationEvents, index, time, defaultValue) {
      var automationEvent = automationEvents[index];
      return automationEvent === undefined ? defaultValue : isAnyRampToValueAutomationEvent(automationEvent) || isSetValueAutomationEvent(automationEvent) ? automationEvent.value : isSetValueCurveAutomationEvent(automationEvent) ? automationEvent.values[automationEvent.values.length - 1] : getTargetValueAtTime(time, getValueOfAutomationEventAtIndexAtTime(automationEvents, index - 1, automationEvent.startTime, defaultValue), automationEvent);
    };

    var getEndTimeAndValueOfPreviousAutomationEvent = function getEndTimeAndValueOfPreviousAutomationEvent(automationEvents, index, currentAutomationEvent, nextAutomationEvent, defaultValue) {
      return currentAutomationEvent === undefined ? [nextAutomationEvent.insertTime, defaultValue] : isAnyRampToValueAutomationEvent(currentAutomationEvent) ? [currentAutomationEvent.endTime, currentAutomationEvent.value] : isSetValueAutomationEvent(currentAutomationEvent) ? [currentAutomationEvent.startTime, currentAutomationEvent.value] : isSetValueCurveAutomationEvent(currentAutomationEvent) ? [currentAutomationEvent.startTime + currentAutomationEvent.duration, currentAutomationEvent.values[currentAutomationEvent.values.length - 1]] : [currentAutomationEvent.startTime, getValueOfAutomationEventAtIndexAtTime(automationEvents, index - 1, currentAutomationEvent.startTime, defaultValue)];
    };

    var isCancelAndHoldAutomationEvent = function isCancelAndHoldAutomationEvent(automationEvent) {
      return automationEvent.type === 'cancelAndHold';
    };

    var isCancelScheduledValuesAutomationEvent = function isCancelScheduledValuesAutomationEvent(automationEvent) {
      return automationEvent.type === 'cancelScheduledValues';
    };

    var getEventTime = function getEventTime(automationEvent) {
      if (isCancelAndHoldAutomationEvent(automationEvent) || isCancelScheduledValuesAutomationEvent(automationEvent)) {
        return automationEvent.cancelTime;
      }

      if (isExponentialRampToValueAutomationEvent(automationEvent) || isLinearRampToValueAutomationEvent(automationEvent)) {
        return automationEvent.endTime;
      }

      return automationEvent.startTime;
    };

    var getExponentialRampValueAtTime = function getExponentialRampValueAtTime(time, startTime, valueAtStartTime, _ref) {
      var endTime = _ref.endTime,
          value = _ref.value;

      if (valueAtStartTime === value) {
        return value;
      }

      if (0 < valueAtStartTime && 0 < value || valueAtStartTime < 0 && value < 0) {
        return valueAtStartTime * Math.pow(value / valueAtStartTime, (time - startTime) / (endTime - startTime));
      }

      return 0;
    };

    var getLinearRampValueAtTime = function getLinearRampValueAtTime(time, startTime, valueAtStartTime, _ref) {
      var endTime = _ref.endTime,
          value = _ref.value;
      return valueAtStartTime + (time - startTime) / (endTime - startTime) * (value - valueAtStartTime);
    };

    var interpolateValue = function interpolateValue(values, theoreticIndex) {
      var lowerIndex = Math.floor(theoreticIndex);
      var upperIndex = Math.ceil(theoreticIndex);

      if (lowerIndex === upperIndex) {
        return values[lowerIndex];
      }

      return (1 - (theoreticIndex - lowerIndex)) * values[lowerIndex] + (1 - (upperIndex - theoreticIndex)) * values[upperIndex];
    };

    var getValueCurveValueAtTime = function getValueCurveValueAtTime(time, _ref) {
      var duration = _ref.duration,
          startTime = _ref.startTime,
          values = _ref.values;
      var theoreticIndex = (time - startTime) / duration * (values.length - 1);
      return interpolateValue(values, theoreticIndex);
    };

    var isSetTargetAutomationEvent = function isSetTargetAutomationEvent(automationEvent) {
      return automationEvent.type === 'setTarget';
    };

    var AutomationEventList = /*#__PURE__*/function () {
      function AutomationEventList(defaultValue) {
        _classCallCheck__default['default'](this, AutomationEventList);

        this._automationEvents = [];
        this._currenTime = 0;
        this._defaultValue = defaultValue;
      }

      _createClass__default['default'](AutomationEventList, [{
        key: Symbol.iterator,
        value: function value() {
          return this._automationEvents[Symbol.iterator]();
        }
      }, {
        key: "add",
        value: function add(automationEvent) {
          var eventTime = getEventTime(automationEvent);

          if (isCancelAndHoldAutomationEvent(automationEvent) || isCancelScheduledValuesAutomationEvent(automationEvent)) {
            var index = this._automationEvents.findIndex(function (currentAutomationEvent) {
              if (isCancelScheduledValuesAutomationEvent(automationEvent) && isSetValueCurveAutomationEvent(currentAutomationEvent)) {
                return currentAutomationEvent.startTime + currentAutomationEvent.duration >= eventTime;
              }

              return getEventTime(currentAutomationEvent) >= eventTime;
            });

            var removedAutomationEvent = this._automationEvents[index];

            if (index !== -1) {
              this._automationEvents = this._automationEvents.slice(0, index);
            }

            if (isCancelAndHoldAutomationEvent(automationEvent)) {
              var lastAutomationEvent = this._automationEvents[this._automationEvents.length - 1];

              if (removedAutomationEvent !== undefined && isAnyRampToValueAutomationEvent(removedAutomationEvent)) {
                if (isSetTargetAutomationEvent(lastAutomationEvent)) {
                  throw new Error('The internal list is malformed.');
                }

                var startTime = isSetValueCurveAutomationEvent(lastAutomationEvent) ? lastAutomationEvent.startTime + lastAutomationEvent.duration : getEventTime(lastAutomationEvent);
                var startValue = isSetValueCurveAutomationEvent(lastAutomationEvent) ? lastAutomationEvent.values[lastAutomationEvent.values.length - 1] : lastAutomationEvent.value;
                var value = isExponentialRampToValueAutomationEvent(removedAutomationEvent) ? getExponentialRampValueAtTime(eventTime, startTime, startValue, removedAutomationEvent) : getLinearRampValueAtTime(eventTime, startTime, startValue, removedAutomationEvent);
                var truncatedAutomationEvent = isExponentialRampToValueAutomationEvent(removedAutomationEvent) ? createExtendedExponentialRampToValueAutomationEvent(value, eventTime, this._currenTime) : createExtendedLinearRampToValueAutomationEvent(value, eventTime, this._currenTime);

                this._automationEvents.push(truncatedAutomationEvent);
              }

              if (lastAutomationEvent !== undefined && isSetTargetAutomationEvent(lastAutomationEvent)) {
                this._automationEvents.push(createSetValueAutomationEvent(this.getValue(eventTime), eventTime));
              }

              if (lastAutomationEvent !== undefined && isSetValueCurveAutomationEvent(lastAutomationEvent) && lastAutomationEvent.startTime + lastAutomationEvent.duration > eventTime) {
                this._automationEvents[this._automationEvents.length - 1] = createSetValueCurveAutomationEvent(new Float32Array([6, 7]), lastAutomationEvent.startTime, eventTime - lastAutomationEvent.startTime);
              }
            }
          } else {
            var _index = this._automationEvents.findIndex(function (currentAutomationEvent) {
              return getEventTime(currentAutomationEvent) > eventTime;
            });

            var previousAutomationEvent = _index === -1 ? this._automationEvents[this._automationEvents.length - 1] : this._automationEvents[_index - 1];

            if (previousAutomationEvent !== undefined && isSetValueCurveAutomationEvent(previousAutomationEvent) && getEventTime(previousAutomationEvent) + previousAutomationEvent.duration > eventTime) {
              return false;
            }

            var persistentAutomationEvent = isExponentialRampToValueAutomationEvent(automationEvent) ? createExtendedExponentialRampToValueAutomationEvent(automationEvent.value, automationEvent.endTime, this._currenTime) : isLinearRampToValueAutomationEvent(automationEvent) ? createExtendedLinearRampToValueAutomationEvent(automationEvent.value, eventTime, this._currenTime) : automationEvent;

            if (_index === -1) {
              this._automationEvents.push(persistentAutomationEvent);
            } else {
              if (isSetValueCurveAutomationEvent(automationEvent) && eventTime + automationEvent.duration > getEventTime(this._automationEvents[_index])) {
                return false;
              }

              this._automationEvents.splice(_index, 0, persistentAutomationEvent);
            }
          }

          return true;
        }
      }, {
        key: "flush",
        value: function flush(time) {
          var index = this._automationEvents.findIndex(function (currentAutomationEvent) {
            return getEventTime(currentAutomationEvent) > time;
          });

          if (index > 1) {
            var remainingAutomationEvents = this._automationEvents.slice(index - 1);

            var firstRemainingAutomationEvent = remainingAutomationEvents[0];

            if (isSetTargetAutomationEvent(firstRemainingAutomationEvent)) {
              remainingAutomationEvents.unshift(createSetValueAutomationEvent(getValueOfAutomationEventAtIndexAtTime(this._automationEvents, index - 2, firstRemainingAutomationEvent.startTime, this._defaultValue), firstRemainingAutomationEvent.startTime));
            }

            this._automationEvents = remainingAutomationEvents;
          }
        }
      }, {
        key: "getValue",
        value: function getValue(time) {
          if (this._automationEvents.length === 0) {
            return this._defaultValue;
          }

          var lastAutomationEvent = this._automationEvents[this._automationEvents.length - 1];

          var index = this._automationEvents.findIndex(function (automationEvent) {
            return getEventTime(automationEvent) > time;
          });

          var nextAutomationEvent = this._automationEvents[index];
          var currentAutomationEvent = getEventTime(lastAutomationEvent) <= time ? lastAutomationEvent : this._automationEvents[index - 1];

          if (currentAutomationEvent !== undefined && isSetTargetAutomationEvent(currentAutomationEvent) && (nextAutomationEvent === undefined || !isAnyRampToValueAutomationEvent(nextAutomationEvent) || nextAutomationEvent.insertTime > time)) {
            return getTargetValueAtTime(time, getValueOfAutomationEventAtIndexAtTime(this._automationEvents, index - 2, currentAutomationEvent.startTime, this._defaultValue), currentAutomationEvent);
          }

          if (currentAutomationEvent !== undefined && isSetValueAutomationEvent(currentAutomationEvent) && (nextAutomationEvent === undefined || !isAnyRampToValueAutomationEvent(nextAutomationEvent))) {
            return currentAutomationEvent.value;
          }

          if (currentAutomationEvent !== undefined && isSetValueCurveAutomationEvent(currentAutomationEvent) && (nextAutomationEvent === undefined || !isAnyRampToValueAutomationEvent(nextAutomationEvent) || currentAutomationEvent.startTime + currentAutomationEvent.duration > time)) {
            if (time < currentAutomationEvent.startTime + currentAutomationEvent.duration) {
              return getValueCurveValueAtTime(time, currentAutomationEvent);
            }

            return currentAutomationEvent.values[currentAutomationEvent.values.length - 1];
          }

          if (currentAutomationEvent !== undefined && isAnyRampToValueAutomationEvent(currentAutomationEvent) && (nextAutomationEvent === undefined || !isAnyRampToValueAutomationEvent(nextAutomationEvent))) {
            return currentAutomationEvent.value;
          }

          if (nextAutomationEvent !== undefined && isExponentialRampToValueAutomationEvent(nextAutomationEvent)) {
            var _getEndTimeAndValueOf = getEndTimeAndValueOfPreviousAutomationEvent(this._automationEvents, index - 1, currentAutomationEvent, nextAutomationEvent, this._defaultValue),
                _getEndTimeAndValueOf2 = _slicedToArray__default['default'](_getEndTimeAndValueOf, 2),
                startTime = _getEndTimeAndValueOf2[0],
                value = _getEndTimeAndValueOf2[1];

            return getExponentialRampValueAtTime(time, startTime, value, nextAutomationEvent);
          }

          if (nextAutomationEvent !== undefined && isLinearRampToValueAutomationEvent(nextAutomationEvent)) {
            var _getEndTimeAndValueOf3 = getEndTimeAndValueOfPreviousAutomationEvent(this._automationEvents, index - 1, currentAutomationEvent, nextAutomationEvent, this._defaultValue),
                _getEndTimeAndValueOf4 = _slicedToArray__default['default'](_getEndTimeAndValueOf3, 2),
                _startTime = _getEndTimeAndValueOf4[0],
                _value = _getEndTimeAndValueOf4[1];

            return getLinearRampValueAtTime(time, _startTime, _value, nextAutomationEvent);
          }

          return this._defaultValue;
        }
      }]);

      return AutomationEventList;
    }();

    var createCancelAndHoldAutomationEvent = function createCancelAndHoldAutomationEvent(cancelTime) {
      return {
        cancelTime: cancelTime,
        type: 'cancelAndHold'
      };
    };

    var createCancelScheduledValuesAutomationEvent = function createCancelScheduledValuesAutomationEvent(cancelTime) {
      return {
        cancelTime: cancelTime,
        type: 'cancelScheduledValues'
      };
    };

    var createExponentialRampToValueAutomationEvent = function createExponentialRampToValueAutomationEvent(value, endTime) {
      return {
        endTime: endTime,
        type: 'exponentialRampToValue',
        value: value
      };
    };

    var createLinearRampToValueAutomationEvent = function createLinearRampToValueAutomationEvent(value, endTime) {
      return {
        endTime: endTime,
        type: 'linearRampToValue',
        value: value
      };
    };

    var createSetTargetAutomationEvent = function createSetTargetAutomationEvent(target, startTime, timeConstant) {
      return {
        startTime: startTime,
        target: target,
        timeConstant: timeConstant,
        type: 'setTarget'
      };
    };

    exports.AutomationEventList = AutomationEventList;
    exports.createCancelAndHoldAutomationEvent = createCancelAndHoldAutomationEvent;
    exports.createCancelScheduledValuesAutomationEvent = createCancelScheduledValuesAutomationEvent;
    exports.createExponentialRampToValueAutomationEvent = createExponentialRampToValueAutomationEvent;
    exports.createLinearRampToValueAutomationEvent = createLinearRampToValueAutomationEvent;
    exports.createSetTargetAutomationEvent = createSetTargetAutomationEvent;
    exports.createSetValueAutomationEvent = createSetValueAutomationEvent;
    exports.createSetValueCurveAutomationEvent = createSetValueCurveAutomationEvent;

    Object.defineProperty(exports, '__esModule', { value: true });

})));


/***/ }),

/***/ "./src/app/index.js":
/*!**************************!*\
  !*** ./src/app/index.js ***!
  \**************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.n, __webpack_require__.r, __webpack_exports__, __webpack_require__.e, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _modules_GrainSynth__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./modules/GrainSynth */ "./src/app/modules/GrainSynth.js");
/* harmony import */ var _modules_FirebaseAudio__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./modules/FirebaseAudio */ "./src/app/modules/FirebaseAudio.js");
/* harmony import */ var _modules_Recorder__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./modules/Recorder */ "./src/app/modules/Recorder.js");
/* harmony import */ var _modules_MasterBus__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./modules/MasterBus */ "./src/app/modules/MasterBus.js");
/* harmony import */ var _modules_UISynth__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./modules/UISynth */ "./src/app/modules/UISynth.js");
/* harmony import */ var lodash_debounce__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! lodash/debounce */ "./node_modules/lodash/debounce.js");
/* harmony import */ var lodash_debounce__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(lodash_debounce__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var tone__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! tone */ "./node_modules/tone/build/esm/index.js");
/* harmony import */ var _utilityFunctions__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./utilityFunctions */ "./src/app/utilityFunctions.js");
/* harmony import */ var regenerator_runtime__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! regenerator-runtime */ "./node_modules/regenerator-runtime/runtime.js");
/* harmony import */ var regenerator_runtime__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(regenerator_runtime__WEBPACK_IMPORTED_MODULE_8__);
;




 // !TODO: GRAPH GAIN STAGING!!!
// GLOBAL VARIABLES


tone__WEBPACK_IMPORTED_MODULE_6__.debug.setLogger(console); // UTILITIES


 // suspend auto generated audio context from tone import

(0,tone__WEBPACK_IMPORTED_MODULE_6__.getContext)().rawContext.suspend();
const isMobile = window.innerWidth < 600;
let fallBack;
window.safari = navigator.userAgent.includes('Safari') && !navigator.userAgent.includes('Chrome');
let isMp3Supported = navigator.mediaCapabilities.decodingInfo({
  type: 'file',
  audio: {
    contentType: 'audio/mp3'
  }
}).then(function (result) {
  return result.supported;
}); // window.safari = false;

let safariAudioTrack;
let isMuted = true;
let muteClicked = 0;
let sampleRate = 44100; // Turn on logging

let logging = true; // create own audio context

let soundtrackAudioCtx = new tone__WEBPACK_IMPORTED_MODULE_6__.Context({
  latencyHint: 'playback',
  updateInterval: 1,
  lookAhead: 0.1,
  bufferSize: 1024,
  state: 'suspended'
});
soundtrackAudioCtx.name = 'Playback Context';
/*
SAFARI FALLBACK
 */

window.soundtrackAudioCtx = soundtrackAudioCtx;

if (window.safari) {
  safariAudioTrack = new Audio(); // set to safari specific audio context

  (0,tone__WEBPACK_IMPORTED_MODULE_6__.setContext)(new webkitAudioContext()); // add polyfill for Media Recorder

  __webpack_require__.e(/*! import() */ "node_modules_audio-recorder-polyfill_index_js").then(__webpack_require__.bind(__webpack_require__, /*! audio-recorder-polyfill */ "./node_modules/audio-recorder-polyfill/index.js")).then(audioRecorder => {
    window.MediaRecorder = audioRecorder.default;
  });
  window.addEventListener('touchstart', () => {
    safariAudioTrack.autoplay = true;
    safariAudioTrack.muted = false;
  });
  console.log('loaded MediaRecorder polyfill for safari');
}

const loadFallback = async () => {
  if (typeof fallBack == 'undefined') {
    __webpack_require__.e(/*! import() | fallback */ "fallback").then(__webpack_require__.bind(__webpack_require__, /*! ./samples/fallback.mp3 */ "./src/app/samples/fallback.mp3")).then(file => {
      fallBack = file.default;
      safariAudioTrack.load();
      safariAudioTrack.src = fallBack;
      safariAudioTrack.loop = true;
      safariAudioTrack.addEventListener('loadedmetadata', () => {
        muteButton.classList = '';
        muteButton.classList.add('fa-volume-off');
        safariAudioTrack.muted = false;
        muteButton.classList.add('fa', 'fa-volume-off');
      });
    });
  }
};
/* GLOBAL VARIABLES */


(0,tone__WEBPACK_IMPORTED_MODULE_6__.setContext)(soundtrackAudioCtx);
let masterBus;
let synths = [];
let synthsLoaded = false;
const u = new _modules_UISynth__WEBPACK_IMPORTED_MODULE_4__.default(soundtrackAudioCtx);
let f = new _modules_FirebaseAudio__WEBPACK_IMPORTED_MODULE_1__.default(soundtrackAudioCtx);
const recordLength = 1000;
let r = new _modules_Recorder__WEBPACK_IMPORTED_MODULE_2__.default(recordLength, soundtrackAudioCtx);
const uiNotes = ['C3', 'F3', 'A3', 'E3', 'G3', 'C4', 'A4']; // number of different sources to use

const numSources = isMobile ? 1 : 3; // number of voices per synth

const numVoices = isMobile ? 2 : 3;
const muteButton = document.querySelector('#mute');
const recordButton = document.querySelector('#recordButton');
/* EVENT LISTENERS */
// allow unmuting once synths loaded from firebase

muteButton.onclick = async () => {
  //  if safari - load synths on unmute
  // keep track of number of clicks
  muteClicked++;
  isMuted = !isMuted;

  if (window.safari) {
    safariAudioTrack.volume = !isMuted * 0.8;
    u.master.gain.value = !isMuted;

    if (muteClicked === 1) {
      u.master.toDestination(); // document.querySelector("body").addEventListener("click", () => {
      //   u.play(uiNotes[~~Math.random * uiNotes.length]);
      // });

      UISound();
      soundtrackAudioCtx.resume();
      safariAudioTrack.play();
    }
  }

  changeMuteButton(); //  if synths are loaded, start audio and change DOM element

  if (synthsLoaded) {
    if (!isMuted) {
      if (muteClicked === 1) {
        startAudio();
      } else {
        restartAudio();
      }
    } else {
      stopAudio();
    }
  }
};

const recordSnippet = async () => {
  if (window.MediaRecorder) {
    safariAudioTrack && safariAudioTrack.pause();
    recordButton.classList.toggle('red');

    try {
      soundtrackAudioCtx.destination.volume = 0;
      await r.getPermissions();
      logging && (0,_utilityFunctions__WEBPACK_IMPORTED_MODULE_7__.soundLog)('got permissions');
      await r.recordChunks();
      const decodedBuffer = await r.loadToBuffer();
      setTimeout(() => {
        decodedBuffer && recordButton.classList.remove('red');
        reloadBuffers(decodedBuffer);
        f.uploadSample(r.audioBlob);
        safariAudioTrack && safariAudioTrack.play();
        soundtrackAudioCtx.destination.volume = 1;
      }, recordLength);
    } catch (error) {
      console.log(error);
      recordButton.classList.remove('red');
    }
  } else {
    console.log('media recording is not supported in this browser');
  }
};

recordButton.onclick = async () => {
  recordSnippet();
}; // list all samples in database


const subOsc = new tone__WEBPACK_IMPORTED_MODULE_6__.FMOscillator({
  frequency: 40,
  harmonicity: 0.5,
  detune: 0
});

const checkFileVolume = buf => {
  return Math.max(...buf.getChannelData(0));
};

const reloadBuffers = async (customBuffer = null) => {
  const mp3Supported = await isMp3Supported; // fetch new samples from database and load them into existing buffers

  if (!customBuffer) {
    synths.forEach(async synth => {
      await f.getRandomSample();
      let buf;

      if (mp3Supported) {
        let playBuf;
        buf = await (0,_utilityFunctions__WEBPACK_IMPORTED_MODULE_7__.fetchSample)(f.audioFile, soundtrackAudioCtx);

        if (checkFileVolume(buf) > 0) {
          playBuf = buf;
          console.log('clip is not silent, continuing');
        } else {
          await f.getRandomSample();
          buf = await (0,_utilityFunctions__WEBPACK_IMPORTED_MODULE_7__.fetchSample)(f.audioFile);
          playBuf = buf;
        }

        const resampled = await (0,_utilityFunctions__WEBPACK_IMPORTED_MODULE_7__.resampleBuffer)(playBuf, sampleRate);
        let floatBuf = new Float32Array(resampled.length); //  REMOVE SILENCE FROM SAMPLES BEFORE LOADING TO BUFFER -- ISSUE #9

        resampled.copyFromChannel(floatBuf, 0, 0);
        const newBuf = (0,_utilityFunctions__WEBPACK_IMPORTED_MODULE_7__.removeZeroValues)(floatBuf);
        synth.buffer.copyToChannel(newBuf, 0, 0);
      } else {
        console.log("can't reload buffers on this browser");
      } // purge buffer
      // floatBuf = null;


      synth.randomStarts(); // synth.rampVolume(1, soundtrackAudioCtx.currentTime + 10);

      synth.randomInterpolate();
      logging && (0,_utilityFunctions__WEBPACK_IMPORTED_MODULE_7__.soundLog)('reloaded buffers');
    });
  } else {
    let floatBuf = new Float32Array(customBuffer.length);
    floatBuf = customBuffer.getChannelData(0);
    const resampled = await (0,_utilityFunctions__WEBPACK_IMPORTED_MODULE_7__.resampleBuffer)(customBuffer, sampleRate);
    synths.forEach(synth => {
      synth.buffer.copyToChannel(resampled.getChannelData(0), 0, 0); // synth.randomStarts();
      // synth.randomInterpolate();

      logging && (0,_utilityFunctions__WEBPACK_IMPORTED_MODULE_7__.soundLog)('loaded user buffers'); // subOsc.start();
      // null the buffer so that doesn't try to reload the user buffer on next loop

      customBuffer = null;
    });
  }
}; // RADIUS LIMIT LISTENER


let radiuses = 0;
window.addEventListener('radius_reached', () => {
  radiuses++;
  const debounced = lodash_debounce__WEBPACK_IMPORTED_MODULE_5___default()(reloadBuffers, 1000);

  if (radiuses % 20 === 0) {
    debounced();
  }
}); // method to play UI sounds

const UISound = () => {
  let count = 0;
  let recordings = 0;
  let recordLimit = isMobile ? 1 : 3;
  window.addEventListener('pixel_added', e => {
    const {
      pixelX,
      pixelY
    } = e.data;
    count++; // restrict upload to counter

    if (count > 20 && count % 5 === 0) {
      recordings++;

      if (recordings < recordLimit) {
        recordSnippet();
      } else {
        console.log('user recording limit reached');
      }
    }

    !isMuted && u.play([pixelX, pixelY]);
  });
}; // SETUP subOscillator


const subOscillator = () => {
  subOsc.filter = new tone__WEBPACK_IMPORTED_MODULE_6__.Filter();
  subOsc.connect(subOsc.filter);
  const noise = new tone__WEBPACK_IMPORTED_MODULE_6__.Noise({
    type: 'pink',
    volume: -14
  });
  noise.connect(subOsc.filter);
  masterBus.connectSource(subOsc.filter);
  subOsc.volume.value = -48;
  subOsc.volume.targetRampTo(-24, 10);
  subOsc.filter.frequency.value = 80;
  subOsc.filter.gain.value = 10;
  noise.start('+1');
  subOsc.start('+1');
}; //  method to download samples from Firebase and load them into buffers - run on page load


const loadSynths = async () => {
  await f.listAll();
  const mp3Supported = await isMp3Supported;
  console.log(`mp3 is ${mp3Supported ? '' : 'not'} supported in this browser`);

  for (let i = 0; i < numSources; i++) {
    await f.getRandomSample();
    let buf;
    let playBuf;
    let resampled;

    if (mp3Supported) {
      buf = await (0,_utilityFunctions__WEBPACK_IMPORTED_MODULE_7__.fetchSample)(await (0,_utilityFunctions__WEBPACK_IMPORTED_MODULE_7__.randomChoice)(f.files.items).getDownloadURL(), soundtrackAudioCtx);

      if (checkFileVolume(buf) > 0) {
        playBuf = buf;
        console.log('clip is not silent, continuing');
      } else {
        console.log('clip is silent: reloading');
        buf = await (0,_utilityFunctions__WEBPACK_IMPORTED_MODULE_7__.fetchSample)(await (0,_utilityFunctions__WEBPACK_IMPORTED_MODULE_7__.randomChoice)(f.files.items).getDownloadURL());
        console.log(buf);
        playBuf = buf;
      }
    } else {
      buf = await (0,_utilityFunctions__WEBPACK_IMPORTED_MODULE_7__.aacDecode)(f.audioFile, soundtrackAudioCtx);
    }

    if (playBuf) {
      resampled = await (0,_utilityFunctions__WEBPACK_IMPORTED_MODULE_7__.resampleBuffer)(playBuf, sampleRate);
      logging && (0,_utilityFunctions__WEBPACK_IMPORTED_MODULE_7__.soundLog)('Loaded GrainSynth ' + (i + 1));

      if (!window.safari) {
        synths.push(new _modules_GrainSynth__WEBPACK_IMPORTED_MODULE_0__.default(resampled, soundtrackAudioCtx, numVoices));
      }
    }
  }

  synthsLoaded = true;
  muteButton.classList = [];
  muteButton.classList.add('fa', 'fa-volume-off');
  muteButton.disabled = false;
  logging && (0,_utilityFunctions__WEBPACK_IMPORTED_MODULE_7__.soundLog)('Voices loaded');
}; // method to start audio
// window.meter = new Meter();


const startAudio = async () => {
  // if the audioCtx is suspended - it must be the first time it is run
  if (!isMuted) {
    await (0,tone__WEBPACK_IMPORTED_MODULE_6__.start)();
    await soundtrackAudioCtx.resume();
    masterBus = new _modules_MasterBus__WEBPACK_IMPORTED_MODULE_3__.default(soundtrackAudioCtx);
    masterBus.connectSource(u.master);
    synths.forEach(async (synth, i) => {
      // wait for all of the individual grains to load
      await synth.isGrainLoaded(synth.grains[synth.grains.length - 1]); // if the synth isn't already playing...

      if (!synth.isStopped) {
        // setup synth parameters
        !isMobile && synth.grains.forEach(grain => grain.volume.value = 0.6);
        synth.grainOutput.gain.value = 1 / numSources;
        synth.filter.type = 'lowpass';
        synth.filter.frequency.value = 880 * (i + 1);
        synth.setDetune((i + 1) * 220 - numSources * 440);
        synth.setPitchShift(-12 / (i + 1)); // if lower frequency value, higher resonance for low-end drones

        if (synth.filter.frequency.value < 500) {
          synth.filter.Q.value = 2;
        } else {
          synth.filter.Q.value = 0.5;
        } // start the synths


        synth.randomInterpolate();
        synth.play(soundtrackAudioCtx.currentTime + i * 0.05); // connect the synth output to the master processing bus

        synth.output.disconnect(synth.dest);
        masterBus.connectSource(synth.output); //  if user clicks, randomize synth parameters and play a UI sound
      }
    });
    subOscillator();
    masterBus.lowpassFilter(5000, 1);
    !isMobile && masterBus.chorus(0.01, 300, 0.9);
    !isMobile && masterBus.reverb(true, 0.3, 4, 0.7);
    masterBus.dest.volume.value = 6; // masterBus.input.connect(window.meter);

    document.querySelector('body').addEventListener('click', () => {
      synths.forEach(synth => {
        synth.randomInterpolate();
      });
    });
    runLoops();
    subOscLoop();
  } // don't start audio unless the context is running -- requires user gesture


  if (soundtrackAudioCtx.state === 'closed') {
    console.log('audio context is closed by user gesture, restarting');
    await soundtrackAudioCtx.rawContext.resume();
  } // main synth setup loop

}; // Loops to synchronize with cisual content


const runLoops = () => {
  // // loop to poll paprticle system values
  synths[0].transport.scheduleRepeat(time => {
    pollValues();
  }, 10);
};

const subOscLoop = () => {
  synths[0].transport.scheduleRepeat(time => {
    subOsc.detune.rampTo((0,_utilityFunctions__WEBPACK_IMPORTED_MODULE_7__.mapValue)(Math.random(), 0, 1, -100, 100), 30);
    subOsc.harmonicity.rampTo((0,_utilityFunctions__WEBPACK_IMPORTED_MODULE_7__.mapValue)(Math.random(), 0, 1, 0.5, 2), 30);
  }, 30);
};

const pollValues = () => {
  try {
    if (ps && ps.particles) {
      let {
        radius,
        maxradius
      } = ps.particles[ps.particles.length - 1];
      synths.forEach((synth, i) => {
        synth.setDetune((0,_utilityFunctions__WEBPACK_IMPORTED_MODULE_7__.mapValue)(radius, 0, maxradius, -1000, 0.05));
        let filterFreq = (i + 1) * (0,_utilityFunctions__WEBPACK_IMPORTED_MODULE_7__.mapValue)(radius, 0, maxradius, 220, 440);
        !isMobile && synth.filter.frequency.rampTo(filterFreq, 10);
      });
      subOsc.filter.frequency.rampTo((0,_utilityFunctions__WEBPACK_IMPORTED_MODULE_7__.mapValue)(~~radius, 0, ~~maxradius, 50, 200), 10);
    }
  } catch (error) {
    console.warn('particle system not defined, threw error' + error);
  }
}; // STOP AUDIO


const stopAudio = () => {
  if (soundtrackAudioCtx.state === 'running') {
    soundtrackAudioCtx.rawContext.suspend();
  }
}; // RESTART AUDIO


const restartAudio = () => {
  soundtrackAudioCtx.rawContext.resume();
}; // Change UI


const changeMuteButton = () => {
  if (muteButton.classList.contains('fa-volume-off')) {
    muteButton.classList.remove('fa-volume-off');
    muteButton.classList.add('fa-volume-up');
  } else {
    muteButton.classList.add('fa-volume-off');
    muteButton.classList.remove('fa-volume-up');
  }
}; //  MAIN ///
// load synths!


const main = async () => {
  if (window.safari) {
    loadFallback();
  } else {
    document.querySelector('#menuicon').addEventListener('click', async () => {
      if (soundtrackAudioCtx.rawContext.state === 'suspended') {
        console.log('attempting to start audio');
        await soundtrackAudioCtx.rawContext.resume();
        await (0,tone__WEBPACK_IMPORTED_MODULE_6__.start)();
        window.isSoundStarted = true;
        console.log(soundtrackAudioCtx.rawContext.state);
      }
    });
    isMp3Supported = await isMp3Supported;
    await soundtrackAudioCtx.rawContext.resume();
    loadSynths();
    UISound();
  }
}; // run main loop


main(); // ! allow hot reloading of the files in project (webpack)

if (false) {}

/***/ }),

/***/ "./src/app/modules/FirebaseAudio.js":
/*!******************************************!*\
  !*** ./src/app/modules/FirebaseAudio.js ***!
  \******************************************/
/*! namespace exports */
/*! export default [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.n, __webpack_exports__, __webpack_require__.r, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony import */ var firebase_app__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! firebase/app */ "./node_modules/firebase/app/dist/index.esm.js");
/* harmony import */ var firebase_storage__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! firebase/storage */ "./node_modules/firebase/storage/dist/index.esm.js");
/* harmony import */ var uuid__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! uuid */ "./node_modules/uuid/index.js");
/* harmony import */ var uuid__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(uuid__WEBPACK_IMPORTED_MODULE_2__);
;



class FireBaseAudio {
  // needed methods
  // async fetch
  // async upload
  // Authenticate
  // get total number of database entries
  // loadrandom
  // read into Blob/AudioUrl
  constructor(ctx) {
    this.firebaseConfig = {
      // Your web app's Firebase configuration
      // For Firebase JS SDK v7.20.0 and later, measurementId is optional
      apiKey: "AIzaSyAbb8-7skMg99nzAlvUaqR6vfQvD7q_7Vs",
      authDomain: "test-a201f.firebaseapp.com",
      databaseURL: "https://test-a201f.firebaseio.com",
      projectId: "test-a201f",
      storageBucket: "test-a201f.appspot.com",
      messagingSenderId: "120555329679",
      appId: "1:120555329679:web:a8734f69a5da95480df8fa",
      measurementId: "G-QLSEEEE02P"
    }; // Initialize Firebase

    firebase_app__WEBPACK_IMPORTED_MODULE_0__.default.initializeApp(this.firebaseConfig);
    this.audioCtx = ctx;
    this.storage = firebase_app__WEBPACK_IMPORTED_MODULE_0__.default.storage();
    this.storageRef = this.storage.ref();
    this.audioRef = this.storageRef.child(`audio-${(0,uuid__WEBPACK_IMPORTED_MODULE_2__.v4)()}.mp3`);
  }

  async listAll() {
    this.files = await this.storageRef.listAll();
  }

  async getRandomSample() {
    // await this.listAll();
    const ChosenFile = this.files.items[~~(Math.random() * this.files.items.length)];
    this.audioFile = await ChosenFile.getDownloadURL();
  }

  async downloadSample(url) {
    return fetch(url, {
      cors: "opaque"
    }).then(response => response.arrayBuffer()).then(arrayBuffer => this.audioCtx.decodeAudioData(arrayBuffer)).catch(err => console.log(err));
  }

  async uploadSample(blob) {
    // upload audio to firebase storage
    this.uploadTask = this.audioRef.put(blob);
    this.uploadTask.on("state_changed", snapshot => {
      this.progress = snapshot.bytesTransferred / snapshot.totalBytes * 100;

      if (firebase_app__WEBPACK_IMPORTED_MODULE_0__.default.storage.TaskState.RUNNING) {// console.log(this.progress);
      }
    }, err => {// console.log(err);
    }, () => {
      this.uploadTask.snapshot.ref.getDownloadURL().then(function (downloadURL) {
        console.log("File available at", downloadURL);
      });
    });
  }

}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (FireBaseAudio);

/***/ }),

/***/ "./src/app/modules/GrainSynth.js":
/*!***************************************!*\
  !*** ./src/app/modules/GrainSynth.js ***!
  \***************************************/
/*! namespace exports */
/*! export default [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.n, __webpack_exports__, __webpack_require__.r, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony import */ var tone__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tone */ "./node_modules/tone/build/esm/index.js");
/* harmony import */ var regenerator_runtime__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! regenerator-runtime */ "./node_modules/regenerator-runtime/runtime.js");
/* harmony import */ var regenerator_runtime__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(regenerator_runtime__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var async__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! async */ "./node_modules/async/dist/async.js");
/* harmony import */ var async__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(async__WEBPACK_IMPORTED_MODULE_2__);
;

 // TODO: ADD PROBABILITY TO WHICH GRAIN PLAYS ON EACH LOOP
// TODO: ADD PRESETS LOADED FROM JSON

class GrainSynth {
  constructor(buffer, ctx, voices = 2) {
    // workaround to suspend audiocontext without warnings
    (0,tone__WEBPACK_IMPORTED_MODULE_0__.getContext)().rawContext.suspend();
    (0,tone__WEBPACK_IMPORTED_MODULE_0__.getContext)().isOffline = true;
    this.grains = [];
    this.presets = [];
    this.isStopped = false;
    this.numVoices = voices;
    this.buffer = buffer;
    this.nodes = [];
    this.toneContext = ctx;
    this.transport = this.toneContext.transport;
    this.dest = this.toneContext.destination;
    this.dest.name = "Grainsynth Destination";
    this.effectsChain = []; //  make nodes

    this.grainOutput = new tone__WEBPACK_IMPORTED_MODULE_0__.Gain(1);
    this.grainOutput.name = "Grain Output";
    this.filter = new tone__WEBPACK_IMPORTED_MODULE_0__.Filter(10000, "lowpass", -24, 4);
    this.compressor = new tone__WEBPACK_IMPORTED_MODULE_0__.Compressor({
      ratio: 20,
      threshold: -24,
      release: 1,
      attack: 0.003
    });
    this.pitchShifter = new tone__WEBPACK_IMPORTED_MODULE_0__.PitchShift({
      pitch: -12 // channelCount: 1,

    });

    for (let i = 0; i < this.numVoices; i++) {
      if (window.safari) {
        this.grains[i] = new tone__WEBPACK_IMPORTED_MODULE_0__.GrainPlayer({
          url: this.buffer
        });
      } else {
        this.grains[i] = new tone__WEBPACK_IMPORTED_MODULE_0__.GrainPlayer(this.buffer);
      } // this.grains[i].buffer.toMono();
      // this.grains[i].channelCount = 1;

    }

    this.setupMaster(); // evenly ditribute volumes to master

    this.grains.forEach(async grain => {
      grain.loop = true;
      grain.connect(this.grainOutput);
    });
    this.grainOutput.connect(this.filter);
  }

  getNodes() {
    Object.entries(this).forEach(entry => {
      const node = entry[1];

      if (typeof node === "object" && node.connect) {
        console.log(node);
      }
    });
  }

  debug() {
    this.grains.forEach(grain => {
      grain.debug = true;
      grain.playbackRate = 1;
      grain.grainSize = 0.5;
    });
    this.setClockFrequency(1);
  }

  setupMaster() {
    this.output = new tone__WEBPACK_IMPORTED_MODULE_0__.Gain(1);
    this.output.name = "Output";
    this.output.gain.setValueAtTime(0.7 / this.numVoices, (0,tone__WEBPACK_IMPORTED_MODULE_0__.now)());
    this.pitchShifter.windowSize = 1;
    this.filter.connect(this.compressor);
    this.compressor.connect(this.pitchShifter);
    this.pitchShifter.connect(this.output);
    this.output.connect(this.dest); // higher windowsize sounds better!
  }

  isGrainLoaded(grain) {
    return new Promise((resolve, reject) => {
      grain.onerror && reject("couldn't load grains");
      grain.loaded && resolve(grain.loaded);
    });
  } //  triggers


  async play(startTime = 1) {
    this.transport.start();
    this.output.gain.setValueAtTime(1 / this.numVoices, (0,tone__WEBPACK_IMPORTED_MODULE_0__.now)()); //  wait for grains to load before starting

    const grainPromises = this.grains.map(grain => this.isGrainLoaded(grain));
    await Promise.all(grainPromises);
    this.grains.forEach(async (grain, i) => {
      grain.start(`+${i}`, i + startTime);
    });
    this.isStopped = false;
  }

  stop() {
    this.grains.forEach(grain => {
      grain.stop();
    });
    this.isStopped = true;
  }

  kill() {
    this.grains.forEach(grain => grain.dispose());
  } //  effects


  chainEffect(effect) {
    // push new effect to chain
    this.effectsChain.push(effect); //   define inputs & outputs

    if (this.effectsChain.length > 1) {
      const effectsInput = this.effectsChain[0];
      const effectsOutput = this.effectsChain[this.effectsChain.length - 1]; //  disconnect from existing input

      this.input.disconnect();
      effectsOutput && effectsOutput.disconnect();
      this.input.connect(effectsInput);

      for (let i = 0; i < this.effectsChain.length - 1; i++) {
        this.effectsChain[i].connect(this.effectsChain[i + 1]);
      }

      effectsOutput.connect(this.dest);
    }
  }

  setClockFrequency(val, time) {
    this.grains.forEach(grain => grain._clock.frequency.targetRampTo(val, time));
  }

  detuneLFO() {
    this.grains.forEach(grain => {
      const detuneLFO = new tone__WEBPACK_IMPORTED_MODULE_0__.LFO({
        frequency: Math.random().toFixed(2),
        max: 10,
        min: -10
      });
      detuneLFO.connect(grain.detune);
      detuneLFO.start();
    });
  }

  swellLFO() {
    // console.log(this.output);
    this.volumeLFO = new tone__WEBPACK_IMPORTED_MODULE_0__.LFO({
      frequency: Math.random().toFixed(2) / 4,
      max: 0.5
    }); // console.log(this.volumeLFO);

    this.volumeLFO.connect(this.output.gain);
    this.volumeLFO.start();
  }

  async reverb(reverbSwitch) {
    if (reverbSwitch) {
      this.masterReverb = new tone__WEBPACK_IMPORTED_MODULE_0__.Reverb({
        preDelay: 0.1,
        decay: 4,
        wet: 1
      }); //   console.log(this.masterEffect);

      await this.masterReverb.generate();
      this.output.chain(this.masterReverb, this.dest);
    } else {
      this.masterReverb && this.masterReverb.disconnect();
    }
  }

  interpolateBetween(from, to, step) {
    //  check if from is greater than to and create array to ramp down to that value by step
    // from = 1, to = 3
    // from < to
    const interpolationArray = [];
    console.log(from, to);

    if (from < to) {
      const interpolationArray = [];

      for (let i = from; i < to; i += step) {
        interpolationArray.push(i);
      }
    } else {
      for (let i = from; i > to; i = i - step) {
        interpolationArray.push(i);
      }
    }
  } // RANDOMIZATION


  randomStarts() {
    this.grains.forEach(grain => {
      grain.stop();
      grain.start((0,tone__WEBPACK_IMPORTED_MODULE_0__.now)(), Math.random() * grain.buffer.duration);
    });
  }

  randRange(min, max) {
    // Math.sign(min) === -1 ? (min = Math.abs(min)) : null;
    return Math.random() * (max - min) + min;
  }

  randomizeParameters() {
    const {
      randRange
    } = this;
    this.stop();
    this.setDetune(randRange(-100, 100));
    this.setPitchShift(-12, 12);
    this.setGrainSize(randRange(0.1, 1));
    this.setOverlap(randRange(0.1, 1)); // this.setLoopStart(0, this.buffer.duration);
    // this.setLoopEnd(0, this.grains[0].buffer.duration);

    this.setRate(randRange(-1, 2));
    this.setVolume(0.5);
    this.play();
    this.randomStarts();
  }

  getCurrentValues() {
    const currentValues = [];
    const grainParams = ["detune", "overlap", "grainSize", "loopStart", "loopEnd", "playbackRate"];
    grainParams.forEach(grainParam => {
      currentValues.push(currentValues[grainParam] = this.getGrainValues(grainParam));
    });
    return currentValues;
  }

  setCurrentValues(valuesObject) {
    // console.log(this.grains[0]);
    this.grains.forEach((grain, i) => {
      grain.detune = valuesObject.detune[i];
      grain.overlap = valuesObject.overlap[i];
      grain.grainSize = valuesObject.grainSize[i]; // grain.loopStart = valuesObject.loopStart[i];

      grain.loopEnd = valuesObject.loopEnd[i];
      grain.playbackRate = valuesObject.playbackRate[i];
      grain.reverse = Math.random() < 0.2;
    });
  }

  randArrayFromRange(length, min, max) {
    return Array.from({
      length
    }, () => this.randRange(min, max));
  }

  lowpassFilter(frequency, resonance) {
    this.chainEffect(this.filter);
  }

  feedbackCombFilter() {
    this.combFilter = new tone__WEBPACK_IMPORTED_MODULE_0__.LowpassCombFilter(0.5, 0.9, 1000);
    this.chainEffect(this.combFilter);
  }

  randomInterpolate() {
    // find out how many grains are playing
    const numGrains = this.grains.length; // get all the current values for params

    const currentValues = this.getCurrentValues(); // console.log(currentValues);
    // generate random values

    const randomValues = {
      detune: this.randArrayFromRange(numGrains, -1000, 100),
      overlap: this.randArrayFromRange(numGrains, 0.01, 1),
      grainSize: this.randArrayFromRange(numGrains, 0.001, 0.05),
      playbackRate: this.randArrayFromRange(numGrains, 0.01, 0.05),
      loopEnd: this.randArrayFromRange(numGrains, 0, this.grains[0].buffer.duration)
    };
    this.setClockFrequency(Math.random() * 1, 10); //set values to random values
    // TODO: Interpolate between current and random values

    this.setCurrentValues(randomValues); // console.log(this.grains);
  } // Setup random loop


  randomLoop(time) {
    this.loop = new tone__WEBPACK_IMPORTED_MODULE_0__.Loop(() => {
      this.randomInterpolate();
      this.grains.forEach(grain => {
        if (Math.random() < 0.2) {
          grain.stop();
        } else {
          grain.start((0,tone__WEBPACK_IMPORTED_MODULE_0__.now)());
        }
      });
    }, time).start();
  } //  SETTERS & Getters


  setPitchShift(val) {
    this.pitchShifter.pitch = Number(val);
  }

  getPitchShift() {
    return this.pitchShifter.pitch;
  }

  setDetune(val) {
    const offset = val / 2;
    this.grains.forEach(grain => grain.detune = Math.random() * val - offset);
  }

  getDetune() {}

  getGrainValues(key) {
    const values = [];
    this.grains.forEach(grain => {
      if (key in grain) {
        values.push(grain[key]);
      }
    });
    return values;
  }

  setRate(val) {
    this.grains.forEach(grain => grain.playbackRate = val);
  }

  setOverlap(val) {
    this.grains.forEach(grain => grain.overlap = val);
  }

  setGrainSize(val) {
    this.grains.forEach(grain => grain.grainSize = val);
  }

  setLoopStart(val) {
    this.grains.forEach(grain => grain.loopStart = val);
  }

  setLoopEnd(val) {
    this.grains.forEach(grain => grain.loopEnd = val);
  }

  setVolume(val) {
    this.output.gain.setValueAtTime(val, this.toneContext.currentTime);
  }

  rampVolume(val, time) {
    this.output.gain.rampTo(val, time);
  }

}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (GrainSynth);

/***/ }),

/***/ "./src/app/modules/MasterBus.js":
/*!**************************************!*\
  !*** ./src/app/modules/MasterBus.js ***!
  \**************************************/
/*! namespace exports */
/*! export default [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_exports__, __webpack_require__.r, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony import */ var tone__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tone */ "./node_modules/tone/build/esm/index.js");
;

class MasterBus {
  constructor(ctx) {
    this.input = new tone__WEBPACK_IMPORTED_MODULE_0__.Gain(0.8);
    this.limiter = new tone__WEBPACK_IMPORTED_MODULE_0__.Limiter(-12);
    this.effectsChain = [];
    this.ctx = ctx;
    this.output = new tone__WEBPACK_IMPORTED_MODULE_0__.Gain(1);
    this.dest = this.ctx.destination;
    this.chainEffect(this.limiter);
  }

  test() {
    var oscillator = this.ctx.createOscillator();
    oscillator.frequency.setValueAtTime(440, this.ctx.currentTime);
    oscillator.connect(this.output);
    oscillator.start();
  }

  setVolume(val) {
    this.output.gain.setValueAtTime(val, this.ctx.getCurrentTime);
  }

  connectSource(source) {
    try {
      this.source = source;
      source.connect(this.input);
      return true;
    } catch (error) {
      return false;
    }
  }

  chorus(freq = 0.1, delay = 20, depth = 0.9) {
    this.chorus = new tone__WEBPACK_IMPORTED_MODULE_0__.Chorus(freq, delay, depth).start();
    this.chainEffect(this.chorus);
  }

  chainEffect(effect) {
    // push new effect to chain
    this.effectsChain.push(effect); //   define inputs & outputs

    if (this.effectsChain.length > 1) {
      const effectsInput = this.effectsChain[0];
      const effectsOutput = this.effectsChain[this.effectsChain.length - 1]; //  disconnect from existing input

      this.input.disconnect();
      effectsOutput && effectsOutput.disconnect();
      this.input.connect(effectsInput);

      for (let i = 0; i < this.effectsChain.length - 1; i++) {
        this.effectsChain[i].connect(this.effectsChain[i + 1]);
      }

      effectsOutput.toDestination();
    } else {
      // there's just one effect. Just connect it
      this.input.connect(this.effectsChain[0]).connect(this.dest);
    }
  }

  removeEffect(effect) {
    this.output.disconnect(effect);
    this.output.connect(this.dest);
  }

  lowpassFilter(frequency, resonance) {
    this.filter = new tone__WEBPACK_IMPORTED_MODULE_0__.Filter(frequency, "lowpass", -24, resonance);
    this.chainEffect(this.filter);
  }

  delay(time = 100, fbk = 0.5) {
    this.masterDelay = new tone__WEBPACK_IMPORTED_MODULE_0__.Delay(time, fbk);
    this.chainEffect(this.masterDelay);
  }

  async reverb(reverbSwitch, preDelay = 0.3, decay = 4, wet = 1) {
    if (reverbSwitch) {
      this.masterReverb = new tone__WEBPACK_IMPORTED_MODULE_0__.Reverb({
        preDelay,
        decay,
        wet
      }); // await this.masterReverb.generate();

      this.chainEffect(this.masterReverb);
    } else {
      this.masterReverb && this.removeEffect(this.masterReverb);
    }
  }

  disconnect() {
    this.dest.disconnect();
  }

}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (MasterBus);

/***/ }),

/***/ "./src/app/modules/Recorder.js":
/*!*************************************!*\
  !*** ./src/app/modules/Recorder.js ***!
  \*************************************/
/*! namespace exports */
/*! export default [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_exports__, __webpack_require__.r, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
class Recorder {
  constructor(length = 800, ctx) {
    this.length = length; //instantiate audiocontext

    this.audioCtx = ctx;
  }

  async getPermissions() {
    // get permission to record
    try {
      const mp3 = await navigator.mediaCapabilities.decodingInfo({
        type: "file",
        audio: {
          contentType: "audio/mp3"
        }
      }).then(result => {
        return result.supported;
      });

      if (mp3 === true) {
        this.type = "audio/mpeg-3";
      } else {
        this.type = "audio/aac";
      }

      const stream = await navigator.mediaDevices.getUserMedia({
        audio: true
      });
      this.stream = stream;
      return true;
    } catch (error) {
      console.log(error);
      return false;
    }
  }

  async recordChunks() {
    return new Promise((resolve, reject) => {
      this.recording = true;
      this.mediaRecorder = new MediaRecorder(this.stream);
      this.mediaRecorder.start();
      this.audioChunks = [];
      this.mediaRecorder.addEventListener("dataavailable", event => {
        this.audioChunks.push(event.data);
      });
      setTimeout(() => {
        this.mediaRecorder.stop();
        this.recording = false; // console.log("stopped recorder");
      }, this.length);
      this.mediaRecorder.addEventListener("stop", () => {
        this.audioBlob = new Blob(this.audioChunks, {
          type: this.type
        });
        this.audioUrl = URL.createObjectURL(this.audioBlob);
        resolve(this.audioBlob);
      });
    });
  }

  readBlobAsArrayBuffer(blob) {
    const temporaryFileReader = new FileReader();
    return new Promise((resolve, reject) => {
      temporaryFileReader.onerror = () => {
        temporaryFileReader.abort();
        reject(new DOMException("Problem parsing input file."));
      };

      temporaryFileReader.onload = () => {
        resolve(temporaryFileReader.result);
      };

      temporaryFileReader.readAsArrayBuffer(blob);
    });
  }

  async loadToBuffer() {
    if (!this.recording) {
      const buf = await this.readBlobAsArrayBuffer(this.audioBlob);
      this.arrayBuffer = buf; //  here is where we'd make multiple sources

      const decodedBuffer = await this.audioCtx.decodeAudioData(this.arrayBuffer);
      return new Promise((resolve, reject) => {
        try {
          resolve(decodedBuffer);
          this.decodedBuffer = decodedBuffer;
        } catch (error) {
          reject(error);
        }
      });
    }
  }

  createSource(decodedBuffer) {
    let source = this.audioCtx.createBufferSource();
    source.buffer = decodedBuffer;
    return source;
  }

}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Recorder);

/***/ }),

/***/ "./src/app/modules/UISynth.js":
/*!************************************!*\
  !*** ./src/app/modules/UISynth.js ***!
  \************************************/
/*! namespace exports */
/*! export default [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_exports__, __webpack_require__.r, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony import */ var tone__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tone */ "./node_modules/tone/build/esm/index.js");
;

class UISynth {
  constructor(ctx) {
    this.ctx = ctx;
    this.uiSynth = new tone__WEBPACK_IMPORTED_MODULE_0__.PolySynth({
      polyphony: 1,
      voice: tone__WEBPACK_IMPORTED_MODULE_0__.FMSynth,
      maxPolyphony: 3
    });
    this.uiSynth.set({
      envelope: {
        attack: 0,
        decay: 0.1,
        sustain: 1.0,
        release: 0.5
      },
      harmonicity: 2,
      volume: 2
    });
    this.master = new tone__WEBPACK_IMPORTED_MODULE_0__.Gain(0.1);
    this.uiSynth.connect(this.master);
  }

  play(note) {
    this.uiSynth.set({
      harmonicity: Math.random() * 12
    });
    this.uiSynth.set({
      modulationIndex: Math.random() * 24
    });

    try {
      this.uiSynth.triggerAttackRelease(note, 0.1, "+0.01");
    } catch (error) {} // console.log(this.uiSynth);

  }

}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (UISynth);

/***/ }),

/***/ "./src/app/utilityFunctions.js":
/*!*************************************!*\
  !*** ./src/app/utilityFunctions.js ***!
  \*************************************/
/*! namespace exports */
/*! export aacDecode [provided] [no usage info] [missing usage info prevents renaming] */
/*! export debounce [provided] [no usage info] [missing usage info prevents renaming] */
/*! export fetchSample [provided] [no usage info] [missing usage info prevents renaming] */
/*! export getNodes [provided] [no usage info] [missing usage info prevents renaming] */
/*! export isBetween [provided] [no usage info] [missing usage info prevents renaming] */
/*! export mapValue [provided] [no usage info] [missing usage info prevents renaming] */
/*! export normalizeArray [provided] [no usage info] [missing usage info prevents renaming] */
/*! export once [provided] [no usage info] [missing usage info prevents renaming] */
/*! export randomChoice [provided] [no usage info] [missing usage info prevents renaming] */
/*! export removeZeroValues [provided] [no usage info] [missing usage info prevents renaming] */
/*! export resampleBuffer [provided] [no usage info] [missing usage info prevents renaming] */
/*! export safariFallback [provided] [no usage info] [missing usage info prevents renaming] */
/*! export soundLog [provided] [no usage info] [missing usage info prevents renaming] */
/*! export throttle [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.e, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "fetchSample": () => /* binding */ fetchSample,
/* harmony export */   "aacDecode": () => /* binding */ aacDecode,
/* harmony export */   "removeZeroValues": () => /* binding */ removeZeroValues,
/* harmony export */   "debounce": () => /* binding */ debounce,
/* harmony export */   "once": () => /* binding */ once,
/* harmony export */   "throttle": () => /* binding */ throttle,
/* harmony export */   "safariFallback": () => /* binding */ safariFallback,
/* harmony export */   "mapValue": () => /* binding */ mapValue,
/* harmony export */   "normalizeArray": () => /* binding */ normalizeArray,
/* harmony export */   "isBetween": () => /* binding */ isBetween,
/* harmony export */   "resampleBuffer": () => /* binding */ resampleBuffer,
/* harmony export */   "getNodes": () => /* binding */ getNodes,
/* harmony export */   "randomChoice": () => /* binding */ randomChoice,
/* harmony export */   "soundLog": () => /* binding */ soundLog
/* harmony export */ });
/* harmony import */ var standardized_audio_context__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! standardized-audio-context */ "./node_modules/standardized-audio-context/build/es2019/module.js");
;
async function fetchSample(url, ctx) {
  return fetch(url).then(response => response.arrayBuffer()).then(arrayBuffer => ctx.decodeAudioData(arrayBuffer)).catch(error => console.log(error));
}
async function aacDecode(url, ctx) {
  return new Promise(async (resolve, reject) => {
    try {
      __webpack_require__.e(/*! import() */ "src_app_samples_fallback_aac").then(__webpack_require__.bind(__webpack_require__, /*! ./samples/fallback.aac */ "./src/app/samples/fallback.aac")).then(async file => {
        const response = await fetch(file.default, {
          mimeType: "audio/mpeg"
        });
        const arrBuffer = await response.arrayBuffer(); // console.log(response.type);
        // console.log(ctx._context._nativeContext);

        const audioBuffer = await (0,standardized_audio_context__WEBPACK_IMPORTED_MODULE_0__.decodeAudioData)(ctx._context._nativeContext, arrBuffer);
        console.log(audioBuffer);
        resolve(audioBuffer);
      });
    } catch (error) {
      reject(error);
    }
  });
}
function removeZeroValues(arr) {
  return arr.filter(val => val !== 0);
}
function debounce(fn, delay) {
  let timeOutId;
  return function (...args) {
    if (timeOutId) {
      clearTimeout(timeOutId);
    }

    timeOutId = setTimeout(() => {
      fn(...args);
    }, delay);
  };
}
function once(func) {
  let calls = 1;
  return function () {
    if (calls > 0) {
      func.apply(null, arguments);
      calls--;
    }
  };
}
function throttle(fn, delay) {
  let scheduledId;
  return function throttled() {
    const context = this;
    const args = arguments;
    const throttledCall = fn.apply(context, args);
    if (scheduledId) return;
    scheduledId = setTimeout(() => {
      throttledCall();
      clearTimeout(scheduledId);
    }, delay);
  };
}
async function safariFallback(url, ctx) {
  return new Promise(async (resolve, reject) => {
    resolve(url); //   ctx.decodeAudioData = new webkitAudioContext().decodeAudioData;
    //   ctx.rawContext._nativeContext.decodeAudioData(
    //     arrayBuf,
    //     function (buffer) {
    //       resolve(buffer);
    //     },
    //     function (e) {
    //       reject(e);
    //     }
    //   );
    // });
  });
} //  map one range of values to another

function mapValue(input, inMin, inMax, outMin, outMax) {
  return (input - inMin) * (outMax - outMin) / (inMax - inMin) + outMin;
}
function normalizeArray(arr, min, max) {
  return arr.map(val => {
    return mapValue(val, Math.min(...arr), Math.max(...arr), min, max).toFixed(2);
  });
}
function isBetween(x, min, max) {
  return x >= min && x <= max;
}
function resampleBuffer(input, target_rate) {
  return new Promise(async (resolve, reject) => {
    if (typeof target_rate != "number" && target_rate <= 0) {
      reject("Samplerate is not a number");
    } // if can set samplerate (eg.not on safari)


    let resampling_ratio;

    if (typeof input.sampleRate === Number) {
      resampling_ratio = input.sampleRate / target_rate;
    } else {
      resampling_ratio = 44100 / target_rate;
    }

    let final_length = input.length * resampling_ratio;
    let off = new OfflineAudioContext(input.numberOfChannels, final_length, target_rate); // NORMALIZE AND FILTER BUFFERS

    let source = off.createBufferSource();
    const bufferMax = Math.max(...input.getChannelData(0)); //  calculate difference from 1
    // subtract max volume value from 1, set gain to that value
    // console.log("MAX: " + bufferMax);

    const gainNode = off.createGain();
    const diff = Math.abs(0.5 - bufferMax);

    if (bufferMax === 0) {
      reject("silent audio file");
    } // VOLUME TEST


    if (bufferMax < 0.02) {
      // QUIET SOUND, need to bring it up in level
      gainNode.gain.value = 4 + diff;
    }

    if (bufferMax < 0.2 && bufferMax > 0.02) {
      // QUIET SOUND, need to bring it up in level
      gainNode.gain.value = 2 + diff;
    }

    if (bufferMax > 0.2 && bufferMax < 0.5) {
      // MEDIUM LEVEL SOUND, need to bump volume slightly
      gainNode.gain.value = 1.7 + diff;
    }

    if (bufferMax > 0.5 && bufferMax < 0.7) {
      gainNode.gain.value = 0.7 - diff; // LOUD SOUND, need to bring it down in level
    }

    if (bufferMax > 0.7) {
      gainNode.gain.value = 0.5 - diff; // VERY LOUD SOUND, need to bring it down in level
    } // console.log("DIFF: " + diff);
    // console.log("setting to volume" + gainNode.gain.value);


    source.buffer = input;
    source.connect(gainNode); // filter.connect(gainNode);

    gainNode.connect(off.destination);
    source.start(0);

    try {
      resolve(await off.startRendering());
    } catch (error) {
      reject(error);
    }
  });
}
function getNodes(obj) {
  Object.entries(obj).forEach(entry => {
    if (entry[1] !== null) {
      const node = entry[1];
      console.log(typeof node);

      if (typeof node === "object") {}
    }
  });
}
function randomChoice(arr) {
  return arr[Math.floor(Math.random() * arr.length)];
}
function soundLog(str) {
  console.log(`%cSound: ${str}`, "color:#233E82; font-family:'Arial';color:white; font-weight: 500; background:black;");
}

/***/ }),

/***/ "./node_modules/firebase/app/dist/index.esm.js":
/*!*****************************************************!*\
  !*** ./node_modules/firebase/app/dist/index.esm.js ***!
  \*****************************************************/
/*! namespace exports */
/*! export default [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@firebase/app/dist/index.esm.js .default */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_exports__, __webpack_require__.d, __webpack_require__.r, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* reexport safe */ _firebase_app__WEBPACK_IMPORTED_MODULE_0__.default
/* harmony export */ });
/* harmony import */ var _firebase_app__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @firebase/app */ "./node_modules/@firebase/app/dist/index.esm.js");
;


var name = "firebase";
var version = "8.0.2";

/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
_firebase_app__WEBPACK_IMPORTED_MODULE_0__.default.registerVersion(name, version, 'app');
//# sourceMappingURL=index.esm.js.map


/***/ }),

/***/ "./node_modules/firebase/storage/dist/index.esm.js":
/*!*********************************************************!*\
  !*** ./node_modules/firebase/storage/dist/index.esm.js ***!
  \*********************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _firebase_storage__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @firebase/storage */ "./node_modules/@firebase/storage/dist/index.esm.js");
;
//# sourceMappingURL=index.esm.js.map


/***/ }),

/***/ "./node_modules/lodash/_Symbol.js":
/*!****************************************!*\
  !*** ./node_modules/lodash/_Symbol.js ***!
  \****************************************/
/*! unknown exports (runtime-defined) */
/*! runtime requirements: module, __webpack_require__ */
/*! CommonJS bailout: module.exports is used directly at 6:0-14 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var root = __webpack_require__(/*! ./_root */ "./node_modules/lodash/_root.js");

/** Built-in value references. */
var Symbol = root.Symbol;

module.exports = Symbol;


/***/ }),

/***/ "./node_modules/lodash/_baseGetTag.js":
/*!********************************************!*\
  !*** ./node_modules/lodash/_baseGetTag.js ***!
  \********************************************/
/*! unknown exports (runtime-defined) */
/*! runtime requirements: module, __webpack_require__ */
/*! CommonJS bailout: module.exports is used directly at 28:0-14 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var Symbol = __webpack_require__(/*! ./_Symbol */ "./node_modules/lodash/_Symbol.js"),
    getRawTag = __webpack_require__(/*! ./_getRawTag */ "./node_modules/lodash/_getRawTag.js"),
    objectToString = __webpack_require__(/*! ./_objectToString */ "./node_modules/lodash/_objectToString.js");

/** `Object#toString` result references. */
var nullTag = '[object Null]',
    undefinedTag = '[object Undefined]';

/** Built-in value references. */
var symToStringTag = Symbol ? Symbol.toStringTag : undefined;

/**
 * The base implementation of `getTag` without fallbacks for buggy environments.
 *
 * @private
 * @param {*} value The value to query.
 * @returns {string} Returns the `toStringTag`.
 */
function baseGetTag(value) {
  if (value == null) {
    return value === undefined ? undefinedTag : nullTag;
  }
  return (symToStringTag && symToStringTag in Object(value))
    ? getRawTag(value)
    : objectToString(value);
}

module.exports = baseGetTag;


/***/ }),

/***/ "./node_modules/lodash/_freeGlobal.js":
/*!********************************************!*\
  !*** ./node_modules/lodash/_freeGlobal.js ***!
  \********************************************/
/*! unknown exports (runtime-defined) */
/*! runtime requirements: module, __webpack_require__.g, __webpack_require__.* */
/*! CommonJS bailout: module.exports is used directly at 4:0-14 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

/** Detect free variable `global` from Node.js. */
var freeGlobal = typeof __webpack_require__.g == 'object' && __webpack_require__.g && __webpack_require__.g.Object === Object && __webpack_require__.g;

module.exports = freeGlobal;


/***/ }),

/***/ "./node_modules/lodash/_getRawTag.js":
/*!*******************************************!*\
  !*** ./node_modules/lodash/_getRawTag.js ***!
  \*******************************************/
/*! unknown exports (runtime-defined) */
/*! runtime requirements: module, __webpack_require__ */
/*! CommonJS bailout: module.exports is used directly at 46:0-14 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var Symbol = __webpack_require__(/*! ./_Symbol */ "./node_modules/lodash/_Symbol.js");

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * Used to resolve the
 * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
 * of values.
 */
var nativeObjectToString = objectProto.toString;

/** Built-in value references. */
var symToStringTag = Symbol ? Symbol.toStringTag : undefined;

/**
 * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.
 *
 * @private
 * @param {*} value The value to query.
 * @returns {string} Returns the raw `toStringTag`.
 */
function getRawTag(value) {
  var isOwn = hasOwnProperty.call(value, symToStringTag),
      tag = value[symToStringTag];

  try {
    value[symToStringTag] = undefined;
    var unmasked = true;
  } catch (e) {}

  var result = nativeObjectToString.call(value);
  if (unmasked) {
    if (isOwn) {
      value[symToStringTag] = tag;
    } else {
      delete value[symToStringTag];
    }
  }
  return result;
}

module.exports = getRawTag;


/***/ }),

/***/ "./node_modules/lodash/_objectToString.js":
/*!************************************************!*\
  !*** ./node_modules/lodash/_objectToString.js ***!
  \************************************************/
/*! unknown exports (runtime-defined) */
/*! runtime requirements: module */
/*! CommonJS bailout: module.exports is used directly at 22:0-14 */
/***/ ((module) => {

/** Used for built-in method references. */
var objectProto = Object.prototype;

/**
 * Used to resolve the
 * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
 * of values.
 */
var nativeObjectToString = objectProto.toString;

/**
 * Converts `value` to a string using `Object.prototype.toString`.
 *
 * @private
 * @param {*} value The value to convert.
 * @returns {string} Returns the converted string.
 */
function objectToString(value) {
  return nativeObjectToString.call(value);
}

module.exports = objectToString;


/***/ }),

/***/ "./node_modules/lodash/_root.js":
/*!**************************************!*\
  !*** ./node_modules/lodash/_root.js ***!
  \**************************************/
/*! unknown exports (runtime-defined) */
/*! runtime requirements: module, __webpack_require__ */
/*! CommonJS bailout: module.exports is used directly at 9:0-14 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var freeGlobal = __webpack_require__(/*! ./_freeGlobal */ "./node_modules/lodash/_freeGlobal.js");

/** Detect free variable `self`. */
var freeSelf = typeof self == 'object' && self && self.Object === Object && self;

/** Used as a reference to the global object. */
var root = freeGlobal || freeSelf || Function('return this')();

module.exports = root;


/***/ }),

/***/ "./node_modules/lodash/debounce.js":
/*!*****************************************!*\
  !*** ./node_modules/lodash/debounce.js ***!
  \*****************************************/
/*! unknown exports (runtime-defined) */
/*! runtime requirements: module, __webpack_require__ */
/*! CommonJS bailout: module.exports is used directly at 191:0-14 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var isObject = __webpack_require__(/*! ./isObject */ "./node_modules/lodash/isObject.js"),
    now = __webpack_require__(/*! ./now */ "./node_modules/lodash/now.js"),
    toNumber = __webpack_require__(/*! ./toNumber */ "./node_modules/lodash/toNumber.js");

/** Error message constants. */
var FUNC_ERROR_TEXT = 'Expected a function';

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeMax = Math.max,
    nativeMin = Math.min;

/**
 * Creates a debounced function that delays invoking `func` until after `wait`
 * milliseconds have elapsed since the last time the debounced function was
 * invoked. The debounced function comes with a `cancel` method to cancel
 * delayed `func` invocations and a `flush` method to immediately invoke them.
 * Provide `options` to indicate whether `func` should be invoked on the
 * leading and/or trailing edge of the `wait` timeout. The `func` is invoked
 * with the last arguments provided to the debounced function. Subsequent
 * calls to the debounced function return the result of the last `func`
 * invocation.
 *
 * **Note:** If `leading` and `trailing` options are `true`, `func` is
 * invoked on the trailing edge of the timeout only if the debounced function
 * is invoked more than once during the `wait` timeout.
 *
 * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred
 * until to the next tick, similar to `setTimeout` with a timeout of `0`.
 *
 * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)
 * for details over the differences between `_.debounce` and `_.throttle`.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Function
 * @param {Function} func The function to debounce.
 * @param {number} [wait=0] The number of milliseconds to delay.
 * @param {Object} [options={}] The options object.
 * @param {boolean} [options.leading=false]
 *  Specify invoking on the leading edge of the timeout.
 * @param {number} [options.maxWait]
 *  The maximum time `func` is allowed to be delayed before it's invoked.
 * @param {boolean} [options.trailing=true]
 *  Specify invoking on the trailing edge of the timeout.
 * @returns {Function} Returns the new debounced function.
 * @example
 *
 * // Avoid costly calculations while the window size is in flux.
 * jQuery(window).on('resize', _.debounce(calculateLayout, 150));
 *
 * // Invoke `sendMail` when clicked, debouncing subsequent calls.
 * jQuery(element).on('click', _.debounce(sendMail, 300, {
 *   'leading': true,
 *   'trailing': false
 * }));
 *
 * // Ensure `batchLog` is invoked once after 1 second of debounced calls.
 * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });
 * var source = new EventSource('/stream');
 * jQuery(source).on('message', debounced);
 *
 * // Cancel the trailing debounced invocation.
 * jQuery(window).on('popstate', debounced.cancel);
 */
function debounce(func, wait, options) {
  var lastArgs,
      lastThis,
      maxWait,
      result,
      timerId,
      lastCallTime,
      lastInvokeTime = 0,
      leading = false,
      maxing = false,
      trailing = true;

  if (typeof func != 'function') {
    throw new TypeError(FUNC_ERROR_TEXT);
  }
  wait = toNumber(wait) || 0;
  if (isObject(options)) {
    leading = !!options.leading;
    maxing = 'maxWait' in options;
    maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;
    trailing = 'trailing' in options ? !!options.trailing : trailing;
  }

  function invokeFunc(time) {
    var args = lastArgs,
        thisArg = lastThis;

    lastArgs = lastThis = undefined;
    lastInvokeTime = time;
    result = func.apply(thisArg, args);
    return result;
  }

  function leadingEdge(time) {
    // Reset any `maxWait` timer.
    lastInvokeTime = time;
    // Start the timer for the trailing edge.
    timerId = setTimeout(timerExpired, wait);
    // Invoke the leading edge.
    return leading ? invokeFunc(time) : result;
  }

  function remainingWait(time) {
    var timeSinceLastCall = time - lastCallTime,
        timeSinceLastInvoke = time - lastInvokeTime,
        timeWaiting = wait - timeSinceLastCall;

    return maxing
      ? nativeMin(timeWaiting, maxWait - timeSinceLastInvoke)
      : timeWaiting;
  }

  function shouldInvoke(time) {
    var timeSinceLastCall = time - lastCallTime,
        timeSinceLastInvoke = time - lastInvokeTime;

    // Either this is the first call, activity has stopped and we're at the
    // trailing edge, the system time has gone backwards and we're treating
    // it as the trailing edge, or we've hit the `maxWait` limit.
    return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||
      (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));
  }

  function timerExpired() {
    var time = now();
    if (shouldInvoke(time)) {
      return trailingEdge(time);
    }
    // Restart the timer.
    timerId = setTimeout(timerExpired, remainingWait(time));
  }

  function trailingEdge(time) {
    timerId = undefined;

    // Only invoke if we have `lastArgs` which means `func` has been
    // debounced at least once.
    if (trailing && lastArgs) {
      return invokeFunc(time);
    }
    lastArgs = lastThis = undefined;
    return result;
  }

  function cancel() {
    if (timerId !== undefined) {
      clearTimeout(timerId);
    }
    lastInvokeTime = 0;
    lastArgs = lastCallTime = lastThis = timerId = undefined;
  }

  function flush() {
    return timerId === undefined ? result : trailingEdge(now());
  }

  function debounced() {
    var time = now(),
        isInvoking = shouldInvoke(time);

    lastArgs = arguments;
    lastThis = this;
    lastCallTime = time;

    if (isInvoking) {
      if (timerId === undefined) {
        return leadingEdge(lastCallTime);
      }
      if (maxing) {
        // Handle invocations in a tight loop.
        clearTimeout(timerId);
        timerId = setTimeout(timerExpired, wait);
        return invokeFunc(lastCallTime);
      }
    }
    if (timerId === undefined) {
      timerId = setTimeout(timerExpired, wait);
    }
    return result;
  }
  debounced.cancel = cancel;
  debounced.flush = flush;
  return debounced;
}

module.exports = debounce;


/***/ }),

/***/ "./node_modules/lodash/isObject.js":
/*!*****************************************!*\
  !*** ./node_modules/lodash/isObject.js ***!
  \*****************************************/
/*! unknown exports (runtime-defined) */
/*! runtime requirements: module */
/*! CommonJS bailout: module.exports is used directly at 31:0-14 */
/***/ ((module) => {

/**
 * Checks if `value` is the
 * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)
 * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an object, else `false`.
 * @example
 *
 * _.isObject({});
 * // => true
 *
 * _.isObject([1, 2, 3]);
 * // => true
 *
 * _.isObject(_.noop);
 * // => true
 *
 * _.isObject(null);
 * // => false
 */
function isObject(value) {
  var type = typeof value;
  return value != null && (type == 'object' || type == 'function');
}

module.exports = isObject;


/***/ }),

/***/ "./node_modules/lodash/isObjectLike.js":
/*!*********************************************!*\
  !*** ./node_modules/lodash/isObjectLike.js ***!
  \*********************************************/
/*! unknown exports (runtime-defined) */
/*! runtime requirements: module */
/*! CommonJS bailout: module.exports is used directly at 29:0-14 */
/***/ ((module) => {

/**
 * Checks if `value` is object-like. A value is object-like if it's not `null`
 * and has a `typeof` result of "object".
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
 * @example
 *
 * _.isObjectLike({});
 * // => true
 *
 * _.isObjectLike([1, 2, 3]);
 * // => true
 *
 * _.isObjectLike(_.noop);
 * // => false
 *
 * _.isObjectLike(null);
 * // => false
 */
function isObjectLike(value) {
  return value != null && typeof value == 'object';
}

module.exports = isObjectLike;


/***/ }),

/***/ "./node_modules/lodash/isSymbol.js":
/*!*****************************************!*\
  !*** ./node_modules/lodash/isSymbol.js ***!
  \*****************************************/
/*! unknown exports (runtime-defined) */
/*! runtime requirements: module, __webpack_require__ */
/*! CommonJS bailout: module.exports is used directly at 29:0-14 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var baseGetTag = __webpack_require__(/*! ./_baseGetTag */ "./node_modules/lodash/_baseGetTag.js"),
    isObjectLike = __webpack_require__(/*! ./isObjectLike */ "./node_modules/lodash/isObjectLike.js");

/** `Object#toString` result references. */
var symbolTag = '[object Symbol]';

/**
 * Checks if `value` is classified as a `Symbol` primitive or object.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.
 * @example
 *
 * _.isSymbol(Symbol.iterator);
 * // => true
 *
 * _.isSymbol('abc');
 * // => false
 */
function isSymbol(value) {
  return typeof value == 'symbol' ||
    (isObjectLike(value) && baseGetTag(value) == symbolTag);
}

module.exports = isSymbol;


/***/ }),

/***/ "./node_modules/lodash/now.js":
/*!************************************!*\
  !*** ./node_modules/lodash/now.js ***!
  \************************************/
/*! unknown exports (runtime-defined) */
/*! runtime requirements: module, __webpack_require__ */
/*! CommonJS bailout: module.exports is used directly at 23:0-14 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var root = __webpack_require__(/*! ./_root */ "./node_modules/lodash/_root.js");

/**
 * Gets the timestamp of the number of milliseconds that have elapsed since
 * the Unix epoch (1 January 1970 00:00:00 UTC).
 *
 * @static
 * @memberOf _
 * @since 2.4.0
 * @category Date
 * @returns {number} Returns the timestamp.
 * @example
 *
 * _.defer(function(stamp) {
 *   console.log(_.now() - stamp);
 * }, _.now());
 * // => Logs the number of milliseconds it took for the deferred invocation.
 */
var now = function() {
  return root.Date.now();
};

module.exports = now;


/***/ }),

/***/ "./node_modules/lodash/toNumber.js":
/*!*****************************************!*\
  !*** ./node_modules/lodash/toNumber.js ***!
  \*****************************************/
/*! unknown exports (runtime-defined) */
/*! runtime requirements: module, __webpack_require__ */
/*! CommonJS bailout: module.exports is used directly at 66:0-14 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var isObject = __webpack_require__(/*! ./isObject */ "./node_modules/lodash/isObject.js"),
    isSymbol = __webpack_require__(/*! ./isSymbol */ "./node_modules/lodash/isSymbol.js");

/** Used as references for various `Number` constants. */
var NAN = 0 / 0;

/** Used to match leading and trailing whitespace. */
var reTrim = /^\s+|\s+$/g;

/** Used to detect bad signed hexadecimal string values. */
var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;

/** Used to detect binary string values. */
var reIsBinary = /^0b[01]+$/i;

/** Used to detect octal string values. */
var reIsOctal = /^0o[0-7]+$/i;

/** Built-in method references without a dependency on `root`. */
var freeParseInt = parseInt;

/**
 * Converts `value` to a number.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to process.
 * @returns {number} Returns the number.
 * @example
 *
 * _.toNumber(3.2);
 * // => 3.2
 *
 * _.toNumber(Number.MIN_VALUE);
 * // => 5e-324
 *
 * _.toNumber(Infinity);
 * // => Infinity
 *
 * _.toNumber('3.2');
 * // => 3.2
 */
function toNumber(value) {
  if (typeof value == 'number') {
    return value;
  }
  if (isSymbol(value)) {
    return NAN;
  }
  if (isObject(value)) {
    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;
    value = isObject(other) ? (other + '') : other;
  }
  if (typeof value != 'string') {
    return value === 0 ? value : +value;
  }
  value = value.replace(reTrim, '');
  var isBinary = reIsBinary.test(value);
  return (isBinary || reIsOctal.test(value))
    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)
    : (reIsBadHex.test(value) ? NAN : +value);
}

module.exports = toNumber;


/***/ }),

/***/ "./node_modules/regenerator-runtime/runtime.js":
/*!*****************************************************!*\
  !*** ./node_modules/regenerator-runtime/runtime.js ***!
  \*****************************************************/
/*! unknown exports (runtime-defined) */
/*! runtime requirements: module */
/*! CommonJS bailout: module.exports is used directly at 732:31-45 */
/***/ ((module) => {

/**
 * Copyright (c) 2014-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

var runtime = (function (exports) {
  "use strict";

  var Op = Object.prototype;
  var hasOwn = Op.hasOwnProperty;
  var undefined; // More compressible than void 0.
  var $Symbol = typeof Symbol === "function" ? Symbol : {};
  var iteratorSymbol = $Symbol.iterator || "@@iterator";
  var asyncIteratorSymbol = $Symbol.asyncIterator || "@@asyncIterator";
  var toStringTagSymbol = $Symbol.toStringTag || "@@toStringTag";

  function define(obj, key, value) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
    return obj[key];
  }
  try {
    // IE 8 has a broken Object.defineProperty that only works on DOM objects.
    define({}, "");
  } catch (err) {
    define = function(obj, key, value) {
      return obj[key] = value;
    };
  }

  function wrap(innerFn, outerFn, self, tryLocsList) {
    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.
    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;
    var generator = Object.create(protoGenerator.prototype);
    var context = new Context(tryLocsList || []);

    // The ._invoke method unifies the implementations of the .next,
    // .throw, and .return methods.
    generator._invoke = makeInvokeMethod(innerFn, self, context);

    return generator;
  }
  exports.wrap = wrap;

  // Try/catch helper to minimize deoptimizations. Returns a completion
  // record like context.tryEntries[i].completion. This interface could
  // have been (and was previously) designed to take a closure to be
  // invoked without arguments, but in all the cases we care about we
  // already have an existing method we want to call, so there's no need
  // to create a new function object. We can even get away with assuming
  // the method takes exactly one argument, since that happens to be true
  // in every case, so we don't have to touch the arguments object. The
  // only additional allocation required is the completion record, which
  // has a stable shape and so hopefully should be cheap to allocate.
  function tryCatch(fn, obj, arg) {
    try {
      return { type: "normal", arg: fn.call(obj, arg) };
    } catch (err) {
      return { type: "throw", arg: err };
    }
  }

  var GenStateSuspendedStart = "suspendedStart";
  var GenStateSuspendedYield = "suspendedYield";
  var GenStateExecuting = "executing";
  var GenStateCompleted = "completed";

  // Returning this object from the innerFn has the same effect as
  // breaking out of the dispatch switch statement.
  var ContinueSentinel = {};

  // Dummy constructor functions that we use as the .constructor and
  // .constructor.prototype properties for functions that return Generator
  // objects. For full spec compliance, you may wish to configure your
  // minifier not to mangle the names of these two functions.
  function Generator() {}
  function GeneratorFunction() {}
  function GeneratorFunctionPrototype() {}

  // This is a polyfill for %IteratorPrototype% for environments that
  // don't natively support it.
  var IteratorPrototype = {};
  IteratorPrototype[iteratorSymbol] = function () {
    return this;
  };

  var getProto = Object.getPrototypeOf;
  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));
  if (NativeIteratorPrototype &&
      NativeIteratorPrototype !== Op &&
      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {
    // This environment has a native %IteratorPrototype%; use it instead
    // of the polyfill.
    IteratorPrototype = NativeIteratorPrototype;
  }

  var Gp = GeneratorFunctionPrototype.prototype =
    Generator.prototype = Object.create(IteratorPrototype);
  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;
  GeneratorFunctionPrototype.constructor = GeneratorFunction;
  GeneratorFunction.displayName = define(
    GeneratorFunctionPrototype,
    toStringTagSymbol,
    "GeneratorFunction"
  );

  // Helper for defining the .next, .throw, and .return methods of the
  // Iterator interface in terms of a single ._invoke method.
  function defineIteratorMethods(prototype) {
    ["next", "throw", "return"].forEach(function(method) {
      define(prototype, method, function(arg) {
        return this._invoke(method, arg);
      });
    });
  }

  exports.isGeneratorFunction = function(genFun) {
    var ctor = typeof genFun === "function" && genFun.constructor;
    return ctor
      ? ctor === GeneratorFunction ||
        // For the native GeneratorFunction constructor, the best we can
        // do is to check its .name property.
        (ctor.displayName || ctor.name) === "GeneratorFunction"
      : false;
  };

  exports.mark = function(genFun) {
    if (Object.setPrototypeOf) {
      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);
    } else {
      genFun.__proto__ = GeneratorFunctionPrototype;
      define(genFun, toStringTagSymbol, "GeneratorFunction");
    }
    genFun.prototype = Object.create(Gp);
    return genFun;
  };

  // Within the body of any async function, `await x` is transformed to
  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test
  // `hasOwn.call(value, "__await")` to determine if the yielded value is
  // meant to be awaited.
  exports.awrap = function(arg) {
    return { __await: arg };
  };

  function AsyncIterator(generator, PromiseImpl) {
    function invoke(method, arg, resolve, reject) {
      var record = tryCatch(generator[method], generator, arg);
      if (record.type === "throw") {
        reject(record.arg);
      } else {
        var result = record.arg;
        var value = result.value;
        if (value &&
            typeof value === "object" &&
            hasOwn.call(value, "__await")) {
          return PromiseImpl.resolve(value.__await).then(function(value) {
            invoke("next", value, resolve, reject);
          }, function(err) {
            invoke("throw", err, resolve, reject);
          });
        }

        return PromiseImpl.resolve(value).then(function(unwrapped) {
          // When a yielded Promise is resolved, its final value becomes
          // the .value of the Promise<{value,done}> result for the
          // current iteration.
          result.value = unwrapped;
          resolve(result);
        }, function(error) {
          // If a rejected Promise was yielded, throw the rejection back
          // into the async generator function so it can be handled there.
          return invoke("throw", error, resolve, reject);
        });
      }
    }

    var previousPromise;

    function enqueue(method, arg) {
      function callInvokeWithMethodAndArg() {
        return new PromiseImpl(function(resolve, reject) {
          invoke(method, arg, resolve, reject);
        });
      }

      return previousPromise =
        // If enqueue has been called before, then we want to wait until
        // all previous Promises have been resolved before calling invoke,
        // so that results are always delivered in the correct order. If
        // enqueue has not been called before, then it is important to
        // call invoke immediately, without waiting on a callback to fire,
        // so that the async generator function has the opportunity to do
        // any necessary setup in a predictable way. This predictability
        // is why the Promise constructor synchronously invokes its
        // executor callback, and why async functions synchronously
        // execute code before the first await. Since we implement simple
        // async functions in terms of async generators, it is especially
        // important to get this right, even though it requires care.
        previousPromise ? previousPromise.then(
          callInvokeWithMethodAndArg,
          // Avoid propagating failures to Promises returned by later
          // invocations of the iterator.
          callInvokeWithMethodAndArg
        ) : callInvokeWithMethodAndArg();
    }

    // Define the unified helper method that is used to implement .next,
    // .throw, and .return (see defineIteratorMethods).
    this._invoke = enqueue;
  }

  defineIteratorMethods(AsyncIterator.prototype);
  AsyncIterator.prototype[asyncIteratorSymbol] = function () {
    return this;
  };
  exports.AsyncIterator = AsyncIterator;

  // Note that simple async functions are implemented on top of
  // AsyncIterator objects; they just return a Promise for the value of
  // the final result produced by the iterator.
  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {
    if (PromiseImpl === void 0) PromiseImpl = Promise;

    var iter = new AsyncIterator(
      wrap(innerFn, outerFn, self, tryLocsList),
      PromiseImpl
    );

    return exports.isGeneratorFunction(outerFn)
      ? iter // If outerFn is a generator, return the full iterator.
      : iter.next().then(function(result) {
          return result.done ? result.value : iter.next();
        });
  };

  function makeInvokeMethod(innerFn, self, context) {
    var state = GenStateSuspendedStart;

    return function invoke(method, arg) {
      if (state === GenStateExecuting) {
        throw new Error("Generator is already running");
      }

      if (state === GenStateCompleted) {
        if (method === "throw") {
          throw arg;
        }

        // Be forgiving, per 25.3.3.3.3 of the spec:
        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume
        return doneResult();
      }

      context.method = method;
      context.arg = arg;

      while (true) {
        var delegate = context.delegate;
        if (delegate) {
          var delegateResult = maybeInvokeDelegate(delegate, context);
          if (delegateResult) {
            if (delegateResult === ContinueSentinel) continue;
            return delegateResult;
          }
        }

        if (context.method === "next") {
          // Setting context._sent for legacy support of Babel's
          // function.sent implementation.
          context.sent = context._sent = context.arg;

        } else if (context.method === "throw") {
          if (state === GenStateSuspendedStart) {
            state = GenStateCompleted;
            throw context.arg;
          }

          context.dispatchException(context.arg);

        } else if (context.method === "return") {
          context.abrupt("return", context.arg);
        }

        state = GenStateExecuting;

        var record = tryCatch(innerFn, self, context);
        if (record.type === "normal") {
          // If an exception is thrown from innerFn, we leave state ===
          // GenStateExecuting and loop back for another invocation.
          state = context.done
            ? GenStateCompleted
            : GenStateSuspendedYield;

          if (record.arg === ContinueSentinel) {
            continue;
          }

          return {
            value: record.arg,
            done: context.done
          };

        } else if (record.type === "throw") {
          state = GenStateCompleted;
          // Dispatch the exception by looping back around to the
          // context.dispatchException(context.arg) call above.
          context.method = "throw";
          context.arg = record.arg;
        }
      }
    };
  }

  // Call delegate.iterator[context.method](context.arg) and handle the
  // result, either by returning a { value, done } result from the
  // delegate iterator, or by modifying context.method and context.arg,
  // setting context.delegate to null, and returning the ContinueSentinel.
  function maybeInvokeDelegate(delegate, context) {
    var method = delegate.iterator[context.method];
    if (method === undefined) {
      // A .throw or .return when the delegate iterator has no .throw
      // method always terminates the yield* loop.
      context.delegate = null;

      if (context.method === "throw") {
        // Note: ["return"] must be used for ES3 parsing compatibility.
        if (delegate.iterator["return"]) {
          // If the delegate iterator has a return method, give it a
          // chance to clean up.
          context.method = "return";
          context.arg = undefined;
          maybeInvokeDelegate(delegate, context);

          if (context.method === "throw") {
            // If maybeInvokeDelegate(context) changed context.method from
            // "return" to "throw", let that override the TypeError below.
            return ContinueSentinel;
          }
        }

        context.method = "throw";
        context.arg = new TypeError(
          "The iterator does not provide a 'throw' method");
      }

      return ContinueSentinel;
    }

    var record = tryCatch(method, delegate.iterator, context.arg);

    if (record.type === "throw") {
      context.method = "throw";
      context.arg = record.arg;
      context.delegate = null;
      return ContinueSentinel;
    }

    var info = record.arg;

    if (! info) {
      context.method = "throw";
      context.arg = new TypeError("iterator result is not an object");
      context.delegate = null;
      return ContinueSentinel;
    }

    if (info.done) {
      // Assign the result of the finished delegate to the temporary
      // variable specified by delegate.resultName (see delegateYield).
      context[delegate.resultName] = info.value;

      // Resume execution at the desired location (see delegateYield).
      context.next = delegate.nextLoc;

      // If context.method was "throw" but the delegate handled the
      // exception, let the outer generator proceed normally. If
      // context.method was "next", forget context.arg since it has been
      // "consumed" by the delegate iterator. If context.method was
      // "return", allow the original .return call to continue in the
      // outer generator.
      if (context.method !== "return") {
        context.method = "next";
        context.arg = undefined;
      }

    } else {
      // Re-yield the result returned by the delegate method.
      return info;
    }

    // The delegate iterator is finished, so forget it and continue with
    // the outer generator.
    context.delegate = null;
    return ContinueSentinel;
  }

  // Define Generator.prototype.{next,throw,return} in terms of the
  // unified ._invoke helper method.
  defineIteratorMethods(Gp);

  define(Gp, toStringTagSymbol, "Generator");

  // A Generator should always return itself as the iterator object when the
  // @@iterator function is called on it. Some browsers' implementations of the
  // iterator prototype chain incorrectly implement this, causing the Generator
  // object to not be returned from this call. This ensures that doesn't happen.
  // See https://github.com/facebook/regenerator/issues/274 for more details.
  Gp[iteratorSymbol] = function() {
    return this;
  };

  Gp.toString = function() {
    return "[object Generator]";
  };

  function pushTryEntry(locs) {
    var entry = { tryLoc: locs[0] };

    if (1 in locs) {
      entry.catchLoc = locs[1];
    }

    if (2 in locs) {
      entry.finallyLoc = locs[2];
      entry.afterLoc = locs[3];
    }

    this.tryEntries.push(entry);
  }

  function resetTryEntry(entry) {
    var record = entry.completion || {};
    record.type = "normal";
    delete record.arg;
    entry.completion = record;
  }

  function Context(tryLocsList) {
    // The root entry object (effectively a try statement without a catch
    // or a finally block) gives us a place to store values thrown from
    // locations where there is no enclosing try statement.
    this.tryEntries = [{ tryLoc: "root" }];
    tryLocsList.forEach(pushTryEntry, this);
    this.reset(true);
  }

  exports.keys = function(object) {
    var keys = [];
    for (var key in object) {
      keys.push(key);
    }
    keys.reverse();

    // Rather than returning an object with a next method, we keep
    // things simple and return the next function itself.
    return function next() {
      while (keys.length) {
        var key = keys.pop();
        if (key in object) {
          next.value = key;
          next.done = false;
          return next;
        }
      }

      // To avoid creating an additional object, we just hang the .value
      // and .done properties off the next function object itself. This
      // also ensures that the minifier will not anonymize the function.
      next.done = true;
      return next;
    };
  };

  function values(iterable) {
    if (iterable) {
      var iteratorMethod = iterable[iteratorSymbol];
      if (iteratorMethod) {
        return iteratorMethod.call(iterable);
      }

      if (typeof iterable.next === "function") {
        return iterable;
      }

      if (!isNaN(iterable.length)) {
        var i = -1, next = function next() {
          while (++i < iterable.length) {
            if (hasOwn.call(iterable, i)) {
              next.value = iterable[i];
              next.done = false;
              return next;
            }
          }

          next.value = undefined;
          next.done = true;

          return next;
        };

        return next.next = next;
      }
    }

    // Return an iterator with no values.
    return { next: doneResult };
  }
  exports.values = values;

  function doneResult() {
    return { value: undefined, done: true };
  }

  Context.prototype = {
    constructor: Context,

    reset: function(skipTempReset) {
      this.prev = 0;
      this.next = 0;
      // Resetting context._sent for legacy support of Babel's
      // function.sent implementation.
      this.sent = this._sent = undefined;
      this.done = false;
      this.delegate = null;

      this.method = "next";
      this.arg = undefined;

      this.tryEntries.forEach(resetTryEntry);

      if (!skipTempReset) {
        for (var name in this) {
          // Not sure about the optimal order of these conditions:
          if (name.charAt(0) === "t" &&
              hasOwn.call(this, name) &&
              !isNaN(+name.slice(1))) {
            this[name] = undefined;
          }
        }
      }
    },

    stop: function() {
      this.done = true;

      var rootEntry = this.tryEntries[0];
      var rootRecord = rootEntry.completion;
      if (rootRecord.type === "throw") {
        throw rootRecord.arg;
      }

      return this.rval;
    },

    dispatchException: function(exception) {
      if (this.done) {
        throw exception;
      }

      var context = this;
      function handle(loc, caught) {
        record.type = "throw";
        record.arg = exception;
        context.next = loc;

        if (caught) {
          // If the dispatched exception was caught by a catch block,
          // then let that catch block handle the exception normally.
          context.method = "next";
          context.arg = undefined;
        }

        return !! caught;
      }

      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        var record = entry.completion;

        if (entry.tryLoc === "root") {
          // Exception thrown outside of any try block that could handle
          // it, so set the completion value of the entire function to
          // throw the exception.
          return handle("end");
        }

        if (entry.tryLoc <= this.prev) {
          var hasCatch = hasOwn.call(entry, "catchLoc");
          var hasFinally = hasOwn.call(entry, "finallyLoc");

          if (hasCatch && hasFinally) {
            if (this.prev < entry.catchLoc) {
              return handle(entry.catchLoc, true);
            } else if (this.prev < entry.finallyLoc) {
              return handle(entry.finallyLoc);
            }

          } else if (hasCatch) {
            if (this.prev < entry.catchLoc) {
              return handle(entry.catchLoc, true);
            }

          } else if (hasFinally) {
            if (this.prev < entry.finallyLoc) {
              return handle(entry.finallyLoc);
            }

          } else {
            throw new Error("try statement without catch or finally");
          }
        }
      }
    },

    abrupt: function(type, arg) {
      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        if (entry.tryLoc <= this.prev &&
            hasOwn.call(entry, "finallyLoc") &&
            this.prev < entry.finallyLoc) {
          var finallyEntry = entry;
          break;
        }
      }

      if (finallyEntry &&
          (type === "break" ||
           type === "continue") &&
          finallyEntry.tryLoc <= arg &&
          arg <= finallyEntry.finallyLoc) {
        // Ignore the finally entry if control is not jumping to a
        // location outside the try/catch block.
        finallyEntry = null;
      }

      var record = finallyEntry ? finallyEntry.completion : {};
      record.type = type;
      record.arg = arg;

      if (finallyEntry) {
        this.method = "next";
        this.next = finallyEntry.finallyLoc;
        return ContinueSentinel;
      }

      return this.complete(record);
    },

    complete: function(record, afterLoc) {
      if (record.type === "throw") {
        throw record.arg;
      }

      if (record.type === "break" ||
          record.type === "continue") {
        this.next = record.arg;
      } else if (record.type === "return") {
        this.rval = this.arg = record.arg;
        this.method = "return";
        this.next = "end";
      } else if (record.type === "normal" && afterLoc) {
        this.next = afterLoc;
      }

      return ContinueSentinel;
    },

    finish: function(finallyLoc) {
      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        if (entry.finallyLoc === finallyLoc) {
          this.complete(entry.completion, entry.afterLoc);
          resetTryEntry(entry);
          return ContinueSentinel;
        }
      }
    },

    "catch": function(tryLoc) {
      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        if (entry.tryLoc === tryLoc) {
          var record = entry.completion;
          if (record.type === "throw") {
            var thrown = record.arg;
            resetTryEntry(entry);
          }
          return thrown;
        }
      }

      // The context.catch method must only be called with a location
      // argument that corresponds to a known catch block.
      throw new Error("illegal catch attempt");
    },

    delegateYield: function(iterable, resultName, nextLoc) {
      this.delegate = {
        iterator: values(iterable),
        resultName: resultName,
        nextLoc: nextLoc
      };

      if (this.method === "next") {
        // Deliberately forget the last sent value so that we don't
        // accidentally pass it on to the delegate.
        this.arg = undefined;
      }

      return ContinueSentinel;
    }
  };

  // Regardless of whether this script is executing as a CommonJS module
  // or not, return the runtime object so that we can declare the variable
  // regeneratorRuntime in the outer scope, which allows this module to be
  // injected easily by `bin/regenerator --include-runtime script.js`.
  return exports;

}(
  // If this script is executing as a CommonJS module, use module.exports
  // as the regeneratorRuntime namespace. Otherwise create a new empty
  // object. Either way, the resulting object will be used to initialize
  // the regeneratorRuntime variable at the top of this file.
   true ? module.exports : 0
));

try {
  regeneratorRuntime = runtime;
} catch (accidentalStrictMode) {
  // This module should not be running in strict mode, so the above
  // assignment should always work unless something is misconfigured. Just
  // in case runtime.js accidentally runs in strict mode, we can escape
  // strict mode using a global Function call. This could conceivably fail
  // if a Content Security Policy forbids using Function, but in that case
  // the proper solution is to fix the accidental strict mode problem. If
  // you've misconfigured your bundler to force strict mode and applied a
  // CSP to forbid Function, and you're not willing to fix either of those
  // problems, please detail your unique predicament in a GitHub issue.
  Function("r", "regeneratorRuntime = r")(runtime);
}


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/constants.js":
/*!***************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/constants.js ***!
  \***************************************************************************/
/*! namespace exports */
/*! export MOST_NEGATIVE_SINGLE_FLOAT [provided] [no usage info] [missing usage info prevents renaming] */
/*! export MOST_POSITIVE_SINGLE_FLOAT [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "MOST_NEGATIVE_SINGLE_FLOAT": () => /* binding */ MOST_NEGATIVE_SINGLE_FLOAT,
/* harmony export */   "MOST_POSITIVE_SINGLE_FLOAT": () => /* binding */ MOST_POSITIVE_SINGLE_FLOAT
/* harmony export */ });
const MOST_NEGATIVE_SINGLE_FLOAT = -3.4028234663852886e38;
const MOST_POSITIVE_SINGLE_FLOAT = -MOST_NEGATIVE_SINGLE_FLOAT;
//# sourceMappingURL=constants.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/abort-error.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/abort-error.js ***!
  \***************************************************************************************/
/*! namespace exports */
/*! export createAbortError [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "createAbortError": () => /* binding */ createAbortError
/* harmony export */ });
const createAbortError = () => new DOMException('', 'AbortError');
//# sourceMappingURL=abort-error.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/add-active-input-connection-to-audio-node.js":
/*!*********************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/add-active-input-connection-to-audio-node.js ***!
  \*********************************************************************************************************************/
/*! namespace exports */
/*! export createAddActiveInputConnectionToAudioNode [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "createAddActiveInputConnectionToAudioNode": () => /* binding */ createAddActiveInputConnectionToAudioNode
/* harmony export */ });
const createAddActiveInputConnectionToAudioNode = (insertElementInSet) => {
    return (activeInputs, source, [output, input, eventListener], ignoreDuplicates) => {
        insertElementInSet(activeInputs[input], [source, output, eventListener], (activeInputConnection) => activeInputConnection[0] === source && activeInputConnection[1] === output, ignoreDuplicates);
    };
};
//# sourceMappingURL=add-active-input-connection-to-audio-node.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/add-audio-node-connections.js":
/*!******************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/add-audio-node-connections.js ***!
  \******************************************************************************************************/
/*! namespace exports */
/*! export createAddAudioNodeConnections [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "createAddAudioNodeConnections": () => /* binding */ createAddAudioNodeConnections
/* harmony export */ });
const createAddAudioNodeConnections = (audioNodeConnectionsStore) => {
    return (audioNode, audioNodeRenderer, nativeAudioNode) => {
        const activeInputs = [];
        for (let i = 0; i < nativeAudioNode.numberOfInputs; i += 1) {
            activeInputs.push(new Set());
        }
        audioNodeConnectionsStore.set(audioNode, {
            activeInputs,
            outputs: new Set(),
            passiveInputs: new WeakMap(),
            renderer: audioNodeRenderer
        });
    };
};
//# sourceMappingURL=add-audio-node-connections.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/add-audio-param-connections.js":
/*!*******************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/add-audio-param-connections.js ***!
  \*******************************************************************************************************/
/*! namespace exports */
/*! export createAddAudioParamConnections [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "createAddAudioParamConnections": () => /* binding */ createAddAudioParamConnections
/* harmony export */ });
const createAddAudioParamConnections = (audioParamConnectionsStore) => {
    return (audioParam, audioParamRenderer) => {
        audioParamConnectionsStore.set(audioParam, { activeInputs: new Set(), passiveInputs: new WeakMap(), renderer: audioParamRenderer });
    };
};
//# sourceMappingURL=add-audio-param-connections.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/add-audio-worklet-module.js":
/*!****************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/add-audio-worklet-module.js ***!
  \****************************************************************************************************/
/*! namespace exports */
/*! export createAddAudioWorkletModule [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "createAddAudioWorkletModule": () => /* binding */ createAddAudioWorkletModule
/* harmony export */ });
/* harmony import */ var _globals__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../globals */ "./node_modules/standardized-audio-context/build/es2019/globals.js");
/* harmony import */ var _helpers_is_constructible__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../helpers/is-constructible */ "./node_modules/standardized-audio-context/build/es2019/helpers/is-constructible.js");
/* harmony import */ var _helpers_split_import_statements__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../helpers/split-import-statements */ "./node_modules/standardized-audio-context/build/es2019/helpers/split-import-statements.js");
;


const verifyParameterDescriptors = (parameterDescriptors) => {
    if (parameterDescriptors !== undefined && !Array.isArray(parameterDescriptors)) {
        throw new TypeError('The parameterDescriptors property of given value for processorCtor is not an array.');
    }
};
const verifyProcessorCtor = (processorCtor) => {
    if (!(0,_helpers_is_constructible__WEBPACK_IMPORTED_MODULE_1__.isConstructible)(processorCtor)) {
        throw new TypeError('The given value for processorCtor should be a constructor.');
    }
    if (processorCtor.prototype === null || typeof processorCtor.prototype !== 'object') {
        throw new TypeError('The given value for processorCtor should have a prototype.');
    }
};
const createAddAudioWorkletModule = (cacheTestResult, createNotSupportedError, evaluateSource, exposeCurrentFrameAndCurrentTime, fetchSource, getNativeContext, getOrCreateBackupOfflineAudioContext, isNativeOfflineAudioContext, ongoingRequests, resolvedRequests, testAudioWorkletProcessorPostMessageSupport, window) => {
    return (context, moduleURL, options = { credentials: 'omit' }) => {
        const nativeContext = getNativeContext(context);
        const absoluteUrl = new URL(moduleURL, window.location.href).toString();
        // Bug #59: Safari does not implement the audioWorklet property.
        if (nativeContext.audioWorklet !== undefined) {
            return Promise.all([
                fetchSource(moduleURL),
                Promise.resolve(cacheTestResult(testAudioWorkletProcessorPostMessageSupport, testAudioWorkletProcessorPostMessageSupport))
            ]).then(([source, isSupportingPostMessage]) => {
                const [importStatements, sourceWithoutImportStatements] = (0,_helpers_split_import_statements__WEBPACK_IMPORTED_MODULE_2__.splitImportStatements)(source, absoluteUrl);
                /*
                 * Bug #179: Firefox does not allow to transfer any buffer which has been passed to the process() method as an argument.
                 *
                 * This is the unminified version of the code used below.
                 *
                 * ```js
                 * class extends AudioWorkletProcessor {
                 *
                 *     __buffers = new WeakSet();
                 *
                 *     constructor () {
                 *         super();
                 *
                 *         this.port.postMessage = ((postMessage) => {
                 *             return (message, transferables) => {
                 *                 const filteredTransferables = (transferables)
                 *                     ? transferables.filter((transferable) => !this.__buffers.has(transferable))
                 *                     : transferables;
                 *
                 *                 return postMessage.call(this.port, message, filteredTransferables);
                 *              };
                 *         })(this.port.postMessage);
                 *     }
                 * }
                 * ```
                 */
                const patchedSourceWithoutImportStatements = isSupportingPostMessage
                    ? sourceWithoutImportStatements
                    : sourceWithoutImportStatements.replace(/\s+extends\s+AudioWorkletProcessor\s*{/, ` extends (class extends AudioWorkletProcessor {__b=new WeakSet();constructor(){super();(p=>p.postMessage=(q=>(m,t)=>q.call(p,m,t?t.filter(u=>!this.__b.has(u)):t))(p.postMessage))(this.port)}}){`);
                /*
                 * Bug #170: Chrome and Edge do call process() with an array with empty channelData for each input if no input is connected.
                 *
                 * Bug #179: Firefox does not allow to transfer any buffer which has been passed to the process() method as an argument.
                 *
                 * This is the unminified version of the code used below:
                 *
                 * ```js
                 * `${ importStatements };
                 * ((registerProcessor) => {${ sourceWithoutImportStatements }
                 * })((name, processorCtor) => registerProcessor(name, class extends processorCtor {
                 *
                 *     __collectBuffers = (array) => {
                 *         array.forEach((element) => this.__buffers.add(element.buffer));
                 *     };
                 *
                 *     process (inputs, outputs, parameters) {
                 *         inputs.forEach(this.__collectBuffers);
                 *         outputs.forEach(this.__collectBuffers);
                 *         this.__collectBuffers(Object.values(parameters));
                 *
                 *         return super.process(
                 *             (inputs.map((input) => input.some((channelData) => channelData.length === 0)) ? [ ] : input),
                 *             outputs,
                 *             parameters
                 *         );
                 *     }
                 *
                 * }))`
                 * ```
                 */
                const memberDefinition = isSupportingPostMessage ? '' : '__c = (a) => a.forEach(e=>this.__b.add(e.buffer));';
                const bufferRegistration = isSupportingPostMessage
                    ? ''
                    : 'i.forEach(this.__c);o.forEach(this.__c);this.__c(Object.values(p));';
                const wrappedSource = `${importStatements};(registerProcessor=>{${patchedSourceWithoutImportStatements}
})((n,p)=>registerProcessor(n,class extends p{${memberDefinition}process(i,o,p){${bufferRegistration}return super.process(i.map(j=>j.some(k=>k.length===0)?[]:j),o,p)}}))`;
                const blob = new Blob([wrappedSource], { type: 'application/javascript; charset=utf-8' });
                const url = URL.createObjectURL(blob);
                return nativeContext.audioWorklet
                    .addModule(url, options)
                    .then(() => {
                    if (isNativeOfflineAudioContext(nativeContext)) {
                        return;
                    }
                    // Bug #186: Chrome, Edge and Opera do not allow to create an AudioWorkletNode on a closed AudioContext.
                    const backupOfflineAudioContext = getOrCreateBackupOfflineAudioContext(nativeContext);
                    return backupOfflineAudioContext.audioWorklet.addModule(url, options);
                })
                    .finally(() => URL.revokeObjectURL(url));
            });
        }
        const resolvedRequestsOfContext = resolvedRequests.get(context);
        if (resolvedRequestsOfContext !== undefined && resolvedRequestsOfContext.has(moduleURL)) {
            return Promise.resolve();
        }
        const ongoingRequestsOfContext = ongoingRequests.get(context);
        if (ongoingRequestsOfContext !== undefined) {
            const promiseOfOngoingRequest = ongoingRequestsOfContext.get(moduleURL);
            if (promiseOfOngoingRequest !== undefined) {
                return promiseOfOngoingRequest;
            }
        }
        const promise = fetchSource(moduleURL)
            .then((source) => {
            const [importStatements, sourceWithoutImportStatements] = (0,_helpers_split_import_statements__WEBPACK_IMPORTED_MODULE_2__.splitImportStatements)(source, absoluteUrl);
            /*
             * This is the unminified version of the code used below:
             *
             * ```js
             * ${ importStatements };
             * ((a, b) => {
             *     (a[b] = a[b] || [ ]).push(
             *         (AudioWorkletProcessor, global, registerProcessor, sampleRate, self, window) => {
             *             ${ sourceWithoutImportStatements }
             *         }
             *     );
             * })(window, '_AWGS');
             * ```
             */
            // tslint:disable-next-line:max-line-length
            const wrappedSource = `${importStatements};((a,b)=>{(a[b]=a[b]||[]).push((AudioWorkletProcessor,global,registerProcessor,sampleRate,self,window)=>{${sourceWithoutImportStatements}
})})(window,'_AWGS')`;
            // @todo Evaluating the given source code is a possible security problem.
            return evaluateSource(wrappedSource);
        })
            .then(() => {
            const evaluateAudioWorkletGlobalScope = window._AWGS.pop();
            if (evaluateAudioWorkletGlobalScope === undefined) {
                // Bug #182 Chrome, Edge and Opera do throw an instance of a SyntaxError instead of a DOMException.
                throw new SyntaxError();
            }
            exposeCurrentFrameAndCurrentTime(nativeContext.currentTime, nativeContext.sampleRate, () => evaluateAudioWorkletGlobalScope(class AudioWorkletProcessor {
            }, undefined, (name, processorCtor) => {
                if (name.trim() === '') {
                    throw createNotSupportedError();
                }
                const nodeNameToProcessorConstructorMap = _globals__WEBPACK_IMPORTED_MODULE_0__.NODE_NAME_TO_PROCESSOR_CONSTRUCTOR_MAPS.get(nativeContext);
                if (nodeNameToProcessorConstructorMap !== undefined) {
                    if (nodeNameToProcessorConstructorMap.has(name)) {
                        throw createNotSupportedError();
                    }
                    verifyProcessorCtor(processorCtor);
                    verifyParameterDescriptors(processorCtor.parameterDescriptors);
                    nodeNameToProcessorConstructorMap.set(name, processorCtor);
                }
                else {
                    verifyProcessorCtor(processorCtor);
                    verifyParameterDescriptors(processorCtor.parameterDescriptors);
                    _globals__WEBPACK_IMPORTED_MODULE_0__.NODE_NAME_TO_PROCESSOR_CONSTRUCTOR_MAPS.set(nativeContext, new Map([[name, processorCtor]]));
                }
            }, nativeContext.sampleRate, undefined, undefined));
        });
        if (ongoingRequestsOfContext === undefined) {
            ongoingRequests.set(context, new Map([[moduleURL, promise]]));
        }
        else {
            ongoingRequestsOfContext.set(moduleURL, promise);
        }
        promise
            .then(() => {
            const rslvdRqstsFCntxt = resolvedRequests.get(context);
            if (rslvdRqstsFCntxt === undefined) {
                resolvedRequests.set(context, new Set([moduleURL]));
            }
            else {
                rslvdRqstsFCntxt.add(moduleURL);
            }
        })
            .finally(() => {
            const ngngRqstsFCntxt = ongoingRequests.get(context);
            if (ngngRqstsFCntxt !== undefined) {
                ngngRqstsFCntxt.delete(moduleURL);
            }
        });
        return promise;
    };
};
//# sourceMappingURL=add-audio-worklet-module.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/add-connection-to-audio-node.js":
/*!********************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/add-connection-to-audio-node.js ***!
  \********************************************************************************************************/
/*! namespace exports */
/*! export createAddConnectionToAudioNode [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "createAddConnectionToAudioNode": () => /* binding */ createAddConnectionToAudioNode
/* harmony export */ });
/* harmony import */ var _helpers_delete_passive_input_connection_to_audio_node__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../helpers/delete-passive-input-connection-to-audio-node */ "./node_modules/standardized-audio-context/build/es2019/helpers/delete-passive-input-connection-to-audio-node.js");
/* harmony import */ var _helpers_set_internal_state_to_active__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../helpers/set-internal-state-to-active */ "./node_modules/standardized-audio-context/build/es2019/helpers/set-internal-state-to-active.js");
/* harmony import */ var _helpers_set_internal_state_to_passive_when_necessary__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../helpers/set-internal-state-to-passive-when-necessary */ "./node_modules/standardized-audio-context/build/es2019/helpers/set-internal-state-to-passive-when-necessary.js");
;


const createAddConnectionToAudioNode = (addActiveInputConnectionToAudioNode, addPassiveInputConnectionToAudioNode, connectNativeAudioNodeToNativeAudioNode, deleteActiveInputConnectionToAudioNode, disconnectNativeAudioNodeFromNativeAudioNode, getAudioNodeConnections, getAudioNodeTailTime, getEventListenersOfAudioNode, getNativeAudioNode, insertElementInSet, isActiveAudioNode, isPartOfACycle, isPassiveAudioNode) => {
    return (source, destination, output, input, isOffline) => {
        const { activeInputs, passiveInputs } = getAudioNodeConnections(destination);
        const { outputs } = getAudioNodeConnections(source);
        const eventListeners = getEventListenersOfAudioNode(source);
        const eventListener = (isActive) => {
            const nativeDestinationAudioNode = getNativeAudioNode(destination);
            const nativeSourceAudioNode = getNativeAudioNode(source);
            if (isActive) {
                const partialConnection = (0,_helpers_delete_passive_input_connection_to_audio_node__WEBPACK_IMPORTED_MODULE_0__.deletePassiveInputConnectionToAudioNode)(passiveInputs, source, output, input);
                addActiveInputConnectionToAudioNode(activeInputs, source, partialConnection, false);
                if (!isOffline && !isPartOfACycle(source)) {
                    connectNativeAudioNodeToNativeAudioNode(nativeSourceAudioNode, nativeDestinationAudioNode, output, input);
                }
                if (isPassiveAudioNode(destination)) {
                    (0,_helpers_set_internal_state_to_active__WEBPACK_IMPORTED_MODULE_1__.setInternalStateToActive)(destination);
                }
            }
            else {
                const partialConnection = deleteActiveInputConnectionToAudioNode(activeInputs, source, output, input);
                addPassiveInputConnectionToAudioNode(passiveInputs, input, partialConnection, false);
                if (!isOffline && !isPartOfACycle(source)) {
                    disconnectNativeAudioNodeFromNativeAudioNode(nativeSourceAudioNode, nativeDestinationAudioNode, output, input);
                }
                const tailTime = getAudioNodeTailTime(destination);
                if (tailTime === 0) {
                    if (isActiveAudioNode(destination)) {
                        (0,_helpers_set_internal_state_to_passive_when_necessary__WEBPACK_IMPORTED_MODULE_2__.setInternalStateToPassiveWhenNecessary)(destination, activeInputs);
                    }
                }
                else {
                    setTimeout(() => {
                        if (isActiveAudioNode(destination)) {
                            (0,_helpers_set_internal_state_to_passive_when_necessary__WEBPACK_IMPORTED_MODULE_2__.setInternalStateToPassiveWhenNecessary)(destination, activeInputs);
                        }
                    }, tailTime * 1000);
                }
            }
        };
        if (insertElementInSet(outputs, [destination, output, input], (outputConnection) => outputConnection[0] === destination && outputConnection[1] === output && outputConnection[2] === input, true)) {
            eventListeners.add(eventListener);
            if (isActiveAudioNode(source)) {
                addActiveInputConnectionToAudioNode(activeInputs, source, [output, input, eventListener], true);
            }
            else {
                addPassiveInputConnectionToAudioNode(passiveInputs, input, [source, output, eventListener], true);
            }
            return true;
        }
        return false;
    };
};
//# sourceMappingURL=add-connection-to-audio-node.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/add-passive-input-connection-to-audio-node.js":
/*!**********************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/add-passive-input-connection-to-audio-node.js ***!
  \**********************************************************************************************************************/
/*! namespace exports */
/*! export createAddPassiveInputConnectionToAudioNode [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "createAddPassiveInputConnectionToAudioNode": () => /* binding */ createAddPassiveInputConnectionToAudioNode
/* harmony export */ });
const createAddPassiveInputConnectionToAudioNode = (insertElementInSet) => {
    return (passiveInputs, input, [source, output, eventListener], ignoreDuplicates) => {
        const passiveInputConnections = passiveInputs.get(source);
        if (passiveInputConnections === undefined) {
            passiveInputs.set(source, new Set([[output, input, eventListener]]));
        }
        else {
            insertElementInSet(passiveInputConnections, [output, input, eventListener], (passiveInputConnection) => passiveInputConnection[0] === output && passiveInputConnection[1] === input, ignoreDuplicates);
        }
    };
};
//# sourceMappingURL=add-passive-input-connection-to-audio-node.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/add-silent-connection.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/add-silent-connection.js ***!
  \*************************************************************************************************/
/*! namespace exports */
/*! export createAddSilentConnection [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "createAddSilentConnection": () => /* binding */ createAddSilentConnection
/* harmony export */ });
const createAddSilentConnection = (createNativeGainNode) => {
    return (nativeContext, nativeAudioScheduledSourceNode) => {
        const nativeGainNode = createNativeGainNode(nativeContext, {
            channelCount: 1,
            channelCountMode: 'explicit',
            channelInterpretation: 'discrete',
            gain: 0
        });
        nativeAudioScheduledSourceNode.connect(nativeGainNode).connect(nativeContext.destination);
        const disconnect = () => {
            nativeAudioScheduledSourceNode.removeEventListener('ended', disconnect);
            nativeAudioScheduledSourceNode.disconnect(nativeGainNode);
            nativeGainNode.disconnect();
        };
        nativeAudioScheduledSourceNode.addEventListener('ended', disconnect);
    };
};
//# sourceMappingURL=add-silent-connection.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/add-unrendered-audio-worklet-node.js":
/*!*************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/add-unrendered-audio-worklet-node.js ***!
  \*************************************************************************************************************/
/*! namespace exports */
/*! export createAddUnrenderedAudioWorkletNode [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "createAddUnrenderedAudioWorkletNode": () => /* binding */ createAddUnrenderedAudioWorkletNode
/* harmony export */ });
const createAddUnrenderedAudioWorkletNode = (getUnrenderedAudioWorkletNodes) => {
    return (nativeContext, audioWorkletNode) => {
        getUnrenderedAudioWorkletNodes(nativeContext).add(audioWorkletNode);
    };
};
//# sourceMappingURL=add-unrendered-audio-worklet-node.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/analyser-node-constructor.js":
/*!*****************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/analyser-node-constructor.js ***!
  \*****************************************************************************************************/
/*! namespace exports */
/*! export createAnalyserNodeConstructor [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "createAnalyserNodeConstructor": () => /* binding */ createAnalyserNodeConstructor
/* harmony export */ });
const DEFAULT_OPTIONS = {
    channelCount: 2,
    channelCountMode: 'max',
    channelInterpretation: 'speakers',
    fftSize: 2048,
    maxDecibels: -30,
    minDecibels: -100,
    smoothingTimeConstant: 0.8
};
const createAnalyserNodeConstructor = (audionNodeConstructor, createAnalyserNodeRenderer, createIndexSizeError, createNativeAnalyserNode, getNativeContext, isNativeOfflineAudioContext) => {
    return class AnalyserNode extends audionNodeConstructor {
        constructor(context, options) {
            const nativeContext = getNativeContext(context);
            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };
            const nativeAnalyserNode = createNativeAnalyserNode(nativeContext, mergedOptions);
            const analyserNodeRenderer = ((isNativeOfflineAudioContext(nativeContext) ? createAnalyserNodeRenderer() : null));
            super(context, false, nativeAnalyserNode, analyserNodeRenderer);
            this._nativeAnalyserNode = nativeAnalyserNode;
        }
        get fftSize() {
            return this._nativeAnalyserNode.fftSize;
        }
        set fftSize(value) {
            this._nativeAnalyserNode.fftSize = value;
        }
        get frequencyBinCount() {
            return this._nativeAnalyserNode.frequencyBinCount;
        }
        get maxDecibels() {
            return this._nativeAnalyserNode.maxDecibels;
        }
        set maxDecibels(value) {
            // Bug #118: Safari does not throw an error if maxDecibels is not more than minDecibels.
            const maxDecibels = this._nativeAnalyserNode.maxDecibels;
            this._nativeAnalyserNode.maxDecibels = value;
            if (!(value > this._nativeAnalyserNode.minDecibels)) {
                this._nativeAnalyserNode.maxDecibels = maxDecibels;
                throw createIndexSizeError();
            }
        }
        get minDecibels() {
            return this._nativeAnalyserNode.minDecibels;
        }
        set minDecibels(value) {
            // Bug #118: Safari does not throw an error if maxDecibels is not more than minDecibels.
            const minDecibels = this._nativeAnalyserNode.minDecibels;
            this._nativeAnalyserNode.minDecibels = value;
            if (!(this._nativeAnalyserNode.maxDecibels > value)) {
                this._nativeAnalyserNode.minDecibels = minDecibels;
                throw createIndexSizeError();
            }
        }
        get smoothingTimeConstant() {
            return this._nativeAnalyserNode.smoothingTimeConstant;
        }
        set smoothingTimeConstant(value) {
            this._nativeAnalyserNode.smoothingTimeConstant = value;
        }
        getByteFrequencyData(array) {
            this._nativeAnalyserNode.getByteFrequencyData(array);
        }
        getByteTimeDomainData(array) {
            this._nativeAnalyserNode.getByteTimeDomainData(array);
        }
        getFloatFrequencyData(array) {
            this._nativeAnalyserNode.getFloatFrequencyData(array);
        }
        getFloatTimeDomainData(array) {
            this._nativeAnalyserNode.getFloatTimeDomainData(array);
        }
    };
};
//# sourceMappingURL=analyser-node-constructor.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/analyser-node-renderer-factory.js":
/*!**********************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/analyser-node-renderer-factory.js ***!
  \**********************************************************************************************************/
/*! namespace exports */
/*! export createAnalyserNodeRendererFactory [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "createAnalyserNodeRendererFactory": () => /* binding */ createAnalyserNodeRendererFactory
/* harmony export */ });
/* harmony import */ var _helpers_is_owned_by_context__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../helpers/is-owned-by-context */ "./node_modules/standardized-audio-context/build/es2019/helpers/is-owned-by-context.js");
;
const createAnalyserNodeRendererFactory = (createNativeAnalyserNode, getNativeAudioNode, renderInputsOfAudioNode) => {
    return () => {
        const renderedNativeAnalyserNodes = new WeakMap();
        const createAnalyserNode = async (proxy, nativeOfflineAudioContext, trace) => {
            let nativeAnalyserNode = getNativeAudioNode(proxy);
            // If the initially used nativeAnalyserNode was not constructed on the same OfflineAudioContext it needs to be created again.
            const nativeAnalyserNodeIsOwnedByContext = (0,_helpers_is_owned_by_context__WEBPACK_IMPORTED_MODULE_0__.isOwnedByContext)(nativeAnalyserNode, nativeOfflineAudioContext);
            if (!nativeAnalyserNodeIsOwnedByContext) {
                const options = {
                    channelCount: nativeAnalyserNode.channelCount,
                    channelCountMode: nativeAnalyserNode.channelCountMode,
                    channelInterpretation: nativeAnalyserNode.channelInterpretation,
                    fftSize: nativeAnalyserNode.fftSize,
                    maxDecibels: nativeAnalyserNode.maxDecibels,
                    minDecibels: nativeAnalyserNode.minDecibels,
                    smoothingTimeConstant: nativeAnalyserNode.smoothingTimeConstant
                };
                nativeAnalyserNode = createNativeAnalyserNode(nativeOfflineAudioContext, options);
            }
            renderedNativeAnalyserNodes.set(nativeOfflineAudioContext, nativeAnalyserNode);
            await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeAnalyserNode, trace);
            return nativeAnalyserNode;
        };
        return {
            render(proxy, nativeOfflineAudioContext, trace) {
                const renderedNativeAnalyserNode = renderedNativeAnalyserNodes.get(nativeOfflineAudioContext);
                if (renderedNativeAnalyserNode !== undefined) {
                    return Promise.resolve(renderedNativeAnalyserNode);
                }
                return createAnalyserNode(proxy, nativeOfflineAudioContext, trace);
            }
        };
    };
};
//# sourceMappingURL=analyser-node-renderer-factory.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/audio-buffer-constructor.js":
/*!****************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/audio-buffer-constructor.js ***!
  \****************************************************************************************************/
/*! namespace exports */
/*! export createAudioBufferConstructor [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "createAudioBufferConstructor": () => /* binding */ createAudioBufferConstructor
/* harmony export */ });
/* harmony import */ var _helpers_test_audio_buffer_copy_channel_methods_out_of_bounds_support__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../helpers/test-audio-buffer-copy-channel-methods-out-of-bounds-support */ "./node_modules/standardized-audio-context/build/es2019/helpers/test-audio-buffer-copy-channel-methods-out-of-bounds-support.js");
/* harmony import */ var _helpers_wrap_audio_buffer_get_channel_data_method__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../helpers/wrap-audio-buffer-get-channel-data-method */ "./node_modules/standardized-audio-context/build/es2019/helpers/wrap-audio-buffer-get-channel-data-method.js");
;

const DEFAULT_OPTIONS = {
    numberOfChannels: 1
};
const createAudioBufferConstructor = (audioBufferStore, cacheTestResult, createNotSupportedError, nativeAudioBufferConstructor, nativeOfflineAudioContextConstructor, testNativeAudioBufferConstructorSupport, wrapAudioBufferCopyChannelMethods, wrapAudioBufferCopyChannelMethodsOutOfBounds) => {
    let nativeOfflineAudioContext = null;
    return class AudioBuffer {
        constructor(options) {
            if (nativeOfflineAudioContextConstructor === null) {
                throw new Error('Missing the native OfflineAudioContext constructor.');
            }
            const { length, numberOfChannels, sampleRate } = { ...DEFAULT_OPTIONS, ...options };
            if (nativeOfflineAudioContext === null) {
                nativeOfflineAudioContext = new nativeOfflineAudioContextConstructor(1, 1, 44100);
            }
            /*
             * Bug #99: Firefox does not throw a NotSupportedError when the numberOfChannels is zero. But it only does it when using the
             * factory function. But since Firefox also supports the constructor everything should be fine.
             */
            const audioBuffer = nativeAudioBufferConstructor !== null &&
                cacheTestResult(testNativeAudioBufferConstructorSupport, testNativeAudioBufferConstructorSupport)
                ? new nativeAudioBufferConstructor({ length, numberOfChannels, sampleRate })
                : nativeOfflineAudioContext.createBuffer(numberOfChannels, length, sampleRate);
            // Bug #99: Safari does not throw an error when the numberOfChannels is zero.
            if (audioBuffer.numberOfChannels === 0) {
                throw createNotSupportedError();
            }
            // Bug #5: Safari does not support copyFromChannel() and copyToChannel().
            // Bug #100: Safari does throw a wrong error when calling getChannelData() with an out-of-bounds value.
            if (typeof audioBuffer.copyFromChannel !== 'function') {
                wrapAudioBufferCopyChannelMethods(audioBuffer);
                (0,_helpers_wrap_audio_buffer_get_channel_data_method__WEBPACK_IMPORTED_MODULE_1__.wrapAudioBufferGetChannelDataMethod)(audioBuffer);
                // Bug #157: Firefox does not allow the bufferOffset to be out-of-bounds.
            }
            else if (!cacheTestResult(_helpers_test_audio_buffer_copy_channel_methods_out_of_bounds_support__WEBPACK_IMPORTED_MODULE_0__.testAudioBufferCopyChannelMethodsOutOfBoundsSupport, () => (0,_helpers_test_audio_buffer_copy_channel_methods_out_of_bounds_support__WEBPACK_IMPORTED_MODULE_0__.testAudioBufferCopyChannelMethodsOutOfBoundsSupport)(audioBuffer))) {
                wrapAudioBufferCopyChannelMethodsOutOfBounds(audioBuffer);
            }
            audioBufferStore.add(audioBuffer);
            /*
             * This does violate all good pratices but it is necessary to allow this AudioBuffer to be used with native
             * (Offline)AudioContexts.
             */
            return audioBuffer;
        }
        static [Symbol.hasInstance](instance) {
            return ((instance !== null && typeof instance === 'object' && Object.getPrototypeOf(instance) === AudioBuffer.prototype) ||
                audioBufferStore.has(instance));
        }
    };
};
//# sourceMappingURL=audio-buffer-constructor.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/audio-buffer-source-node-constructor.js":
/*!****************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/audio-buffer-source-node-constructor.js ***!
  \****************************************************************************************************************/
/*! namespace exports */
/*! export createAudioBufferSourceNodeConstructor [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "createAudioBufferSourceNodeConstructor": () => /* binding */ createAudioBufferSourceNodeConstructor
/* harmony export */ });
/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../constants */ "./node_modules/standardized-audio-context/build/es2019/constants.js");
/* harmony import */ var _helpers_is_active_audio_node__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../helpers/is-active-audio-node */ "./node_modules/standardized-audio-context/build/es2019/helpers/is-active-audio-node.js");
/* harmony import */ var _helpers_set_internal_state_to_active__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../helpers/set-internal-state-to-active */ "./node_modules/standardized-audio-context/build/es2019/helpers/set-internal-state-to-active.js");
/* harmony import */ var _helpers_set_internal_state_to_passive__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../helpers/set-internal-state-to-passive */ "./node_modules/standardized-audio-context/build/es2019/helpers/set-internal-state-to-passive.js");
;



const DEFAULT_OPTIONS = {
    buffer: null,
    channelCount: 2,
    channelCountMode: 'max',
    channelInterpretation: 'speakers',
    // Bug #149: Safari does not yet support the detune AudioParam.
    loop: false,
    loopEnd: 0,
    loopStart: 0,
    playbackRate: 1
};
const createAudioBufferSourceNodeConstructor = (audioNodeConstructor, createAudioBufferSourceNodeRenderer, createAudioParam, createInvalidStateError, createNativeAudioBufferSourceNode, getNativeContext, isNativeOfflineAudioContext, wrapEventListener) => {
    return class AudioBufferSourceNode extends audioNodeConstructor {
        constructor(context, options) {
            const nativeContext = getNativeContext(context);
            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };
            const nativeAudioBufferSourceNode = createNativeAudioBufferSourceNode(nativeContext, mergedOptions);
            const isOffline = isNativeOfflineAudioContext(nativeContext);
            const audioBufferSourceNodeRenderer = ((isOffline ? createAudioBufferSourceNodeRenderer() : null));
            super(context, false, nativeAudioBufferSourceNode, audioBufferSourceNodeRenderer);
            this._audioBufferSourceNodeRenderer = audioBufferSourceNodeRenderer;
            this._isBufferNullified = false;
            this._isBufferSet = mergedOptions.buffer !== null;
            this._nativeAudioBufferSourceNode = nativeAudioBufferSourceNode;
            this._onended = null;
            // Bug #73: Safari does not export the correct values for maxValue and minValue.
            this._playbackRate = createAudioParam(this, isOffline, nativeAudioBufferSourceNode.playbackRate, _constants__WEBPACK_IMPORTED_MODULE_0__.MOST_POSITIVE_SINGLE_FLOAT, _constants__WEBPACK_IMPORTED_MODULE_0__.MOST_NEGATIVE_SINGLE_FLOAT);
        }
        get buffer() {
            if (this._isBufferNullified) {
                return null;
            }
            return this._nativeAudioBufferSourceNode.buffer;
        }
        set buffer(value) {
            this._nativeAudioBufferSourceNode.buffer = value;
            // Bug #72: Only Chrome, Edge & Opera do not allow to reassign the buffer yet.
            if (value !== null) {
                if (this._isBufferSet) {
                    throw createInvalidStateError();
                }
                this._isBufferSet = true;
            }
        }
        get loop() {
            return this._nativeAudioBufferSourceNode.loop;
        }
        set loop(value) {
            this._nativeAudioBufferSourceNode.loop = value;
        }
        get loopEnd() {
            return this._nativeAudioBufferSourceNode.loopEnd;
        }
        set loopEnd(value) {
            this._nativeAudioBufferSourceNode.loopEnd = value;
        }
        get loopStart() {
            return this._nativeAudioBufferSourceNode.loopStart;
        }
        set loopStart(value) {
            this._nativeAudioBufferSourceNode.loopStart = value;
        }
        get onended() {
            return this._onended;
        }
        set onended(value) {
            const wrappedListener = typeof value === 'function' ? wrapEventListener(this, value) : null;
            this._nativeAudioBufferSourceNode.onended = wrappedListener;
            const nativeOnEnded = this._nativeAudioBufferSourceNode.onended;
            this._onended = nativeOnEnded !== null && nativeOnEnded === wrappedListener ? value : nativeOnEnded;
        }
        get playbackRate() {
            return this._playbackRate;
        }
        start(when = 0, offset = 0, duration) {
            this._nativeAudioBufferSourceNode.start(when, offset, duration);
            if (this._audioBufferSourceNodeRenderer !== null) {
                this._audioBufferSourceNodeRenderer.start = duration === undefined ? [when, offset] : [when, offset, duration];
            }
            if (this.context.state !== 'closed') {
                (0,_helpers_set_internal_state_to_active__WEBPACK_IMPORTED_MODULE_2__.setInternalStateToActive)(this);
                const resetInternalStateToPassive = () => {
                    this._nativeAudioBufferSourceNode.removeEventListener('ended', resetInternalStateToPassive);
                    if ((0,_helpers_is_active_audio_node__WEBPACK_IMPORTED_MODULE_1__.isActiveAudioNode)(this)) {
                        (0,_helpers_set_internal_state_to_passive__WEBPACK_IMPORTED_MODULE_3__.setInternalStateToPassive)(this);
                    }
                };
                this._nativeAudioBufferSourceNode.addEventListener('ended', resetInternalStateToPassive);
            }
        }
        stop(when = 0) {
            this._nativeAudioBufferSourceNode.stop(when);
            if (this._audioBufferSourceNodeRenderer !== null) {
                this._audioBufferSourceNodeRenderer.stop = when;
            }
        }
    };
};
//# sourceMappingURL=audio-buffer-source-node-constructor.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/audio-buffer-source-node-renderer-factory.js":
/*!*********************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/audio-buffer-source-node-renderer-factory.js ***!
  \*********************************************************************************************************************/
/*! namespace exports */
/*! export createAudioBufferSourceNodeRendererFactory [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "createAudioBufferSourceNodeRendererFactory": () => /* binding */ createAudioBufferSourceNodeRendererFactory
/* harmony export */ });
/* harmony import */ var _helpers_is_owned_by_context__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../helpers/is-owned-by-context */ "./node_modules/standardized-audio-context/build/es2019/helpers/is-owned-by-context.js");
;
const createAudioBufferSourceNodeRendererFactory = (connectAudioParam, createNativeAudioBufferSourceNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode) => {
    return () => {
        const renderedNativeAudioBufferSourceNodes = new WeakMap();
        let start = null;
        let stop = null;
        const createAudioBufferSourceNode = async (proxy, nativeOfflineAudioContext, trace) => {
            let nativeAudioBufferSourceNode = getNativeAudioNode(proxy);
            /*
             * If the initially used nativeAudioBufferSourceNode was not constructed on the same OfflineAudioContext it needs to be created
             * again.
             */
            const nativeAudioBufferSourceNodeIsOwnedByContext = (0,_helpers_is_owned_by_context__WEBPACK_IMPORTED_MODULE_0__.isOwnedByContext)(nativeAudioBufferSourceNode, nativeOfflineAudioContext);
            if (!nativeAudioBufferSourceNodeIsOwnedByContext) {
                const options = {
                    buffer: nativeAudioBufferSourceNode.buffer,
                    channelCount: nativeAudioBufferSourceNode.channelCount,
                    channelCountMode: nativeAudioBufferSourceNode.channelCountMode,
                    channelInterpretation: nativeAudioBufferSourceNode.channelInterpretation,
                    // Bug #149: Safari does not yet support the detune AudioParam.
                    loop: nativeAudioBufferSourceNode.loop,
                    loopEnd: nativeAudioBufferSourceNode.loopEnd,
                    loopStart: nativeAudioBufferSourceNode.loopStart,
                    playbackRate: nativeAudioBufferSourceNode.playbackRate.value
                };
                nativeAudioBufferSourceNode = createNativeAudioBufferSourceNode(nativeOfflineAudioContext, options);
                if (start !== null) {
                    nativeAudioBufferSourceNode.start(...start);
                }
                if (stop !== null) {
                    nativeAudioBufferSourceNode.stop(stop);
                }
            }
            renderedNativeAudioBufferSourceNodes.set(nativeOfflineAudioContext, nativeAudioBufferSourceNode);
            if (!nativeAudioBufferSourceNodeIsOwnedByContext) {
                // Bug #149: Safari does not yet support the detune AudioParam.
                await renderAutomation(nativeOfflineAudioContext, proxy.playbackRate, nativeAudioBufferSourceNode.playbackRate, trace);
            }
            else {
                // Bug #149: Safari does not yet support the detune AudioParam.
                await connectAudioParam(nativeOfflineAudioContext, proxy.playbackRate, nativeAudioBufferSourceNode.playbackRate, trace);
            }
            await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeAudioBufferSourceNode, trace);
            return nativeAudioBufferSourceNode;
        };
        return {
            set start(value) {
                start = value;
            },
            set stop(value) {
                stop = value;
            },
            render(proxy, nativeOfflineAudioContext, trace) {
                const renderedNativeAudioBufferSourceNode = renderedNativeAudioBufferSourceNodes.get(nativeOfflineAudioContext);
                if (renderedNativeAudioBufferSourceNode !== undefined) {
                    return Promise.resolve(renderedNativeAudioBufferSourceNode);
                }
                return createAudioBufferSourceNode(proxy, nativeOfflineAudioContext, trace);
            }
        };
    };
};
//# sourceMappingURL=audio-buffer-source-node-renderer-factory.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/audio-context-constructor.js":
/*!*****************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/audio-context-constructor.js ***!
  \*****************************************************************************************************/
/*! namespace exports */
/*! export createAudioContextConstructor [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "createAudioContextConstructor": () => /* binding */ createAudioContextConstructor
/* harmony export */ });
/* harmony import */ var _helpers_deactivate_audio_graph__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../helpers/deactivate-audio-graph */ "./node_modules/standardized-audio-context/build/es2019/helpers/deactivate-audio-graph.js");
/* harmony import */ var _helpers_is_valid_latency_hint__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../helpers/is-valid-latency-hint */ "./node_modules/standardized-audio-context/build/es2019/helpers/is-valid-latency-hint.js");
;

const createAudioContextConstructor = (baseAudioContextConstructor, createInvalidStateError, createNotSupportedError, createUnknownError, mediaElementAudioSourceNodeConstructor, mediaStreamAudioDestinationNodeConstructor, mediaStreamAudioSourceNodeConstructor, mediaStreamTrackAudioSourceNodeConstructor, nativeAudioContextConstructor) => {
    return class AudioContext extends baseAudioContextConstructor {
        constructor(options = {}) {
            if (nativeAudioContextConstructor === null) {
                throw new Error('Missing the native AudioContext constructor.');
            }
            const nativeAudioContext = new nativeAudioContextConstructor(options);
            // Bug #131 Safari returns null when there are four other AudioContexts running already.
            if (nativeAudioContext === null) {
                throw createUnknownError();
            }
            // Bug #51 Only Chrome, Edge and Opera throw an error if the given latencyHint is invalid.
            if (!(0,_helpers_is_valid_latency_hint__WEBPACK_IMPORTED_MODULE_1__.isValidLatencyHint)(options.latencyHint)) {
                throw new TypeError(`The provided value '${options.latencyHint}' is not a valid enum value of type AudioContextLatencyCategory.`);
            }
            // Bug #150 Safari does not support setting the sampleRate.
            if (options.sampleRate !== undefined && nativeAudioContext.sampleRate !== options.sampleRate) {
                throw createNotSupportedError();
            }
            super(nativeAudioContext, 2);
            const { latencyHint } = options;
            const { sampleRate } = nativeAudioContext;
            // @todo The values for 'balanced', 'interactive' and 'playback' are just copied from Chrome's implementation.
            this._baseLatency =
                typeof nativeAudioContext.baseLatency === 'number'
                    ? nativeAudioContext.baseLatency
                    : latencyHint === 'balanced'
                        ? 512 / sampleRate
                        : latencyHint === 'interactive' || latencyHint === undefined
                            ? 256 / sampleRate
                            : latencyHint === 'playback'
                                ? 1024 / sampleRate
                                : /*
                                   * @todo The min (256) and max (16384) values are taken from the allowed bufferSize values of a
                                   * ScriptProcessorNode.
                                   */
                                    (Math.max(2, Math.min(128, Math.round((latencyHint * sampleRate) / 128))) * 128) / sampleRate;
            this._nativeAudioContext = nativeAudioContext;
            // Bug #188: Safari will set the context's state to 'interrupted' in case the user switches tabs.
            if (nativeAudioContextConstructor.name === 'webkitAudioContext') {
                this._nativeGainNode = nativeAudioContext.createGain();
                this._nativeOscillatorNode = nativeAudioContext.createOscillator();
                this._nativeGainNode.gain.value = 1e-37;
                this._nativeOscillatorNode.connect(this._nativeGainNode).connect(nativeAudioContext.destination);
                this._nativeOscillatorNode.start();
            }
            else {
                this._nativeGainNode = null;
                this._nativeOscillatorNode = null;
            }
            this._state = null;
            /*
             * Bug #34: Chrome, Edge and Opera pretend to be running right away, but fire an onstatechange event when the state actually
             * changes to 'running'.
             */
            if (nativeAudioContext.state === 'running') {
                this._state = 'suspended';
                const revokeState = () => {
                    if (this._state === 'suspended') {
                        this._state = null;
                    }
                    nativeAudioContext.removeEventListener('statechange', revokeState);
                };
                nativeAudioContext.addEventListener('statechange', revokeState);
            }
        }
        get baseLatency() {
            return this._baseLatency;
        }
        get state() {
            return this._state !== null ? this._state : this._nativeAudioContext.state;
        }
        close() {
            // Bug #35: Firefox does not throw an error if the AudioContext was closed before.
            if (this.state === 'closed') {
                return this._nativeAudioContext.close().then(() => {
                    throw createInvalidStateError();
                });
            }
            // Bug #34: If the state was set to suspended before it should be revoked now.
            if (this._state === 'suspended') {
                this._state = null;
            }
            return this._nativeAudioContext.close().then(() => {
                if (this._nativeGainNode !== null && this._nativeOscillatorNode !== null) {
                    this._nativeOscillatorNode.stop();
                    this._nativeGainNode.disconnect();
                    this._nativeOscillatorNode.disconnect();
                }
                (0,_helpers_deactivate_audio_graph__WEBPACK_IMPORTED_MODULE_0__.deactivateAudioGraph)(this);
            });
        }
        createMediaElementSource(mediaElement) {
            return new mediaElementAudioSourceNodeConstructor(this, { mediaElement });
        }
        createMediaStreamDestination() {
            return new mediaStreamAudioDestinationNodeConstructor(this);
        }
        createMediaStreamSource(mediaStream) {
            return new mediaStreamAudioSourceNodeConstructor(this, { mediaStream });
        }
        createMediaStreamTrackSource(mediaStreamTrack) {
            return new mediaStreamTrackAudioSourceNodeConstructor(this, { mediaStreamTrack });
        }
        resume() {
            if (this._state === 'suspended') {
                return new Promise((resolve, reject) => {
                    const resolvePromise = () => {
                        this._nativeAudioContext.removeEventListener('statechange', resolvePromise);
                        if (this._nativeAudioContext.state === 'running') {
                            resolve();
                        }
                        else {
                            this.resume().then(resolve, reject);
                        }
                    };
                    this._nativeAudioContext.addEventListener('statechange', resolvePromise);
                });
            }
            return this._nativeAudioContext.resume().catch((err) => {
                // Bug #55: Chrome, Edge and Opera do throw an InvalidAccessError instead of an InvalidStateError.
                // Bug #56: Safari invokes the catch handler but without an error.
                if (err === undefined || err.code === 15) {
                    throw createInvalidStateError();
                }
                throw err;
            });
        }
        suspend() {
            return this._nativeAudioContext.suspend().catch((err) => {
                // Bug #56: Safari invokes the catch handler but without an error.
                if (err === undefined) {
                    throw createInvalidStateError();
                }
                throw err;
            });
        }
    };
};
//# sourceMappingURL=audio-context-constructor.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/audio-destination-node-constructor.js":
/*!**************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/audio-destination-node-constructor.js ***!
  \**************************************************************************************************************/
/*! namespace exports */
/*! export createAudioDestinationNodeConstructor [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "createAudioDestinationNodeConstructor": () => /* binding */ createAudioDestinationNodeConstructor
/* harmony export */ });
const createAudioDestinationNodeConstructor = (audioNodeConstructor, createAudioDestinationNodeRenderer, createIndexSizeError, createInvalidStateError, createNativeAudioDestinationNode, getNativeContext, isNativeOfflineAudioContext, renderInputsOfAudioNode) => {
    return class AudioDestinationNode extends audioNodeConstructor {
        constructor(context, channelCount) {
            const nativeContext = getNativeContext(context);
            const isOffline = isNativeOfflineAudioContext(nativeContext);
            const nativeAudioDestinationNode = createNativeAudioDestinationNode(nativeContext, channelCount, isOffline);
            const audioDestinationNodeRenderer = ((isOffline ? createAudioDestinationNodeRenderer(renderInputsOfAudioNode) : null));
            super(context, false, nativeAudioDestinationNode, audioDestinationNodeRenderer);
            this._isNodeOfNativeOfflineAudioContext = isOffline;
            this._nativeAudioDestinationNode = nativeAudioDestinationNode;
        }
        get channelCount() {
            return this._nativeAudioDestinationNode.channelCount;
        }
        set channelCount(value) {
            // Bug #52: Chrome, Edge, Opera & Safari do not throw an exception at all.
            // Bug #54: Firefox does throw an IndexSizeError.
            if (this._isNodeOfNativeOfflineAudioContext) {
                throw createInvalidStateError();
            }
            // Bug #47: The AudioDestinationNode in Safari does not initialize the maxChannelCount property correctly.
            if (value > this._nativeAudioDestinationNode.maxChannelCount) {
                throw createIndexSizeError();
            }
            this._nativeAudioDestinationNode.channelCount = value;
        }
        get channelCountMode() {
            return this._nativeAudioDestinationNode.channelCountMode;
        }
        set channelCountMode(value) {
            // Bug #53: No browser does throw an exception yet.
            if (this._isNodeOfNativeOfflineAudioContext) {
                throw createInvalidStateError();
            }
            this._nativeAudioDestinationNode.channelCountMode = value;
        }
        get maxChannelCount() {
            return this._nativeAudioDestinationNode.maxChannelCount;
        }
    };
};
//# sourceMappingURL=audio-destination-node-constructor.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/audio-destination-node-renderer-factory.js":
/*!*******************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/audio-destination-node-renderer-factory.js ***!
  \*******************************************************************************************************************/
/*! namespace exports */
/*! export createAudioDestinationNodeRenderer [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "createAudioDestinationNodeRenderer": () => /* binding */ createAudioDestinationNodeRenderer
/* harmony export */ });
const createAudioDestinationNodeRenderer = (renderInputsOfAudioNode) => {
    let nativeAudioDestinationNodePromise = null;
    const createAudioDestinationNode = async (proxy, nativeOfflineAudioContext, trace) => {
        const nativeAudioDestinationNode = nativeOfflineAudioContext.destination;
        await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeAudioDestinationNode, trace);
        return nativeAudioDestinationNode;
    };
    return {
        render(proxy, nativeOfflineAudioContext, trace) {
            if (nativeAudioDestinationNodePromise === null) {
                nativeAudioDestinationNodePromise = createAudioDestinationNode(proxy, nativeOfflineAudioContext, trace);
            }
            return nativeAudioDestinationNodePromise;
        }
    };
};
//# sourceMappingURL=audio-destination-node-renderer-factory.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/audio-listener-factory.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/audio-listener-factory.js ***!
  \**************************************************************************************************/
/*! namespace exports */
/*! export createAudioListenerFactory [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "createAudioListenerFactory": () => /* binding */ createAudioListenerFactory
/* harmony export */ });
/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../constants */ "./node_modules/standardized-audio-context/build/es2019/constants.js");
;
const createAudioListenerFactory = (createAudioParam, createNativeChannelMergerNode, createNativeConstantSourceNode, createNativeScriptProcessorNode, isNativeOfflineAudioContext) => {
    return (context, nativeContext) => {
        const nativeListener = nativeContext.listener;
        // Bug #117: Only Chrome, Edge & Opera support the new interface already.
        const createFakeAudioParams = () => {
            const channelMergerNode = createNativeChannelMergerNode(nativeContext, {
                channelCount: 1,
                channelCountMode: 'explicit',
                channelInterpretation: 'speakers',
                numberOfInputs: 9
            });
            const isOffline = isNativeOfflineAudioContext(nativeContext);
            const scriptProcessorNode = createNativeScriptProcessorNode(nativeContext, 256, 9, 0);
            const createFakeAudioParam = (input, value) => {
                const constantSourceNode = createNativeConstantSourceNode(nativeContext, {
                    channelCount: 1,
                    channelCountMode: 'explicit',
                    channelInterpretation: 'discrete',
                    offset: value
                });
                constantSourceNode.connect(channelMergerNode, 0, input);
                // @todo This should be stopped when the context is closed.
                constantSourceNode.start();
                Object.defineProperty(constantSourceNode.offset, 'defaultValue', {
                    get() {
                        return value;
                    }
                });
                /*
                 * Bug #62 & #74: Safari does not support ConstantSourceNodes and does not export the correct values for maxValue and
                 * minValue for GainNodes.
                 */
                return createAudioParam({ context }, isOffline, constantSourceNode.offset, _constants__WEBPACK_IMPORTED_MODULE_0__.MOST_POSITIVE_SINGLE_FLOAT, _constants__WEBPACK_IMPORTED_MODULE_0__.MOST_NEGATIVE_SINGLE_FLOAT);
            };
            let lastOrientation = [0, 0, -1, 0, 1, 0];
            let lastPosition = [0, 0, 0];
            // tslint:disable-next-line:deprecation
            scriptProcessorNode.onaudioprocess = ({ inputBuffer }) => {
                const orientation = [
                    inputBuffer.getChannelData(0)[0],
                    inputBuffer.getChannelData(1)[0],
                    inputBuffer.getChannelData(2)[0],
                    inputBuffer.getChannelData(3)[0],
                    inputBuffer.getChannelData(4)[0],
                    inputBuffer.getChannelData(5)[0]
                ];
                if (orientation.some((value, index) => value !== lastOrientation[index])) {
                    nativeListener.setOrientation(...orientation); // tslint:disable-line:deprecation
                    lastOrientation = orientation;
                }
                const positon = [
                    inputBuffer.getChannelData(6)[0],
                    inputBuffer.getChannelData(7)[0],
                    inputBuffer.getChannelData(8)[0]
                ];
                if (positon.some((value, index) => value !== lastPosition[index])) {
                    nativeListener.setPosition(...positon); // tslint:disable-line:deprecation
                    lastPosition = positon;
                }
            };
            channelMergerNode.connect(scriptProcessorNode);
            return {
                forwardX: createFakeAudioParam(0, 0),
                forwardY: createFakeAudioParam(1, 0),
                forwardZ: createFakeAudioParam(2, -1),
                positionX: createFakeAudioParam(6, 0),
                positionY: createFakeAudioParam(7, 0),
                positionZ: createFakeAudioParam(8, 0),
                upX: createFakeAudioParam(3, 0),
                upY: createFakeAudioParam(4, 1),
                upZ: createFakeAudioParam(5, 0)
            };
        };
        const { forwardX, forwardY, forwardZ, positionX, positionY, positionZ, upX, upY, upZ } = nativeListener.forwardX === undefined ? createFakeAudioParams() : nativeListener;
        return {
            get forwardX() {
                return forwardX;
            },
            get forwardY() {
                return forwardY;
            },
            get forwardZ() {
                return forwardZ;
            },
            get positionX() {
                return positionX;
            },
            get positionY() {
                return positionY;
            },
            get positionZ() {
                return positionZ;
            },
            get upX() {
                return upX;
            },
            get upY() {
                return upY;
            },
            get upZ() {
                return upZ;
            }
        };
    };
};
//# sourceMappingURL=audio-listener-factory.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/audio-node-constructor.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/audio-node-constructor.js ***!
  \**************************************************************************************************/
/*! namespace exports */
/*! export createAudioNodeConstructor [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "createAudioNodeConstructor": () => /* binding */ createAudioNodeConstructor
/* harmony export */ });
/* harmony import */ var _globals__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../globals */ "./node_modules/standardized-audio-context/build/es2019/globals.js");
/* harmony import */ var _guards_audio_node__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../guards/audio-node */ "./node_modules/standardized-audio-context/build/es2019/guards/audio-node.js");
/* harmony import */ var _guards_audio_node_output_connection__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../guards/audio-node-output-connection */ "./node_modules/standardized-audio-context/build/es2019/guards/audio-node-output-connection.js");
/* harmony import */ var _helpers_add_active_input_connection_to_audio_param__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../helpers/add-active-input-connection-to-audio-param */ "./node_modules/standardized-audio-context/build/es2019/helpers/add-active-input-connection-to-audio-param.js");
/* harmony import */ var _helpers_add_passive_input_connection_to_audio_param__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../helpers/add-passive-input-connection-to-audio-param */ "./node_modules/standardized-audio-context/build/es2019/helpers/add-passive-input-connection-to-audio-param.js");
/* harmony import */ var _helpers_connect_native_audio_node_to_native_audio_node__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../helpers/connect-native-audio-node-to-native-audio-node */ "./node_modules/standardized-audio-context/build/es2019/helpers/connect-native-audio-node-to-native-audio-node.js");
/* harmony import */ var _helpers_delete_active_input_connection__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../helpers/delete-active-input-connection */ "./node_modules/standardized-audio-context/build/es2019/helpers/delete-active-input-connection.js");
/* harmony import */ var _helpers_delete_active_input_connection_to_audio_param__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../helpers/delete-active-input-connection-to-audio-param */ "./node_modules/standardized-audio-context/build/es2019/helpers/delete-active-input-connection-to-audio-param.js");
/* harmony import */ var _helpers_delete_event_listeners_of_audio_node__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../helpers/delete-event-listeners-of-audio-node */ "./node_modules/standardized-audio-context/build/es2019/helpers/delete-event-listeners-of-audio-node.js");
/* harmony import */ var _helpers_delete_passive_input_connection_to_audio_node__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../helpers/delete-passive-input-connection-to-audio-node */ "./node_modules/standardized-audio-context/build/es2019/helpers/delete-passive-input-connection-to-audio-node.js");
/* harmony import */ var _helpers_delete_passive_input_connection_to_audio_param__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../helpers/delete-passive-input-connection-to-audio-param */ "./node_modules/standardized-audio-context/build/es2019/helpers/delete-passive-input-connection-to-audio-param.js");
/* harmony import */ var _helpers_disconnect_native_audio_node_from_native_audio_node__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../helpers/disconnect-native-audio-node-from-native-audio-node */ "./node_modules/standardized-audio-context/build/es2019/helpers/disconnect-native-audio-node-from-native-audio-node.js");
/* harmony import */ var _helpers_get_audio_node_connections__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../helpers/get-audio-node-connections */ "./node_modules/standardized-audio-context/build/es2019/helpers/get-audio-node-connections.js");
/* harmony import */ var _helpers_get_audio_param_connections__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../helpers/get-audio-param-connections */ "./node_modules/standardized-audio-context/build/es2019/helpers/get-audio-param-connections.js");
/* harmony import */ var _helpers_get_event_listeners_of_audio_node__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../helpers/get-event-listeners-of-audio-node */ "./node_modules/standardized-audio-context/build/es2019/helpers/get-event-listeners-of-audio-node.js");
/* harmony import */ var _helpers_get_native_audio_node__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../helpers/get-native-audio-node */ "./node_modules/standardized-audio-context/build/es2019/helpers/get-native-audio-node.js");
/* harmony import */ var _helpers_get_native_audio_param__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../helpers/get-native-audio-param */ "./node_modules/standardized-audio-context/build/es2019/helpers/get-native-audio-param.js");
/* harmony import */ var _helpers_insert_element_in_set__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ../helpers/insert-element-in-set */ "./node_modules/standardized-audio-context/build/es2019/helpers/insert-element-in-set.js");
/* harmony import */ var _helpers_is_active_audio_node__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ../helpers/is-active-audio-node */ "./node_modules/standardized-audio-context/build/es2019/helpers/is-active-audio-node.js");
/* harmony import */ var _helpers_is_part_of_a_cycle__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ../helpers/is-part-of-a-cycle */ "./node_modules/standardized-audio-context/build/es2019/helpers/is-part-of-a-cycle.js");
/* harmony import */ var _helpers_is_passive_audio_node__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ../helpers/is-passive-audio-node */ "./node_modules/standardized-audio-context/build/es2019/helpers/is-passive-audio-node.js");
/* harmony import */ var _helpers_set_internal_state_to_active__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ../helpers/set-internal-state-to-active */ "./node_modules/standardized-audio-context/build/es2019/helpers/set-internal-state-to-active.js");
/* harmony import */ var _helpers_set_internal_state_to_passive_when_necessary__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ../helpers/set-internal-state-to-passive-when-necessary */ "./node_modules/standardized-audio-context/build/es2019/helpers/set-internal-state-to-passive-when-necessary.js");
/* harmony import */ var _helpers_test_audio_node_disconnect_method_support__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ../helpers/test-audio-node-disconnect-method-support */ "./node_modules/standardized-audio-context/build/es2019/helpers/test-audio-node-disconnect-method-support.js");
/* harmony import */ var _helpers_visit_each_audio_node_once__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ../helpers/visit-each-audio-node-once */ "./node_modules/standardized-audio-context/build/es2019/helpers/visit-each-audio-node-once.js");
/* harmony import */ var _helpers_wrap_audio_node_disconnect_method__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ../helpers/wrap-audio-node-disconnect-method */ "./node_modules/standardized-audio-context/build/es2019/helpers/wrap-audio-node-disconnect-method.js");
;

























const addConnectionToAudioParamOfAudioContext = (source, destination, output, isOffline) => {
    const { activeInputs, passiveInputs } = (0,_helpers_get_audio_param_connections__WEBPACK_IMPORTED_MODULE_13__.getAudioParamConnections)(destination);
    const { outputs } = (0,_helpers_get_audio_node_connections__WEBPACK_IMPORTED_MODULE_12__.getAudioNodeConnections)(source);
    const eventListeners = (0,_helpers_get_event_listeners_of_audio_node__WEBPACK_IMPORTED_MODULE_14__.getEventListenersOfAudioNode)(source);
    const eventListener = (isActive) => {
        const nativeAudioNode = (0,_helpers_get_native_audio_node__WEBPACK_IMPORTED_MODULE_15__.getNativeAudioNode)(source);
        const nativeAudioParam = (0,_helpers_get_native_audio_param__WEBPACK_IMPORTED_MODULE_16__.getNativeAudioParam)(destination);
        if (isActive) {
            const partialConnection = (0,_helpers_delete_passive_input_connection_to_audio_param__WEBPACK_IMPORTED_MODULE_10__.deletePassiveInputConnectionToAudioParam)(passiveInputs, source, output);
            (0,_helpers_add_active_input_connection_to_audio_param__WEBPACK_IMPORTED_MODULE_3__.addActiveInputConnectionToAudioParam)(activeInputs, source, partialConnection, false);
            if (!isOffline && !(0,_helpers_is_part_of_a_cycle__WEBPACK_IMPORTED_MODULE_19__.isPartOfACycle)(source)) {
                nativeAudioNode.connect(nativeAudioParam, output);
            }
        }
        else {
            const partialConnection = (0,_helpers_delete_active_input_connection_to_audio_param__WEBPACK_IMPORTED_MODULE_7__.deleteActiveInputConnectionToAudioParam)(activeInputs, source, output);
            (0,_helpers_add_passive_input_connection_to_audio_param__WEBPACK_IMPORTED_MODULE_4__.addPassiveInputConnectionToAudioParam)(passiveInputs, partialConnection, false);
            if (!isOffline && !(0,_helpers_is_part_of_a_cycle__WEBPACK_IMPORTED_MODULE_19__.isPartOfACycle)(source)) {
                nativeAudioNode.disconnect(nativeAudioParam, output);
            }
        }
    };
    if ((0,_helpers_insert_element_in_set__WEBPACK_IMPORTED_MODULE_17__.insertElementInSet)(outputs, [destination, output], (outputConnection) => outputConnection[0] === destination && outputConnection[1] === output, true)) {
        eventListeners.add(eventListener);
        if ((0,_helpers_is_active_audio_node__WEBPACK_IMPORTED_MODULE_18__.isActiveAudioNode)(source)) {
            (0,_helpers_add_active_input_connection_to_audio_param__WEBPACK_IMPORTED_MODULE_3__.addActiveInputConnectionToAudioParam)(activeInputs, source, [output, eventListener], true);
        }
        else {
            (0,_helpers_add_passive_input_connection_to_audio_param__WEBPACK_IMPORTED_MODULE_4__.addPassiveInputConnectionToAudioParam)(passiveInputs, [source, output, eventListener], true);
        }
        return true;
    }
    return false;
};
const deleteInputConnectionOfAudioNode = (source, destination, output, input) => {
    const { activeInputs, passiveInputs } = (0,_helpers_get_audio_node_connections__WEBPACK_IMPORTED_MODULE_12__.getAudioNodeConnections)(destination);
    const activeInputConnection = (0,_helpers_delete_active_input_connection__WEBPACK_IMPORTED_MODULE_6__.deleteActiveInputConnection)(activeInputs[input], source, output);
    if (activeInputConnection === null) {
        const passiveInputConnection = (0,_helpers_delete_passive_input_connection_to_audio_node__WEBPACK_IMPORTED_MODULE_9__.deletePassiveInputConnectionToAudioNode)(passiveInputs, source, output, input);
        return [passiveInputConnection[2], false];
    }
    return [activeInputConnection[2], true];
};
const deleteInputConnectionOfAudioParam = (source, destination, output) => {
    const { activeInputs, passiveInputs } = (0,_helpers_get_audio_param_connections__WEBPACK_IMPORTED_MODULE_13__.getAudioParamConnections)(destination);
    const activeInputConnection = (0,_helpers_delete_active_input_connection__WEBPACK_IMPORTED_MODULE_6__.deleteActiveInputConnection)(activeInputs, source, output);
    if (activeInputConnection === null) {
        const passiveInputConnection = (0,_helpers_delete_passive_input_connection_to_audio_param__WEBPACK_IMPORTED_MODULE_10__.deletePassiveInputConnectionToAudioParam)(passiveInputs, source, output);
        return [passiveInputConnection[1], false];
    }
    return [activeInputConnection[2], true];
};
const deleteInputsOfAudioNode = (source, isOffline, destination, output, input) => {
    const [listener, isActive] = deleteInputConnectionOfAudioNode(source, destination, output, input);
    if (listener !== null) {
        (0,_helpers_delete_event_listeners_of_audio_node__WEBPACK_IMPORTED_MODULE_8__.deleteEventListenerOfAudioNode)(source, listener);
        if (isActive && !isOffline && !(0,_helpers_is_part_of_a_cycle__WEBPACK_IMPORTED_MODULE_19__.isPartOfACycle)(source)) {
            (0,_helpers_disconnect_native_audio_node_from_native_audio_node__WEBPACK_IMPORTED_MODULE_11__.disconnectNativeAudioNodeFromNativeAudioNode)((0,_helpers_get_native_audio_node__WEBPACK_IMPORTED_MODULE_15__.getNativeAudioNode)(source), (0,_helpers_get_native_audio_node__WEBPACK_IMPORTED_MODULE_15__.getNativeAudioNode)(destination), output, input);
        }
    }
    if ((0,_helpers_is_active_audio_node__WEBPACK_IMPORTED_MODULE_18__.isActiveAudioNode)(destination)) {
        const { activeInputs } = (0,_helpers_get_audio_node_connections__WEBPACK_IMPORTED_MODULE_12__.getAudioNodeConnections)(destination);
        (0,_helpers_set_internal_state_to_passive_when_necessary__WEBPACK_IMPORTED_MODULE_22__.setInternalStateToPassiveWhenNecessary)(destination, activeInputs);
    }
};
const deleteInputsOfAudioParam = (source, isOffline, destination, output) => {
    const [listener, isActive] = deleteInputConnectionOfAudioParam(source, destination, output);
    if (listener !== null) {
        (0,_helpers_delete_event_listeners_of_audio_node__WEBPACK_IMPORTED_MODULE_8__.deleteEventListenerOfAudioNode)(source, listener);
        if (isActive && !isOffline && !(0,_helpers_is_part_of_a_cycle__WEBPACK_IMPORTED_MODULE_19__.isPartOfACycle)(source)) {
            (0,_helpers_get_native_audio_node__WEBPACK_IMPORTED_MODULE_15__.getNativeAudioNode)(source).disconnect((0,_helpers_get_native_audio_param__WEBPACK_IMPORTED_MODULE_16__.getNativeAudioParam)(destination), output);
        }
    }
};
const deleteAnyConnection = (source, isOffline) => {
    const audioNodeConnectionsOfSource = (0,_helpers_get_audio_node_connections__WEBPACK_IMPORTED_MODULE_12__.getAudioNodeConnections)(source);
    const destinations = [];
    for (const outputConnection of audioNodeConnectionsOfSource.outputs) {
        if ((0,_guards_audio_node_output_connection__WEBPACK_IMPORTED_MODULE_2__.isAudioNodeOutputConnection)(outputConnection)) {
            deleteInputsOfAudioNode(source, isOffline, ...outputConnection);
        }
        else {
            deleteInputsOfAudioParam(source, isOffline, ...outputConnection);
        }
        destinations.push(outputConnection[0]);
    }
    audioNodeConnectionsOfSource.outputs.clear();
    return destinations;
};
const deleteConnectionAtOutput = (source, isOffline, output) => {
    const audioNodeConnectionsOfSource = (0,_helpers_get_audio_node_connections__WEBPACK_IMPORTED_MODULE_12__.getAudioNodeConnections)(source);
    const destinations = [];
    for (const outputConnection of audioNodeConnectionsOfSource.outputs) {
        if (outputConnection[1] === output) {
            if ((0,_guards_audio_node_output_connection__WEBPACK_IMPORTED_MODULE_2__.isAudioNodeOutputConnection)(outputConnection)) {
                deleteInputsOfAudioNode(source, isOffline, ...outputConnection);
            }
            else {
                deleteInputsOfAudioParam(source, isOffline, ...outputConnection);
            }
            destinations.push(outputConnection[0]);
            audioNodeConnectionsOfSource.outputs.delete(outputConnection);
        }
    }
    return destinations;
};
const deleteConnectionToDestination = (source, isOffline, destination, output, input) => {
    const audioNodeConnectionsOfSource = (0,_helpers_get_audio_node_connections__WEBPACK_IMPORTED_MODULE_12__.getAudioNodeConnections)(source);
    return Array.from(audioNodeConnectionsOfSource.outputs)
        .filter((outputConnection) => outputConnection[0] === destination &&
        (output === undefined || outputConnection[1] === output) &&
        (input === undefined || outputConnection[2] === input))
        .map((outputConnection) => {
        if ((0,_guards_audio_node_output_connection__WEBPACK_IMPORTED_MODULE_2__.isAudioNodeOutputConnection)(outputConnection)) {
            deleteInputsOfAudioNode(source, isOffline, ...outputConnection);
        }
        else {
            deleteInputsOfAudioParam(source, isOffline, ...outputConnection);
        }
        audioNodeConnectionsOfSource.outputs.delete(outputConnection);
        return outputConnection[0];
    });
};
const createAudioNodeConstructor = (addAudioNodeConnections, addConnectionToAudioNode, cacheTestResult, createIncrementCycleCounter, createIndexSizeError, createInvalidAccessError, createNotSupportedError, decrementCycleCounter, detectCycles, eventTargetConstructor, getNativeContext, isNativeAudioContext, isNativeAudioNode, isNativeAudioParam, isNativeOfflineAudioContext) => {
    return class AudioNode extends eventTargetConstructor {
        constructor(context, isActive, nativeAudioNode, audioNodeRenderer) {
            super(nativeAudioNode);
            this._context = context;
            this._nativeAudioNode = nativeAudioNode;
            const nativeContext = getNativeContext(context);
            // Bug #12: Safari does not support to disconnect a specific destination.
            if (isNativeAudioContext(nativeContext) &&
                true !==
                    cacheTestResult(_helpers_test_audio_node_disconnect_method_support__WEBPACK_IMPORTED_MODULE_23__.testAudioNodeDisconnectMethodSupport, () => {
                        return (0,_helpers_test_audio_node_disconnect_method_support__WEBPACK_IMPORTED_MODULE_23__.testAudioNodeDisconnectMethodSupport)(nativeContext);
                    })) {
                (0,_helpers_wrap_audio_node_disconnect_method__WEBPACK_IMPORTED_MODULE_25__.wrapAudioNodeDisconnectMethod)(nativeAudioNode);
            }
            _globals__WEBPACK_IMPORTED_MODULE_0__.AUDIO_NODE_STORE.set(this, nativeAudioNode);
            _globals__WEBPACK_IMPORTED_MODULE_0__.EVENT_LISTENERS.set(this, new Set());
            if (context.state !== 'closed' && isActive) {
                (0,_helpers_set_internal_state_to_active__WEBPACK_IMPORTED_MODULE_21__.setInternalStateToActive)(this);
            }
            addAudioNodeConnections(this, audioNodeRenderer, nativeAudioNode);
        }
        get channelCount() {
            return this._nativeAudioNode.channelCount;
        }
        set channelCount(value) {
            this._nativeAudioNode.channelCount = value;
        }
        get channelCountMode() {
            return this._nativeAudioNode.channelCountMode;
        }
        set channelCountMode(value) {
            this._nativeAudioNode.channelCountMode = value;
        }
        get channelInterpretation() {
            return this._nativeAudioNode.channelInterpretation;
        }
        set channelInterpretation(value) {
            this._nativeAudioNode.channelInterpretation = value;
        }
        get context() {
            return this._context;
        }
        get numberOfInputs() {
            return this._nativeAudioNode.numberOfInputs;
        }
        get numberOfOutputs() {
            return this._nativeAudioNode.numberOfOutputs;
        }
        // tslint:disable-next-line:invalid-void
        connect(destination, output = 0, input = 0) {
            // Bug #174: Safari does expose a wrong numberOfOutputs for MediaStreamAudioDestinationNodes.
            if (output < 0 || output >= this._nativeAudioNode.numberOfOutputs) {
                throw createIndexSizeError();
            }
            const nativeContext = getNativeContext(this._context);
            const isOffline = isNativeOfflineAudioContext(nativeContext);
            if (isNativeAudioNode(destination) || isNativeAudioParam(destination)) {
                throw createInvalidAccessError();
            }
            if ((0,_guards_audio_node__WEBPACK_IMPORTED_MODULE_1__.isAudioNode)(destination)) {
                const nativeDestinationAudioNode = (0,_helpers_get_native_audio_node__WEBPACK_IMPORTED_MODULE_15__.getNativeAudioNode)(destination);
                try {
                    const connection = (0,_helpers_connect_native_audio_node_to_native_audio_node__WEBPACK_IMPORTED_MODULE_5__.connectNativeAudioNodeToNativeAudioNode)(this._nativeAudioNode, nativeDestinationAudioNode, output, input);
                    const isPassive = (0,_helpers_is_passive_audio_node__WEBPACK_IMPORTED_MODULE_20__.isPassiveAudioNode)(this);
                    if (isOffline || isPassive) {
                        this._nativeAudioNode.disconnect(...connection);
                    }
                    if (this.context.state !== 'closed' && !isPassive && (0,_helpers_is_passive_audio_node__WEBPACK_IMPORTED_MODULE_20__.isPassiveAudioNode)(destination)) {
                        (0,_helpers_set_internal_state_to_active__WEBPACK_IMPORTED_MODULE_21__.setInternalStateToActive)(destination);
                    }
                }
                catch (err) {
                    // Bug #41: Safari does not throw the correct exception so far.
                    if (err.code === 12) {
                        throw createInvalidAccessError();
                    }
                    throw err;
                }
                const isNewConnectionToAudioNode = addConnectionToAudioNode(this, destination, output, input, isOffline);
                // Bug #164: Only Firefox detects cycles so far.
                if (isNewConnectionToAudioNode) {
                    const cycles = detectCycles([this], destination);
                    (0,_helpers_visit_each_audio_node_once__WEBPACK_IMPORTED_MODULE_24__.visitEachAudioNodeOnce)(cycles, createIncrementCycleCounter(isOffline));
                }
                return destination;
            }
            const nativeAudioParam = (0,_helpers_get_native_audio_param__WEBPACK_IMPORTED_MODULE_16__.getNativeAudioParam)(destination);
            /*
             * Bug #147 & #153: Safari does not support to connect an input signal to the playbackRate AudioParam of an
             * AudioBufferSourceNode. This can't be easily detected and that's why the outdated name property is used here to identify
             * Safari.
             */
            if (nativeAudioParam.name === 'playbackRate') {
                throw createNotSupportedError();
            }
            try {
                this._nativeAudioNode.connect(nativeAudioParam, output);
                if (isOffline || (0,_helpers_is_passive_audio_node__WEBPACK_IMPORTED_MODULE_20__.isPassiveAudioNode)(this)) {
                    this._nativeAudioNode.disconnect(nativeAudioParam, output);
                }
            }
            catch (err) {
                // Bug #58: Only Firefox does throw an InvalidStateError yet.
                if (err.code === 12) {
                    throw createInvalidAccessError();
                }
                throw err;
            }
            const isNewConnectionToAudioParam = addConnectionToAudioParamOfAudioContext(this, destination, output, isOffline);
            // Bug #164: Only Firefox detects cycles so far.
            if (isNewConnectionToAudioParam) {
                const cycles = detectCycles([this], destination);
                (0,_helpers_visit_each_audio_node_once__WEBPACK_IMPORTED_MODULE_24__.visitEachAudioNodeOnce)(cycles, createIncrementCycleCounter(isOffline));
            }
        }
        disconnect(destinationOrOutput, output, input) {
            let destinations;
            const nativeContext = getNativeContext(this._context);
            const isOffline = isNativeOfflineAudioContext(nativeContext);
            if (destinationOrOutput === undefined) {
                destinations = deleteAnyConnection(this, isOffline);
            }
            else if (typeof destinationOrOutput === 'number') {
                if (destinationOrOutput < 0 || destinationOrOutput >= this.numberOfOutputs) {
                    throw createIndexSizeError();
                }
                destinations = deleteConnectionAtOutput(this, isOffline, destinationOrOutput);
            }
            else {
                if (output !== undefined && (output < 0 || output >= this.numberOfOutputs)) {
                    throw createIndexSizeError();
                }
                if ((0,_guards_audio_node__WEBPACK_IMPORTED_MODULE_1__.isAudioNode)(destinationOrOutput) && input !== undefined && (input < 0 || input >= destinationOrOutput.numberOfInputs)) {
                    throw createIndexSizeError();
                }
                destinations = deleteConnectionToDestination(this, isOffline, destinationOrOutput, output, input);
                if (destinations.length === 0) {
                    throw createInvalidAccessError();
                }
            }
            // Bug #164: Only Firefox detects cycles so far.
            for (const destination of destinations) {
                const cycles = detectCycles([this], destination);
                (0,_helpers_visit_each_audio_node_once__WEBPACK_IMPORTED_MODULE_24__.visitEachAudioNodeOnce)(cycles, decrementCycleCounter);
            }
        }
    };
};
//# sourceMappingURL=audio-node-constructor.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/audio-param-factory.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/audio-param-factory.js ***!
  \***********************************************************************************************/
/*! namespace exports */
/*! export createAudioParamFactory [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.n, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "createAudioParamFactory": () => /* binding */ createAudioParamFactory
/* harmony export */ });
/* harmony import */ var automation_events__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! automation-events */ "./node_modules/automation-events/build/es5/bundle.js");
/* harmony import */ var automation_events__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(automation_events__WEBPACK_IMPORTED_MODULE_0__);
;
const createAudioParamFactory = (addAudioParamConnections, audioParamAudioNodeStore, audioParamStore, createAudioParamRenderer, createCancelAndHoldAutomationEvent, createCancelScheduledValuesAutomationEvent, createExponentialRampToValueAutomationEvent, createLinearRampToValueAutomationEvent, createSetTargetAutomationEvent, createSetValueAutomationEvent, createSetValueCurveAutomationEvent, nativeAudioContextConstructor) => {
    return (audioNode, isAudioParamOfOfflineAudioContext, nativeAudioParam, maxValue = null, minValue = null) => {
        const automationEventList = new automation_events__WEBPACK_IMPORTED_MODULE_0__.AutomationEventList(nativeAudioParam.defaultValue);
        const audioParamRenderer = isAudioParamOfOfflineAudioContext ? createAudioParamRenderer(automationEventList) : null;
        const audioParam = {
            get defaultValue() {
                return nativeAudioParam.defaultValue;
            },
            get maxValue() {
                return maxValue === null ? nativeAudioParam.maxValue : maxValue;
            },
            get minValue() {
                return minValue === null ? nativeAudioParam.minValue : minValue;
            },
            get value() {
                return nativeAudioParam.value;
            },
            set value(value) {
                nativeAudioParam.value = value;
                // Bug #98: Firefox & Safari do not yet treat the value setter like a call to setValueAtTime().
                audioParam.setValueAtTime(value, audioNode.context.currentTime);
            },
            cancelAndHoldAtTime(cancelTime) {
                // Bug #28: Firefox & Safari do not yet implement cancelAndHoldAtTime().
                if (typeof nativeAudioParam.cancelAndHoldAtTime === 'function') {
                    if (audioParamRenderer === null) {
                        automationEventList.flush(audioNode.context.currentTime);
                    }
                    automationEventList.add(createCancelAndHoldAutomationEvent(cancelTime));
                    nativeAudioParam.cancelAndHoldAtTime(cancelTime);
                }
                else {
                    const previousLastEvent = Array.from(automationEventList).pop();
                    if (audioParamRenderer === null) {
                        automationEventList.flush(audioNode.context.currentTime);
                    }
                    automationEventList.add(createCancelAndHoldAutomationEvent(cancelTime));
                    const currentLastEvent = Array.from(automationEventList).pop();
                    nativeAudioParam.cancelScheduledValues(cancelTime);
                    if (previousLastEvent !== currentLastEvent && currentLastEvent !== undefined) {
                        if (currentLastEvent.type === 'exponentialRampToValue') {
                            nativeAudioParam.exponentialRampToValueAtTime(currentLastEvent.value, currentLastEvent.endTime);
                        }
                        else if (currentLastEvent.type === 'linearRampToValue') {
                            nativeAudioParam.linearRampToValueAtTime(currentLastEvent.value, currentLastEvent.endTime);
                        }
                        else if (currentLastEvent.type === 'setValue') {
                            nativeAudioParam.setValueAtTime(currentLastEvent.value, currentLastEvent.startTime);
                        }
                        else if (currentLastEvent.type === 'setValueCurve') {
                            nativeAudioParam.setValueCurveAtTime(currentLastEvent.values, currentLastEvent.startTime, currentLastEvent.duration);
                        }
                    }
                }
                return audioParam;
            },
            cancelScheduledValues(cancelTime) {
                if (audioParamRenderer === null) {
                    automationEventList.flush(audioNode.context.currentTime);
                }
                automationEventList.add(createCancelScheduledValuesAutomationEvent(cancelTime));
                nativeAudioParam.cancelScheduledValues(cancelTime);
                return audioParam;
            },
            exponentialRampToValueAtTime(value, endTime) {
                // Bug #45: Safari does not throw an error yet.
                if (value === 0) {
                    throw new RangeError();
                }
                // Bug #187: Safari does not throw an error yet.
                if (!Number.isFinite(endTime) || endTime < 0) {
                    throw new RangeError();
                }
                if (audioParamRenderer === null) {
                    automationEventList.flush(audioNode.context.currentTime);
                }
                automationEventList.add(createExponentialRampToValueAutomationEvent(value, endTime));
                nativeAudioParam.exponentialRampToValueAtTime(value, endTime);
                return audioParam;
            },
            linearRampToValueAtTime(value, endTime) {
                if (audioParamRenderer === null) {
                    automationEventList.flush(audioNode.context.currentTime);
                }
                automationEventList.add(createLinearRampToValueAutomationEvent(value, endTime));
                nativeAudioParam.linearRampToValueAtTime(value, endTime);
                return audioParam;
            },
            setTargetAtTime(target, startTime, timeConstant) {
                if (audioParamRenderer === null) {
                    automationEventList.flush(audioNode.context.currentTime);
                }
                automationEventList.add(createSetTargetAutomationEvent(target, startTime, timeConstant));
                nativeAudioParam.setTargetAtTime(target, startTime, timeConstant);
                return audioParam;
            },
            setValueAtTime(value, startTime) {
                if (audioParamRenderer === null) {
                    automationEventList.flush(audioNode.context.currentTime);
                }
                automationEventList.add(createSetValueAutomationEvent(value, startTime));
                nativeAudioParam.setValueAtTime(value, startTime);
                return audioParam;
            },
            setValueCurveAtTime(values, startTime, duration) {
                // Bug 183: Safari only accepts a Float32Array.
                const convertedValues = values instanceof Float32Array ? values : new Float32Array(values);
                /*
                 * Bug #152: Safari does not correctly interpolate the values of the curve.
                 * @todo Unfortunately there is no way to test for this behavior in a synchronous fashion which is why testing for the
                 * existence of the webkitAudioContext is used as a workaround here.
                 */
                if (nativeAudioContextConstructor !== null && nativeAudioContextConstructor.name === 'webkitAudioContext') {
                    const endTime = startTime + duration;
                    const sampleRate = audioNode.context.sampleRate;
                    const firstSample = Math.ceil(startTime * sampleRate);
                    const lastSample = Math.floor(endTime * sampleRate);
                    const numberOfInterpolatedValues = lastSample - firstSample;
                    const interpolatedValues = new Float32Array(numberOfInterpolatedValues);
                    for (let i = 0; i < numberOfInterpolatedValues; i += 1) {
                        const theoreticIndex = ((convertedValues.length - 1) / duration) * ((firstSample + i) / sampleRate - startTime);
                        const lowerIndex = Math.floor(theoreticIndex);
                        const upperIndex = Math.ceil(theoreticIndex);
                        interpolatedValues[i] =
                            lowerIndex === upperIndex
                                ? convertedValues[lowerIndex]
                                : (1 - (theoreticIndex - lowerIndex)) * convertedValues[lowerIndex] +
                                    (1 - (upperIndex - theoreticIndex)) * convertedValues[upperIndex];
                    }
                    if (audioParamRenderer === null) {
                        automationEventList.flush(audioNode.context.currentTime);
                    }
                    automationEventList.add(createSetValueCurveAutomationEvent(interpolatedValues, startTime, duration));
                    nativeAudioParam.setValueCurveAtTime(interpolatedValues, startTime, duration);
                    const timeOfLastSample = lastSample / sampleRate;
                    if (timeOfLastSample < endTime) {
                        audioParam.setValueAtTime(interpolatedValues[interpolatedValues.length - 1], timeOfLastSample);
                    }
                    audioParam.setValueAtTime(convertedValues[convertedValues.length - 1], endTime);
                }
                else {
                    if (audioParamRenderer === null) {
                        automationEventList.flush(audioNode.context.currentTime);
                    }
                    automationEventList.add(createSetValueCurveAutomationEvent(convertedValues, startTime, duration));
                    nativeAudioParam.setValueCurveAtTime(convertedValues, startTime, duration);
                }
                return audioParam;
            }
        };
        audioParamStore.set(audioParam, nativeAudioParam);
        audioParamAudioNodeStore.set(audioParam, audioNode);
        addAudioParamConnections(audioParam, audioParamRenderer);
        return audioParam;
    };
};
//# sourceMappingURL=audio-param-factory.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/audio-param-renderer.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/audio-param-renderer.js ***!
  \************************************************************************************************/
/*! namespace exports */
/*! export createAudioParamRenderer [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "createAudioParamRenderer": () => /* binding */ createAudioParamRenderer
/* harmony export */ });
const createAudioParamRenderer = (automationEventList) => {
    return {
        replay(audioParam) {
            for (const automationEvent of automationEventList) {
                if (automationEvent.type === 'exponentialRampToValue') {
                    const { endTime, value } = automationEvent;
                    audioParam.exponentialRampToValueAtTime(value, endTime);
                }
                else if (automationEvent.type === 'linearRampToValue') {
                    const { endTime, value } = automationEvent;
                    audioParam.linearRampToValueAtTime(value, endTime);
                }
                else if (automationEvent.type === 'setTarget') {
                    const { startTime, target, timeConstant } = automationEvent;
                    audioParam.setTargetAtTime(target, startTime, timeConstant);
                }
                else if (automationEvent.type === 'setValue') {
                    const { startTime, value } = automationEvent;
                    audioParam.setValueAtTime(value, startTime);
                }
                else if (automationEvent.type === 'setValueCurve') {
                    const { duration, startTime, values } = automationEvent;
                    audioParam.setValueCurveAtTime(values, startTime, duration);
                }
                else {
                    throw new Error("Can't apply an unknown automation.");
                }
            }
        }
    };
};
//# sourceMappingURL=audio-param-renderer.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/audio-worklet-node-constructor.js":
/*!**********************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/audio-worklet-node-constructor.js ***!
  \**********************************************************************************************************/
/*! namespace exports */
/*! export createAudioWorkletNodeConstructor [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "createAudioWorkletNodeConstructor": () => /* binding */ createAudioWorkletNodeConstructor
/* harmony export */ });
/* harmony import */ var _globals__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../globals */ "./node_modules/standardized-audio-context/build/es2019/globals.js");
/* harmony import */ var _read_only_map__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../read-only-map */ "./node_modules/standardized-audio-context/build/es2019/read-only-map.js");
;

const DEFAULT_OPTIONS = {
    channelCount: 2,
    // Bug #61: The channelCountMode should be 'max' according to the spec but is set to 'explicit' to achieve consistent behavior.
    channelCountMode: 'explicit',
    channelInterpretation: 'speakers',
    numberOfInputs: 1,
    numberOfOutputs: 1,
    parameterData: {},
    processorOptions: {}
};
const createAudioWorkletNodeConstructor = (addUnrenderedAudioWorkletNode, audioNodeConstructor, createAudioParam, createAudioWorkletNodeRenderer, createNativeAudioWorkletNode, getAudioNodeConnections, getBackupOfflineAudioContext, getNativeContext, isNativeOfflineAudioContext, nativeAudioWorkletNodeConstructor, sanitizeAudioWorkletNodeOptions, setActiveAudioWorkletNodeInputs, wrapEventListener) => {
    return class AudioWorkletNode extends audioNodeConstructor {
        constructor(context, name, options) {
            var _a;
            const nativeContext = getNativeContext(context);
            const isOffline = isNativeOfflineAudioContext(nativeContext);
            const mergedOptions = sanitizeAudioWorkletNodeOptions({ ...DEFAULT_OPTIONS, ...options });
            const nodeNameToProcessorConstructorMap = _globals__WEBPACK_IMPORTED_MODULE_0__.NODE_NAME_TO_PROCESSOR_CONSTRUCTOR_MAPS.get(nativeContext);
            const processorConstructor = nodeNameToProcessorConstructorMap === null || nodeNameToProcessorConstructorMap === void 0 ? void 0 : nodeNameToProcessorConstructorMap.get(name);
            // Bug #186: Chrome, Edge and Opera do not allow to create an AudioWorkletNode on a closed AudioContext.
            const nativeContextOrBackupOfflineAudioContext = isOffline || nativeContext.state !== 'closed'
                ? nativeContext
                : (_a = getBackupOfflineAudioContext(nativeContext)) !== null && _a !== void 0 ? _a : nativeContext;
            const nativeAudioWorkletNode = createNativeAudioWorkletNode(nativeContextOrBackupOfflineAudioContext, isOffline ? null : context.baseLatency, nativeAudioWorkletNodeConstructor, name, processorConstructor, mergedOptions);
            const audioWorkletNodeRenderer = ((isOffline ? createAudioWorkletNodeRenderer(name, mergedOptions, processorConstructor) : null));
            /*
             * @todo Add a mechanism to switch an AudioWorkletNode to passive once the process() function of the AudioWorkletProcessor
             * returns false.
             */
            super(context, true, nativeAudioWorkletNode, audioWorkletNodeRenderer);
            const parameters = [];
            nativeAudioWorkletNode.parameters.forEach((nativeAudioParam, nm) => {
                const audioParam = createAudioParam(this, isOffline, nativeAudioParam);
                parameters.push([nm, audioParam]);
            });
            this._nativeAudioWorkletNode = nativeAudioWorkletNode;
            this._onprocessorerror = null;
            this._parameters = new _read_only_map__WEBPACK_IMPORTED_MODULE_1__.ReadOnlyMap(parameters);
            /*
             * Bug #86 & #87: Invoking the renderer of an AudioWorkletNode might be necessary if it has no direct or indirect connection to
             * the destination.
             */
            if (isOffline) {
                addUnrenderedAudioWorkletNode(nativeContext, this);
            }
            const { activeInputs } = getAudioNodeConnections(this);
            setActiveAudioWorkletNodeInputs(nativeAudioWorkletNode, activeInputs);
        }
        get onprocessorerror() {
            return this._onprocessorerror;
        }
        set onprocessorerror(value) {
            const wrappedListener = typeof value === 'function' ? wrapEventListener(this, value) : null;
            this._nativeAudioWorkletNode.onprocessorerror = wrappedListener;
            const nativeOnProcessorError = this._nativeAudioWorkletNode.onprocessorerror;
            this._onprocessorerror =
                nativeOnProcessorError !== null && nativeOnProcessorError === wrappedListener
                    ? value
                    : nativeOnProcessorError;
        }
        get parameters() {
            if (this._parameters === null) {
                // @todo The definition that TypeScript uses of the AudioParamMap is lacking many methods.
                return this._nativeAudioWorkletNode.parameters;
            }
            return this._parameters;
        }
        get port() {
            return this._nativeAudioWorkletNode.port;
        }
    };
};
//# sourceMappingURL=audio-worklet-node-constructor.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/audio-worklet-node-renderer-factory.js":
/*!***************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/audio-worklet-node-renderer-factory.js ***!
  \***************************************************************************************************************/
/*! namespace exports */
/*! export createAudioWorkletNodeRendererFactory [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "createAudioWorkletNodeRendererFactory": () => /* binding */ createAudioWorkletNodeRendererFactory
/* harmony export */ });
/* harmony import */ var _helpers_copy_from_channel__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../helpers/copy-from-channel */ "./node_modules/standardized-audio-context/build/es2019/helpers/copy-from-channel.js");
/* harmony import */ var _helpers_copy_to_channel__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../helpers/copy-to-channel */ "./node_modules/standardized-audio-context/build/es2019/helpers/copy-to-channel.js");
/* harmony import */ var _helpers_create_nested_arrays__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../helpers/create-nested-arrays */ "./node_modules/standardized-audio-context/build/es2019/helpers/create-nested-arrays.js");
/* harmony import */ var _helpers_get_audio_node_connections__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../helpers/get-audio-node-connections */ "./node_modules/standardized-audio-context/build/es2019/helpers/get-audio-node-connections.js");
/* harmony import */ var _helpers_get_audio_worklet_processor__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../helpers/get-audio-worklet-processor */ "./node_modules/standardized-audio-context/build/es2019/helpers/get-audio-worklet-processor.js");
/* harmony import */ var _helpers_is_owned_by_context__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../helpers/is-owned-by-context */ "./node_modules/standardized-audio-context/build/es2019/helpers/is-owned-by-context.js");
;





const processBuffer = async (proxy, renderedBuffer, nativeOfflineAudioContext, options, outputChannelCount, processorConstructor, exposeCurrentFrameAndCurrentTime) => {
    // Ceil the length to the next full render quantum.
    // Bug #17: Safari does not yet expose the length.
    const length = renderedBuffer === null ? Math.ceil(proxy.context.length / 128) * 128 : renderedBuffer.length;
    const numberOfInputChannels = options.channelCount * options.numberOfInputs;
    const numberOfOutputChannels = outputChannelCount.reduce((sum, value) => sum + value, 0);
    const processedBuffer = numberOfOutputChannels === 0
        ? null
        : nativeOfflineAudioContext.createBuffer(numberOfOutputChannels, length, nativeOfflineAudioContext.sampleRate);
    if (processorConstructor === undefined) {
        throw new Error('Missing the processor constructor.');
    }
    const audioNodeConnections = (0,_helpers_get_audio_node_connections__WEBPACK_IMPORTED_MODULE_3__.getAudioNodeConnections)(proxy);
    const audioWorkletProcessor = await (0,_helpers_get_audio_worklet_processor__WEBPACK_IMPORTED_MODULE_4__.getAudioWorkletProcessor)(nativeOfflineAudioContext, proxy);
    const inputs = (0,_helpers_create_nested_arrays__WEBPACK_IMPORTED_MODULE_2__.createNestedArrays)(options.numberOfInputs, options.channelCount);
    const outputs = (0,_helpers_create_nested_arrays__WEBPACK_IMPORTED_MODULE_2__.createNestedArrays)(options.numberOfOutputs, outputChannelCount);
    const parameters = Array.from(proxy.parameters.keys()).reduce((prmtrs, name) => ({ ...prmtrs, [name]: new Float32Array(128) }), {});
    for (let i = 0; i < length; i += 128) {
        if (options.numberOfInputs > 0 && renderedBuffer !== null) {
            for (let j = 0; j < options.numberOfInputs; j += 1) {
                for (let k = 0; k < options.channelCount; k += 1) {
                    (0,_helpers_copy_from_channel__WEBPACK_IMPORTED_MODULE_0__.copyFromChannel)(renderedBuffer, inputs[j], k, k, i);
                }
            }
        }
        if (processorConstructor.parameterDescriptors !== undefined && renderedBuffer !== null) {
            processorConstructor.parameterDescriptors.forEach(({ name }, index) => {
                (0,_helpers_copy_from_channel__WEBPACK_IMPORTED_MODULE_0__.copyFromChannel)(renderedBuffer, parameters, name, numberOfInputChannels + index, i);
            });
        }
        for (let j = 0; j < options.numberOfInputs; j += 1) {
            for (let k = 0; k < outputChannelCount[j]; k += 1) {
                // The byteLength will be 0 when the ArrayBuffer was transferred.
                if (outputs[j][k].byteLength === 0) {
                    outputs[j][k] = new Float32Array(128);
                }
            }
        }
        try {
            const potentiallyEmptyInputs = inputs.map((input, index) => {
                if (audioNodeConnections.activeInputs[index].size === 0) {
                    return [];
                }
                return input;
            });
            const activeSourceFlag = exposeCurrentFrameAndCurrentTime(i / nativeOfflineAudioContext.sampleRate, nativeOfflineAudioContext.sampleRate, () => audioWorkletProcessor.process(potentiallyEmptyInputs, outputs, parameters));
            if (processedBuffer !== null) {
                for (let j = 0, outputChannelSplitterNodeOutput = 0; j < options.numberOfOutputs; j += 1) {
                    for (let k = 0; k < outputChannelCount[j]; k += 1) {
                        (0,_helpers_copy_to_channel__WEBPACK_IMPORTED_MODULE_1__.copyToChannel)(processedBuffer, outputs[j], k, outputChannelSplitterNodeOutput + k, i);
                    }
                    outputChannelSplitterNodeOutput += outputChannelCount[j];
                }
            }
            if (!activeSourceFlag) {
                break;
            }
        }
        catch (error) {
            proxy.dispatchEvent(new ErrorEvent('processorerror', {
                colno: error.colno,
                filename: error.filename,
                lineno: error.lineno,
                message: error.message
            }));
            break;
        }
    }
    return processedBuffer;
};
const createAudioWorkletNodeRendererFactory = (connectAudioParam, connectMultipleOutputs, createNativeAudioBufferSourceNode, createNativeChannelMergerNode, createNativeChannelSplitterNode, createNativeConstantSourceNode, createNativeGainNode, deleteUnrenderedAudioWorkletNode, disconnectMultipleOutputs, exposeCurrentFrameAndCurrentTime, getNativeAudioNode, nativeAudioWorkletNodeConstructor, nativeOfflineAudioContextConstructor, renderAutomation, renderInputsOfAudioNode, renderNativeOfflineAudioContext) => {
    return (name, options, processorConstructor) => {
        const renderedNativeAudioNodes = new WeakMap();
        let processedBufferPromise = null;
        const createAudioNode = async (proxy, nativeOfflineAudioContext, trace) => {
            let nativeAudioWorkletNode = getNativeAudioNode(proxy);
            let nativeOutputNodes = null;
            const nativeAudioWorkletNodeIsOwnedByContext = (0,_helpers_is_owned_by_context__WEBPACK_IMPORTED_MODULE_5__.isOwnedByContext)(nativeAudioWorkletNode, nativeOfflineAudioContext);
            const outputChannelCount = Array.isArray(options.outputChannelCount)
                ? options.outputChannelCount
                : Array.from(options.outputChannelCount);
            // Bug #61: Only Chrome, Edge, Firefox & Opera have an implementation of the AudioWorkletNode yet.
            if (nativeAudioWorkletNodeConstructor === null) {
                const numberOfOutputChannels = outputChannelCount.reduce((sum, value) => sum + value, 0);
                const outputChannelSplitterNode = createNativeChannelSplitterNode(nativeOfflineAudioContext, {
                    channelCount: Math.max(1, numberOfOutputChannels),
                    channelCountMode: 'explicit',
                    channelInterpretation: 'discrete',
                    numberOfOutputs: Math.max(1, numberOfOutputChannels)
                });
                const outputChannelMergerNodes = [];
                for (let i = 0; i < proxy.numberOfOutputs; i += 1) {
                    outputChannelMergerNodes.push(createNativeChannelMergerNode(nativeOfflineAudioContext, {
                        channelCount: 1,
                        channelCountMode: 'explicit',
                        channelInterpretation: 'speakers',
                        numberOfInputs: outputChannelCount[i]
                    }));
                }
                const outputGainNode = createNativeGainNode(nativeOfflineAudioContext, {
                    channelCount: options.channelCount,
                    channelCountMode: options.channelCountMode,
                    channelInterpretation: options.channelInterpretation,
                    gain: 1
                });
                outputGainNode.connect = connectMultipleOutputs.bind(null, outputChannelMergerNodes);
                outputGainNode.disconnect = disconnectMultipleOutputs.bind(null, outputChannelMergerNodes);
                nativeOutputNodes = [outputChannelSplitterNode, outputChannelMergerNodes, outputGainNode];
            }
            else if (!nativeAudioWorkletNodeIsOwnedByContext) {
                nativeAudioWorkletNode = new nativeAudioWorkletNodeConstructor(nativeOfflineAudioContext, name);
            }
            renderedNativeAudioNodes.set(nativeOfflineAudioContext, nativeOutputNodes === null ? nativeAudioWorkletNode : nativeOutputNodes[2]);
            if (nativeOutputNodes !== null) {
                if (processedBufferPromise === null) {
                    if (processorConstructor === undefined) {
                        throw new Error('Missing the processor constructor.');
                    }
                    if (nativeOfflineAudioContextConstructor === null) {
                        throw new Error('Missing the native OfflineAudioContext constructor.');
                    }
                    // Bug #47: The AudioDestinationNode in Safari gets not initialized correctly.
                    const numberOfInputChannels = proxy.channelCount * proxy.numberOfInputs;
                    const numberOfParameters = processorConstructor.parameterDescriptors === undefined ? 0 : processorConstructor.parameterDescriptors.length;
                    const numberOfChannels = numberOfInputChannels + numberOfParameters;
                    const renderBuffer = async () => {
                        const partialOfflineAudioContext = new nativeOfflineAudioContextConstructor(numberOfChannels, 
                        // Ceil the length to the next full render quantum.
                        // Bug #17: Safari does not yet expose the length.
                        Math.ceil(proxy.context.length / 128) * 128, nativeOfflineAudioContext.sampleRate);
                        const gainNodes = [];
                        const inputChannelSplitterNodes = [];
                        for (let i = 0; i < options.numberOfInputs; i += 1) {
                            gainNodes.push(createNativeGainNode(partialOfflineAudioContext, {
                                channelCount: options.channelCount,
                                channelCountMode: options.channelCountMode,
                                channelInterpretation: options.channelInterpretation,
                                gain: 1
                            }));
                            inputChannelSplitterNodes.push(createNativeChannelSplitterNode(partialOfflineAudioContext, {
                                channelCount: options.channelCount,
                                channelCountMode: 'explicit',
                                channelInterpretation: 'discrete',
                                numberOfOutputs: options.channelCount
                            }));
                        }
                        const constantSourceNodes = await Promise.all(Array.from(proxy.parameters.values()).map(async (audioParam) => {
                            const constantSourceNode = createNativeConstantSourceNode(partialOfflineAudioContext, {
                                channelCount: 1,
                                channelCountMode: 'explicit',
                                channelInterpretation: 'discrete',
                                offset: audioParam.value
                            });
                            await renderAutomation(partialOfflineAudioContext, audioParam, constantSourceNode.offset, trace);
                            return constantSourceNode;
                        }));
                        const inputChannelMergerNode = createNativeChannelMergerNode(partialOfflineAudioContext, {
                            channelCount: 1,
                            channelCountMode: 'explicit',
                            channelInterpretation: 'speakers',
                            numberOfInputs: Math.max(1, numberOfInputChannels + numberOfParameters)
                        });
                        for (let i = 0; i < options.numberOfInputs; i += 1) {
                            gainNodes[i].connect(inputChannelSplitterNodes[i]);
                            for (let j = 0; j < options.channelCount; j += 1) {
                                inputChannelSplitterNodes[i].connect(inputChannelMergerNode, j, i * options.channelCount + j);
                            }
                        }
                        for (const [index, constantSourceNode] of constantSourceNodes.entries()) {
                            constantSourceNode.connect(inputChannelMergerNode, 0, numberOfInputChannels + index);
                            constantSourceNode.start(0);
                        }
                        inputChannelMergerNode.connect(partialOfflineAudioContext.destination);
                        await Promise.all(gainNodes.map((gainNode) => renderInputsOfAudioNode(proxy, partialOfflineAudioContext, gainNode, trace)));
                        return renderNativeOfflineAudioContext(partialOfflineAudioContext);
                    };
                    processedBufferPromise = processBuffer(proxy, numberOfChannels === 0 ? null : await renderBuffer(), nativeOfflineAudioContext, options, outputChannelCount, processorConstructor, exposeCurrentFrameAndCurrentTime);
                }
                const processedBuffer = await processedBufferPromise;
                const audioBufferSourceNode = createNativeAudioBufferSourceNode(nativeOfflineAudioContext, {
                    buffer: null,
                    channelCount: 2,
                    channelCountMode: 'max',
                    channelInterpretation: 'speakers',
                    loop: false,
                    loopEnd: 0,
                    loopStart: 0,
                    playbackRate: 1
                });
                const [outputChannelSplitterNode, outputChannelMergerNodes, outputGainNode] = nativeOutputNodes;
                if (processedBuffer !== null) {
                    audioBufferSourceNode.buffer = processedBuffer;
                    audioBufferSourceNode.start(0);
                }
                audioBufferSourceNode.connect(outputChannelSplitterNode);
                for (let i = 0, outputChannelSplitterNodeOutput = 0; i < proxy.numberOfOutputs; i += 1) {
                    const outputChannelMergerNode = outputChannelMergerNodes[i];
                    for (let j = 0; j < outputChannelCount[i]; j += 1) {
                        outputChannelSplitterNode.connect(outputChannelMergerNode, outputChannelSplitterNodeOutput + j, j);
                    }
                    outputChannelSplitterNodeOutput += outputChannelCount[i];
                }
                return outputGainNode;
            }
            if (!nativeAudioWorkletNodeIsOwnedByContext) {
                for (const [nm, audioParam] of proxy.parameters.entries()) {
                    await renderAutomation(nativeOfflineAudioContext, audioParam, 
                    // @todo The definition that TypeScript uses of the AudioParamMap is lacking many methods.
                    nativeAudioWorkletNode.parameters.get(nm), trace);
                }
            }
            else {
                for (const [nm, audioParam] of proxy.parameters.entries()) {
                    await connectAudioParam(nativeOfflineAudioContext, audioParam, 
                    // @todo The definition that TypeScript uses of the AudioParamMap is lacking many methods.
                    nativeAudioWorkletNode.parameters.get(nm), trace);
                }
            }
            await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeAudioWorkletNode, trace);
            return nativeAudioWorkletNode;
        };
        return {
            render(proxy, nativeOfflineAudioContext, trace) {
                deleteUnrenderedAudioWorkletNode(nativeOfflineAudioContext, proxy);
                const renderedNativeAudioWorkletNodeOrGainNode = renderedNativeAudioNodes.get(nativeOfflineAudioContext);
                if (renderedNativeAudioWorkletNodeOrGainNode !== undefined) {
                    return Promise.resolve(renderedNativeAudioWorkletNodeOrGainNode);
                }
                return createAudioNode(proxy, nativeOfflineAudioContext, trace);
            }
        };
    };
};
//# sourceMappingURL=audio-worklet-node-renderer-factory.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/base-audio-context-constructor.js":
/*!**********************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/base-audio-context-constructor.js ***!
  \**********************************************************************************************************/
/*! namespace exports */
/*! export createBaseAudioContextConstructor [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "createBaseAudioContextConstructor": () => /* binding */ createBaseAudioContextConstructor
/* harmony export */ });
const createBaseAudioContextConstructor = (addAudioWorkletModule, analyserNodeConstructor, audioBufferConstructor, audioBufferSourceNodeConstructor, biquadFilterNodeConstructor, channelMergerNodeConstructor, channelSplitterNodeConstructor, constantSourceNodeConstructor, convolverNodeConstructor, decodeAudioData, delayNodeConstructor, dynamicsCompressorNodeConstructor, gainNodeConstructor, iIRFilterNodeConstructor, minimalBaseAudioContextConstructor, oscillatorNodeConstructor, pannerNodeConstructor, periodicWaveConstructor, stereoPannerNodeConstructor, waveShaperNodeConstructor) => {
    return class BaseAudioContext extends minimalBaseAudioContextConstructor {
        constructor(_nativeContext, numberOfChannels) {
            super(_nativeContext, numberOfChannels);
            this._nativeContext = _nativeContext;
            this._audioWorklet =
                addAudioWorkletModule === undefined
                    ? undefined
                    : {
                        addModule: (moduleURL, options) => {
                            return addAudioWorkletModule(this, moduleURL, options);
                        }
                    };
        }
        get audioWorklet() {
            return this._audioWorklet;
        }
        createAnalyser() {
            return new analyserNodeConstructor(this);
        }
        createBiquadFilter() {
            return new biquadFilterNodeConstructor(this);
        }
        createBuffer(numberOfChannels, length, sampleRate) {
            return new audioBufferConstructor({ length, numberOfChannels, sampleRate });
        }
        createBufferSource() {
            return new audioBufferSourceNodeConstructor(this);
        }
        createChannelMerger(numberOfInputs = 6) {
            return new channelMergerNodeConstructor(this, { numberOfInputs });
        }
        createChannelSplitter(numberOfOutputs = 6) {
            return new channelSplitterNodeConstructor(this, { numberOfOutputs });
        }
        createConstantSource() {
            return new constantSourceNodeConstructor(this);
        }
        createConvolver() {
            return new convolverNodeConstructor(this);
        }
        createDelay(maxDelayTime = 1) {
            return new delayNodeConstructor(this, { maxDelayTime });
        }
        createDynamicsCompressor() {
            return new dynamicsCompressorNodeConstructor(this);
        }
        createGain() {
            return new gainNodeConstructor(this);
        }
        createIIRFilter(feedforward, feedback) {
            return new iIRFilterNodeConstructor(this, { feedback, feedforward });
        }
        createOscillator() {
            return new oscillatorNodeConstructor(this);
        }
        createPanner() {
            return new pannerNodeConstructor(this);
        }
        createPeriodicWave(real, imag, constraints = { disableNormalization: false }) {
            return new periodicWaveConstructor(this, { ...constraints, imag, real });
        }
        createStereoPanner() {
            return new stereoPannerNodeConstructor(this);
        }
        createWaveShaper() {
            return new waveShaperNodeConstructor(this);
        }
        decodeAudioData(audioData, successCallback, errorCallback) {
            return decodeAudioData(this._nativeContext, audioData)
                .then((audioBuffer) => {
                if (typeof successCallback === 'function') {
                    successCallback(audioBuffer);
                }
                return audioBuffer;
            })
                .catch((err) => {
                if (typeof errorCallback === 'function') {
                    errorCallback(err);
                }
                throw err;
            });
        }
    };
};
//# sourceMappingURL=base-audio-context-constructor.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/biquad-filter-node-constructor.js":
/*!**********************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/biquad-filter-node-constructor.js ***!
  \**********************************************************************************************************/
/*! namespace exports */
/*! export createBiquadFilterNodeConstructor [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "createBiquadFilterNodeConstructor": () => /* binding */ createBiquadFilterNodeConstructor
/* harmony export */ });
/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../constants */ "./node_modules/standardized-audio-context/build/es2019/constants.js");
;
const DEFAULT_OPTIONS = {
    Q: 1,
    channelCount: 2,
    channelCountMode: 'max',
    channelInterpretation: 'speakers',
    detune: 0,
    frequency: 350,
    gain: 0,
    type: 'lowpass'
};
const createBiquadFilterNodeConstructor = (audioNodeConstructor, createAudioParam, createBiquadFilterNodeRenderer, createInvalidAccessError, createNativeBiquadFilterNode, getNativeContext, isNativeOfflineAudioContext, setAudioNodeTailTime) => {
    return class BiquadFilterNode extends audioNodeConstructor {
        constructor(context, options) {
            const nativeContext = getNativeContext(context);
            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };
            const nativeBiquadFilterNode = createNativeBiquadFilterNode(nativeContext, mergedOptions);
            const isOffline = isNativeOfflineAudioContext(nativeContext);
            const biquadFilterNodeRenderer = (isOffline ? createBiquadFilterNodeRenderer() : null);
            super(context, false, nativeBiquadFilterNode, biquadFilterNodeRenderer);
            // Bug #80: Safari does not export the correct values for maxValue and minValue.
            this._Q = createAudioParam(this, isOffline, nativeBiquadFilterNode.Q, _constants__WEBPACK_IMPORTED_MODULE_0__.MOST_POSITIVE_SINGLE_FLOAT, _constants__WEBPACK_IMPORTED_MODULE_0__.MOST_NEGATIVE_SINGLE_FLOAT);
            // Bug #78: Firefox & Safari do not export the correct values for maxValue and minValue.
            this._detune = createAudioParam(this, isOffline, nativeBiquadFilterNode.detune, 1200 * Math.log2(_constants__WEBPACK_IMPORTED_MODULE_0__.MOST_POSITIVE_SINGLE_FLOAT), -1200 * Math.log2(_constants__WEBPACK_IMPORTED_MODULE_0__.MOST_POSITIVE_SINGLE_FLOAT));
            // Bug #77: Firefox & Safari do not export the correct value for minValue.
            this._frequency = createAudioParam(this, isOffline, nativeBiquadFilterNode.frequency, context.sampleRate / 2, 0);
            // Bug #79: Firefox & Safari do not export the correct values for maxValue and minValue.
            this._gain = createAudioParam(this, isOffline, nativeBiquadFilterNode.gain, 40 * Math.log10(_constants__WEBPACK_IMPORTED_MODULE_0__.MOST_POSITIVE_SINGLE_FLOAT), _constants__WEBPACK_IMPORTED_MODULE_0__.MOST_NEGATIVE_SINGLE_FLOAT);
            this._nativeBiquadFilterNode = nativeBiquadFilterNode;
            // @todo Determine a meaningful tail-time instead of just using one second.
            setAudioNodeTailTime(this, 1);
        }
        get detune() {
            return this._detune;
        }
        get frequency() {
            return this._frequency;
        }
        get gain() {
            return this._gain;
        }
        get Q() {
            return this._Q;
        }
        get type() {
            return this._nativeBiquadFilterNode.type;
        }
        set type(value) {
            this._nativeBiquadFilterNode.type = value;
        }
        getFrequencyResponse(frequencyHz, magResponse, phaseResponse) {
            this._nativeBiquadFilterNode.getFrequencyResponse(frequencyHz, magResponse, phaseResponse);
            // Bug #68: Safari does not throw an error if the parameters differ in their length.
            if (frequencyHz.length !== magResponse.length || magResponse.length !== phaseResponse.length) {
                throw createInvalidAccessError();
            }
        }
    };
};
//# sourceMappingURL=biquad-filter-node-constructor.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/biquad-filter-node-renderer-factory.js":
/*!***************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/biquad-filter-node-renderer-factory.js ***!
  \***************************************************************************************************************/
/*! namespace exports */
/*! export createBiquadFilterNodeRendererFactory [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "createBiquadFilterNodeRendererFactory": () => /* binding */ createBiquadFilterNodeRendererFactory
/* harmony export */ });
/* harmony import */ var _helpers_is_owned_by_context__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../helpers/is-owned-by-context */ "./node_modules/standardized-audio-context/build/es2019/helpers/is-owned-by-context.js");
;
const createBiquadFilterNodeRendererFactory = (connectAudioParam, createNativeBiquadFilterNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode) => {
    return () => {
        const renderedNativeBiquadFilterNodes = new WeakMap();
        const createBiquadFilterNode = async (proxy, nativeOfflineAudioContext, trace) => {
            let nativeBiquadFilterNode = getNativeAudioNode(proxy);
            /*
             * If the initially used nativeBiquadFilterNode was not constructed on the same OfflineAudioContext it needs to be created
             * again.
             */
            const nativeBiquadFilterNodeIsOwnedByContext = (0,_helpers_is_owned_by_context__WEBPACK_IMPORTED_MODULE_0__.isOwnedByContext)(nativeBiquadFilterNode, nativeOfflineAudioContext);
            if (!nativeBiquadFilterNodeIsOwnedByContext) {
                const options = {
                    Q: nativeBiquadFilterNode.Q.value,
                    channelCount: nativeBiquadFilterNode.channelCount,
                    channelCountMode: nativeBiquadFilterNode.channelCountMode,
                    channelInterpretation: nativeBiquadFilterNode.channelInterpretation,
                    detune: nativeBiquadFilterNode.detune.value,
                    frequency: nativeBiquadFilterNode.frequency.value,
                    gain: nativeBiquadFilterNode.gain.value,
                    type: nativeBiquadFilterNode.type
                };
                nativeBiquadFilterNode = createNativeBiquadFilterNode(nativeOfflineAudioContext, options);
            }
            renderedNativeBiquadFilterNodes.set(nativeOfflineAudioContext, nativeBiquadFilterNode);
            if (!nativeBiquadFilterNodeIsOwnedByContext) {
                await renderAutomation(nativeOfflineAudioContext, proxy.Q, nativeBiquadFilterNode.Q, trace);
                await renderAutomation(nativeOfflineAudioContext, proxy.detune, nativeBiquadFilterNode.detune, trace);
                await renderAutomation(nativeOfflineAudioContext, proxy.frequency, nativeBiquadFilterNode.frequency, trace);
                await renderAutomation(nativeOfflineAudioContext, proxy.gain, nativeBiquadFilterNode.gain, trace);
            }
            else {
                await connectAudioParam(nativeOfflineAudioContext, proxy.Q, nativeBiquadFilterNode.Q, trace);
                await connectAudioParam(nativeOfflineAudioContext, proxy.detune, nativeBiquadFilterNode.detune, trace);
                await connectAudioParam(nativeOfflineAudioContext, proxy.frequency, nativeBiquadFilterNode.frequency, trace);
                await connectAudioParam(nativeOfflineAudioContext, proxy.gain, nativeBiquadFilterNode.gain, trace);
            }
            await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeBiquadFilterNode, trace);
            return nativeBiquadFilterNode;
        };
        return {
            render(proxy, nativeOfflineAudioContext, trace) {
                const renderedNativeBiquadFilterNode = renderedNativeBiquadFilterNodes.get(nativeOfflineAudioContext);
                if (renderedNativeBiquadFilterNode !== undefined) {
                    return Promise.resolve(renderedNativeBiquadFilterNode);
                }
                return createBiquadFilterNode(proxy, nativeOfflineAudioContext, trace);
            }
        };
    };
};
//# sourceMappingURL=biquad-filter-node-renderer-factory.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/cache-test-result.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/cache-test-result.js ***!
  \*********************************************************************************************/
/*! namespace exports */
/*! export createCacheTestResult [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "createCacheTestResult": () => /* binding */ createCacheTestResult
/* harmony export */ });
const createCacheTestResult = (ongoingTests, testResults) => {
    return (tester, test) => {
        const cachedTestResult = testResults.get(tester);
        if (cachedTestResult !== undefined) {
            return cachedTestResult;
        }
        const ongoingTest = ongoingTests.get(tester);
        if (ongoingTest !== undefined) {
            return ongoingTest;
        }
        try {
            const synchronousTestResult = test();
            if (synchronousTestResult instanceof Promise) {
                ongoingTests.set(tester, synchronousTestResult);
                return synchronousTestResult
                    .catch(() => false)
                    .then((finalTestResult) => {
                    ongoingTests.delete(tester);
                    testResults.set(tester, finalTestResult);
                    return finalTestResult;
                });
            }
            testResults.set(tester, synchronousTestResult);
            return synchronousTestResult;
        }
        catch {
            testResults.set(tester, false);
            return false;
        }
    };
};
//# sourceMappingURL=cache-test-result.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/channel-merger-node-constructor.js":
/*!***********************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/channel-merger-node-constructor.js ***!
  \***********************************************************************************************************/
/*! namespace exports */
/*! export createChannelMergerNodeConstructor [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "createChannelMergerNodeConstructor": () => /* binding */ createChannelMergerNodeConstructor
/* harmony export */ });
const DEFAULT_OPTIONS = {
    channelCount: 1,
    channelCountMode: 'explicit',
    channelInterpretation: 'speakers',
    numberOfInputs: 6
};
const createChannelMergerNodeConstructor = (audioNodeConstructor, createChannelMergerNodeRenderer, createNativeChannelMergerNode, getNativeContext, isNativeOfflineAudioContext) => {
    return class ChannelMergerNode extends audioNodeConstructor {
        constructor(context, options) {
            const nativeContext = getNativeContext(context);
            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };
            const nativeChannelMergerNode = createNativeChannelMergerNode(nativeContext, mergedOptions);
            const channelMergerNodeRenderer = ((isNativeOfflineAudioContext(nativeContext) ? createChannelMergerNodeRenderer() : null));
            super(context, false, nativeChannelMergerNode, channelMergerNodeRenderer);
        }
    };
};
//# sourceMappingURL=channel-merger-node-constructor.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/channel-merger-node-renderer-factory.js":
/*!****************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/channel-merger-node-renderer-factory.js ***!
  \****************************************************************************************************************/
/*! namespace exports */
/*! export createChannelMergerNodeRendererFactory [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "createChannelMergerNodeRendererFactory": () => /* binding */ createChannelMergerNodeRendererFactory
/* harmony export */ });
/* harmony import */ var _helpers_is_owned_by_context__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../helpers/is-owned-by-context */ "./node_modules/standardized-audio-context/build/es2019/helpers/is-owned-by-context.js");
;
const createChannelMergerNodeRendererFactory = (createNativeChannelMergerNode, getNativeAudioNode, renderInputsOfAudioNode) => {
    return () => {
        const renderedNativeAudioNodes = new WeakMap();
        const createAudioNode = async (proxy, nativeOfflineAudioContext, trace) => {
            let nativeAudioNode = getNativeAudioNode(proxy);
            // If the initially used nativeAudioNode was not constructed on the same OfflineAudioContext it needs to be created again.
            const nativeAudioNodeIsOwnedByContext = (0,_helpers_is_owned_by_context__WEBPACK_IMPORTED_MODULE_0__.isOwnedByContext)(nativeAudioNode, nativeOfflineAudioContext);
            if (!nativeAudioNodeIsOwnedByContext) {
                const options = {
                    channelCount: nativeAudioNode.channelCount,
                    channelCountMode: nativeAudioNode.channelCountMode,
                    channelInterpretation: nativeAudioNode.channelInterpretation,
                    numberOfInputs: nativeAudioNode.numberOfInputs
                };
                nativeAudioNode = createNativeChannelMergerNode(nativeOfflineAudioContext, options);
            }
            renderedNativeAudioNodes.set(nativeOfflineAudioContext, nativeAudioNode);
            await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeAudioNode, trace);
            return nativeAudioNode;
        };
        return {
            render(proxy, nativeOfflineAudioContext, trace) {
                const renderedNativeAudioNode = renderedNativeAudioNodes.get(nativeOfflineAudioContext);
                if (renderedNativeAudioNode !== undefined) {
                    return Promise.resolve(renderedNativeAudioNode);
                }
                return createAudioNode(proxy, nativeOfflineAudioContext, trace);
            }
        };
    };
};
//# sourceMappingURL=channel-merger-node-renderer-factory.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/channel-splitter-node-constructor.js":
/*!*************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/channel-splitter-node-constructor.js ***!
  \*************************************************************************************************************/
/*! namespace exports */
/*! export createChannelSplitterNodeConstructor [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "createChannelSplitterNodeConstructor": () => /* binding */ createChannelSplitterNodeConstructor
/* harmony export */ });
const DEFAULT_OPTIONS = {
    channelCount: 6,
    channelCountMode: 'explicit',
    channelInterpretation: 'discrete',
    numberOfOutputs: 6
};
const createChannelSplitterNodeConstructor = (audioNodeConstructor, createChannelSplitterNodeRenderer, createNativeChannelSplitterNode, getNativeContext, isNativeOfflineAudioContext, sanitizeChannelSplitterOptions) => {
    return class ChannelSplitterNode extends audioNodeConstructor {
        constructor(context, options) {
            const nativeContext = getNativeContext(context);
            const mergedOptions = sanitizeChannelSplitterOptions({ ...DEFAULT_OPTIONS, ...options });
            const nativeChannelSplitterNode = createNativeChannelSplitterNode(nativeContext, mergedOptions);
            const channelSplitterNodeRenderer = ((isNativeOfflineAudioContext(nativeContext) ? createChannelSplitterNodeRenderer() : null));
            super(context, false, nativeChannelSplitterNode, channelSplitterNodeRenderer);
        }
    };
};
//# sourceMappingURL=channel-splitter-node-constructor.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/channel-splitter-node-renderer-factory.js":
/*!******************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/channel-splitter-node-renderer-factory.js ***!
  \******************************************************************************************************************/
/*! namespace exports */
/*! export createChannelSplitterNodeRendererFactory [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "createChannelSplitterNodeRendererFactory": () => /* binding */ createChannelSplitterNodeRendererFactory
/* harmony export */ });
/* harmony import */ var _helpers_is_owned_by_context__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../helpers/is-owned-by-context */ "./node_modules/standardized-audio-context/build/es2019/helpers/is-owned-by-context.js");
;
const createChannelSplitterNodeRendererFactory = (createNativeChannelSplitterNode, getNativeAudioNode, renderInputsOfAudioNode) => {
    return () => {
        const renderedNativeAudioNodes = new WeakMap();
        const createAudioNode = async (proxy, nativeOfflineAudioContext, trace) => {
            let nativeAudioNode = getNativeAudioNode(proxy);
            // If the initially used nativeAudioNode was not constructed on the same OfflineAudioContext it needs to be created again.
            const nativeAudioNodeIsOwnedByContext = (0,_helpers_is_owned_by_context__WEBPACK_IMPORTED_MODULE_0__.isOwnedByContext)(nativeAudioNode, nativeOfflineAudioContext);
            if (!nativeAudioNodeIsOwnedByContext) {
                const options = {
                    channelCount: nativeAudioNode.channelCount,
                    channelCountMode: nativeAudioNode.channelCountMode,
                    channelInterpretation: nativeAudioNode.channelInterpretation,
                    numberOfOutputs: nativeAudioNode.numberOfOutputs
                };
                nativeAudioNode = createNativeChannelSplitterNode(nativeOfflineAudioContext, options);
            }
            renderedNativeAudioNodes.set(nativeOfflineAudioContext, nativeAudioNode);
            await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeAudioNode, trace);
            return nativeAudioNode;
        };
        return {
            render(proxy, nativeOfflineAudioContext, trace) {
                const renderedNativeAudioNode = renderedNativeAudioNodes.get(nativeOfflineAudioContext);
                if (renderedNativeAudioNode !== undefined) {
                    return Promise.resolve(renderedNativeAudioNode);
                }
                return createAudioNode(proxy, nativeOfflineAudioContext, trace);
            }
        };
    };
};
//# sourceMappingURL=channel-splitter-node-renderer-factory.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/connect-audio-param.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/connect-audio-param.js ***!
  \***********************************************************************************************/
/*! namespace exports */
/*! export createConnectAudioParam [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "createConnectAudioParam": () => /* binding */ createConnectAudioParam
/* harmony export */ });
const createConnectAudioParam = (renderInputsOfAudioParam) => {
    return (nativeOfflineAudioContext, audioParam, nativeAudioParam, trace) => {
        return renderInputsOfAudioParam(audioParam, nativeOfflineAudioContext, nativeAudioParam, trace);
    };
};
//# sourceMappingURL=connect-audio-param.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/connect-multiple-outputs.js":
/*!****************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/connect-multiple-outputs.js ***!
  \****************************************************************************************************/
/*! namespace exports */
/*! export createConnectMultipleOutputs [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "createConnectMultipleOutputs": () => /* binding */ createConnectMultipleOutputs
/* harmony export */ });
/* harmony import */ var _guards_native_audio_node__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../guards/native-audio-node */ "./node_modules/standardized-audio-context/build/es2019/guards/native-audio-node.js");
;
const createConnectMultipleOutputs = (createIndexSizeError) => {
    return (outputAudioNodes, destination, output = 0, input = 0) => {
        const outputAudioNode = outputAudioNodes[output];
        if (outputAudioNode === undefined) {
            throw createIndexSizeError();
        }
        if ((0,_guards_native_audio_node__WEBPACK_IMPORTED_MODULE_0__.isNativeAudioNode)(destination)) {
            return outputAudioNode.connect(destination, 0, input);
        }
        return outputAudioNode.connect(destination, 0);
    };
};
//# sourceMappingURL=connect-multiple-outputs.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/connected-native-audio-buffer-source-node-factory.js":
/*!*****************************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/connected-native-audio-buffer-source-node-factory.js ***!
  \*****************************************************************************************************************************/
/*! namespace exports */
/*! export createConnectedNativeAudioBufferSourceNodeFactory [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "createConnectedNativeAudioBufferSourceNodeFactory": () => /* binding */ createConnectedNativeAudioBufferSourceNodeFactory
/* harmony export */ });
const createConnectedNativeAudioBufferSourceNodeFactory = (createNativeAudioBufferSourceNode) => {
    return (nativeContext, nativeAudioNode) => {
        const nativeAudioBufferSourceNode = createNativeAudioBufferSourceNode(nativeContext, {
            buffer: null,
            channelCount: 2,
            channelCountMode: 'max',
            channelInterpretation: 'speakers',
            loop: false,
            loopEnd: 0,
            loopStart: 0,
            playbackRate: 1
        });
        const nativeAudioBuffer = nativeContext.createBuffer(1, 2, 44100);
        nativeAudioBufferSourceNode.buffer = nativeAudioBuffer;
        nativeAudioBufferSourceNode.loop = true;
        nativeAudioBufferSourceNode.connect(nativeAudioNode);
        nativeAudioBufferSourceNode.start();
        return () => {
            nativeAudioBufferSourceNode.stop();
            nativeAudioBufferSourceNode.disconnect(nativeAudioNode);
        };
    };
};
//# sourceMappingURL=connected-native-audio-buffer-source-node-factory.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/constant-source-node-constructor.js":
/*!************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/constant-source-node-constructor.js ***!
  \************************************************************************************************************/
/*! namespace exports */
/*! export createConstantSourceNodeConstructor [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "createConstantSourceNodeConstructor": () => /* binding */ createConstantSourceNodeConstructor
/* harmony export */ });
/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../constants */ "./node_modules/standardized-audio-context/build/es2019/constants.js");
/* harmony import */ var _helpers_is_active_audio_node__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../helpers/is-active-audio-node */ "./node_modules/standardized-audio-context/build/es2019/helpers/is-active-audio-node.js");
/* harmony import */ var _helpers_set_internal_state_to_active__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../helpers/set-internal-state-to-active */ "./node_modules/standardized-audio-context/build/es2019/helpers/set-internal-state-to-active.js");
/* harmony import */ var _helpers_set_internal_state_to_passive__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../helpers/set-internal-state-to-passive */ "./node_modules/standardized-audio-context/build/es2019/helpers/set-internal-state-to-passive.js");
;



const DEFAULT_OPTIONS = {
    channelCount: 2,
    channelCountMode: 'max',
    channelInterpretation: 'speakers',
    offset: 1
};
const createConstantSourceNodeConstructor = (audioNodeConstructor, createAudioParam, createConstantSourceNodeRendererFactory, createNativeConstantSourceNode, getNativeContext, isNativeOfflineAudioContext, wrapEventListener) => {
    return class ConstantSourceNode extends audioNodeConstructor {
        constructor(context, options) {
            const nativeContext = getNativeContext(context);
            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };
            const nativeConstantSourceNode = createNativeConstantSourceNode(nativeContext, mergedOptions);
            const isOffline = isNativeOfflineAudioContext(nativeContext);
            const constantSourceNodeRenderer = ((isOffline ? createConstantSourceNodeRendererFactory() : null));
            super(context, false, nativeConstantSourceNode, constantSourceNodeRenderer);
            this._constantSourceNodeRenderer = constantSourceNodeRenderer;
            this._nativeConstantSourceNode = nativeConstantSourceNode;
            /*
             * Bug #62 & #74: Safari does not support ConstantSourceNodes and does not export the correct values for maxValue and minValue
             * for GainNodes.
             */
            this._offset = createAudioParam(this, isOffline, nativeConstantSourceNode.offset, _constants__WEBPACK_IMPORTED_MODULE_0__.MOST_POSITIVE_SINGLE_FLOAT, _constants__WEBPACK_IMPORTED_MODULE_0__.MOST_NEGATIVE_SINGLE_FLOAT);
            this._onended = null;
        }
        get offset() {
            return this._offset;
        }
        get onended() {
            return this._onended;
        }
        set onended(value) {
            const wrappedListener = typeof value === 'function' ? wrapEventListener(this, value) : null;
            this._nativeConstantSourceNode.onended = wrappedListener;
            const nativeOnEnded = this._nativeConstantSourceNode.onended;
            this._onended = nativeOnEnded !== null && nativeOnEnded === wrappedListener ? value : nativeOnEnded;
        }
        start(when = 0) {
            this._nativeConstantSourceNode.start(when);
            if (this._constantSourceNodeRenderer !== null) {
                this._constantSourceNodeRenderer.start = when;
            }
            if (this.context.state !== 'closed') {
                (0,_helpers_set_internal_state_to_active__WEBPACK_IMPORTED_MODULE_2__.setInternalStateToActive)(this);
                const resetInternalStateToPassive = () => {
                    this._nativeConstantSourceNode.removeEventListener('ended', resetInternalStateToPassive);
                    if ((0,_helpers_is_active_audio_node__WEBPACK_IMPORTED_MODULE_1__.isActiveAudioNode)(this)) {
                        (0,_helpers_set_internal_state_to_passive__WEBPACK_IMPORTED_MODULE_3__.setInternalStateToPassive)(this);
                    }
                };
                this._nativeConstantSourceNode.addEventListener('ended', resetInternalStateToPassive);
            }
        }
        stop(when = 0) {
            this._nativeConstantSourceNode.stop(when);
            if (this._constantSourceNodeRenderer !== null) {
                this._constantSourceNodeRenderer.stop = when;
            }
        }
    };
};
//# sourceMappingURL=constant-source-node-constructor.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/constant-source-node-renderer-factory.js":
/*!*****************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/constant-source-node-renderer-factory.js ***!
  \*****************************************************************************************************************/
/*! namespace exports */
/*! export createConstantSourceNodeRendererFactory [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "createConstantSourceNodeRendererFactory": () => /* binding */ createConstantSourceNodeRendererFactory
/* harmony export */ });
/* harmony import */ var _helpers_is_owned_by_context__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../helpers/is-owned-by-context */ "./node_modules/standardized-audio-context/build/es2019/helpers/is-owned-by-context.js");
;
const createConstantSourceNodeRendererFactory = (connectAudioParam, createNativeConstantSourceNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode) => {
    return () => {
        const renderedNativeConstantSourceNodes = new WeakMap();
        let start = null;
        let stop = null;
        const createConstantSourceNode = async (proxy, nativeOfflineAudioContext, trace) => {
            let nativeConstantSourceNode = getNativeAudioNode(proxy);
            /*
             * If the initially used nativeConstantSourceNode was not constructed on the same OfflineAudioContext it needs to be created
             * again.
             */
            const nativeConstantSourceNodeIsOwnedByContext = (0,_helpers_is_owned_by_context__WEBPACK_IMPORTED_MODULE_0__.isOwnedByContext)(nativeConstantSourceNode, nativeOfflineAudioContext);
            if (!nativeConstantSourceNodeIsOwnedByContext) {
                const options = {
                    channelCount: nativeConstantSourceNode.channelCount,
                    channelCountMode: nativeConstantSourceNode.channelCountMode,
                    channelInterpretation: nativeConstantSourceNode.channelInterpretation,
                    offset: nativeConstantSourceNode.offset.value
                };
                nativeConstantSourceNode = createNativeConstantSourceNode(nativeOfflineAudioContext, options);
                if (start !== null) {
                    nativeConstantSourceNode.start(start);
                }
                if (stop !== null) {
                    nativeConstantSourceNode.stop(stop);
                }
            }
            renderedNativeConstantSourceNodes.set(nativeOfflineAudioContext, nativeConstantSourceNode);
            if (!nativeConstantSourceNodeIsOwnedByContext) {
                await renderAutomation(nativeOfflineAudioContext, proxy.offset, nativeConstantSourceNode.offset, trace);
            }
            else {
                await connectAudioParam(nativeOfflineAudioContext, proxy.offset, nativeConstantSourceNode.offset, trace);
            }
            await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeConstantSourceNode, trace);
            return nativeConstantSourceNode;
        };
        return {
            set start(value) {
                start = value;
            },
            set stop(value) {
                stop = value;
            },
            render(proxy, nativeOfflineAudioContext, trace) {
                const renderedNativeConstantSourceNode = renderedNativeConstantSourceNodes.get(nativeOfflineAudioContext);
                if (renderedNativeConstantSourceNode !== undefined) {
                    return Promise.resolve(renderedNativeConstantSourceNode);
                }
                return createConstantSourceNode(proxy, nativeOfflineAudioContext, trace);
            }
        };
    };
};
//# sourceMappingURL=constant-source-node-renderer-factory.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/convert-number-to-unsigned-long.js":
/*!***********************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/convert-number-to-unsigned-long.js ***!
  \***********************************************************************************************************/
/*! namespace exports */
/*! export createConvertNumberToUnsignedLong [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "createConvertNumberToUnsignedLong": () => /* binding */ createConvertNumberToUnsignedLong
/* harmony export */ });
const createConvertNumberToUnsignedLong = (unit32Array) => {
    return (value) => {
        unit32Array[0] = value;
        return unit32Array[0];
    };
};
//# sourceMappingURL=convert-number-to-unsigned-long.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/convolver-node-constructor.js":
/*!******************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/convolver-node-constructor.js ***!
  \******************************************************************************************************/
/*! namespace exports */
/*! export createConvolverNodeConstructor [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "createConvolverNodeConstructor": () => /* binding */ createConvolverNodeConstructor
/* harmony export */ });
const DEFAULT_OPTIONS = {
    buffer: null,
    channelCount: 2,
    channelCountMode: 'clamped-max',
    channelInterpretation: 'speakers',
    disableNormalization: false
};
const createConvolverNodeConstructor = (audioNodeConstructor, createConvolverNodeRenderer, createNativeConvolverNode, getNativeContext, isNativeOfflineAudioContext, setAudioNodeTailTime) => {
    return class ConvolverNode extends audioNodeConstructor {
        constructor(context, options) {
            const nativeContext = getNativeContext(context);
            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };
            const nativeConvolverNode = createNativeConvolverNode(nativeContext, mergedOptions);
            const isOffline = isNativeOfflineAudioContext(nativeContext);
            const convolverNodeRenderer = (isOffline ? createConvolverNodeRenderer() : null);
            super(context, false, nativeConvolverNode, convolverNodeRenderer);
            this._isBufferNullified = false;
            this._nativeConvolverNode = nativeConvolverNode;
            if (mergedOptions.buffer !== null) {
                setAudioNodeTailTime(this, mergedOptions.buffer.duration);
            }
        }
        get buffer() {
            if (this._isBufferNullified) {
                return null;
            }
            return this._nativeConvolverNode.buffer;
        }
        set buffer(value) {
            this._nativeConvolverNode.buffer = value;
            // Bug #115: Safari does not allow to set the buffer to null.
            if (value === null && this._nativeConvolverNode.buffer !== null) {
                const nativeContext = this._nativeConvolverNode.context;
                this._nativeConvolverNode.buffer = nativeContext.createBuffer(1, 1, 44100);
                this._isBufferNullified = true;
                setAudioNodeTailTime(this, 0);
            }
            else {
                this._isBufferNullified = false;
                setAudioNodeTailTime(this, this._nativeConvolverNode.buffer === null ? 0 : this._nativeConvolverNode.buffer.duration);
            }
        }
        get normalize() {
            return this._nativeConvolverNode.normalize;
        }
        set normalize(value) {
            this._nativeConvolverNode.normalize = value;
        }
    };
};
//# sourceMappingURL=convolver-node-constructor.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/convolver-node-renderer-factory.js":
/*!***********************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/convolver-node-renderer-factory.js ***!
  \***********************************************************************************************************/
/*! namespace exports */
/*! export createConvolverNodeRendererFactory [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "createConvolverNodeRendererFactory": () => /* binding */ createConvolverNodeRendererFactory
/* harmony export */ });
/* harmony import */ var _guards_native_audio_node_faker__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../guards/native-audio-node-faker */ "./node_modules/standardized-audio-context/build/es2019/guards/native-audio-node-faker.js");
/* harmony import */ var _helpers_is_owned_by_context__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../helpers/is-owned-by-context */ "./node_modules/standardized-audio-context/build/es2019/helpers/is-owned-by-context.js");
;

const createConvolverNodeRendererFactory = (createNativeConvolverNode, getNativeAudioNode, renderInputsOfAudioNode) => {
    return () => {
        const renderedNativeConvolverNodes = new WeakMap();
        const createConvolverNode = async (proxy, nativeOfflineAudioContext, trace) => {
            let nativeConvolverNode = getNativeAudioNode(proxy);
            // If the initially used nativeConvolverNode was not constructed on the same OfflineAudioContext it needs to be created again.
            const nativeConvolverNodeIsOwnedByContext = (0,_helpers_is_owned_by_context__WEBPACK_IMPORTED_MODULE_1__.isOwnedByContext)(nativeConvolverNode, nativeOfflineAudioContext);
            if (!nativeConvolverNodeIsOwnedByContext) {
                const options = {
                    buffer: nativeConvolverNode.buffer,
                    channelCount: nativeConvolverNode.channelCount,
                    channelCountMode: nativeConvolverNode.channelCountMode,
                    channelInterpretation: nativeConvolverNode.channelInterpretation,
                    disableNormalization: !nativeConvolverNode.normalize
                };
                nativeConvolverNode = createNativeConvolverNode(nativeOfflineAudioContext, options);
            }
            renderedNativeConvolverNodes.set(nativeOfflineAudioContext, nativeConvolverNode);
            if ((0,_guards_native_audio_node_faker__WEBPACK_IMPORTED_MODULE_0__.isNativeAudioNodeFaker)(nativeConvolverNode)) {
                await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeConvolverNode.inputs[0], trace);
            }
            else {
                await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeConvolverNode, trace);
            }
            return nativeConvolverNode;
        };
        return {
            render(proxy, nativeOfflineAudioContext, trace) {
                const renderedNativeConvolverNode = renderedNativeConvolverNodes.get(nativeOfflineAudioContext);
                if (renderedNativeConvolverNode !== undefined) {
                    return Promise.resolve(renderedNativeConvolverNode);
                }
                return createConvolverNode(proxy, nativeOfflineAudioContext, trace);
            }
        };
    };
};
//# sourceMappingURL=convolver-node-renderer-factory.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/create-native-offline-audio-context.js":
/*!***************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/create-native-offline-audio-context.js ***!
  \***************************************************************************************************************/
/*! namespace exports */
/*! export createCreateNativeOfflineAudioContext [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "createCreateNativeOfflineAudioContext": () => /* binding */ createCreateNativeOfflineAudioContext
/* harmony export */ });
const createCreateNativeOfflineAudioContext = (createNotSupportedError, nativeOfflineAudioContextConstructor) => {
    return (numberOfChannels, length, sampleRate) => {
        if (nativeOfflineAudioContextConstructor === null) {
            throw new Error('Missing the native OfflineAudioContext constructor.');
        }
        try {
            return new nativeOfflineAudioContextConstructor(numberOfChannels, length, sampleRate);
        }
        catch (err) {
            // Bug #143, #144 & #146: Safari throws a SyntaxError when numberOfChannels, length or sampleRate are invalid.
            if (err.name === 'SyntaxError') {
                throw createNotSupportedError();
            }
            throw err;
        }
    };
};
//# sourceMappingURL=create-native-offline-audio-context.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/data-clone-error.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/data-clone-error.js ***!
  \********************************************************************************************/
/*! namespace exports */
/*! export createDataCloneError [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "createDataCloneError": () => /* binding */ createDataCloneError
/* harmony export */ });
const createDataCloneError = () => new DOMException('', 'DataCloneError');
//# sourceMappingURL=data-clone-error.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/decode-audio-data.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/decode-audio-data.js ***!
  \*********************************************************************************************/
/*! namespace exports */
/*! export createDecodeAudioData [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "createDecodeAudioData": () => /* binding */ createDecodeAudioData
/* harmony export */ });
/* harmony import */ var _helpers_detach_array_buffer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../helpers/detach-array-buffer */ "./node_modules/standardized-audio-context/build/es2019/helpers/detach-array-buffer.js");
/* harmony import */ var _helpers_wrap_audio_buffer_get_channel_data_method__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../helpers/wrap-audio-buffer-get-channel-data-method */ "./node_modules/standardized-audio-context/build/es2019/helpers/wrap-audio-buffer-get-channel-data-method.js");
;

const createDecodeAudioData = (audioBufferStore, cacheTestResult, createDataCloneError, createEncodingError, detachedArrayBuffers, getNativeContext, isNativeContext, testAudioBufferCopyChannelMethodsOutOfBoundsSupport, testPromiseSupport, wrapAudioBufferCopyChannelMethods, wrapAudioBufferCopyChannelMethodsOutOfBounds) => {
    return (anyContext, audioData) => {
        const nativeContext = isNativeContext(anyContext) ? anyContext : getNativeContext(anyContext);
        // Bug #43: Only Chrome, Edge and Opera do throw a DataCloneError.
        if (detachedArrayBuffers.has(audioData)) {
            const err = createDataCloneError();
            return Promise.reject(err);
        }
        // The audioData parameter maybe of a type which can't be added to a WeakSet.
        try {
            detachedArrayBuffers.add(audioData);
        }
        catch {
            // Ignore errors.
        }
        // Bug #21: Safari does not support promises yet.
        if (cacheTestResult(testPromiseSupport, () => testPromiseSupport(nativeContext))) {
            return nativeContext.decodeAudioData(audioData).then((audioBuffer) => {
                // Bug #157: Firefox does not allow the bufferOffset to be out-of-bounds.
                if (!cacheTestResult(testAudioBufferCopyChannelMethodsOutOfBoundsSupport, () => testAudioBufferCopyChannelMethodsOutOfBoundsSupport(audioBuffer))) {
                    wrapAudioBufferCopyChannelMethodsOutOfBounds(audioBuffer);
                }
                audioBufferStore.add(audioBuffer);
                return audioBuffer;
            });
        }
        // Bug #21: Safari does not return a Promise yet.
        return new Promise((resolve, reject) => {
            const complete = () => {
                // Bug #133: Safari does neuter the ArrayBuffer.
                try {
                    (0,_helpers_detach_array_buffer__WEBPACK_IMPORTED_MODULE_0__.detachArrayBuffer)(audioData);
                }
                catch {
                    // Ignore errors.
                }
            };
            const fail = (err) => {
                reject(err);
                complete();
            };
            // Bug #26: Safari throws a synchronous error.
            try {
                // Bug #1: Safari requires a successCallback.
                nativeContext.decodeAudioData(audioData, (audioBuffer) => {
                    // Bug #5: Safari does not support copyFromChannel() and copyToChannel().
                    // Bug #100: Safari does throw a wrong error when calling getChannelData() with an out-of-bounds value.
                    if (typeof audioBuffer.copyFromChannel !== 'function') {
                        wrapAudioBufferCopyChannelMethods(audioBuffer);
                        (0,_helpers_wrap_audio_buffer_get_channel_data_method__WEBPACK_IMPORTED_MODULE_1__.wrapAudioBufferGetChannelDataMethod)(audioBuffer);
                    }
                    audioBufferStore.add(audioBuffer);
                    complete();
                    resolve(audioBuffer);
                }, (err) => {
                    // Bug #4: Safari returns null instead of an error.
                    if (err === null) {
                        fail(createEncodingError());
                    }
                    else {
                        fail(err);
                    }
                });
            }
            catch (err) {
                fail(err);
            }
        });
    };
};
//# sourceMappingURL=decode-audio-data.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/decrement-cycle-counter.js":
/*!***************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/decrement-cycle-counter.js ***!
  \***************************************************************************************************/
/*! namespace exports */
/*! export createDecrementCycleCounter [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "createDecrementCycleCounter": () => /* binding */ createDecrementCycleCounter
/* harmony export */ });
/* harmony import */ var _guards_audio_node_output_connection__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../guards/audio-node-output-connection */ "./node_modules/standardized-audio-context/build/es2019/guards/audio-node-output-connection.js");
;
const createDecrementCycleCounter = (connectNativeAudioNodeToNativeAudioNode, cycleCounters, getAudioNodeConnections, getNativeAudioNode, getNativeAudioParam, getNativeContext, isActiveAudioNode, isNativeOfflineAudioContext) => {
    return (audioNode, count) => {
        const cycleCounter = cycleCounters.get(audioNode);
        if (cycleCounter === undefined) {
            throw new Error('Missing the expected cycle count.');
        }
        const nativeContext = getNativeContext(audioNode.context);
        const isOffline = isNativeOfflineAudioContext(nativeContext);
        if (cycleCounter === count) {
            cycleCounters.delete(audioNode);
            if (!isOffline && isActiveAudioNode(audioNode)) {
                const nativeSourceAudioNode = getNativeAudioNode(audioNode);
                const { outputs } = getAudioNodeConnections(audioNode);
                for (const output of outputs) {
                    if ((0,_guards_audio_node_output_connection__WEBPACK_IMPORTED_MODULE_0__.isAudioNodeOutputConnection)(output)) {
                        const nativeDestinationAudioNode = getNativeAudioNode(output[0]);
                        connectNativeAudioNodeToNativeAudioNode(nativeSourceAudioNode, nativeDestinationAudioNode, output[1], output[2]);
                    }
                    else {
                        const nativeDestinationAudioParam = getNativeAudioParam(output[0]);
                        nativeSourceAudioNode.connect(nativeDestinationAudioParam, output[1]);
                    }
                }
            }
        }
        else {
            cycleCounters.set(audioNode, cycleCounter - count);
        }
    };
};
//# sourceMappingURL=decrement-cycle-counter.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/delay-node-constructor.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/delay-node-constructor.js ***!
  \**************************************************************************************************/
/*! namespace exports */
/*! export createDelayNodeConstructor [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "createDelayNodeConstructor": () => /* binding */ createDelayNodeConstructor
/* harmony export */ });
const DEFAULT_OPTIONS = {
    channelCount: 2,
    channelCountMode: 'max',
    channelInterpretation: 'speakers',
    delayTime: 0,
    maxDelayTime: 1
};
const createDelayNodeConstructor = (audioNodeConstructor, createAudioParam, createDelayNodeRenderer, createNativeDelayNode, getNativeContext, isNativeOfflineAudioContext, setAudioNodeTailTime) => {
    return class DelayNode extends audioNodeConstructor {
        constructor(context, options) {
            const nativeContext = getNativeContext(context);
            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };
            const nativeDelayNode = createNativeDelayNode(nativeContext, mergedOptions);
            const isOffline = isNativeOfflineAudioContext(nativeContext);
            const delayNodeRenderer = (isOffline ? createDelayNodeRenderer(mergedOptions.maxDelayTime) : null);
            super(context, false, nativeDelayNode, delayNodeRenderer);
            this._delayTime = createAudioParam(this, isOffline, nativeDelayNode.delayTime);
            setAudioNodeTailTime(this, mergedOptions.maxDelayTime);
        }
        get delayTime() {
            return this._delayTime;
        }
    };
};
//# sourceMappingURL=delay-node-constructor.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/delay-node-renderer-factory.js":
/*!*******************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/delay-node-renderer-factory.js ***!
  \*******************************************************************************************************/
/*! namespace exports */
/*! export createDelayNodeRendererFactory [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "createDelayNodeRendererFactory": () => /* binding */ createDelayNodeRendererFactory
/* harmony export */ });
/* harmony import */ var _helpers_is_owned_by_context__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../helpers/is-owned-by-context */ "./node_modules/standardized-audio-context/build/es2019/helpers/is-owned-by-context.js");
;
const createDelayNodeRendererFactory = (connectAudioParam, createNativeDelayNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode) => {
    return (maxDelayTime) => {
        const renderedNativeDelayNodes = new WeakMap();
        const createDelayNode = async (proxy, nativeOfflineAudioContext, trace) => {
            let nativeDelayNode = getNativeAudioNode(proxy);
            // If the initially used nativeDelayNode was not constructed on the same OfflineAudioContext it needs to be created again.
            const nativeDelayNodeIsOwnedByContext = (0,_helpers_is_owned_by_context__WEBPACK_IMPORTED_MODULE_0__.isOwnedByContext)(nativeDelayNode, nativeOfflineAudioContext);
            if (!nativeDelayNodeIsOwnedByContext) {
                const options = {
                    channelCount: nativeDelayNode.channelCount,
                    channelCountMode: nativeDelayNode.channelCountMode,
                    channelInterpretation: nativeDelayNode.channelInterpretation,
                    delayTime: nativeDelayNode.delayTime.value,
                    maxDelayTime
                };
                nativeDelayNode = createNativeDelayNode(nativeOfflineAudioContext, options);
            }
            renderedNativeDelayNodes.set(nativeOfflineAudioContext, nativeDelayNode);
            if (!nativeDelayNodeIsOwnedByContext) {
                await renderAutomation(nativeOfflineAudioContext, proxy.delayTime, nativeDelayNode.delayTime, trace);
            }
            else {
                await connectAudioParam(nativeOfflineAudioContext, proxy.delayTime, nativeDelayNode.delayTime, trace);
            }
            await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeDelayNode, trace);
            return nativeDelayNode;
        };
        return {
            render(proxy, nativeOfflineAudioContext, trace) {
                const renderedNativeDelayNode = renderedNativeDelayNodes.get(nativeOfflineAudioContext);
                if (renderedNativeDelayNode !== undefined) {
                    return Promise.resolve(renderedNativeDelayNode);
                }
                return createDelayNode(proxy, nativeOfflineAudioContext, trace);
            }
        };
    };
};
//# sourceMappingURL=delay-node-renderer-factory.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/delete-active-input-connection-to-audio-node.js":
/*!************************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/delete-active-input-connection-to-audio-node.js ***!
  \************************************************************************************************************************/
/*! namespace exports */
/*! export createDeleteActiveInputConnectionToAudioNode [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "createDeleteActiveInputConnectionToAudioNode": () => /* binding */ createDeleteActiveInputConnectionToAudioNode
/* harmony export */ });
const createDeleteActiveInputConnectionToAudioNode = (pickElementFromSet) => {
    return (activeInputs, source, output, input) => {
        return pickElementFromSet(activeInputs[input], (activeInputConnection) => activeInputConnection[0] === source && activeInputConnection[1] === output);
    };
};
//# sourceMappingURL=delete-active-input-connection-to-audio-node.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/delete-unrendered-audio-worklet-node.js":
/*!****************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/delete-unrendered-audio-worklet-node.js ***!
  \****************************************************************************************************************/
/*! namespace exports */
/*! export createDeleteUnrenderedAudioWorkletNode [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "createDeleteUnrenderedAudioWorkletNode": () => /* binding */ createDeleteUnrenderedAudioWorkletNode
/* harmony export */ });
const createDeleteUnrenderedAudioWorkletNode = (getUnrenderedAudioWorkletNodes) => {
    return (nativeContext, audioWorkletNode) => {
        getUnrenderedAudioWorkletNodes(nativeContext).delete(audioWorkletNode);
    };
};
//# sourceMappingURL=delete-unrendered-audio-worklet-node.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/detect-cycles.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/detect-cycles.js ***!
  \*****************************************************************************************/
/*! namespace exports */
/*! export createDetectCycles [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "createDetectCycles": () => /* binding */ createDetectCycles
/* harmony export */ });
/* harmony import */ var _guards_audio_node__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../guards/audio-node */ "./node_modules/standardized-audio-context/build/es2019/guards/audio-node.js");
/* harmony import */ var _guards_delay_node__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../guards/delay-node */ "./node_modules/standardized-audio-context/build/es2019/guards/delay-node.js");
;

const createDetectCycles = (audioParamAudioNodeStore, getAudioNodeConnections, getValueForKey) => {
    return function detectCycles(chain, nextLink) {
        const audioNode = (0,_guards_audio_node__WEBPACK_IMPORTED_MODULE_0__.isAudioNode)(nextLink) ? nextLink : getValueForKey(audioParamAudioNodeStore, nextLink);
        if ((0,_guards_delay_node__WEBPACK_IMPORTED_MODULE_1__.isDelayNode)(audioNode)) {
            return [];
        }
        if (chain[0] === audioNode) {
            return [chain];
        }
        if (chain.includes(audioNode)) {
            return [];
        }
        const { outputs } = getAudioNodeConnections(audioNode);
        return Array.from(outputs)
            .map((outputConnection) => detectCycles([...chain, audioNode], outputConnection[0]))
            .reduce((mergedCycles, nestedCycles) => mergedCycles.concat(nestedCycles), []);
    };
};
//# sourceMappingURL=detect-cycles.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/disconnect-multiple-outputs.js":
/*!*******************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/disconnect-multiple-outputs.js ***!
  \*******************************************************************************************************/
/*! namespace exports */
/*! export createDisconnectMultipleOutputs [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "createDisconnectMultipleOutputs": () => /* binding */ createDisconnectMultipleOutputs
/* harmony export */ });
/* harmony import */ var _guards_native_audio_node__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../guards/native-audio-node */ "./node_modules/standardized-audio-context/build/es2019/guards/native-audio-node.js");
;
const getOutputAudioNodeAtIndex = (createIndexSizeError, outputAudioNodes, output) => {
    const outputAudioNode = outputAudioNodes[output];
    if (outputAudioNode === undefined) {
        throw createIndexSizeError();
    }
    return outputAudioNode;
};
const createDisconnectMultipleOutputs = (createIndexSizeError) => {
    return (outputAudioNodes, destinationOrOutput = undefined, output = undefined, input = 0) => {
        if (destinationOrOutput === undefined) {
            return outputAudioNodes.forEach((outputAudioNode) => outputAudioNode.disconnect());
        }
        if (typeof destinationOrOutput === 'number') {
            return getOutputAudioNodeAtIndex(createIndexSizeError, outputAudioNodes, destinationOrOutput).disconnect();
        }
        if ((0,_guards_native_audio_node__WEBPACK_IMPORTED_MODULE_0__.isNativeAudioNode)(destinationOrOutput)) {
            if (output === undefined) {
                return outputAudioNodes.forEach((outputAudioNode) => outputAudioNode.disconnect(destinationOrOutput));
            }
            if (input === undefined) {
                return getOutputAudioNodeAtIndex(createIndexSizeError, outputAudioNodes, output).disconnect(destinationOrOutput, 0);
            }
            return getOutputAudioNodeAtIndex(createIndexSizeError, outputAudioNodes, output).disconnect(destinationOrOutput, 0, input);
        }
        if (output === undefined) {
            return outputAudioNodes.forEach((outputAudioNode) => outputAudioNode.disconnect(destinationOrOutput));
        }
        return getOutputAudioNodeAtIndex(createIndexSizeError, outputAudioNodes, output).disconnect(destinationOrOutput, 0);
    };
};
//# sourceMappingURL=disconnect-multiple-outputs.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/dynamics-compressor-node-constructor.js":
/*!****************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/dynamics-compressor-node-constructor.js ***!
  \****************************************************************************************************************/
/*! namespace exports */
/*! export createDynamicsCompressorNodeConstructor [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "createDynamicsCompressorNodeConstructor": () => /* binding */ createDynamicsCompressorNodeConstructor
/* harmony export */ });
const DEFAULT_OPTIONS = {
    attack: 0.003,
    channelCount: 2,
    channelCountMode: 'clamped-max',
    channelInterpretation: 'speakers',
    knee: 30,
    ratio: 12,
    release: 0.25,
    threshold: -24
};
const createDynamicsCompressorNodeConstructor = (audioNodeConstructor, createAudioParam, createDynamicsCompressorNodeRenderer, createNativeDynamicsCompressorNode, createNotSupportedError, getNativeContext, isNativeOfflineAudioContext, setAudioNodeTailTime) => {
    return class DynamicsCompressorNode extends audioNodeConstructor {
        constructor(context, options) {
            const nativeContext = getNativeContext(context);
            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };
            const nativeDynamicsCompressorNode = createNativeDynamicsCompressorNode(nativeContext, mergedOptions);
            const isOffline = isNativeOfflineAudioContext(nativeContext);
            const dynamicsCompressorNodeRenderer = (isOffline ? createDynamicsCompressorNodeRenderer() : null);
            super(context, false, nativeDynamicsCompressorNode, dynamicsCompressorNodeRenderer);
            this._attack = createAudioParam(this, isOffline, nativeDynamicsCompressorNode.attack);
            this._knee = createAudioParam(this, isOffline, nativeDynamicsCompressorNode.knee);
            this._nativeDynamicsCompressorNode = nativeDynamicsCompressorNode;
            this._ratio = createAudioParam(this, isOffline, nativeDynamicsCompressorNode.ratio);
            this._release = createAudioParam(this, isOffline, nativeDynamicsCompressorNode.release);
            this._threshold = createAudioParam(this, isOffline, nativeDynamicsCompressorNode.threshold);
            setAudioNodeTailTime(this, 0.006);
        }
        get attack() {
            return this._attack;
        }
        // Bug #108: Safari allows a channelCount of three and above which is why the getter and setter needs to be overwritten here.
        get channelCount() {
            return this._nativeDynamicsCompressorNode.channelCount;
        }
        set channelCount(value) {
            const previousChannelCount = this._nativeDynamicsCompressorNode.channelCount;
            this._nativeDynamicsCompressorNode.channelCount = value;
            if (value > 2) {
                this._nativeDynamicsCompressorNode.channelCount = previousChannelCount;
                throw createNotSupportedError();
            }
        }
        /*
         * Bug #109: Only Chrome, Firefox and Opera disallow a channelCountMode of 'max' yet which is why the getter and setter needs to be
         * overwritten here.
         */
        get channelCountMode() {
            return this._nativeDynamicsCompressorNode.channelCountMode;
        }
        set channelCountMode(value) {
            const previousChannelCount = this._nativeDynamicsCompressorNode.channelCountMode;
            this._nativeDynamicsCompressorNode.channelCountMode = value;
            if (value === 'max') {
                this._nativeDynamicsCompressorNode.channelCountMode = previousChannelCount;
                throw createNotSupportedError();
            }
        }
        get knee() {
            return this._knee;
        }
        get ratio() {
            return this._ratio;
        }
        get reduction() {
            // Bug #111: Safari returns an AudioParam instead of a number.
            if (typeof this._nativeDynamicsCompressorNode.reduction.value === 'number') {
                return this._nativeDynamicsCompressorNode.reduction.value;
            }
            return this._nativeDynamicsCompressorNode.reduction;
        }
        get release() {
            return this._release;
        }
        get threshold() {
            return this._threshold;
        }
    };
};
//# sourceMappingURL=dynamics-compressor-node-constructor.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/dynamics-compressor-node-renderer-factory.js":
/*!*********************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/dynamics-compressor-node-renderer-factory.js ***!
  \*********************************************************************************************************************/
/*! namespace exports */
/*! export createDynamicsCompressorNodeRendererFactory [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "createDynamicsCompressorNodeRendererFactory": () => /* binding */ createDynamicsCompressorNodeRendererFactory
/* harmony export */ });
/* harmony import */ var _helpers_is_owned_by_context__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../helpers/is-owned-by-context */ "./node_modules/standardized-audio-context/build/es2019/helpers/is-owned-by-context.js");
;
const createDynamicsCompressorNodeRendererFactory = (connectAudioParam, createNativeDynamicsCompressorNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode) => {
    return () => {
        const renderedNativeDynamicsCompressorNodes = new WeakMap();
        const createDynamicsCompressorNode = async (proxy, nativeOfflineAudioContext, trace) => {
            let nativeDynamicsCompressorNode = getNativeAudioNode(proxy);
            /*
             * If the initially used nativeDynamicsCompressorNode was not constructed on the same OfflineAudioContext it needs to be
             * created again.
             */
            const nativeDynamicsCompressorNodeIsOwnedByContext = (0,_helpers_is_owned_by_context__WEBPACK_IMPORTED_MODULE_0__.isOwnedByContext)(nativeDynamicsCompressorNode, nativeOfflineAudioContext);
            if (!nativeDynamicsCompressorNodeIsOwnedByContext) {
                const options = {
                    attack: nativeDynamicsCompressorNode.attack.value,
                    channelCount: nativeDynamicsCompressorNode.channelCount,
                    channelCountMode: nativeDynamicsCompressorNode.channelCountMode,
                    channelInterpretation: nativeDynamicsCompressorNode.channelInterpretation,
                    knee: nativeDynamicsCompressorNode.knee.value,
                    ratio: nativeDynamicsCompressorNode.ratio.value,
                    release: nativeDynamicsCompressorNode.release.value,
                    threshold: nativeDynamicsCompressorNode.threshold.value
                };
                nativeDynamicsCompressorNode = createNativeDynamicsCompressorNode(nativeOfflineAudioContext, options);
            }
            renderedNativeDynamicsCompressorNodes.set(nativeOfflineAudioContext, nativeDynamicsCompressorNode);
            if (!nativeDynamicsCompressorNodeIsOwnedByContext) {
                await renderAutomation(nativeOfflineAudioContext, proxy.attack, nativeDynamicsCompressorNode.attack, trace);
                await renderAutomation(nativeOfflineAudioContext, proxy.knee, nativeDynamicsCompressorNode.knee, trace);
                await renderAutomation(nativeOfflineAudioContext, proxy.ratio, nativeDynamicsCompressorNode.ratio, trace);
                await renderAutomation(nativeOfflineAudioContext, proxy.release, nativeDynamicsCompressorNode.release, trace);
                await renderAutomation(nativeOfflineAudioContext, proxy.threshold, nativeDynamicsCompressorNode.threshold, trace);
            }
            else {
                await connectAudioParam(nativeOfflineAudioContext, proxy.attack, nativeDynamicsCompressorNode.attack, trace);
                await connectAudioParam(nativeOfflineAudioContext, proxy.knee, nativeDynamicsCompressorNode.knee, trace);
                await connectAudioParam(nativeOfflineAudioContext, proxy.ratio, nativeDynamicsCompressorNode.ratio, trace);
                await connectAudioParam(nativeOfflineAudioContext, proxy.release, nativeDynamicsCompressorNode.release, trace);
                await connectAudioParam(nativeOfflineAudioContext, proxy.threshold, nativeDynamicsCompressorNode.threshold, trace);
            }
            await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeDynamicsCompressorNode, trace);
            return nativeDynamicsCompressorNode;
        };
        return {
            render(proxy, nativeOfflineAudioContext, trace) {
                const renderedNativeDynamicsCompressorNode = renderedNativeDynamicsCompressorNodes.get(nativeOfflineAudioContext);
                if (renderedNativeDynamicsCompressorNode !== undefined) {
                    return Promise.resolve(renderedNativeDynamicsCompressorNode);
                }
                return createDynamicsCompressorNode(proxy, nativeOfflineAudioContext, trace);
            }
        };
    };
};
//# sourceMappingURL=dynamics-compressor-node-renderer-factory.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/encoding-error.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/encoding-error.js ***!
  \******************************************************************************************/
/*! namespace exports */
/*! export createEncodingError [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "createEncodingError": () => /* binding */ createEncodingError
/* harmony export */ });
const createEncodingError = () => new DOMException('', 'EncodingError');
//# sourceMappingURL=encoding-error.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/evaluate-source.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/evaluate-source.js ***!
  \*******************************************************************************************/
/*! namespace exports */
/*! export createEvaluateSource [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "createEvaluateSource": () => /* binding */ createEvaluateSource
/* harmony export */ });
const createEvaluateSource = (window) => {
    return (source) => new Promise((resolve, reject) => {
        if (window === null) {
            // Bug #182 Chrome, Edge and Opera do throw an instance of a SyntaxError instead of a DOMException.
            reject(new SyntaxError());
            return;
        }
        const head = window.document.head;
        if (head === null) {
            // Bug #182 Chrome, Edge and Opera do throw an instance of a SyntaxError instead of a DOMException.
            reject(new SyntaxError());
        }
        else {
            const script = window.document.createElement('script');
            // @todo Safari doesn't like URLs with a type of 'application/javascript; charset=utf-8'.
            const blob = new Blob([source], { type: 'application/javascript' });
            const url = URL.createObjectURL(blob);
            const originalOnErrorHandler = window.onerror;
            const removeErrorEventListenerAndRevokeUrl = () => {
                window.onerror = originalOnErrorHandler;
                URL.revokeObjectURL(url);
            };
            window.onerror = (message, src, lineno, colno, error) => {
                // @todo Edge thinks the source is the one of the html document.
                if (src === url || (src === window.location.href && lineno === 1 && colno === 1)) {
                    removeErrorEventListenerAndRevokeUrl();
                    reject(error);
                    return false;
                }
                if (originalOnErrorHandler !== null) {
                    return originalOnErrorHandler(message, src, lineno, colno, error);
                }
            };
            script.onerror = () => {
                removeErrorEventListenerAndRevokeUrl();
                // Bug #182 Chrome, Edge and Opera do throw an instance of a SyntaxError instead of a DOMException.
                reject(new SyntaxError());
            };
            script.onload = () => {
                removeErrorEventListenerAndRevokeUrl();
                resolve();
            };
            script.src = url;
            script.type = 'module';
            head.appendChild(script);
        }
    });
};
//# sourceMappingURL=evaluate-source.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/event-target-constructor.js":
/*!****************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/event-target-constructor.js ***!
  \****************************************************************************************************/
/*! namespace exports */
/*! export createEventTargetConstructor [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "createEventTargetConstructor": () => /* binding */ createEventTargetConstructor
/* harmony export */ });
const createEventTargetConstructor = (wrapEventListener) => {
    return class EventTarget {
        constructor(_nativeEventTarget) {
            this._nativeEventTarget = _nativeEventTarget;
            this._listeners = new WeakMap();
        }
        addEventListener(type, listener, options) {
            if (listener !== null) {
                let wrappedEventListener = this._listeners.get(listener);
                if (wrappedEventListener === undefined) {
                    wrappedEventListener = wrapEventListener(this, listener);
                    if (typeof listener === 'function') {
                        this._listeners.set(listener, wrappedEventListener);
                    }
                }
                this._nativeEventTarget.addEventListener(type, wrappedEventListener, options);
            }
        }
        dispatchEvent(event) {
            return this._nativeEventTarget.dispatchEvent(event);
        }
        removeEventListener(type, listener, options) {
            const wrappedEventListener = listener === null ? undefined : this._listeners.get(listener);
            this._nativeEventTarget.removeEventListener(type, wrappedEventListener === undefined ? null : wrappedEventListener, options);
        }
    };
};
//# sourceMappingURL=event-target-constructor.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/expose-current-frame-and-current-time.js":
/*!*****************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/expose-current-frame-and-current-time.js ***!
  \*****************************************************************************************************************/
/*! namespace exports */
/*! export createExposeCurrentFrameAndCurrentTime [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "createExposeCurrentFrameAndCurrentTime": () => /* binding */ createExposeCurrentFrameAndCurrentTime
/* harmony export */ });
const createExposeCurrentFrameAndCurrentTime = (window) => {
    return (currentTime, sampleRate, fn) => {
        Object.defineProperties(window, {
            currentFrame: {
                configurable: true,
                get() {
                    return Math.round(currentTime * sampleRate);
                }
            },
            currentTime: {
                configurable: true,
                get() {
                    return currentTime;
                }
            }
        });
        try {
            return fn();
        }
        finally {
            if (window !== null) {
                delete window.currentFrame;
                delete window.currentTime;
            }
        }
    };
};
//# sourceMappingURL=expose-current-frame-and-current-time.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/fetch-source.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/fetch-source.js ***!
  \****************************************************************************************/
/*! namespace exports */
/*! export createFetchSource [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "createFetchSource": () => /* binding */ createFetchSource
/* harmony export */ });
const createFetchSource = (createAbortError) => {
    return async (url) => {
        try {
            const response = await fetch(url);
            if (response.ok) {
                return response.text();
            }
        }
        catch {
            // Ignore errors.
        } // tslint:disable-line:no-empty
        throw createAbortError();
    };
};
//# sourceMappingURL=fetch-source.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/gain-node-constructor.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/gain-node-constructor.js ***!
  \*************************************************************************************************/
/*! namespace exports */
/*! export createGainNodeConstructor [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "createGainNodeConstructor": () => /* binding */ createGainNodeConstructor
/* harmony export */ });
/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../constants */ "./node_modules/standardized-audio-context/build/es2019/constants.js");
;
const DEFAULT_OPTIONS = {
    channelCount: 2,
    channelCountMode: 'max',
    channelInterpretation: 'speakers',
    gain: 1
};
const createGainNodeConstructor = (audioNodeConstructor, createAudioParam, createGainNodeRenderer, createNativeGainNode, getNativeContext, isNativeOfflineAudioContext) => {
    return class GainNode extends audioNodeConstructor {
        constructor(context, options) {
            const nativeContext = getNativeContext(context);
            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };
            const nativeGainNode = createNativeGainNode(nativeContext, mergedOptions);
            const isOffline = isNativeOfflineAudioContext(nativeContext);
            const gainNodeRenderer = (isOffline ? createGainNodeRenderer() : null);
            super(context, false, nativeGainNode, gainNodeRenderer);
            // Bug #74: Safari does not export the correct values for maxValue and minValue.
            this._gain = createAudioParam(this, isOffline, nativeGainNode.gain, _constants__WEBPACK_IMPORTED_MODULE_0__.MOST_POSITIVE_SINGLE_FLOAT, _constants__WEBPACK_IMPORTED_MODULE_0__.MOST_NEGATIVE_SINGLE_FLOAT);
        }
        get gain() {
            return this._gain;
        }
    };
};
//# sourceMappingURL=gain-node-constructor.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/gain-node-renderer-factory.js":
/*!******************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/gain-node-renderer-factory.js ***!
  \******************************************************************************************************/
/*! namespace exports */
/*! export createGainNodeRendererFactory [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "createGainNodeRendererFactory": () => /* binding */ createGainNodeRendererFactory
/* harmony export */ });
/* harmony import */ var _helpers_is_owned_by_context__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../helpers/is-owned-by-context */ "./node_modules/standardized-audio-context/build/es2019/helpers/is-owned-by-context.js");
;
const createGainNodeRendererFactory = (connectAudioParam, createNativeGainNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode) => {
    return () => {
        const renderedNativeGainNodes = new WeakMap();
        const createGainNode = async (proxy, nativeOfflineAudioContext, trace) => {
            let nativeGainNode = getNativeAudioNode(proxy);
            // If the initially used nativeGainNode was not constructed on the same OfflineAudioContext it needs to be created again.
            const nativeGainNodeIsOwnedByContext = (0,_helpers_is_owned_by_context__WEBPACK_IMPORTED_MODULE_0__.isOwnedByContext)(nativeGainNode, nativeOfflineAudioContext);
            if (!nativeGainNodeIsOwnedByContext) {
                const options = {
                    channelCount: nativeGainNode.channelCount,
                    channelCountMode: nativeGainNode.channelCountMode,
                    channelInterpretation: nativeGainNode.channelInterpretation,
                    gain: nativeGainNode.gain.value
                };
                nativeGainNode = createNativeGainNode(nativeOfflineAudioContext, options);
            }
            renderedNativeGainNodes.set(nativeOfflineAudioContext, nativeGainNode);
            if (!nativeGainNodeIsOwnedByContext) {
                await renderAutomation(nativeOfflineAudioContext, proxy.gain, nativeGainNode.gain, trace);
            }
            else {
                await connectAudioParam(nativeOfflineAudioContext, proxy.gain, nativeGainNode.gain, trace);
            }
            await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeGainNode, trace);
            return nativeGainNode;
        };
        return {
            render(proxy, nativeOfflineAudioContext, trace) {
                const renderedNativeGainNode = renderedNativeGainNodes.get(nativeOfflineAudioContext);
                if (renderedNativeGainNode !== undefined) {
                    return Promise.resolve(renderedNativeGainNode);
                }
                return createGainNode(proxy, nativeOfflineAudioContext, trace);
            }
        };
    };
};
//# sourceMappingURL=gain-node-renderer-factory.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/get-active-audio-worklet-node-inputs.js":
/*!****************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/get-active-audio-worklet-node-inputs.js ***!
  \****************************************************************************************************************/
/*! namespace exports */
/*! export createGetActiveAudioWorkletNodeInputs [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "createGetActiveAudioWorkletNodeInputs": () => /* binding */ createGetActiveAudioWorkletNodeInputs
/* harmony export */ });
const createGetActiveAudioWorkletNodeInputs = (activeAudioWorkletNodeInputsStore, getValueForKey) => {
    return (nativeAudioWorkletNode) => getValueForKey(activeAudioWorkletNodeInputsStore, nativeAudioWorkletNode);
};
//# sourceMappingURL=get-active-audio-worklet-node-inputs.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/get-audio-node-renderer.js":
/*!***************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/get-audio-node-renderer.js ***!
  \***************************************************************************************************/
/*! namespace exports */
/*! export createGetAudioNodeRenderer [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "createGetAudioNodeRenderer": () => /* binding */ createGetAudioNodeRenderer
/* harmony export */ });
const createGetAudioNodeRenderer = (getAudioNodeConnections) => {
    return (audioNode) => {
        const audioNodeConnections = getAudioNodeConnections(audioNode);
        if (audioNodeConnections.renderer === null) {
            throw new Error('Missing the renderer of the given AudioNode in the audio graph.');
        }
        return audioNodeConnections.renderer;
    };
};
//# sourceMappingURL=get-audio-node-renderer.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/get-audio-node-tail-time.js":
/*!****************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/get-audio-node-tail-time.js ***!
  \****************************************************************************************************/
/*! namespace exports */
/*! export createGetAudioNodeTailTime [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "createGetAudioNodeTailTime": () => /* binding */ createGetAudioNodeTailTime
/* harmony export */ });
const createGetAudioNodeTailTime = (audioNodeTailTimeStore) => {
    return (audioNode) => { var _a; return (_a = audioNodeTailTimeStore.get(audioNode)) !== null && _a !== void 0 ? _a : 0; };
};
//# sourceMappingURL=get-audio-node-tail-time.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/get-audio-param-renderer.js":
/*!****************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/get-audio-param-renderer.js ***!
  \****************************************************************************************************/
/*! namespace exports */
/*! export createGetAudioParamRenderer [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "createGetAudioParamRenderer": () => /* binding */ createGetAudioParamRenderer
/* harmony export */ });
const createGetAudioParamRenderer = (getAudioParamConnections) => {
    return (audioParam) => {
        const audioParamConnections = getAudioParamConnections(audioParam);
        if (audioParamConnections.renderer === null) {
            throw new Error('Missing the renderer of the given AudioParam in the audio graph.');
        }
        return audioParamConnections.renderer;
    };
};
//# sourceMappingURL=get-audio-param-renderer.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/get-backup-offline-audio-context.js":
/*!************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/get-backup-offline-audio-context.js ***!
  \************************************************************************************************************/
/*! namespace exports */
/*! export createGetBackupOfflineAudioContext [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "createGetBackupOfflineAudioContext": () => /* binding */ createGetBackupOfflineAudioContext
/* harmony export */ });
const createGetBackupOfflineAudioContext = (backupOfflineAudioContextStore) => {
    return (nativeContext) => {
        return backupOfflineAudioContextStore.get(nativeContext);
    };
};
//# sourceMappingURL=get-backup-offline-audio-context.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/get-native-context.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/get-native-context.js ***!
  \**********************************************************************************************/
/*! namespace exports */
/*! export createGetNativeContext [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "createGetNativeContext": () => /* binding */ createGetNativeContext
/* harmony export */ });
/* harmony import */ var _invalid_state_error__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./invalid-state-error */ "./node_modules/standardized-audio-context/build/es2019/factories/invalid-state-error.js");
;
const createGetNativeContext = (contextStore) => {
    return (context) => {
        const nativeContext = contextStore.get(context);
        if (nativeContext === undefined) {
            throw (0,_invalid_state_error__WEBPACK_IMPORTED_MODULE_0__.createInvalidStateError)();
        }
        return (nativeContext);
    };
};
//# sourceMappingURL=get-native-context.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/get-or-create-backup-offline-audio-context.js":
/*!**********************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/get-or-create-backup-offline-audio-context.js ***!
  \**********************************************************************************************************************/
/*! namespace exports */
/*! export createGetOrCreateBackupOfflineAudioContext [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "createGetOrCreateBackupOfflineAudioContext": () => /* binding */ createGetOrCreateBackupOfflineAudioContext
/* harmony export */ });
const createGetOrCreateBackupOfflineAudioContext = (backupOfflineAudioContextStore, nativeOfflineAudioContextConstructor) => {
    return (nativeContext) => {
        let backupOfflineAudioContext = backupOfflineAudioContextStore.get(nativeContext);
        if (backupOfflineAudioContext !== undefined) {
            return backupOfflineAudioContext;
        }
        if (nativeOfflineAudioContextConstructor === null) {
            throw new Error('Missing the native OfflineAudioContext constructor.');
        }
        backupOfflineAudioContext = new nativeOfflineAudioContextConstructor(1, 1, 8000);
        backupOfflineAudioContextStore.set(nativeContext, backupOfflineAudioContext);
        return backupOfflineAudioContext;
    };
};
//# sourceMappingURL=get-or-create-backup-offline-audio-context.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/get-unrendered-audio-worklet-nodes.js":
/*!**************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/get-unrendered-audio-worklet-nodes.js ***!
  \**************************************************************************************************************/
/*! namespace exports */
/*! export createGetUnrenderedAudioWorkletNodes [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "createGetUnrenderedAudioWorkletNodes": () => /* binding */ createGetUnrenderedAudioWorkletNodes
/* harmony export */ });
const createGetUnrenderedAudioWorkletNodes = (unrenderedAudioWorkletNodeStore) => {
    return (nativeContext) => {
        const unrenderedAudioWorkletNodes = unrenderedAudioWorkletNodeStore.get(nativeContext);
        if (unrenderedAudioWorkletNodes === undefined) {
            throw new Error('The context has no set of AudioWorkletNodes.');
        }
        return unrenderedAudioWorkletNodes;
    };
};
//# sourceMappingURL=get-unrendered-audio-worklet-nodes.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/iir-filter-node-constructor.js":
/*!*******************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/iir-filter-node-constructor.js ***!
  \*******************************************************************************************************/
/*! namespace exports */
/*! export createIIRFilterNodeConstructor [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "createIIRFilterNodeConstructor": () => /* binding */ createIIRFilterNodeConstructor
/* harmony export */ });
/* harmony import */ var _helpers_wrap_iir_filter_node_get_frequency_response_method__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../helpers/wrap-iir-filter-node-get-frequency-response-method */ "./node_modules/standardized-audio-context/build/es2019/helpers/wrap-iir-filter-node-get-frequency-response-method.js");
;
const DEFAULT_OPTIONS = {
    channelCount: 2,
    channelCountMode: 'max',
    channelInterpretation: 'speakers'
};
const createIIRFilterNodeConstructor = (audioNodeConstructor, createNativeIIRFilterNode, createIIRFilterNodeRenderer, getNativeContext, isNativeOfflineAudioContext, setAudioNodeTailTime) => {
    return class IIRFilterNode extends audioNodeConstructor {
        constructor(context, options) {
            const nativeContext = getNativeContext(context);
            const isOffline = isNativeOfflineAudioContext(nativeContext);
            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };
            const nativeIIRFilterNode = createNativeIIRFilterNode(nativeContext, isOffline ? null : context.baseLatency, mergedOptions);
            const iirFilterNodeRenderer = ((isOffline ? createIIRFilterNodeRenderer(mergedOptions.feedback, mergedOptions.feedforward) : null));
            super(context, false, nativeIIRFilterNode, iirFilterNodeRenderer);
            // Bug #23 & #24: FirefoxDeveloper does not throw an InvalidAccessError.
            // @todo Write a test which allows other browsers to remain unpatched.
            (0,_helpers_wrap_iir_filter_node_get_frequency_response_method__WEBPACK_IMPORTED_MODULE_0__.wrapIIRFilterNodeGetFrequencyResponseMethod)(nativeIIRFilterNode);
            this._nativeIIRFilterNode = nativeIIRFilterNode;
            // @todo Determine a meaningful tail-time instead of just using one second.
            setAudioNodeTailTime(this, 1);
        }
        getFrequencyResponse(frequencyHz, magResponse, phaseResponse) {
            return this._nativeIIRFilterNode.getFrequencyResponse(frequencyHz, magResponse, phaseResponse);
        }
    };
};
//# sourceMappingURL=iir-filter-node-constructor.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/iir-filter-node-renderer-factory.js":
/*!************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/iir-filter-node-renderer-factory.js ***!
  \************************************************************************************************************/
/*! namespace exports */
/*! export createIIRFilterNodeRendererFactory [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "createIIRFilterNodeRendererFactory": () => /* binding */ createIIRFilterNodeRendererFactory
/* harmony export */ });
/* harmony import */ var _helpers_filter_buffer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../helpers/filter-buffer */ "./node_modules/standardized-audio-context/build/es2019/helpers/filter-buffer.js");
/* harmony import */ var _helpers_is_owned_by_context__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../helpers/is-owned-by-context */ "./node_modules/standardized-audio-context/build/es2019/helpers/is-owned-by-context.js");
;

const filterFullBuffer = (renderedBuffer, nativeOfflineAudioContext, feedback, feedforward) => {
    const convertedFeedback = feedback instanceof Float64Array ? feedback : new Float64Array(feedback);
    const convertedFeedforward = feedforward instanceof Float64Array ? feedforward : new Float64Array(feedforward);
    const feedbackLength = convertedFeedback.length;
    const feedforwardLength = convertedFeedforward.length;
    const minLength = Math.min(feedbackLength, feedforwardLength);
    if (convertedFeedback[0] !== 1) {
        for (let i = 0; i < feedbackLength; i += 1) {
            convertedFeedforward[i] /= convertedFeedback[0];
        }
        for (let i = 1; i < feedforwardLength; i += 1) {
            convertedFeedback[i] /= convertedFeedback[0];
        }
    }
    const bufferLength = 32;
    const xBuffer = new Float32Array(bufferLength);
    const yBuffer = new Float32Array(bufferLength);
    const filteredBuffer = nativeOfflineAudioContext.createBuffer(renderedBuffer.numberOfChannels, renderedBuffer.length, renderedBuffer.sampleRate);
    const numberOfChannels = renderedBuffer.numberOfChannels;
    for (let i = 0; i < numberOfChannels; i += 1) {
        const input = renderedBuffer.getChannelData(i);
        const output = filteredBuffer.getChannelData(i);
        xBuffer.fill(0);
        yBuffer.fill(0);
        (0,_helpers_filter_buffer__WEBPACK_IMPORTED_MODULE_0__.filterBuffer)(convertedFeedback, feedbackLength, convertedFeedforward, feedforwardLength, minLength, xBuffer, yBuffer, 0, bufferLength, input, output);
    }
    return filteredBuffer;
};
const createIIRFilterNodeRendererFactory = (createNativeAudioBufferSourceNode, getNativeAudioNode, nativeOfflineAudioContextConstructor, renderInputsOfAudioNode, renderNativeOfflineAudioContext) => {
    return (feedback, feedforward) => {
        const renderedNativeAudioNodes = new WeakMap();
        let filteredBufferPromise = null;
        const createAudioNode = async (proxy, nativeOfflineAudioContext, trace) => {
            let nativeAudioBufferSourceNode = null;
            let nativeIIRFilterNode = getNativeAudioNode(proxy);
            // If the initially used nativeIIRFilterNode was not constructed on the same OfflineAudioContext it needs to be created again.
            const nativeIIRFilterNodeIsOwnedByContext = (0,_helpers_is_owned_by_context__WEBPACK_IMPORTED_MODULE_1__.isOwnedByContext)(nativeIIRFilterNode, nativeOfflineAudioContext);
            // Bug #9: Safari does not support IIRFilterNodes.
            if (nativeOfflineAudioContext.createIIRFilter === undefined) {
                nativeAudioBufferSourceNode = createNativeAudioBufferSourceNode(nativeOfflineAudioContext, {
                    buffer: null,
                    channelCount: 2,
                    channelCountMode: 'max',
                    channelInterpretation: 'speakers',
                    loop: false,
                    loopEnd: 0,
                    loopStart: 0,
                    playbackRate: 1
                });
            }
            else if (!nativeIIRFilterNodeIsOwnedByContext) {
                // @todo TypeScript defines the parameters of createIIRFilter() as arrays of numbers.
                nativeIIRFilterNode = nativeOfflineAudioContext.createIIRFilter(feedforward, feedback);
            }
            renderedNativeAudioNodes.set(nativeOfflineAudioContext, nativeAudioBufferSourceNode === null ? nativeIIRFilterNode : nativeAudioBufferSourceNode);
            if (nativeAudioBufferSourceNode !== null) {
                if (filteredBufferPromise === null) {
                    if (nativeOfflineAudioContextConstructor === null) {
                        throw new Error('Missing the native OfflineAudioContext constructor.');
                    }
                    const partialOfflineAudioContext = new nativeOfflineAudioContextConstructor(
                    // Bug #47: The AudioDestinationNode in Safari gets not initialized correctly.
                    proxy.context.destination.channelCount, 
                    // Bug #17: Safari does not yet expose the length.
                    proxy.context.length, nativeOfflineAudioContext.sampleRate);
                    filteredBufferPromise = (async () => {
                        await renderInputsOfAudioNode(proxy, partialOfflineAudioContext, partialOfflineAudioContext.destination, trace);
                        const renderedBuffer = await renderNativeOfflineAudioContext(partialOfflineAudioContext);
                        return filterFullBuffer(renderedBuffer, nativeOfflineAudioContext, feedback, feedforward);
                    })();
                }
                const filteredBuffer = await filteredBufferPromise;
                nativeAudioBufferSourceNode.buffer = filteredBuffer;
                nativeAudioBufferSourceNode.start(0);
                return nativeAudioBufferSourceNode;
            }
            await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeIIRFilterNode, trace);
            return nativeIIRFilterNode;
        };
        return {
            render(proxy, nativeOfflineAudioContext, trace) {
                const renderedNativeAudioNode = renderedNativeAudioNodes.get(nativeOfflineAudioContext);
                if (renderedNativeAudioNode !== undefined) {
                    return Promise.resolve(renderedNativeAudioNode);
                }
                return createAudioNode(proxy, nativeOfflineAudioContext, trace);
            }
        };
    };
};
//# sourceMappingURL=iir-filter-node-renderer-factory.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/increment-cycle-counter-factory.js":
/*!***********************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/increment-cycle-counter-factory.js ***!
  \***********************************************************************************************************/
/*! namespace exports */
/*! export createIncrementCycleCounterFactory [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "createIncrementCycleCounterFactory": () => /* binding */ createIncrementCycleCounterFactory
/* harmony export */ });
/* harmony import */ var _guards_audio_node_output_connection__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../guards/audio-node-output-connection */ "./node_modules/standardized-audio-context/build/es2019/guards/audio-node-output-connection.js");
;
const createIncrementCycleCounterFactory = (cycleCounters, disconnectNativeAudioNodeFromNativeAudioNode, getAudioNodeConnections, getNativeAudioNode, getNativeAudioParam, isActiveAudioNode) => {
    return (isOffline) => {
        return (audioNode, count) => {
            const cycleCounter = cycleCounters.get(audioNode);
            if (cycleCounter === undefined) {
                if (!isOffline && isActiveAudioNode(audioNode)) {
                    const nativeSourceAudioNode = getNativeAudioNode(audioNode);
                    const { outputs } = getAudioNodeConnections(audioNode);
                    for (const output of outputs) {
                        if ((0,_guards_audio_node_output_connection__WEBPACK_IMPORTED_MODULE_0__.isAudioNodeOutputConnection)(output)) {
                            const nativeDestinationAudioNode = getNativeAudioNode(output[0]);
                            disconnectNativeAudioNodeFromNativeAudioNode(nativeSourceAudioNode, nativeDestinationAudioNode, output[1], output[2]);
                        }
                        else {
                            const nativeDestinationAudioParam = getNativeAudioParam(output[0]);
                            nativeSourceAudioNode.disconnect(nativeDestinationAudioParam, output[1]);
                        }
                    }
                }
                cycleCounters.set(audioNode, count);
            }
            else {
                cycleCounters.set(audioNode, cycleCounter + count);
            }
        };
    };
};
//# sourceMappingURL=increment-cycle-counter-factory.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/index-size-error.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/index-size-error.js ***!
  \********************************************************************************************/
/*! namespace exports */
/*! export createIndexSizeError [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "createIndexSizeError": () => /* binding */ createIndexSizeError
/* harmony export */ });
const createIndexSizeError = () => new DOMException('', 'IndexSizeError');
//# sourceMappingURL=index-size-error.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/invalid-access-error.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/invalid-access-error.js ***!
  \************************************************************************************************/
/*! namespace exports */
/*! export createInvalidAccessError [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "createInvalidAccessError": () => /* binding */ createInvalidAccessError
/* harmony export */ });
const createInvalidAccessError = () => new DOMException('', 'InvalidAccessError');
//# sourceMappingURL=invalid-access-error.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/invalid-state-error.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/invalid-state-error.js ***!
  \***********************************************************************************************/
/*! namespace exports */
/*! export createInvalidStateError [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "createInvalidStateError": () => /* binding */ createInvalidStateError
/* harmony export */ });
const createInvalidStateError = () => new DOMException('', 'InvalidStateError');
//# sourceMappingURL=invalid-state-error.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/is-any-audio-context.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/is-any-audio-context.js ***!
  \************************************************************************************************/
/*! namespace exports */
/*! export createIsAnyAudioContext [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "createIsAnyAudioContext": () => /* binding */ createIsAnyAudioContext
/* harmony export */ });
const createIsAnyAudioContext = (contextStore, isNativeAudioContext) => {
    return (anything) => {
        const nativeContext = contextStore.get(anything);
        return isNativeAudioContext(nativeContext) || isNativeAudioContext(anything);
    };
};
//# sourceMappingURL=is-any-audio-context.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/is-any-audio-node.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/is-any-audio-node.js ***!
  \*********************************************************************************************/
/*! namespace exports */
/*! export createIsAnyAudioNode [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "createIsAnyAudioNode": () => /* binding */ createIsAnyAudioNode
/* harmony export */ });
const createIsAnyAudioNode = (audioNodeStore, isNativeAudioNode) => {
    return (anything) => audioNodeStore.has(anything) || isNativeAudioNode(anything);
};
//# sourceMappingURL=is-any-audio-node.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/is-any-audio-param.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/is-any-audio-param.js ***!
  \**********************************************************************************************/
/*! namespace exports */
/*! export createIsAnyAudioParam [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "createIsAnyAudioParam": () => /* binding */ createIsAnyAudioParam
/* harmony export */ });
const createIsAnyAudioParam = (audioParamStore, isNativeAudioParam) => {
    return (anything) => audioParamStore.has(anything) || isNativeAudioParam(anything);
};
//# sourceMappingURL=is-any-audio-param.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/is-any-offline-audio-context.js":
/*!********************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/is-any-offline-audio-context.js ***!
  \********************************************************************************************************/
/*! namespace exports */
/*! export createIsAnyOfflineAudioContext [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "createIsAnyOfflineAudioContext": () => /* binding */ createIsAnyOfflineAudioContext
/* harmony export */ });
const createIsAnyOfflineAudioContext = (contextStore, isNativeOfflineAudioContext) => {
    return (anything) => {
        const nativeContext = contextStore.get(anything);
        return isNativeOfflineAudioContext(nativeContext) || isNativeOfflineAudioContext(anything);
    };
};
//# sourceMappingURL=is-any-offline-audio-context.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/is-native-audio-context.js":
/*!***************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/is-native-audio-context.js ***!
  \***************************************************************************************************/
/*! namespace exports */
/*! export createIsNativeAudioContext [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "createIsNativeAudioContext": () => /* binding */ createIsNativeAudioContext
/* harmony export */ });
const createIsNativeAudioContext = (nativeAudioContextConstructor) => {
    return (anything) => {
        return nativeAudioContextConstructor !== null && anything instanceof nativeAudioContextConstructor;
    };
};
//# sourceMappingURL=is-native-audio-context.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/is-native-audio-node.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/is-native-audio-node.js ***!
  \************************************************************************************************/
/*! namespace exports */
/*! export createIsNativeAudioNode [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "createIsNativeAudioNode": () => /* binding */ createIsNativeAudioNode
/* harmony export */ });
const createIsNativeAudioNode = (window) => {
    return (anything) => {
        return window !== null && typeof window.AudioNode === 'function' && anything instanceof window.AudioNode;
    };
};
//# sourceMappingURL=is-native-audio-node.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/is-native-audio-param.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/is-native-audio-param.js ***!
  \*************************************************************************************************/
/*! namespace exports */
/*! export createIsNativeAudioParam [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "createIsNativeAudioParam": () => /* binding */ createIsNativeAudioParam
/* harmony export */ });
const createIsNativeAudioParam = (window) => {
    return (anything) => {
        return window !== null && typeof window.AudioParam === 'function' && anything instanceof window.AudioParam;
    };
};
//# sourceMappingURL=is-native-audio-param.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/is-native-context.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/is-native-context.js ***!
  \*********************************************************************************************/
/*! namespace exports */
/*! export createIsNativeContext [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "createIsNativeContext": () => /* binding */ createIsNativeContext
/* harmony export */ });
const createIsNativeContext = (isNativeAudioContext, isNativeOfflineAudioContext) => {
    return (anything) => {
        return isNativeAudioContext(anything) || isNativeOfflineAudioContext(anything);
    };
};
//# sourceMappingURL=is-native-context.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/is-native-offline-audio-context.js":
/*!***********************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/is-native-offline-audio-context.js ***!
  \***********************************************************************************************************/
/*! namespace exports */
/*! export createIsNativeOfflineAudioContext [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "createIsNativeOfflineAudioContext": () => /* binding */ createIsNativeOfflineAudioContext
/* harmony export */ });
const createIsNativeOfflineAudioContext = (nativeOfflineAudioContextConstructor) => {
    return (anything) => {
        return nativeOfflineAudioContextConstructor !== null && anything instanceof nativeOfflineAudioContextConstructor;
    };
};
//# sourceMappingURL=is-native-offline-audio-context.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/is-secure-context.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/is-secure-context.js ***!
  \*********************************************************************************************/
/*! namespace exports */
/*! export createIsSecureContext [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "createIsSecureContext": () => /* binding */ createIsSecureContext
/* harmony export */ });
const createIsSecureContext = (window) => window !== null && window.isSecureContext;
//# sourceMappingURL=is-secure-context.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/is-supported-promise.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/is-supported-promise.js ***!
  \************************************************************************************************/
/*! namespace exports */
/*! export createIsSupportedPromise [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "createIsSupportedPromise": () => /* binding */ createIsSupportedPromise
/* harmony export */ });
const createIsSupportedPromise = async (cacheTestResult, testAudioBufferCopyChannelMethodsSubarraySupport, testAudioContextCloseMethodSupport, testAudioContextDecodeAudioDataMethodTypeErrorSupport, testAudioContextOptionsSupport, testAudioNodeConnectMethodSupport, testAudioWorkletProcessorNoOutputsSupport, testChannelMergerNodeChannelCountSupport, testConstantSourceNodeAccurateSchedulingSupport, testConvolverNodeBufferReassignabilitySupport, testConvolverNodeChannelCountSupport, testDomExceptionContrucorSupport, testIsSecureContextSupport, testMediaStreamAudioSourceNodeMediaStreamWithoutAudioTrackSupport, testStereoPannerNodeDefaultValueSupport, testTransferablesSupport) => {
    if (cacheTestResult(testAudioBufferCopyChannelMethodsSubarraySupport, testAudioBufferCopyChannelMethodsSubarraySupport) &&
        cacheTestResult(testAudioContextCloseMethodSupport, testAudioContextCloseMethodSupport) &&
        cacheTestResult(testAudioContextOptionsSupport, testAudioContextOptionsSupport) &&
        cacheTestResult(testAudioNodeConnectMethodSupport, testAudioNodeConnectMethodSupport) &&
        cacheTestResult(testChannelMergerNodeChannelCountSupport, testChannelMergerNodeChannelCountSupport) &&
        cacheTestResult(testConstantSourceNodeAccurateSchedulingSupport, testConstantSourceNodeAccurateSchedulingSupport) &&
        cacheTestResult(testConvolverNodeBufferReassignabilitySupport, testConvolverNodeBufferReassignabilitySupport) &&
        cacheTestResult(testConvolverNodeChannelCountSupport, testConvolverNodeChannelCountSupport) &&
        cacheTestResult(testDomExceptionContrucorSupport, testDomExceptionContrucorSupport) &&
        cacheTestResult(testIsSecureContextSupport, testIsSecureContextSupport) &&
        cacheTestResult(testMediaStreamAudioSourceNodeMediaStreamWithoutAudioTrackSupport, testMediaStreamAudioSourceNodeMediaStreamWithoutAudioTrackSupport)) {
        const results = await Promise.all([
            cacheTestResult(testAudioContextDecodeAudioDataMethodTypeErrorSupport, testAudioContextDecodeAudioDataMethodTypeErrorSupport),
            cacheTestResult(testAudioWorkletProcessorNoOutputsSupport, testAudioWorkletProcessorNoOutputsSupport),
            cacheTestResult(testStereoPannerNodeDefaultValueSupport, testStereoPannerNodeDefaultValueSupport),
            cacheTestResult(testTransferablesSupport, testTransferablesSupport)
        ]);
        return results.every((result) => result);
    }
    return false;
};
//# sourceMappingURL=is-supported-promise.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/media-element-audio-source-node-constructor.js":
/*!***********************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/media-element-audio-source-node-constructor.js ***!
  \***********************************************************************************************************************/
/*! namespace exports */
/*! export createMediaElementAudioSourceNodeConstructor [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "createMediaElementAudioSourceNodeConstructor": () => /* binding */ createMediaElementAudioSourceNodeConstructor
/* harmony export */ });
const createMediaElementAudioSourceNodeConstructor = (audioNodeConstructor, createNativeMediaElementAudioSourceNode, getNativeContext, isNativeOfflineAudioContext) => {
    return class MediaElementAudioSourceNode extends audioNodeConstructor {
        constructor(context, options) {
            const nativeContext = getNativeContext(context);
            const nativeMediaElementAudioSourceNode = createNativeMediaElementAudioSourceNode(nativeContext, options);
            // Bug #171: Safari allows to create a MediaElementAudioSourceNode with an OfflineAudioContext.
            if (isNativeOfflineAudioContext(nativeContext)) {
                throw TypeError();
            }
            super(context, true, nativeMediaElementAudioSourceNode, null);
            this._nativeMediaElementAudioSourceNode = nativeMediaElementAudioSourceNode;
        }
        get mediaElement() {
            return this._nativeMediaElementAudioSourceNode.mediaElement;
        }
    };
};
//# sourceMappingURL=media-element-audio-source-node-constructor.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/media-stream-audio-destination-node-constructor.js":
/*!***************************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/media-stream-audio-destination-node-constructor.js ***!
  \***************************************************************************************************************************/
/*! namespace exports */
/*! export createMediaStreamAudioDestinationNodeConstructor [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "createMediaStreamAudioDestinationNodeConstructor": () => /* binding */ createMediaStreamAudioDestinationNodeConstructor
/* harmony export */ });
const DEFAULT_OPTIONS = {
    channelCount: 2,
    channelCountMode: 'explicit',
    channelInterpretation: 'speakers'
};
const createMediaStreamAudioDestinationNodeConstructor = (audioNodeConstructor, createNativeMediaStreamAudioDestinationNode, getNativeContext, isNativeOfflineAudioContext) => {
    return class MediaStreamAudioDestinationNode extends audioNodeConstructor {
        constructor(context, options) {
            const nativeContext = getNativeContext(context);
            // Bug #173: Safari allows to create a MediaStreamAudioDestinationNode with an OfflineAudioContext.
            if (isNativeOfflineAudioContext(nativeContext)) {
                throw new TypeError();
            }
            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };
            const nativeMediaStreamAudioDestinationNode = createNativeMediaStreamAudioDestinationNode(nativeContext, mergedOptions);
            super(context, false, nativeMediaStreamAudioDestinationNode, null);
            this._nativeMediaStreamAudioDestinationNode = nativeMediaStreamAudioDestinationNode;
        }
        get stream() {
            return this._nativeMediaStreamAudioDestinationNode.stream;
        }
    };
};
//# sourceMappingURL=media-stream-audio-destination-node-constructor.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/media-stream-audio-source-node-constructor.js":
/*!**********************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/media-stream-audio-source-node-constructor.js ***!
  \**********************************************************************************************************************/
/*! namespace exports */
/*! export createMediaStreamAudioSourceNodeConstructor [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "createMediaStreamAudioSourceNodeConstructor": () => /* binding */ createMediaStreamAudioSourceNodeConstructor
/* harmony export */ });
const createMediaStreamAudioSourceNodeConstructor = (audioNodeConstructor, createNativeMediaStreamAudioSourceNode, getNativeContext, isNativeOfflineAudioContext) => {
    return class MediaStreamAudioSourceNode extends audioNodeConstructor {
        constructor(context, options) {
            const nativeContext = getNativeContext(context);
            const nativeMediaStreamAudioSourceNode = createNativeMediaStreamAudioSourceNode(nativeContext, options);
            // Bug #172: Safari allows to create a MediaStreamAudioSourceNode with an OfflineAudioContext.
            if (isNativeOfflineAudioContext(nativeContext)) {
                throw new TypeError();
            }
            super(context, true, nativeMediaStreamAudioSourceNode, null);
            this._nativeMediaStreamAudioSourceNode = nativeMediaStreamAudioSourceNode;
        }
        get mediaStream() {
            return this._nativeMediaStreamAudioSourceNode.mediaStream;
        }
    };
};
//# sourceMappingURL=media-stream-audio-source-node-constructor.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/media-stream-track-audio-source-node-constructor.js":
/*!****************************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/media-stream-track-audio-source-node-constructor.js ***!
  \****************************************************************************************************************************/
/*! namespace exports */
/*! export createMediaStreamTrackAudioSourceNodeConstructor [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "createMediaStreamTrackAudioSourceNodeConstructor": () => /* binding */ createMediaStreamTrackAudioSourceNodeConstructor
/* harmony export */ });
const createMediaStreamTrackAudioSourceNodeConstructor = (audioNodeConstructor, createNativeMediaStreamTrackAudioSourceNode, getNativeContext) => {
    return class MediaStreamTrackAudioSourceNode extends audioNodeConstructor {
        constructor(context, options) {
            const nativeContext = getNativeContext(context);
            const nativeMediaStreamTrackAudioSourceNode = createNativeMediaStreamTrackAudioSourceNode(nativeContext, options);
            super(context, true, nativeMediaStreamTrackAudioSourceNode, null);
        }
    };
};
//# sourceMappingURL=media-stream-track-audio-source-node-constructor.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/minimal-audio-context-constructor.js":
/*!*************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/minimal-audio-context-constructor.js ***!
  \*************************************************************************************************************/
/*! namespace exports */
/*! export createMinimalAudioContextConstructor [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "createMinimalAudioContextConstructor": () => /* binding */ createMinimalAudioContextConstructor
/* harmony export */ });
/* harmony import */ var _helpers_deactivate_audio_graph__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../helpers/deactivate-audio-graph */ "./node_modules/standardized-audio-context/build/es2019/helpers/deactivate-audio-graph.js");
/* harmony import */ var _helpers_is_valid_latency_hint__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../helpers/is-valid-latency-hint */ "./node_modules/standardized-audio-context/build/es2019/helpers/is-valid-latency-hint.js");
;

const createMinimalAudioContextConstructor = (createInvalidStateError, createNotSupportedError, createUnknownError, minimalBaseAudioContextConstructor, nativeAudioContextConstructor) => {
    return class MinimalAudioContext extends minimalBaseAudioContextConstructor {
        constructor(options = {}) {
            if (nativeAudioContextConstructor === null) {
                throw new Error('Missing the native AudioContext constructor.');
            }
            const nativeAudioContext = new nativeAudioContextConstructor(options);
            // Bug #131 Safari returns null when there are four other AudioContexts running already.
            if (nativeAudioContext === null) {
                throw createUnknownError();
            }
            // Bug #51 Only Chrome Edge, and Opera throw an error if the given latencyHint is invalid.
            if (!(0,_helpers_is_valid_latency_hint__WEBPACK_IMPORTED_MODULE_1__.isValidLatencyHint)(options.latencyHint)) {
                throw new TypeError(`The provided value '${options.latencyHint}' is not a valid enum value of type AudioContextLatencyCategory.`);
            }
            // Bug #150 Safari does not support setting the sampleRate.
            if (options.sampleRate !== undefined && nativeAudioContext.sampleRate !== options.sampleRate) {
                throw createNotSupportedError();
            }
            super(nativeAudioContext, 2);
            const { latencyHint } = options;
            const { sampleRate } = nativeAudioContext;
            // @todo The values for 'balanced', 'interactive' and 'playback' are just copied from Chrome's implementation.
            this._baseLatency =
                typeof nativeAudioContext.baseLatency === 'number'
                    ? nativeAudioContext.baseLatency
                    : latencyHint === 'balanced'
                        ? 512 / sampleRate
                        : latencyHint === 'interactive' || latencyHint === undefined
                            ? 256 / sampleRate
                            : latencyHint === 'playback'
                                ? 1024 / sampleRate
                                : /*
                                   * @todo The min (256) and max (16384) values are taken from the allowed bufferSize values of a
                                   * ScriptProcessorNode.
                                   */
                                    (Math.max(2, Math.min(128, Math.round((latencyHint * sampleRate) / 128))) * 128) / sampleRate;
            this._nativeAudioContext = nativeAudioContext;
            // Bug #188: Safari will set the context's state to 'interrupted' in case the user switches tabs.
            if (nativeAudioContextConstructor.name === 'webkitAudioContext') {
                this._nativeGainNode = nativeAudioContext.createGain();
                this._nativeOscillatorNode = nativeAudioContext.createOscillator();
                this._nativeGainNode.gain.value = 1e-37;
                this._nativeOscillatorNode.connect(this._nativeGainNode).connect(nativeAudioContext.destination);
                this._nativeOscillatorNode.start();
            }
            else {
                this._nativeGainNode = null;
                this._nativeOscillatorNode = null;
            }
            this._state = null;
            /*
             * Bug #34: Chrome, Edge and Opera pretend to be running right away, but fire an onstatechange event when the state actually
             * changes to 'running'.
             */
            if (nativeAudioContext.state === 'running') {
                this._state = 'suspended';
                const revokeState = () => {
                    if (this._state === 'suspended') {
                        this._state = null;
                    }
                    nativeAudioContext.removeEventListener('statechange', revokeState);
                };
                nativeAudioContext.addEventListener('statechange', revokeState);
            }
        }
        get baseLatency() {
            return this._baseLatency;
        }
        get state() {
            return this._state !== null ? this._state : this._nativeAudioContext.state;
        }
        close() {
            // Bug #35: Firefox does not throw an error if the AudioContext was closed before.
            if (this.state === 'closed') {
                return this._nativeAudioContext.close().then(() => {
                    throw createInvalidStateError();
                });
            }
            // Bug #34: If the state was set to suspended before it should be revoked now.
            if (this._state === 'suspended') {
                this._state = null;
            }
            return this._nativeAudioContext.close().then(() => {
                if (this._nativeGainNode !== null && this._nativeOscillatorNode !== null) {
                    this._nativeOscillatorNode.stop();
                    this._nativeGainNode.disconnect();
                    this._nativeOscillatorNode.disconnect();
                }
                (0,_helpers_deactivate_audio_graph__WEBPACK_IMPORTED_MODULE_0__.deactivateAudioGraph)(this);
            });
        }
        resume() {
            if (this._state === 'suspended') {
                return new Promise((resolve, reject) => {
                    const resolvePromise = () => {
                        this._nativeAudioContext.removeEventListener('statechange', resolvePromise);
                        if (this._nativeAudioContext.state === 'running') {
                            resolve();
                        }
                        else {
                            this.resume().then(resolve, reject);
                        }
                    };
                    this._nativeAudioContext.addEventListener('statechange', resolvePromise);
                });
            }
            return this._nativeAudioContext.resume().catch((err) => {
                // Bug #55: Chrome, Edge and Opera do throw an InvalidAccessError instead of an InvalidStateError.
                // Bug #56: Safari invokes the catch handler but without an error.
                if (err === undefined || err.code === 15) {
                    throw createInvalidStateError();
                }
                throw err;
            });
        }
        suspend() {
            return this._nativeAudioContext.suspend().catch((err) => {
                // Bug #56: Safari invokes the catch handler but without an error.
                if (err === undefined) {
                    throw createInvalidStateError();
                }
                throw err;
            });
        }
    };
};
//# sourceMappingURL=minimal-audio-context-constructor.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/minimal-base-audio-context-constructor.js":
/*!******************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/minimal-base-audio-context-constructor.js ***!
  \******************************************************************************************************************/
/*! namespace exports */
/*! export createMinimalBaseAudioContextConstructor [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "createMinimalBaseAudioContextConstructor": () => /* binding */ createMinimalBaseAudioContextConstructor
/* harmony export */ });
/* harmony import */ var _globals__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../globals */ "./node_modules/standardized-audio-context/build/es2019/globals.js");
;
const createMinimalBaseAudioContextConstructor = (audioDestinationNodeConstructor, createAudioListener, eventTargetConstructor, isNativeOfflineAudioContext, unrenderedAudioWorkletNodeStore, wrapEventListener) => {
    return class MinimalBaseAudioContext extends eventTargetConstructor {
        constructor(_nativeContext, numberOfChannels) {
            super(_nativeContext);
            this._nativeContext = _nativeContext;
            _globals__WEBPACK_IMPORTED_MODULE_0__.CONTEXT_STORE.set(this, _nativeContext);
            if (isNativeOfflineAudioContext(_nativeContext)) {
                unrenderedAudioWorkletNodeStore.set(_nativeContext, new Set());
            }
            this._destination = new audioDestinationNodeConstructor(this, numberOfChannels);
            this._listener = createAudioListener(this, _nativeContext);
            this._onstatechange = null;
        }
        get currentTime() {
            return this._nativeContext.currentTime;
        }
        get destination() {
            return this._destination;
        }
        get listener() {
            return this._listener;
        }
        get onstatechange() {
            return this._onstatechange;
        }
        set onstatechange(value) {
            const wrappedListener = typeof value === 'function' ? wrapEventListener(this, value) : null;
            this._nativeContext.onstatechange = wrappedListener;
            const nativeOnStateChange = this._nativeContext.onstatechange;
            this._onstatechange =
                nativeOnStateChange !== null && nativeOnStateChange === wrappedListener
                    ? value
                    : nativeOnStateChange;
        }
        get sampleRate() {
            return this._nativeContext.sampleRate;
        }
        get state() {
            return this._nativeContext.state;
        }
    };
};
//# sourceMappingURL=minimal-base-audio-context-constructor.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/minimal-offline-audio-context-constructor.js":
/*!*********************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/minimal-offline-audio-context-constructor.js ***!
  \*********************************************************************************************************************/
/*! namespace exports */
/*! export createMinimalOfflineAudioContextConstructor [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "createMinimalOfflineAudioContextConstructor": () => /* binding */ createMinimalOfflineAudioContextConstructor
/* harmony export */ });
/* harmony import */ var _helpers_deactivate_audio_graph__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../helpers/deactivate-audio-graph */ "./node_modules/standardized-audio-context/build/es2019/helpers/deactivate-audio-graph.js");
/* harmony import */ var _helpers_test_promise_support__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../helpers/test-promise-support */ "./node_modules/standardized-audio-context/build/es2019/helpers/test-promise-support.js");
;

const DEFAULT_OPTIONS = {
    numberOfChannels: 1
};
const createMinimalOfflineAudioContextConstructor = (cacheTestResult, createInvalidStateError, createNativeOfflineAudioContext, minimalBaseAudioContextConstructor, startRendering) => {
    return class MinimalOfflineAudioContext extends minimalBaseAudioContextConstructor {
        constructor(options) {
            const { length, numberOfChannels, sampleRate } = { ...DEFAULT_OPTIONS, ...options };
            const nativeOfflineAudioContext = createNativeOfflineAudioContext(numberOfChannels, length, sampleRate);
            // #21 Safari does not support promises and therefore would fire the statechange event before the promise can be resolved.
            if (!cacheTestResult(_helpers_test_promise_support__WEBPACK_IMPORTED_MODULE_1__.testPromiseSupport, () => (0,_helpers_test_promise_support__WEBPACK_IMPORTED_MODULE_1__.testPromiseSupport)(nativeOfflineAudioContext))) {
                nativeOfflineAudioContext.addEventListener('statechange', (() => {
                    let i = 0;
                    const delayStateChangeEvent = (event) => {
                        if (this._state === 'running') {
                            if (i > 0) {
                                nativeOfflineAudioContext.removeEventListener('statechange', delayStateChangeEvent);
                                event.stopImmediatePropagation();
                                this._waitForThePromiseToSettle(event);
                            }
                            else {
                                i += 1;
                            }
                        }
                    };
                    return delayStateChangeEvent;
                })());
            }
            super(nativeOfflineAudioContext, numberOfChannels);
            this._length = length;
            this._nativeOfflineAudioContext = nativeOfflineAudioContext;
            this._state = null;
        }
        get length() {
            // Bug #17: Safari does not yet expose the length.
            if (this._nativeOfflineAudioContext.length === undefined) {
                return this._length;
            }
            return this._nativeOfflineAudioContext.length;
        }
        get state() {
            return this._state === null ? this._nativeOfflineAudioContext.state : this._state;
        }
        startRendering() {
            /*
             * Bug #9 & #59: It is theoretically possible that startRendering() will first render a partialOfflineAudioContext. Therefore
             * the state of the nativeOfflineAudioContext might no transition to running immediately.
             */
            if (this._state === 'running') {
                return Promise.reject(createInvalidStateError());
            }
            this._state = 'running';
            return startRendering(this.destination, this._nativeOfflineAudioContext).finally(() => {
                this._state = null;
                (0,_helpers_deactivate_audio_graph__WEBPACK_IMPORTED_MODULE_0__.deactivateAudioGraph)(this);
            });
        }
        _waitForThePromiseToSettle(event) {
            if (this._state === null) {
                this._nativeOfflineAudioContext.dispatchEvent(event);
            }
            else {
                setTimeout(() => this._waitForThePromiseToSettle(event));
            }
        }
    };
};
//# sourceMappingURL=minimal-offline-audio-context-constructor.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/monitor-connections.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/monitor-connections.js ***!
  \***********************************************************************************************/
/*! namespace exports */
/*! export createMonitorConnections [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "createMonitorConnections": () => /* binding */ createMonitorConnections
/* harmony export */ });
const createMonitorConnections = (insertElementInSet, isNativeAudioNode) => {
    return (nativeAudioNode, whenConnected, whenDisconnected) => {
        const connections = new Set();
        nativeAudioNode.connect = ((connect) => {
            // tslint:disable-next-line:invalid-void
            return (destination, output = 0, input = 0) => {
                const wasDisconnected = connections.size === 0;
                if (isNativeAudioNode(destination)) {
                    // @todo TypeScript cannot infer the overloaded signature with 3 arguments yet.
                    connect.call(nativeAudioNode, destination, output, input);
                    insertElementInSet(connections, [destination, output, input], (connection) => connection[0] === destination && connection[1] === output && connection[2] === input, true);
                    if (wasDisconnected) {
                        whenConnected();
                    }
                    return destination;
                }
                connect.call(nativeAudioNode, destination, output);
                insertElementInSet(connections, [destination, output], (connection) => connection[0] === destination && connection[1] === output, true);
                if (wasDisconnected) {
                    whenConnected();
                }
                return;
            };
        })(nativeAudioNode.connect);
        nativeAudioNode.disconnect = ((disconnect) => {
            return (destinationOrOutput, output, input) => {
                const wasConnected = connections.size > 0;
                if (destinationOrOutput === undefined) {
                    disconnect.apply(nativeAudioNode);
                    connections.clear();
                }
                else if (typeof destinationOrOutput === 'number') {
                    // @todo TypeScript cannot infer the overloaded signature with 1 argument yet.
                    disconnect.call(nativeAudioNode, destinationOrOutput);
                    for (const connection of connections) {
                        if (connection[1] === destinationOrOutput) {
                            connections.delete(connection);
                        }
                    }
                }
                else {
                    if (isNativeAudioNode(destinationOrOutput)) {
                        // @todo TypeScript cannot infer the overloaded signature with 3 arguments yet.
                        disconnect.call(nativeAudioNode, destinationOrOutput, output, input);
                    }
                    else {
                        // @todo TypeScript cannot infer the overloaded signature with 2 arguments yet.
                        disconnect.call(nativeAudioNode, destinationOrOutput, output);
                    }
                    for (const connection of connections) {
                        if (connection[0] === destinationOrOutput &&
                            (output === undefined || connection[1] === output) &&
                            (input === undefined || connection[2] === input)) {
                            connections.delete(connection);
                        }
                    }
                }
                const isDisconnected = connections.size === 0;
                if (wasConnected && isDisconnected) {
                    whenDisconnected();
                }
            };
        })(nativeAudioNode.disconnect);
        return nativeAudioNode;
    };
};
//# sourceMappingURL=monitor-connections.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/native-analyser-node-factory.js":
/*!********************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/native-analyser-node-factory.js ***!
  \********************************************************************************************************/
/*! namespace exports */
/*! export createNativeAnalyserNodeFactory [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "createNativeAnalyserNodeFactory": () => /* binding */ createNativeAnalyserNodeFactory
/* harmony export */ });
/* harmony import */ var _helpers_assign_native_audio_node_option__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../helpers/assign-native-audio-node-option */ "./node_modules/standardized-audio-context/build/es2019/helpers/assign-native-audio-node-option.js");
/* harmony import */ var _helpers_assign_native_audio_node_options__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../helpers/assign-native-audio-node-options */ "./node_modules/standardized-audio-context/build/es2019/helpers/assign-native-audio-node-options.js");
/* harmony import */ var _helpers_test_analyser_node_get_float_time_domain_data_method_support__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../helpers/test-analyser-node-get-float-time-domain-data-method-support */ "./node_modules/standardized-audio-context/build/es2019/helpers/test-analyser-node-get-float-time-domain-data-method-support.js");
/* harmony import */ var _helpers_wrap_analyser_node_get_float_time_domain_data_method__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../helpers/wrap-analyser-node-get-float-time-domain-data-method */ "./node_modules/standardized-audio-context/build/es2019/helpers/wrap-analyser-node-get-float-time-domain-data-method.js");
;



const createNativeAnalyserNodeFactory = (cacheTestResult, createIndexSizeError) => {
    return (nativeContext, options) => {
        const nativeAnalyserNode = nativeContext.createAnalyser();
        // Bug #37: Firefox does not create an AnalyserNode with the default properties.
        (0,_helpers_assign_native_audio_node_options__WEBPACK_IMPORTED_MODULE_1__.assignNativeAudioNodeOptions)(nativeAnalyserNode, options);
        // Bug #118: Safari does not throw an error if maxDecibels is not more than minDecibels.
        if (!(options.maxDecibels > options.minDecibels)) {
            throw createIndexSizeError();
        }
        (0,_helpers_assign_native_audio_node_option__WEBPACK_IMPORTED_MODULE_0__.assignNativeAudioNodeOption)(nativeAnalyserNode, options, 'fftSize');
        (0,_helpers_assign_native_audio_node_option__WEBPACK_IMPORTED_MODULE_0__.assignNativeAudioNodeOption)(nativeAnalyserNode, options, 'maxDecibels');
        (0,_helpers_assign_native_audio_node_option__WEBPACK_IMPORTED_MODULE_0__.assignNativeAudioNodeOption)(nativeAnalyserNode, options, 'minDecibels');
        (0,_helpers_assign_native_audio_node_option__WEBPACK_IMPORTED_MODULE_0__.assignNativeAudioNodeOption)(nativeAnalyserNode, options, 'smoothingTimeConstant');
        // Bug #36: Safari does not support getFloatTimeDomainData() yet.
        if (!cacheTestResult(_helpers_test_analyser_node_get_float_time_domain_data_method_support__WEBPACK_IMPORTED_MODULE_2__.testAnalyserNodeGetFloatTimeDomainDataMethodSupport, () => (0,_helpers_test_analyser_node_get_float_time_domain_data_method_support__WEBPACK_IMPORTED_MODULE_2__.testAnalyserNodeGetFloatTimeDomainDataMethodSupport)(nativeAnalyserNode))) {
            (0,_helpers_wrap_analyser_node_get_float_time_domain_data_method__WEBPACK_IMPORTED_MODULE_3__.wrapAnalyserNodeGetFloatTimeDomainDataMethod)(nativeAnalyserNode);
        }
        return nativeAnalyserNode;
    };
};
//# sourceMappingURL=native-analyser-node-factory.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/native-audio-buffer-constructor.js":
/*!***********************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/native-audio-buffer-constructor.js ***!
  \***********************************************************************************************************/
/*! namespace exports */
/*! export createNativeAudioBufferConstructor [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "createNativeAudioBufferConstructor": () => /* binding */ createNativeAudioBufferConstructor
/* harmony export */ });
const createNativeAudioBufferConstructor = (window) => {
    if (window === null) {
        return null;
    }
    if (window.hasOwnProperty('AudioBuffer')) {
        return window.AudioBuffer;
    }
    return null;
};
//# sourceMappingURL=native-audio-buffer-constructor.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/native-audio-buffer-source-node-factory.js":
/*!*******************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/native-audio-buffer-source-node-factory.js ***!
  \*******************************************************************************************************************/
/*! namespace exports */
/*! export createNativeAudioBufferSourceNodeFactory [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "createNativeAudioBufferSourceNodeFactory": () => /* binding */ createNativeAudioBufferSourceNodeFactory
/* harmony export */ });
/* harmony import */ var _helpers_assign_native_audio_node_audio_param_value__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../helpers/assign-native-audio-node-audio-param-value */ "./node_modules/standardized-audio-context/build/es2019/helpers/assign-native-audio-node-audio-param-value.js");
/* harmony import */ var _helpers_assign_native_audio_node_option__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../helpers/assign-native-audio-node-option */ "./node_modules/standardized-audio-context/build/es2019/helpers/assign-native-audio-node-option.js");
/* harmony import */ var _helpers_assign_native_audio_node_options__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../helpers/assign-native-audio-node-options */ "./node_modules/standardized-audio-context/build/es2019/helpers/assign-native-audio-node-options.js");
/* harmony import */ var _helpers_wrap_audio_buffer_source_node_start_method_consecutive_calls__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../helpers/wrap-audio-buffer-source-node-start-method-consecutive-calls */ "./node_modules/standardized-audio-context/build/es2019/helpers/wrap-audio-buffer-source-node-start-method-consecutive-calls.js");
/* harmony import */ var _helpers_wrap_audio_scheduled_source_node_start_method_negative_parameters__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../helpers/wrap-audio-scheduled-source-node-start-method-negative-parameters */ "./node_modules/standardized-audio-context/build/es2019/helpers/wrap-audio-scheduled-source-node-start-method-negative-parameters.js");
/* harmony import */ var _helpers_wrap_audio_scheduled_source_node_stop_method_negative_parameters__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../helpers/wrap-audio-scheduled-source-node-stop-method-negative-parameters */ "./node_modules/standardized-audio-context/build/es2019/helpers/wrap-audio-scheduled-source-node-stop-method-negative-parameters.js");
;





const createNativeAudioBufferSourceNodeFactory = (addSilentConnection, cacheTestResult, testAudioBufferSourceNodeStartMethodConsecutiveCallsSupport, testAudioBufferSourceNodeStartMethodOffsetClampingSupport, testAudioBufferSourceNodeStopMethodNullifiedBufferSupport, testAudioScheduledSourceNodeStartMethodNegativeParametersSupport, testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport, testAudioScheduledSourceNodeStopMethodNegativeParametersSupport, wrapAudioBufferSourceNodeStartMethodOffsetClampling, wrapAudioBufferSourceNodeStopMethodNullifiedBuffer, wrapAudioScheduledSourceNodeStopMethodConsecutiveCalls) => {
    return (nativeContext, options) => {
        const nativeAudioBufferSourceNode = nativeContext.createBufferSource();
        (0,_helpers_assign_native_audio_node_options__WEBPACK_IMPORTED_MODULE_2__.assignNativeAudioNodeOptions)(nativeAudioBufferSourceNode, options);
        (0,_helpers_assign_native_audio_node_audio_param_value__WEBPACK_IMPORTED_MODULE_0__.assignNativeAudioNodeAudioParamValue)(nativeAudioBufferSourceNode, options, 'playbackRate');
        (0,_helpers_assign_native_audio_node_option__WEBPACK_IMPORTED_MODULE_1__.assignNativeAudioNodeOption)(nativeAudioBufferSourceNode, options, 'buffer');
        // Bug #149: Safari does not yet support the detune AudioParam.
        (0,_helpers_assign_native_audio_node_option__WEBPACK_IMPORTED_MODULE_1__.assignNativeAudioNodeOption)(nativeAudioBufferSourceNode, options, 'loop');
        (0,_helpers_assign_native_audio_node_option__WEBPACK_IMPORTED_MODULE_1__.assignNativeAudioNodeOption)(nativeAudioBufferSourceNode, options, 'loopEnd');
        (0,_helpers_assign_native_audio_node_option__WEBPACK_IMPORTED_MODULE_1__.assignNativeAudioNodeOption)(nativeAudioBufferSourceNode, options, 'loopStart');
        // Bug #69: Safari does allow calls to start() of an already scheduled AudioBufferSourceNode.
        if (!cacheTestResult(testAudioBufferSourceNodeStartMethodConsecutiveCallsSupport, () => testAudioBufferSourceNodeStartMethodConsecutiveCallsSupport(nativeContext))) {
            (0,_helpers_wrap_audio_buffer_source_node_start_method_consecutive_calls__WEBPACK_IMPORTED_MODULE_3__.wrapAudioBufferSourceNodeStartMethodConsecutiveCalls)(nativeAudioBufferSourceNode);
        }
        // Bug #154 & #155: Safari does not handle offsets which are equal to or greater than the duration of the buffer.
        if (!cacheTestResult(testAudioBufferSourceNodeStartMethodOffsetClampingSupport, () => testAudioBufferSourceNodeStartMethodOffsetClampingSupport(nativeContext))) {
            wrapAudioBufferSourceNodeStartMethodOffsetClampling(nativeAudioBufferSourceNode);
        }
        // Bug #162: Safari does throw an error when stop() is called on an AudioBufferSourceNode which has no buffer assigned to it.
        if (!cacheTestResult(testAudioBufferSourceNodeStopMethodNullifiedBufferSupport, () => testAudioBufferSourceNodeStopMethodNullifiedBufferSupport(nativeContext))) {
            wrapAudioBufferSourceNodeStopMethodNullifiedBuffer(nativeAudioBufferSourceNode, nativeContext);
        }
        // Bug #44: Safari does not throw a RangeError yet.
        if (!cacheTestResult(testAudioScheduledSourceNodeStartMethodNegativeParametersSupport, () => testAudioScheduledSourceNodeStartMethodNegativeParametersSupport(nativeContext))) {
            (0,_helpers_wrap_audio_scheduled_source_node_start_method_negative_parameters__WEBPACK_IMPORTED_MODULE_4__.wrapAudioScheduledSourceNodeStartMethodNegativeParameters)(nativeAudioBufferSourceNode);
        }
        // Bug #19: Safari does not ignore calls to stop() of an already stopped AudioBufferSourceNode.
        if (!cacheTestResult(testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport, () => testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport(nativeContext))) {
            wrapAudioScheduledSourceNodeStopMethodConsecutiveCalls(nativeAudioBufferSourceNode, nativeContext);
        }
        // Bug #44: Only Firefox does not throw a RangeError yet.
        if (!cacheTestResult(testAudioScheduledSourceNodeStopMethodNegativeParametersSupport, () => testAudioScheduledSourceNodeStopMethodNegativeParametersSupport(nativeContext))) {
            (0,_helpers_wrap_audio_scheduled_source_node_stop_method_negative_parameters__WEBPACK_IMPORTED_MODULE_5__.wrapAudioScheduledSourceNodeStopMethodNegativeParameters)(nativeAudioBufferSourceNode);
        }
        // Bug #175: Safari will not fire an ended event if the AudioBufferSourceNode is unconnected.
        addSilentConnection(nativeContext, nativeAudioBufferSourceNode);
        return nativeAudioBufferSourceNode;
    };
};
//# sourceMappingURL=native-audio-buffer-source-node-factory.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/native-audio-context-constructor.js":
/*!************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/native-audio-context-constructor.js ***!
  \************************************************************************************************************/
/*! namespace exports */
/*! export createNativeAudioContextConstructor [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "createNativeAudioContextConstructor": () => /* binding */ createNativeAudioContextConstructor
/* harmony export */ });
const createNativeAudioContextConstructor = (window) => {
    if (window === null) {
        return null;
    }
    if (window.hasOwnProperty('AudioContext')) {
        return window.AudioContext;
    }
    return window.hasOwnProperty('webkitAudioContext') ? window.webkitAudioContext : null;
};
//# sourceMappingURL=native-audio-context-constructor.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/native-audio-destination-node.js":
/*!*********************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/native-audio-destination-node.js ***!
  \*********************************************************************************************************/
/*! namespace exports */
/*! export createNativeAudioDestinationNodeFactory [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "createNativeAudioDestinationNodeFactory": () => /* binding */ createNativeAudioDestinationNodeFactory
/* harmony export */ });
const createNativeAudioDestinationNodeFactory = (createNativeGainNode, overwriteAccessors) => {
    return (nativeContext, channelCount, isNodeOfNativeOfflineAudioContext) => {
        const nativeAudioDestinationNode = nativeContext.destination;
        // Bug #132: Safari does not have the correct channelCount.
        if (nativeAudioDestinationNode.channelCount !== channelCount) {
            try {
                nativeAudioDestinationNode.channelCount = channelCount;
            }
            catch {
                // Bug #169: Safari throws an error on each attempt to change the channelCount.
            }
        }
        // Bug #83: Safari does not have the correct channelCountMode.
        if (isNodeOfNativeOfflineAudioContext && nativeAudioDestinationNode.channelCountMode !== 'explicit') {
            nativeAudioDestinationNode.channelCountMode = 'explicit';
        }
        // Bug #47: The AudioDestinationNode in Safari does not initialize the maxChannelCount property correctly.
        if (nativeAudioDestinationNode.maxChannelCount === 0) {
            Object.defineProperty(nativeAudioDestinationNode, 'maxChannelCount', {
                value: channelCount
            });
        }
        // Bug #168: No browser does yet have an AudioDestinationNode with an output.
        const gainNode = createNativeGainNode(nativeContext, {
            channelCount,
            channelCountMode: nativeAudioDestinationNode.channelCountMode,
            channelInterpretation: nativeAudioDestinationNode.channelInterpretation,
            gain: 1
        });
        overwriteAccessors(gainNode, 'channelCount', (get) => () => get.call(gainNode), (set) => (value) => {
            set.call(gainNode, value);
            try {
                nativeAudioDestinationNode.channelCount = value;
            }
            catch (err) {
                // Bug #169: Safari throws an error on each attempt to change the channelCount.
                if (value > nativeAudioDestinationNode.maxChannelCount) {
                    throw err;
                }
            }
        });
        overwriteAccessors(gainNode, 'channelCountMode', (get) => () => get.call(gainNode), (set) => (value) => {
            set.call(gainNode, value);
            nativeAudioDestinationNode.channelCountMode = value;
        });
        overwriteAccessors(gainNode, 'channelInterpretation', (get) => () => get.call(gainNode), (set) => (value) => {
            set.call(gainNode, value);
            nativeAudioDestinationNode.channelInterpretation = value;
        });
        Object.defineProperty(gainNode, 'maxChannelCount', {
            get: () => nativeAudioDestinationNode.maxChannelCount
        });
        // @todo This should be disconnected when the context is closed.
        gainNode.connect(nativeAudioDestinationNode);
        return gainNode;
    };
};
//# sourceMappingURL=native-audio-destination-node.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/native-audio-worklet-node-constructor.js":
/*!*****************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/native-audio-worklet-node-constructor.js ***!
  \*****************************************************************************************************************/
/*! namespace exports */
/*! export createNativeAudioWorkletNodeConstructor [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "createNativeAudioWorkletNodeConstructor": () => /* binding */ createNativeAudioWorkletNodeConstructor
/* harmony export */ });
const createNativeAudioWorkletNodeConstructor = (window) => {
    if (window === null) {
        return null;
    }
    return window.hasOwnProperty('AudioWorkletNode') ? window.AudioWorkletNode : null;
};
//# sourceMappingURL=native-audio-worklet-node-constructor.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/native-audio-worklet-node-factory.js":
/*!*************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/native-audio-worklet-node-factory.js ***!
  \*************************************************************************************************************/
/*! namespace exports */
/*! export createNativeAudioWorkletNodeFactory [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "createNativeAudioWorkletNodeFactory": () => /* binding */ createNativeAudioWorkletNodeFactory
/* harmony export */ });
/* harmony import */ var _helpers_test_clonability_of_audio_worklet_node_options__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../helpers/test-clonability-of-audio-worklet-node-options */ "./node_modules/standardized-audio-context/build/es2019/helpers/test-clonability-of-audio-worklet-node-options.js");
;
const createNativeAudioWorkletNodeFactory = (createInvalidStateError, createNativeAudioWorkletNodeFaker, createNativeGainNode, createNotSupportedError, monitorConnections) => {
    return (nativeContext, baseLatency, nativeAudioWorkletNodeConstructor, name, processorConstructor, options) => {
        if (nativeAudioWorkletNodeConstructor !== null) {
            try {
                const nativeAudioWorkletNode = new nativeAudioWorkletNodeConstructor(nativeContext, name, options);
                const patchedEventListeners = new Map();
                let onprocessorerror = null;
                Object.defineProperties(nativeAudioWorkletNode, {
                    /*
                     * Bug #61: Overwriting the property accessors for channelCount and channelCountMode is necessary as long as some
                     * browsers have no native implementation to achieve a consistent behavior.
                     */
                    channelCount: {
                        get: () => options.channelCount,
                        set: () => {
                            throw createInvalidStateError();
                        }
                    },
                    channelCountMode: {
                        get: () => 'explicit',
                        set: () => {
                            throw createInvalidStateError();
                        }
                    },
                    // Bug #156: Chrome and Edge do not yet fire an ErrorEvent.
                    onprocessorerror: {
                        get: () => onprocessorerror,
                        set: (value) => {
                            if (typeof onprocessorerror === 'function') {
                                nativeAudioWorkletNode.removeEventListener('processorerror', onprocessorerror);
                            }
                            onprocessorerror = typeof value === 'function' ? value : null;
                            if (typeof onprocessorerror === 'function') {
                                nativeAudioWorkletNode.addEventListener('processorerror', onprocessorerror);
                            }
                        }
                    }
                });
                nativeAudioWorkletNode.addEventListener = ((addEventListener) => {
                    return (...args) => {
                        if (args[0] === 'processorerror') {
                            const unpatchedEventListener = typeof args[1] === 'function'
                                ? args[1]
                                : typeof args[1] === 'object' && args[1] !== null && typeof args[1].handleEvent === 'function'
                                    ? args[1].handleEvent
                                    : null;
                            if (unpatchedEventListener !== null) {
                                const patchedEventListener = patchedEventListeners.get(args[1]);
                                if (patchedEventListener !== undefined) {
                                    args[1] = patchedEventListener;
                                }
                                else {
                                    args[1] = (event) => {
                                        // Bug #178: Chrome, Edge and Opera do fire an event of type error.
                                        if (event.type === 'error') {
                                            Object.defineProperties(event, {
                                                type: { value: 'processorerror' }
                                            });
                                            unpatchedEventListener(event);
                                        }
                                        else {
                                            unpatchedEventListener(new ErrorEvent(args[0], { ...event }));
                                        }
                                    };
                                    patchedEventListeners.set(unpatchedEventListener, args[1]);
                                }
                            }
                        }
                        // Bug #178: Chrome, Edge and Opera do fire an event of type error.
                        addEventListener.call(nativeAudioWorkletNode, 'error', args[1], args[2]);
                        return addEventListener.call(nativeAudioWorkletNode, ...args);
                    };
                })(nativeAudioWorkletNode.addEventListener);
                nativeAudioWorkletNode.removeEventListener = ((removeEventListener) => {
                    return (...args) => {
                        if (args[0] === 'processorerror') {
                            const patchedEventListener = patchedEventListeners.get(args[1]);
                            if (patchedEventListener !== undefined) {
                                patchedEventListeners.delete(args[1]);
                                args[1] = patchedEventListener;
                            }
                        }
                        // Bug #178: Chrome, Edge and Opera do fire an event of type error.
                        removeEventListener.call(nativeAudioWorkletNode, 'error', args[1], args[2]);
                        return removeEventListener.call(nativeAudioWorkletNode, args[0], args[1], args[2]);
                    };
                })(nativeAudioWorkletNode.removeEventListener);
                /*
                 * Bug #86: Chrome and Edge do not invoke the process() function if the corresponding AudioWorkletNode is unconnected but
                 * has an output.
                 */
                if (options.numberOfOutputs !== 0) {
                    const nativeGainNode = createNativeGainNode(nativeContext, {
                        channelCount: 1,
                        channelCountMode: 'explicit',
                        channelInterpretation: 'discrete',
                        gain: 0
                    });
                    nativeAudioWorkletNode.connect(nativeGainNode).connect(nativeContext.destination);
                    const whenConnected = () => nativeGainNode.disconnect();
                    const whenDisconnected = () => nativeGainNode.connect(nativeContext.destination);
                    // @todo Disconnect the connection when the process() function of the AudioWorkletNode returns false.
                    return monitorConnections(nativeAudioWorkletNode, whenConnected, whenDisconnected);
                }
                return nativeAudioWorkletNode;
            }
            catch (err) {
                // Bug #60: Chrome, Edge & Opera throw an InvalidStateError instead of a NotSupportedError.
                if (err.code === 11) {
                    throw createNotSupportedError();
                }
                throw err;
            }
        }
        // Bug #61: Only Chrome & Opera have an implementation of the AudioWorkletNode yet.
        if (processorConstructor === undefined) {
            throw createNotSupportedError();
        }
        (0,_helpers_test_clonability_of_audio_worklet_node_options__WEBPACK_IMPORTED_MODULE_0__.testClonabilityOfAudioWorkletNodeOptions)(options);
        return createNativeAudioWorkletNodeFaker(nativeContext, baseLatency, processorConstructor, options);
    };
};
//# sourceMappingURL=native-audio-worklet-node-factory.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/native-audio-worklet-node-faker-factory.js":
/*!*******************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/native-audio-worklet-node-faker-factory.js ***!
  \*******************************************************************************************************************/
/*! namespace exports */
/*! export createNativeAudioWorkletNodeFakerFactory [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "createNativeAudioWorkletNodeFakerFactory": () => /* binding */ createNativeAudioWorkletNodeFakerFactory
/* harmony export */ });
/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../constants */ "./node_modules/standardized-audio-context/build/es2019/constants.js");
/* harmony import */ var _helpers_compute_buffer_size__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../helpers/compute-buffer-size */ "./node_modules/standardized-audio-context/build/es2019/helpers/compute-buffer-size.js");
/* harmony import */ var _helpers_copy_from_channel__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../helpers/copy-from-channel */ "./node_modules/standardized-audio-context/build/es2019/helpers/copy-from-channel.js");
/* harmony import */ var _helpers_copy_to_channel__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../helpers/copy-to-channel */ "./node_modules/standardized-audio-context/build/es2019/helpers/copy-to-channel.js");
/* harmony import */ var _helpers_create_audio_worklet_processor__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../helpers/create-audio-worklet-processor */ "./node_modules/standardized-audio-context/build/es2019/helpers/create-audio-worklet-processor.js");
/* harmony import */ var _helpers_create_nested_arrays__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../helpers/create-nested-arrays */ "./node_modules/standardized-audio-context/build/es2019/helpers/create-nested-arrays.js");
/* harmony import */ var _read_only_map__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../read-only-map */ "./node_modules/standardized-audio-context/build/es2019/read-only-map.js");
;






const createNativeAudioWorkletNodeFakerFactory = (connectMultipleOutputs, createIndexSizeError, createInvalidStateError, createNativeChannelMergerNode, createNativeChannelSplitterNode, createNativeConstantSourceNode, createNativeGainNode, createNativeScriptProcessorNode, createNotSupportedError, disconnectMultipleOutputs, exposeCurrentFrameAndCurrentTime, getActiveAudioWorkletNodeInputs, monitorConnections) => {
    return (nativeContext, baseLatency, processorConstructor, options) => {
        if (options.numberOfInputs === 0 && options.numberOfOutputs === 0) {
            throw createNotSupportedError();
        }
        const outputChannelCount = Array.isArray(options.outputChannelCount)
            ? options.outputChannelCount
            : Array.from(options.outputChannelCount);
        // @todo Check if any of the channelCount values is greater than the implementation's maximum number of channels.
        if (outputChannelCount.some((channelCount) => channelCount < 1)) {
            throw createNotSupportedError();
        }
        if (outputChannelCount.length !== options.numberOfOutputs) {
            throw createIndexSizeError();
        }
        // Bug #61: This is not part of the standard but required for the faker to work.
        if (options.channelCountMode !== 'explicit') {
            throw createNotSupportedError();
        }
        const numberOfInputChannels = options.channelCount * options.numberOfInputs;
        const numberOfOutputChannels = outputChannelCount.reduce((sum, value) => sum + value, 0);
        const numberOfParameters = processorConstructor.parameterDescriptors === undefined ? 0 : processorConstructor.parameterDescriptors.length;
        // Bug #61: This is not part of the standard but required for the faker to work.
        if (numberOfInputChannels + numberOfParameters > 6 || numberOfOutputChannels > 6) {
            throw createNotSupportedError();
        }
        const messageChannel = new MessageChannel();
        const gainNodes = [];
        const inputChannelSplitterNodes = [];
        for (let i = 0; i < options.numberOfInputs; i += 1) {
            gainNodes.push(createNativeGainNode(nativeContext, {
                channelCount: options.channelCount,
                channelCountMode: options.channelCountMode,
                channelInterpretation: options.channelInterpretation,
                gain: 1
            }));
            inputChannelSplitterNodes.push(createNativeChannelSplitterNode(nativeContext, {
                channelCount: options.channelCount,
                channelCountMode: 'explicit',
                channelInterpretation: 'discrete',
                numberOfOutputs: options.channelCount
            }));
        }
        const constantSourceNodes = [];
        if (processorConstructor.parameterDescriptors !== undefined) {
            for (const { defaultValue, maxValue, minValue, name } of processorConstructor.parameterDescriptors) {
                const constantSourceNode = createNativeConstantSourceNode(nativeContext, {
                    channelCount: 1,
                    channelCountMode: 'explicit',
                    channelInterpretation: 'discrete',
                    offset: options.parameterData[name] !== undefined
                        ? options.parameterData[name]
                        : defaultValue === undefined
                            ? 0
                            : defaultValue
                });
                Object.defineProperties(constantSourceNode.offset, {
                    defaultValue: {
                        get: () => (defaultValue === undefined ? 0 : defaultValue)
                    },
                    maxValue: {
                        get: () => (maxValue === undefined ? _constants__WEBPACK_IMPORTED_MODULE_0__.MOST_POSITIVE_SINGLE_FLOAT : maxValue)
                    },
                    minValue: {
                        get: () => (minValue === undefined ? _constants__WEBPACK_IMPORTED_MODULE_0__.MOST_NEGATIVE_SINGLE_FLOAT : minValue)
                    }
                });
                constantSourceNodes.push(constantSourceNode);
            }
        }
        const inputChannelMergerNode = createNativeChannelMergerNode(nativeContext, {
            channelCount: 1,
            channelCountMode: 'explicit',
            channelInterpretation: 'speakers',
            numberOfInputs: Math.max(1, numberOfInputChannels + numberOfParameters)
        });
        const bufferSize = (0,_helpers_compute_buffer_size__WEBPACK_IMPORTED_MODULE_1__.computeBufferSize)(baseLatency, nativeContext.sampleRate);
        const scriptProcessorNode = createNativeScriptProcessorNode(nativeContext, bufferSize, numberOfInputChannels + numberOfParameters, 
        // Bug #87: Only Firefox will fire an AudioProcessingEvent if there is no connected output.
        Math.max(1, numberOfOutputChannels));
        const outputChannelSplitterNode = createNativeChannelSplitterNode(nativeContext, {
            channelCount: Math.max(1, numberOfOutputChannels),
            channelCountMode: 'explicit',
            channelInterpretation: 'discrete',
            numberOfOutputs: Math.max(1, numberOfOutputChannels)
        });
        const outputChannelMergerNodes = [];
        for (let i = 0; i < options.numberOfOutputs; i += 1) {
            outputChannelMergerNodes.push(createNativeChannelMergerNode(nativeContext, {
                channelCount: 1,
                channelCountMode: 'explicit',
                channelInterpretation: 'speakers',
                numberOfInputs: outputChannelCount[i]
            }));
        }
        for (let i = 0; i < options.numberOfInputs; i += 1) {
            gainNodes[i].connect(inputChannelSplitterNodes[i]);
            for (let j = 0; j < options.channelCount; j += 1) {
                inputChannelSplitterNodes[i].connect(inputChannelMergerNode, j, i * options.channelCount + j);
            }
        }
        const parameterMap = new _read_only_map__WEBPACK_IMPORTED_MODULE_6__.ReadOnlyMap(processorConstructor.parameterDescriptors === undefined
            ? []
            : processorConstructor.parameterDescriptors.map(({ name }, index) => {
                const constantSourceNode = constantSourceNodes[index];
                constantSourceNode.connect(inputChannelMergerNode, 0, numberOfInputChannels + index);
                constantSourceNode.start(0);
                return [name, constantSourceNode.offset];
            }));
        inputChannelMergerNode.connect(scriptProcessorNode);
        let channelInterpretation = options.channelInterpretation;
        let onprocessorerror = null;
        // Bug #87: Expose at least one output to make this node connectable.
        const outputAudioNodes = options.numberOfOutputs === 0 ? [scriptProcessorNode] : outputChannelMergerNodes;
        const nativeAudioWorkletNodeFaker = {
            get bufferSize() {
                return bufferSize;
            },
            get channelCount() {
                return options.channelCount;
            },
            set channelCount(_) {
                // Bug #61: This is not part of the standard but required for the faker to work.
                throw createInvalidStateError();
            },
            get channelCountMode() {
                return options.channelCountMode;
            },
            set channelCountMode(_) {
                // Bug #61: This is not part of the standard but required for the faker to work.
                throw createInvalidStateError();
            },
            get channelInterpretation() {
                return channelInterpretation;
            },
            set channelInterpretation(value) {
                for (const gainNode of gainNodes) {
                    gainNode.channelInterpretation = value;
                }
                channelInterpretation = value;
            },
            get context() {
                return scriptProcessorNode.context;
            },
            get inputs() {
                return gainNodes;
            },
            get numberOfInputs() {
                return options.numberOfInputs;
            },
            get numberOfOutputs() {
                return options.numberOfOutputs;
            },
            get onprocessorerror() {
                return onprocessorerror;
            },
            set onprocessorerror(value) {
                if (typeof onprocessorerror === 'function') {
                    nativeAudioWorkletNodeFaker.removeEventListener('processorerror', onprocessorerror);
                }
                onprocessorerror = typeof value === 'function' ? value : null;
                if (typeof onprocessorerror === 'function') {
                    nativeAudioWorkletNodeFaker.addEventListener('processorerror', onprocessorerror);
                }
            },
            get parameters() {
                return parameterMap;
            },
            get port() {
                return messageChannel.port2;
            },
            addEventListener(...args) {
                return scriptProcessorNode.addEventListener(args[0], args[1], args[2]);
            },
            connect: connectMultipleOutputs.bind(null, outputAudioNodes),
            disconnect: disconnectMultipleOutputs.bind(null, outputAudioNodes),
            dispatchEvent(...args) {
                return scriptProcessorNode.dispatchEvent(args[0]);
            },
            removeEventListener(...args) {
                return scriptProcessorNode.removeEventListener(args[0], args[1], args[2]);
            }
        };
        const patchedEventListeners = new Map();
        messageChannel.port1.addEventListener = ((addEventListener) => {
            return (...args) => {
                if (args[0] === 'message') {
                    const unpatchedEventListener = typeof args[1] === 'function'
                        ? args[1]
                        : typeof args[1] === 'object' && args[1] !== null && typeof args[1].handleEvent === 'function'
                            ? args[1].handleEvent
                            : null;
                    if (unpatchedEventListener !== null) {
                        const patchedEventListener = patchedEventListeners.get(args[1]);
                        if (patchedEventListener !== undefined) {
                            args[1] = patchedEventListener;
                        }
                        else {
                            args[1] = (event) => {
                                exposeCurrentFrameAndCurrentTime(nativeContext.currentTime, nativeContext.sampleRate, () => unpatchedEventListener(event));
                            };
                            patchedEventListeners.set(unpatchedEventListener, args[1]);
                        }
                    }
                }
                return addEventListener.call(messageChannel.port1, args[0], args[1], args[2]);
            };
        })(messageChannel.port1.addEventListener);
        messageChannel.port1.removeEventListener = ((removeEventListener) => {
            return (...args) => {
                if (args[0] === 'message') {
                    const patchedEventListener = patchedEventListeners.get(args[1]);
                    if (patchedEventListener !== undefined) {
                        patchedEventListeners.delete(args[1]);
                        args[1] = patchedEventListener;
                    }
                }
                return removeEventListener.call(messageChannel.port1, args[0], args[1], args[2]);
            };
        })(messageChannel.port1.removeEventListener);
        let onmessage = null;
        Object.defineProperty(messageChannel.port1, 'onmessage', {
            get: () => onmessage,
            set: (value) => {
                if (typeof onmessage === 'function') {
                    messageChannel.port1.removeEventListener('message', onmessage);
                }
                onmessage = typeof value === 'function' ? value : null;
                if (typeof onmessage === 'function') {
                    messageChannel.port1.addEventListener('message', onmessage);
                    messageChannel.port1.start();
                }
            }
        });
        processorConstructor.prototype.port = messageChannel.port1;
        let audioWorkletProcessor = null;
        const audioWorkletProcessorPromise = (0,_helpers_create_audio_worklet_processor__WEBPACK_IMPORTED_MODULE_4__.createAudioWorkletProcessor)(nativeContext, nativeAudioWorkletNodeFaker, processorConstructor, options);
        audioWorkletProcessorPromise.then((dWrkltPrcssr) => (audioWorkletProcessor = dWrkltPrcssr));
        const inputs = (0,_helpers_create_nested_arrays__WEBPACK_IMPORTED_MODULE_5__.createNestedArrays)(options.numberOfInputs, options.channelCount);
        const outputs = (0,_helpers_create_nested_arrays__WEBPACK_IMPORTED_MODULE_5__.createNestedArrays)(options.numberOfOutputs, outputChannelCount);
        const parameters = processorConstructor.parameterDescriptors === undefined
            ? []
            : processorConstructor.parameterDescriptors.reduce((prmtrs, { name }) => ({ ...prmtrs, [name]: new Float32Array(128) }), {});
        let isActive = true;
        const disconnectOutputsGraph = () => {
            if (options.numberOfOutputs > 0) {
                scriptProcessorNode.disconnect(outputChannelSplitterNode);
            }
            for (let i = 0, outputChannelSplitterNodeOutput = 0; i < options.numberOfOutputs; i += 1) {
                const outputChannelMergerNode = outputChannelMergerNodes[i];
                for (let j = 0; j < outputChannelCount[i]; j += 1) {
                    outputChannelSplitterNode.disconnect(outputChannelMergerNode, outputChannelSplitterNodeOutput + j, j);
                }
                outputChannelSplitterNodeOutput += outputChannelCount[i];
            }
        };
        const activeInputIndexes = new Map();
        // tslint:disable-next-line:deprecation
        scriptProcessorNode.onaudioprocess = ({ inputBuffer, outputBuffer }) => {
            if (audioWorkletProcessor !== null) {
                const activeInputs = getActiveAudioWorkletNodeInputs(nativeAudioWorkletNodeFaker);
                for (let i = 0; i < bufferSize; i += 128) {
                    for (let j = 0; j < options.numberOfInputs; j += 1) {
                        for (let k = 0; k < options.channelCount; k += 1) {
                            (0,_helpers_copy_from_channel__WEBPACK_IMPORTED_MODULE_2__.copyFromChannel)(inputBuffer, inputs[j], k, k, i);
                        }
                    }
                    if (processorConstructor.parameterDescriptors !== undefined) {
                        processorConstructor.parameterDescriptors.forEach(({ name }, index) => {
                            (0,_helpers_copy_from_channel__WEBPACK_IMPORTED_MODULE_2__.copyFromChannel)(inputBuffer, parameters, name, numberOfInputChannels + index, i);
                        });
                    }
                    for (let j = 0; j < options.numberOfInputs; j += 1) {
                        for (let k = 0; k < outputChannelCount[j]; k += 1) {
                            // The byteLength will be 0 when the ArrayBuffer was transferred.
                            if (outputs[j][k].byteLength === 0) {
                                outputs[j][k] = new Float32Array(128);
                            }
                        }
                    }
                    try {
                        const potentiallyEmptyInputs = inputs.map((input, index) => {
                            const activeInput = activeInputs[index];
                            if (activeInput.size > 0) {
                                activeInputIndexes.set(index, bufferSize / 128);
                                return input;
                            }
                            const count = activeInputIndexes.get(index);
                            if (count === undefined) {
                                return [];
                            }
                            if (input.every((channelData) => channelData.every((sample) => sample === 0))) {
                                if (count === 1) {
                                    activeInputIndexes.delete(index);
                                }
                                else {
                                    activeInputIndexes.set(index, count - 1);
                                }
                            }
                            return input;
                        });
                        const activeSourceFlag = exposeCurrentFrameAndCurrentTime(nativeContext.currentTime + i / nativeContext.sampleRate, nativeContext.sampleRate, () => audioWorkletProcessor.process(potentiallyEmptyInputs, outputs, parameters));
                        isActive = activeSourceFlag;
                        for (let j = 0, outputChannelSplitterNodeOutput = 0; j < options.numberOfOutputs; j += 1) {
                            for (let k = 0; k < outputChannelCount[j]; k += 1) {
                                (0,_helpers_copy_to_channel__WEBPACK_IMPORTED_MODULE_3__.copyToChannel)(outputBuffer, outputs[j], k, outputChannelSplitterNodeOutput + k, i);
                            }
                            outputChannelSplitterNodeOutput += outputChannelCount[j];
                        }
                    }
                    catch (error) {
                        isActive = false;
                        nativeAudioWorkletNodeFaker.dispatchEvent(new ErrorEvent('processorerror', {
                            colno: error.colno,
                            filename: error.filename,
                            lineno: error.lineno,
                            message: error.message
                        }));
                    }
                    if (!isActive) {
                        for (let j = 0; j < options.numberOfInputs; j += 1) {
                            gainNodes[j].disconnect(inputChannelSplitterNodes[j]);
                            for (let k = 0; k < options.channelCount; k += 1) {
                                inputChannelSplitterNodes[i].disconnect(inputChannelMergerNode, k, j * options.channelCount + k);
                            }
                        }
                        if (processorConstructor.parameterDescriptors !== undefined) {
                            const length = processorConstructor.parameterDescriptors.length;
                            for (let j = 0; j < length; j += 1) {
                                const constantSourceNode = constantSourceNodes[j];
                                constantSourceNode.disconnect(inputChannelMergerNode, 0, numberOfInputChannels + j);
                                constantSourceNode.stop();
                            }
                        }
                        inputChannelMergerNode.disconnect(scriptProcessorNode);
                        scriptProcessorNode.onaudioprocess = null; // tslint:disable-line:deprecation
                        if (isConnected) {
                            disconnectOutputsGraph();
                        }
                        else {
                            disconnectFakeGraph();
                        }
                        break;
                    }
                }
            }
        };
        let isConnected = false;
        // Bug #87: Only Firefox will fire an AudioProcessingEvent if there is no connected output.
        const nativeGainNode = createNativeGainNode(nativeContext, {
            channelCount: 1,
            channelCountMode: 'explicit',
            channelInterpretation: 'discrete',
            gain: 0
        });
        const connectFakeGraph = () => scriptProcessorNode.connect(nativeGainNode).connect(nativeContext.destination);
        const disconnectFakeGraph = () => {
            scriptProcessorNode.disconnect(nativeGainNode);
            nativeGainNode.disconnect();
        };
        const whenConnected = () => {
            if (isActive) {
                disconnectFakeGraph();
                if (options.numberOfOutputs > 0) {
                    scriptProcessorNode.connect(outputChannelSplitterNode);
                }
                for (let i = 0, outputChannelSplitterNodeOutput = 0; i < options.numberOfOutputs; i += 1) {
                    const outputChannelMergerNode = outputChannelMergerNodes[i];
                    for (let j = 0; j < outputChannelCount[i]; j += 1) {
                        outputChannelSplitterNode.connect(outputChannelMergerNode, outputChannelSplitterNodeOutput + j, j);
                    }
                    outputChannelSplitterNodeOutput += outputChannelCount[i];
                }
            }
            isConnected = true;
        };
        const whenDisconnected = () => {
            if (isActive) {
                connectFakeGraph();
                disconnectOutputsGraph();
            }
            isConnected = false;
        };
        connectFakeGraph();
        return monitorConnections(nativeAudioWorkletNodeFaker, whenConnected, whenDisconnected);
    };
};
//# sourceMappingURL=native-audio-worklet-node-faker-factory.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/native-biquad-filter-node.js":
/*!*****************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/native-biquad-filter-node.js ***!
  \*****************************************************************************************************/
/*! namespace exports */
/*! export createNativeBiquadFilterNode [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "createNativeBiquadFilterNode": () => /* binding */ createNativeBiquadFilterNode
/* harmony export */ });
/* harmony import */ var _helpers_assign_native_audio_node_audio_param_value__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../helpers/assign-native-audio-node-audio-param-value */ "./node_modules/standardized-audio-context/build/es2019/helpers/assign-native-audio-node-audio-param-value.js");
/* harmony import */ var _helpers_assign_native_audio_node_option__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../helpers/assign-native-audio-node-option */ "./node_modules/standardized-audio-context/build/es2019/helpers/assign-native-audio-node-option.js");
/* harmony import */ var _helpers_assign_native_audio_node_options__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../helpers/assign-native-audio-node-options */ "./node_modules/standardized-audio-context/build/es2019/helpers/assign-native-audio-node-options.js");
;


const createNativeBiquadFilterNode = (nativeContext, options) => {
    const nativeBiquadFilterNode = nativeContext.createBiquadFilter();
    (0,_helpers_assign_native_audio_node_options__WEBPACK_IMPORTED_MODULE_2__.assignNativeAudioNodeOptions)(nativeBiquadFilterNode, options);
    (0,_helpers_assign_native_audio_node_audio_param_value__WEBPACK_IMPORTED_MODULE_0__.assignNativeAudioNodeAudioParamValue)(nativeBiquadFilterNode, options, 'Q');
    (0,_helpers_assign_native_audio_node_audio_param_value__WEBPACK_IMPORTED_MODULE_0__.assignNativeAudioNodeAudioParamValue)(nativeBiquadFilterNode, options, 'detune');
    (0,_helpers_assign_native_audio_node_audio_param_value__WEBPACK_IMPORTED_MODULE_0__.assignNativeAudioNodeAudioParamValue)(nativeBiquadFilterNode, options, 'frequency');
    (0,_helpers_assign_native_audio_node_audio_param_value__WEBPACK_IMPORTED_MODULE_0__.assignNativeAudioNodeAudioParamValue)(nativeBiquadFilterNode, options, 'gain');
    (0,_helpers_assign_native_audio_node_option__WEBPACK_IMPORTED_MODULE_1__.assignNativeAudioNodeOption)(nativeBiquadFilterNode, options, 'type');
    return nativeBiquadFilterNode;
};
//# sourceMappingURL=native-biquad-filter-node.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/native-channel-merger-node-factory.js":
/*!**************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/native-channel-merger-node-factory.js ***!
  \**************************************************************************************************************/
/*! namespace exports */
/*! export createNativeChannelMergerNodeFactory [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "createNativeChannelMergerNodeFactory": () => /* binding */ createNativeChannelMergerNodeFactory
/* harmony export */ });
/* harmony import */ var _helpers_assign_native_audio_node_options__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../helpers/assign-native-audio-node-options */ "./node_modules/standardized-audio-context/build/es2019/helpers/assign-native-audio-node-options.js");
;
const createNativeChannelMergerNodeFactory = (nativeAudioContextConstructor, wrapChannelMergerNode) => {
    return (nativeContext, options) => {
        const nativeChannelMergerNode = nativeContext.createChannelMerger(options.numberOfInputs);
        /*
         * Bug #20: Safari requires a connection of any kind to treat the input signal correctly.
         * @todo Unfortunately there is no way to test for this behavior in a synchronous fashion which is why testing for the existence of
         * the webkitAudioContext is used as a workaround here.
         */
        if (nativeAudioContextConstructor !== null && nativeAudioContextConstructor.name === 'webkitAudioContext') {
            wrapChannelMergerNode(nativeContext, nativeChannelMergerNode);
        }
        (0,_helpers_assign_native_audio_node_options__WEBPACK_IMPORTED_MODULE_0__.assignNativeAudioNodeOptions)(nativeChannelMergerNode, options);
        return nativeChannelMergerNode;
    };
};
//# sourceMappingURL=native-channel-merger-node-factory.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/native-channel-splitter-node.js":
/*!********************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/native-channel-splitter-node.js ***!
  \********************************************************************************************************/
/*! namespace exports */
/*! export createNativeChannelSplitterNode [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "createNativeChannelSplitterNode": () => /* binding */ createNativeChannelSplitterNode
/* harmony export */ });
/* harmony import */ var _helpers_assign_native_audio_node_options__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../helpers/assign-native-audio-node-options */ "./node_modules/standardized-audio-context/build/es2019/helpers/assign-native-audio-node-options.js");
/* harmony import */ var _helpers_wrap_channel_splitter_node__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../helpers/wrap-channel-splitter-node */ "./node_modules/standardized-audio-context/build/es2019/helpers/wrap-channel-splitter-node.js");
;

const createNativeChannelSplitterNode = (nativeContext, options) => {
    const nativeChannelSplitterNode = nativeContext.createChannelSplitter(options.numberOfOutputs);
    // Bug #96: Safari does not have the correct channelCount.
    // Bug #29: Safari does not have the correct channelCountMode.
    // Bug #31: Safari does not have the correct channelInterpretation.
    (0,_helpers_assign_native_audio_node_options__WEBPACK_IMPORTED_MODULE_0__.assignNativeAudioNodeOptions)(nativeChannelSplitterNode, options);
    // Bug #29, #30, #31, #32, #96 & #97: Only Chrome, Edge, Firefox & Opera partially support the spec yet.
    (0,_helpers_wrap_channel_splitter_node__WEBPACK_IMPORTED_MODULE_1__.wrapChannelSplitterNode)(nativeChannelSplitterNode);
    return nativeChannelSplitterNode;
};
//# sourceMappingURL=native-channel-splitter-node.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/native-constant-source-node-factory.js":
/*!***************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/native-constant-source-node-factory.js ***!
  \***************************************************************************************************************/
/*! namespace exports */
/*! export createNativeConstantSourceNodeFactory [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "createNativeConstantSourceNodeFactory": () => /* binding */ createNativeConstantSourceNodeFactory
/* harmony export */ });
/* harmony import */ var _helpers_assign_native_audio_node_audio_param_value__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../helpers/assign-native-audio-node-audio-param-value */ "./node_modules/standardized-audio-context/build/es2019/helpers/assign-native-audio-node-audio-param-value.js");
/* harmony import */ var _helpers_assign_native_audio_node_options__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../helpers/assign-native-audio-node-options */ "./node_modules/standardized-audio-context/build/es2019/helpers/assign-native-audio-node-options.js");
/* harmony import */ var _helpers_wrap_audio_scheduled_source_node_start_method_negative_parameters__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../helpers/wrap-audio-scheduled-source-node-start-method-negative-parameters */ "./node_modules/standardized-audio-context/build/es2019/helpers/wrap-audio-scheduled-source-node-start-method-negative-parameters.js");
/* harmony import */ var _helpers_wrap_audio_scheduled_source_node_stop_method_negative_parameters__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../helpers/wrap-audio-scheduled-source-node-stop-method-negative-parameters */ "./node_modules/standardized-audio-context/build/es2019/helpers/wrap-audio-scheduled-source-node-stop-method-negative-parameters.js");
;



const createNativeConstantSourceNodeFactory = (addSilentConnection, cacheTestResult, createNativeConstantSourceNodeFaker, testAudioScheduledSourceNodeStartMethodNegativeParametersSupport, testAudioScheduledSourceNodeStopMethodNegativeParametersSupport) => {
    return (nativeContext, options) => {
        // Bug #62: Safari does not support ConstantSourceNodes.
        if (nativeContext.createConstantSource === undefined) {
            return createNativeConstantSourceNodeFaker(nativeContext, options);
        }
        const nativeConstantSourceNode = nativeContext.createConstantSource();
        (0,_helpers_assign_native_audio_node_options__WEBPACK_IMPORTED_MODULE_1__.assignNativeAudioNodeOptions)(nativeConstantSourceNode, options);
        (0,_helpers_assign_native_audio_node_audio_param_value__WEBPACK_IMPORTED_MODULE_0__.assignNativeAudioNodeAudioParamValue)(nativeConstantSourceNode, options, 'offset');
        // Bug #44: Safari does not throw a RangeError yet.
        if (!cacheTestResult(testAudioScheduledSourceNodeStartMethodNegativeParametersSupport, () => testAudioScheduledSourceNodeStartMethodNegativeParametersSupport(nativeContext))) {
            (0,_helpers_wrap_audio_scheduled_source_node_start_method_negative_parameters__WEBPACK_IMPORTED_MODULE_2__.wrapAudioScheduledSourceNodeStartMethodNegativeParameters)(nativeConstantSourceNode);
        }
        // Bug #44: Only Firefox does not throw a RangeError yet.
        if (!cacheTestResult(testAudioScheduledSourceNodeStopMethodNegativeParametersSupport, () => testAudioScheduledSourceNodeStopMethodNegativeParametersSupport(nativeContext))) {
            (0,_helpers_wrap_audio_scheduled_source_node_stop_method_negative_parameters__WEBPACK_IMPORTED_MODULE_3__.wrapAudioScheduledSourceNodeStopMethodNegativeParameters)(nativeConstantSourceNode);
        }
        // Bug #175: Safari will not fire an ended event if the ConstantSourceNode is unconnected.
        addSilentConnection(nativeContext, nativeConstantSourceNode);
        return nativeConstantSourceNode;
    };
};
//# sourceMappingURL=native-constant-source-node-factory.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/native-constant-source-node-faker-factory.js":
/*!*********************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/native-constant-source-node-faker-factory.js ***!
  \*********************************************************************************************************************/
/*! namespace exports */
/*! export createNativeConstantSourceNodeFakerFactory [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "createNativeConstantSourceNodeFakerFactory": () => /* binding */ createNativeConstantSourceNodeFakerFactory
/* harmony export */ });
/* harmony import */ var _helpers_intercept_connections__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../helpers/intercept-connections */ "./node_modules/standardized-audio-context/build/es2019/helpers/intercept-connections.js");
;
const createNativeConstantSourceNodeFakerFactory = (addSilentConnection, createNativeAudioBufferSourceNode, createNativeGainNode, monitorConnections) => {
    return (nativeContext, { offset, ...audioNodeOptions }) => {
        const audioBuffer = nativeContext.createBuffer(1, 2, 44100);
        const audioBufferSourceNode = createNativeAudioBufferSourceNode(nativeContext, {
            buffer: null,
            channelCount: 2,
            channelCountMode: 'max',
            channelInterpretation: 'speakers',
            loop: false,
            loopEnd: 0,
            loopStart: 0,
            playbackRate: 1
        });
        const gainNode = createNativeGainNode(nativeContext, { ...audioNodeOptions, gain: offset });
        // Bug #5: Safari does not support copyFromChannel() and copyToChannel().
        const channelData = audioBuffer.getChannelData(0);
        // Bug #95: Safari does not play or loop one sample buffers.
        channelData[0] = 1;
        channelData[1] = 1;
        audioBufferSourceNode.buffer = audioBuffer;
        audioBufferSourceNode.loop = true;
        const nativeConstantSourceNodeFaker = {
            get bufferSize() {
                return undefined;
            },
            get channelCount() {
                return gainNode.channelCount;
            },
            set channelCount(value) {
                gainNode.channelCount = value;
            },
            get channelCountMode() {
                return gainNode.channelCountMode;
            },
            set channelCountMode(value) {
                gainNode.channelCountMode = value;
            },
            get channelInterpretation() {
                return gainNode.channelInterpretation;
            },
            set channelInterpretation(value) {
                gainNode.channelInterpretation = value;
            },
            get context() {
                return gainNode.context;
            },
            get inputs() {
                return [];
            },
            get numberOfInputs() {
                return audioBufferSourceNode.numberOfInputs;
            },
            get numberOfOutputs() {
                return gainNode.numberOfOutputs;
            },
            get offset() {
                return gainNode.gain;
            },
            get onended() {
                return audioBufferSourceNode.onended;
            },
            set onended(value) {
                audioBufferSourceNode.onended = value;
            },
            addEventListener(...args) {
                return audioBufferSourceNode.addEventListener(args[0], args[1], args[2]);
            },
            dispatchEvent(...args) {
                return audioBufferSourceNode.dispatchEvent(args[0]);
            },
            removeEventListener(...args) {
                return audioBufferSourceNode.removeEventListener(args[0], args[1], args[2]);
            },
            start(when = 0) {
                audioBufferSourceNode.start.call(audioBufferSourceNode, when);
            },
            stop(when = 0) {
                audioBufferSourceNode.stop.call(audioBufferSourceNode, when);
            }
        };
        const whenConnected = () => audioBufferSourceNode.connect(gainNode);
        const whenDisconnected = () => audioBufferSourceNode.disconnect(gainNode);
        // Bug #175: Safari will not fire an ended event if the AudioBufferSourceNode is unconnected.
        addSilentConnection(nativeContext, audioBufferSourceNode);
        return monitorConnections((0,_helpers_intercept_connections__WEBPACK_IMPORTED_MODULE_0__.interceptConnections)(nativeConstantSourceNodeFaker, gainNode), whenConnected, whenDisconnected);
    };
};
//# sourceMappingURL=native-constant-source-node-faker-factory.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/native-convolver-node-factory.js":
/*!*********************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/native-convolver-node-factory.js ***!
  \*********************************************************************************************************/
/*! namespace exports */
/*! export createNativeConvolverNodeFactory [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "createNativeConvolverNodeFactory": () => /* binding */ createNativeConvolverNodeFactory
/* harmony export */ });
/* harmony import */ var _helpers_assign_native_audio_node_option__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../helpers/assign-native-audio-node-option */ "./node_modules/standardized-audio-context/build/es2019/helpers/assign-native-audio-node-option.js");
/* harmony import */ var _helpers_assign_native_audio_node_options__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../helpers/assign-native-audio-node-options */ "./node_modules/standardized-audio-context/build/es2019/helpers/assign-native-audio-node-options.js");
;

const createNativeConvolverNodeFactory = (createNotSupportedError, overwriteAccessors) => {
    return (nativeContext, options) => {
        const nativeConvolverNode = nativeContext.createConvolver();
        (0,_helpers_assign_native_audio_node_options__WEBPACK_IMPORTED_MODULE_1__.assignNativeAudioNodeOptions)(nativeConvolverNode, options);
        // The normalize property needs to be set before setting the buffer.
        if (options.disableNormalization === nativeConvolverNode.normalize) {
            nativeConvolverNode.normalize = !options.disableNormalization;
        }
        (0,_helpers_assign_native_audio_node_option__WEBPACK_IMPORTED_MODULE_0__.assignNativeAudioNodeOption)(nativeConvolverNode, options, 'buffer');
        // Bug #113: Safari does allow to set the channelCount to a value larger than 2.
        if (options.channelCount > 2) {
            throw createNotSupportedError();
        }
        overwriteAccessors(nativeConvolverNode, 'channelCount', (get) => () => get.call(nativeConvolverNode), (set) => (value) => {
            if (value > 2) {
                throw createNotSupportedError();
            }
            return set.call(nativeConvolverNode, value);
        });
        // Bug #114: Safari allows to set the channelCountMode to 'max'.
        if (options.channelCountMode === 'max') {
            throw createNotSupportedError();
        }
        overwriteAccessors(nativeConvolverNode, 'channelCountMode', (get) => () => get.call(nativeConvolverNode), (set) => (value) => {
            if (value === 'max') {
                throw createNotSupportedError();
            }
            return set.call(nativeConvolverNode, value);
        });
        return nativeConvolverNode;
    };
};
//# sourceMappingURL=native-convolver-node-factory.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/native-delay-node.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/native-delay-node.js ***!
  \*********************************************************************************************/
/*! namespace exports */
/*! export createNativeDelayNode [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "createNativeDelayNode": () => /* binding */ createNativeDelayNode
/* harmony export */ });
/* harmony import */ var _helpers_assign_native_audio_node_audio_param_value__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../helpers/assign-native-audio-node-audio-param-value */ "./node_modules/standardized-audio-context/build/es2019/helpers/assign-native-audio-node-audio-param-value.js");
/* harmony import */ var _helpers_assign_native_audio_node_options__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../helpers/assign-native-audio-node-options */ "./node_modules/standardized-audio-context/build/es2019/helpers/assign-native-audio-node-options.js");
;

const createNativeDelayNode = (nativeContext, options) => {
    const nativeDelayNode = nativeContext.createDelay(options.maxDelayTime);
    (0,_helpers_assign_native_audio_node_options__WEBPACK_IMPORTED_MODULE_1__.assignNativeAudioNodeOptions)(nativeDelayNode, options);
    (0,_helpers_assign_native_audio_node_audio_param_value__WEBPACK_IMPORTED_MODULE_0__.assignNativeAudioNodeAudioParamValue)(nativeDelayNode, options, 'delayTime');
    return nativeDelayNode;
};
//# sourceMappingURL=native-delay-node.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/native-dynamics-compressor-node-factory.js":
/*!*******************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/native-dynamics-compressor-node-factory.js ***!
  \*******************************************************************************************************************/
/*! namespace exports */
/*! export createNativeDynamicsCompressorNodeFactory [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "createNativeDynamicsCompressorNodeFactory": () => /* binding */ createNativeDynamicsCompressorNodeFactory
/* harmony export */ });
/* harmony import */ var _helpers_assign_native_audio_node_audio_param_value__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../helpers/assign-native-audio-node-audio-param-value */ "./node_modules/standardized-audio-context/build/es2019/helpers/assign-native-audio-node-audio-param-value.js");
/* harmony import */ var _helpers_assign_native_audio_node_options__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../helpers/assign-native-audio-node-options */ "./node_modules/standardized-audio-context/build/es2019/helpers/assign-native-audio-node-options.js");
;

const createNativeDynamicsCompressorNodeFactory = (createNotSupportedError) => {
    return (nativeContext, options) => {
        const nativeDynamicsCompressorNode = nativeContext.createDynamicsCompressor();
        (0,_helpers_assign_native_audio_node_options__WEBPACK_IMPORTED_MODULE_1__.assignNativeAudioNodeOptions)(nativeDynamicsCompressorNode, options);
        // Bug #108: Safari allows a channelCount of three and above.
        if (options.channelCount > 2) {
            throw createNotSupportedError();
        }
        // Bug #109: Only Chrome, Firefox and Opera disallow a channelCountMode of 'max'.
        if (options.channelCountMode === 'max') {
            throw createNotSupportedError();
        }
        (0,_helpers_assign_native_audio_node_audio_param_value__WEBPACK_IMPORTED_MODULE_0__.assignNativeAudioNodeAudioParamValue)(nativeDynamicsCompressorNode, options, 'attack');
        (0,_helpers_assign_native_audio_node_audio_param_value__WEBPACK_IMPORTED_MODULE_0__.assignNativeAudioNodeAudioParamValue)(nativeDynamicsCompressorNode, options, 'knee');
        (0,_helpers_assign_native_audio_node_audio_param_value__WEBPACK_IMPORTED_MODULE_0__.assignNativeAudioNodeAudioParamValue)(nativeDynamicsCompressorNode, options, 'ratio');
        (0,_helpers_assign_native_audio_node_audio_param_value__WEBPACK_IMPORTED_MODULE_0__.assignNativeAudioNodeAudioParamValue)(nativeDynamicsCompressorNode, options, 'release');
        (0,_helpers_assign_native_audio_node_audio_param_value__WEBPACK_IMPORTED_MODULE_0__.assignNativeAudioNodeAudioParamValue)(nativeDynamicsCompressorNode, options, 'threshold');
        return nativeDynamicsCompressorNode;
    };
};
//# sourceMappingURL=native-dynamics-compressor-node-factory.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/native-gain-node.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/native-gain-node.js ***!
  \********************************************************************************************/
/*! namespace exports */
/*! export createNativeGainNode [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "createNativeGainNode": () => /* binding */ createNativeGainNode
/* harmony export */ });
/* harmony import */ var _helpers_assign_native_audio_node_audio_param_value__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../helpers/assign-native-audio-node-audio-param-value */ "./node_modules/standardized-audio-context/build/es2019/helpers/assign-native-audio-node-audio-param-value.js");
/* harmony import */ var _helpers_assign_native_audio_node_options__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../helpers/assign-native-audio-node-options */ "./node_modules/standardized-audio-context/build/es2019/helpers/assign-native-audio-node-options.js");
;

const createNativeGainNode = (nativeContext, options) => {
    const nativeGainNode = nativeContext.createGain();
    (0,_helpers_assign_native_audio_node_options__WEBPACK_IMPORTED_MODULE_1__.assignNativeAudioNodeOptions)(nativeGainNode, options);
    (0,_helpers_assign_native_audio_node_audio_param_value__WEBPACK_IMPORTED_MODULE_0__.assignNativeAudioNodeAudioParamValue)(nativeGainNode, options, 'gain');
    return nativeGainNode;
};
//# sourceMappingURL=native-gain-node.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/native-iir-filter-node-factory.js":
/*!**********************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/native-iir-filter-node-factory.js ***!
  \**********************************************************************************************************/
/*! namespace exports */
/*! export createNativeIIRFilterNodeFactory [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "createNativeIIRFilterNodeFactory": () => /* binding */ createNativeIIRFilterNodeFactory
/* harmony export */ });
/* harmony import */ var _helpers_assign_native_audio_node_options__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../helpers/assign-native-audio-node-options */ "./node_modules/standardized-audio-context/build/es2019/helpers/assign-native-audio-node-options.js");
;
const createNativeIIRFilterNodeFactory = (createNativeIIRFilterNodeFaker) => {
    return (nativeContext, baseLatency, options) => {
        // Bug #9: Safari does not support IIRFilterNodes.
        if (nativeContext.createIIRFilter === undefined) {
            return createNativeIIRFilterNodeFaker(nativeContext, baseLatency, options);
        }
        // @todo TypeScript defines the parameters of createIIRFilter() as arrays of numbers.
        const nativeIIRFilterNode = nativeContext.createIIRFilter(options.feedforward, options.feedback);
        (0,_helpers_assign_native_audio_node_options__WEBPACK_IMPORTED_MODULE_0__.assignNativeAudioNodeOptions)(nativeIIRFilterNode, options);
        return nativeIIRFilterNode;
    };
};
//# sourceMappingURL=native-iir-filter-node-factory.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/native-iir-filter-node-faker-factory.js":
/*!****************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/native-iir-filter-node-faker-factory.js ***!
  \****************************************************************************************************************/
/*! namespace exports */
/*! export createNativeIIRFilterNodeFakerFactory [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "createNativeIIRFilterNodeFakerFactory": () => /* binding */ createNativeIIRFilterNodeFakerFactory
/* harmony export */ });
/* harmony import */ var _helpers_compute_buffer_size__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../helpers/compute-buffer-size */ "./node_modules/standardized-audio-context/build/es2019/helpers/compute-buffer-size.js");
/* harmony import */ var _helpers_filter_buffer__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../helpers/filter-buffer */ "./node_modules/standardized-audio-context/build/es2019/helpers/filter-buffer.js");
/* harmony import */ var _helpers_intercept_connections__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../helpers/intercept-connections */ "./node_modules/standardized-audio-context/build/es2019/helpers/intercept-connections.js");
;


function divide(a, b) {
    const denominator = b[0] * b[0] + b[1] * b[1];
    return [(a[0] * b[0] + a[1] * b[1]) / denominator, (a[1] * b[0] - a[0] * b[1]) / denominator];
}
function multiply(a, b) {
    return [a[0] * b[0] - a[1] * b[1], a[0] * b[1] + a[1] * b[0]];
}
function evaluatePolynomial(coefficient, z) {
    let result = [0, 0];
    for (let i = coefficient.length - 1; i >= 0; i -= 1) {
        result = multiply(result, z);
        result[0] += coefficient[i];
    }
    return result;
}
const createNativeIIRFilterNodeFakerFactory = (createInvalidAccessError, createInvalidStateError, createNativeScriptProcessorNode, createNotSupportedError) => {
    return (nativeContext, baseLatency, { channelCount, channelCountMode, channelInterpretation, feedback, feedforward }) => {
        const bufferSize = (0,_helpers_compute_buffer_size__WEBPACK_IMPORTED_MODULE_0__.computeBufferSize)(baseLatency, nativeContext.sampleRate);
        const convertedFeedback = feedback instanceof Float64Array ? feedback : new Float64Array(feedback);
        const convertedFeedforward = feedforward instanceof Float64Array ? feedforward : new Float64Array(feedforward);
        const feedbackLength = convertedFeedback.length;
        const feedforwardLength = convertedFeedforward.length;
        const minLength = Math.min(feedbackLength, feedforwardLength);
        if (feedbackLength === 0 || feedbackLength > 20) {
            throw createNotSupportedError();
        }
        if (convertedFeedback[0] === 0) {
            throw createInvalidStateError();
        }
        if (feedforwardLength === 0 || feedforwardLength > 20) {
            throw createNotSupportedError();
        }
        if (convertedFeedforward[0] === 0) {
            throw createInvalidStateError();
        }
        if (convertedFeedback[0] !== 1) {
            for (let i = 0; i < feedforwardLength; i += 1) {
                convertedFeedforward[i] /= convertedFeedback[0];
            }
            for (let i = 1; i < feedbackLength; i += 1) {
                convertedFeedback[i] /= convertedFeedback[0];
            }
        }
        const scriptProcessorNode = createNativeScriptProcessorNode(nativeContext, bufferSize, channelCount, channelCount);
        scriptProcessorNode.channelCount = channelCount;
        scriptProcessorNode.channelCountMode = channelCountMode;
        scriptProcessorNode.channelInterpretation = channelInterpretation;
        const bufferLength = 32;
        const bufferIndexes = [];
        const xBuffers = [];
        const yBuffers = [];
        for (let i = 0; i < channelCount; i += 1) {
            bufferIndexes.push(0);
            const xBuffer = new Float32Array(bufferLength);
            const yBuffer = new Float32Array(bufferLength);
            xBuffer.fill(0);
            yBuffer.fill(0);
            xBuffers.push(xBuffer);
            yBuffers.push(yBuffer);
        }
        // tslint:disable-next-line:deprecation
        scriptProcessorNode.onaudioprocess = (event) => {
            const inputBuffer = event.inputBuffer;
            const outputBuffer = event.outputBuffer;
            const numberOfChannels = inputBuffer.numberOfChannels;
            for (let i = 0; i < numberOfChannels; i += 1) {
                const input = inputBuffer.getChannelData(i);
                const output = outputBuffer.getChannelData(i);
                bufferIndexes[i] = (0,_helpers_filter_buffer__WEBPACK_IMPORTED_MODULE_1__.filterBuffer)(convertedFeedback, feedbackLength, convertedFeedforward, feedforwardLength, minLength, xBuffers[i], yBuffers[i], bufferIndexes[i], bufferLength, input, output);
            }
        };
        const nyquist = nativeContext.sampleRate / 2;
        const nativeIIRFilterNodeFaker = {
            get bufferSize() {
                return bufferSize;
            },
            get channelCount() {
                return scriptProcessorNode.channelCount;
            },
            set channelCount(value) {
                scriptProcessorNode.channelCount = value;
            },
            get channelCountMode() {
                return scriptProcessorNode.channelCountMode;
            },
            set channelCountMode(value) {
                scriptProcessorNode.channelCountMode = value;
            },
            get channelInterpretation() {
                return scriptProcessorNode.channelInterpretation;
            },
            set channelInterpretation(value) {
                scriptProcessorNode.channelInterpretation = value;
            },
            get context() {
                return scriptProcessorNode.context;
            },
            get inputs() {
                return [scriptProcessorNode];
            },
            get numberOfInputs() {
                return scriptProcessorNode.numberOfInputs;
            },
            get numberOfOutputs() {
                return scriptProcessorNode.numberOfOutputs;
            },
            addEventListener(...args) {
                // @todo Dissallow adding an audioprocess listener.
                return scriptProcessorNode.addEventListener(args[0], args[1], args[2]);
            },
            dispatchEvent(...args) {
                return scriptProcessorNode.dispatchEvent(args[0]);
            },
            getFrequencyResponse(frequencyHz, magResponse, phaseResponse) {
                if (frequencyHz.length !== magResponse.length || magResponse.length !== phaseResponse.length) {
                    throw createInvalidAccessError();
                }
                const length = frequencyHz.length;
                for (let i = 0; i < length; i += 1) {
                    const omega = -Math.PI * (frequencyHz[i] / nyquist);
                    const z = [Math.cos(omega), Math.sin(omega)];
                    const numerator = evaluatePolynomial(convertedFeedforward, z);
                    const denominator = evaluatePolynomial(convertedFeedback, z);
                    const response = divide(numerator, denominator);
                    magResponse[i] = Math.sqrt(response[0] * response[0] + response[1] * response[1]);
                    phaseResponse[i] = Math.atan2(response[1], response[0]);
                }
            },
            removeEventListener(...args) {
                return scriptProcessorNode.removeEventListener(args[0], args[1], args[2]);
            }
        };
        return (0,_helpers_intercept_connections__WEBPACK_IMPORTED_MODULE_2__.interceptConnections)(nativeIIRFilterNodeFaker, scriptProcessorNode);
    };
};
//# sourceMappingURL=native-iir-filter-node-faker-factory.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/native-media-element-audio-source-node.js":
/*!******************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/native-media-element-audio-source-node.js ***!
  \******************************************************************************************************************/
/*! namespace exports */
/*! export createNativeMediaElementAudioSourceNode [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "createNativeMediaElementAudioSourceNode": () => /* binding */ createNativeMediaElementAudioSourceNode
/* harmony export */ });
const createNativeMediaElementAudioSourceNode = (nativeAudioContext, options) => {
    return nativeAudioContext.createMediaElementSource(options.mediaElement);
};
//# sourceMappingURL=native-media-element-audio-source-node.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/native-media-stream-audio-destination-node.js":
/*!**********************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/native-media-stream-audio-destination-node.js ***!
  \**********************************************************************************************************************/
/*! namespace exports */
/*! export createNativeMediaStreamAudioDestinationNode [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "createNativeMediaStreamAudioDestinationNode": () => /* binding */ createNativeMediaStreamAudioDestinationNode
/* harmony export */ });
/* harmony import */ var _helpers_assign_native_audio_node_options__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../helpers/assign-native-audio-node-options */ "./node_modules/standardized-audio-context/build/es2019/helpers/assign-native-audio-node-options.js");
;
const createNativeMediaStreamAudioDestinationNode = (nativeAudioContext, options) => {
    const nativeMediaStreamAudioDestinationNode = nativeAudioContext.createMediaStreamDestination();
    (0,_helpers_assign_native_audio_node_options__WEBPACK_IMPORTED_MODULE_0__.assignNativeAudioNodeOptions)(nativeMediaStreamAudioDestinationNode, options);
    // Bug #174: Safari does expose a wrong numberOfOutputs.
    if (nativeMediaStreamAudioDestinationNode.numberOfOutputs === 1) {
        Object.defineProperty(nativeMediaStreamAudioDestinationNode, 'numberOfOutputs', { get: () => 0 });
    }
    return nativeMediaStreamAudioDestinationNode;
};
//# sourceMappingURL=native-media-stream-audio-destination-node.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/native-media-stream-audio-source-node.js":
/*!*****************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/native-media-stream-audio-source-node.js ***!
  \*****************************************************************************************************************/
/*! namespace exports */
/*! export createNativeMediaStreamAudioSourceNode [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "createNativeMediaStreamAudioSourceNode": () => /* binding */ createNativeMediaStreamAudioSourceNode
/* harmony export */ });
const createNativeMediaStreamAudioSourceNode = (nativeAudioContext, { mediaStream }) => {
    const audioStreamTracks = mediaStream.getAudioTracks();
    /*
     * Bug #151: Safari does not use the audio track as input anymore if it gets removed from the mediaStream after construction.
     * Bug #159: Safari picks the first audio track if the MediaStream has more than one audio track.
     */
    audioStreamTracks.sort((a, b) => (a.id < b.id ? -1 : a.id > b.id ? 1 : 0));
    const filteredAudioStreamTracks = audioStreamTracks.slice(0, 1);
    const nativeMediaStreamAudioSourceNode = nativeAudioContext.createMediaStreamSource(new MediaStream(filteredAudioStreamTracks));
    /*
     * Bug #151 & #159: The given mediaStream gets reconstructed before it gets passed to the native node which is why the accessor needs
     * to be overwritten as it would otherwise expose the reconstructed version.
     */
    Object.defineProperty(nativeMediaStreamAudioSourceNode, 'mediaStream', { value: mediaStream });
    return nativeMediaStreamAudioSourceNode;
};
//# sourceMappingURL=native-media-stream-audio-source-node.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/native-media-stream-track-audio-source-node-factory.js":
/*!*******************************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/native-media-stream-track-audio-source-node-factory.js ***!
  \*******************************************************************************************************************************/
/*! namespace exports */
/*! export createNativeMediaStreamTrackAudioSourceNodeFactory [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "createNativeMediaStreamTrackAudioSourceNodeFactory": () => /* binding */ createNativeMediaStreamTrackAudioSourceNodeFactory
/* harmony export */ });
const createNativeMediaStreamTrackAudioSourceNodeFactory = (createInvalidStateError, isNativeOfflineAudioContext) => {
    return (nativeAudioContext, { mediaStreamTrack }) => {
        // Bug #121: Only Firefox does yet support the MediaStreamTrackAudioSourceNode.
        if (typeof nativeAudioContext.createMediaStreamTrackSource === 'function') {
            return nativeAudioContext.createMediaStreamTrackSource(mediaStreamTrack);
        }
        const mediaStream = new MediaStream([mediaStreamTrack]);
        const nativeMediaStreamAudioSourceNode = nativeAudioContext.createMediaStreamSource(mediaStream);
        // Bug #120: Firefox does not throw an error if the mediaStream has no audio track.
        if (mediaStreamTrack.kind !== 'audio') {
            throw createInvalidStateError();
        }
        // Bug #172: Safari allows to create a MediaStreamAudioSourceNode with an OfflineAudioContext.
        if (isNativeOfflineAudioContext(nativeAudioContext)) {
            throw new TypeError();
        }
        return nativeMediaStreamAudioSourceNode;
    };
};
//# sourceMappingURL=native-media-stream-track-audio-source-node-factory.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/native-offline-audio-context-constructor.js":
/*!********************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/native-offline-audio-context-constructor.js ***!
  \********************************************************************************************************************/
/*! namespace exports */
/*! export createNativeOfflineAudioContextConstructor [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "createNativeOfflineAudioContextConstructor": () => /* binding */ createNativeOfflineAudioContextConstructor
/* harmony export */ });
const createNativeOfflineAudioContextConstructor = (window) => {
    if (window === null) {
        return null;
    }
    if (window.hasOwnProperty('OfflineAudioContext')) {
        return window.OfflineAudioContext;
    }
    return window.hasOwnProperty('webkitOfflineAudioContext') ? window.webkitOfflineAudioContext : null;
};
//# sourceMappingURL=native-offline-audio-context-constructor.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/native-oscillator-node-factory.js":
/*!**********************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/native-oscillator-node-factory.js ***!
  \**********************************************************************************************************/
/*! namespace exports */
/*! export createNativeOscillatorNodeFactory [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "createNativeOscillatorNodeFactory": () => /* binding */ createNativeOscillatorNodeFactory
/* harmony export */ });
/* harmony import */ var _helpers_assign_native_audio_node_audio_param_value__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../helpers/assign-native-audio-node-audio-param-value */ "./node_modules/standardized-audio-context/build/es2019/helpers/assign-native-audio-node-audio-param-value.js");
/* harmony import */ var _helpers_assign_native_audio_node_option__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../helpers/assign-native-audio-node-option */ "./node_modules/standardized-audio-context/build/es2019/helpers/assign-native-audio-node-option.js");
/* harmony import */ var _helpers_assign_native_audio_node_options__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../helpers/assign-native-audio-node-options */ "./node_modules/standardized-audio-context/build/es2019/helpers/assign-native-audio-node-options.js");
/* harmony import */ var _helpers_wrap_audio_scheduled_source_node_start_method_negative_parameters__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../helpers/wrap-audio-scheduled-source-node-start-method-negative-parameters */ "./node_modules/standardized-audio-context/build/es2019/helpers/wrap-audio-scheduled-source-node-start-method-negative-parameters.js");
/* harmony import */ var _helpers_wrap_audio_scheduled_source_node_stop_method_negative_parameters__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../helpers/wrap-audio-scheduled-source-node-stop-method-negative-parameters */ "./node_modules/standardized-audio-context/build/es2019/helpers/wrap-audio-scheduled-source-node-stop-method-negative-parameters.js");
;




const createNativeOscillatorNodeFactory = (addSilentConnection, cacheTestResult, testAudioScheduledSourceNodeStartMethodNegativeParametersSupport, testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport, testAudioScheduledSourceNodeStopMethodNegativeParametersSupport, wrapAudioScheduledSourceNodeStopMethodConsecutiveCalls) => {
    return (nativeContext, options) => {
        const nativeOscillatorNode = nativeContext.createOscillator();
        (0,_helpers_assign_native_audio_node_options__WEBPACK_IMPORTED_MODULE_2__.assignNativeAudioNodeOptions)(nativeOscillatorNode, options);
        (0,_helpers_assign_native_audio_node_audio_param_value__WEBPACK_IMPORTED_MODULE_0__.assignNativeAudioNodeAudioParamValue)(nativeOscillatorNode, options, 'detune');
        (0,_helpers_assign_native_audio_node_audio_param_value__WEBPACK_IMPORTED_MODULE_0__.assignNativeAudioNodeAudioParamValue)(nativeOscillatorNode, options, 'frequency');
        if (options.periodicWave !== undefined) {
            nativeOscillatorNode.setPeriodicWave(options.periodicWave);
        }
        else {
            (0,_helpers_assign_native_audio_node_option__WEBPACK_IMPORTED_MODULE_1__.assignNativeAudioNodeOption)(nativeOscillatorNode, options, 'type');
        }
        // Bug #44: Only Chrome, Edge & Opera throw a RangeError yet.
        if (!cacheTestResult(testAudioScheduledSourceNodeStartMethodNegativeParametersSupport, () => testAudioScheduledSourceNodeStartMethodNegativeParametersSupport(nativeContext))) {
            (0,_helpers_wrap_audio_scheduled_source_node_start_method_negative_parameters__WEBPACK_IMPORTED_MODULE_3__.wrapAudioScheduledSourceNodeStartMethodNegativeParameters)(nativeOscillatorNode);
        }
        // Bug #19: Safari does not ignore calls to stop() of an already stopped AudioBufferSourceNode.
        if (!cacheTestResult(testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport, () => testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport(nativeContext))) {
            wrapAudioScheduledSourceNodeStopMethodConsecutiveCalls(nativeOscillatorNode, nativeContext);
        }
        // Bug #44: Only Firefox does not throw a RangeError yet.
        if (!cacheTestResult(testAudioScheduledSourceNodeStopMethodNegativeParametersSupport, () => testAudioScheduledSourceNodeStopMethodNegativeParametersSupport(nativeContext))) {
            (0,_helpers_wrap_audio_scheduled_source_node_stop_method_negative_parameters__WEBPACK_IMPORTED_MODULE_4__.wrapAudioScheduledSourceNodeStopMethodNegativeParameters)(nativeOscillatorNode);
        }
        // Bug #175: Safari will not fire an ended event if the OscillatorNode is unconnected.
        addSilentConnection(nativeContext, nativeOscillatorNode);
        return nativeOscillatorNode;
    };
};
//# sourceMappingURL=native-oscillator-node-factory.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/native-panner-node-factory.js":
/*!******************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/native-panner-node-factory.js ***!
  \******************************************************************************************************/
/*! namespace exports */
/*! export createNativePannerNodeFactory [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "createNativePannerNodeFactory": () => /* binding */ createNativePannerNodeFactory
/* harmony export */ });
/* harmony import */ var _helpers_assign_native_audio_node_audio_param_value__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../helpers/assign-native-audio-node-audio-param-value */ "./node_modules/standardized-audio-context/build/es2019/helpers/assign-native-audio-node-audio-param-value.js");
/* harmony import */ var _helpers_assign_native_audio_node_option__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../helpers/assign-native-audio-node-option */ "./node_modules/standardized-audio-context/build/es2019/helpers/assign-native-audio-node-option.js");
/* harmony import */ var _helpers_assign_native_audio_node_options__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../helpers/assign-native-audio-node-options */ "./node_modules/standardized-audio-context/build/es2019/helpers/assign-native-audio-node-options.js");
;


const createNativePannerNodeFactory = (createNativePannerNodeFaker) => {
    return (nativeContext, options) => {
        const nativePannerNode = nativeContext.createPanner();
        // Bug #124: Safari does not support modifying the orientation and the position with AudioParams.
        if (nativePannerNode.orientationX === undefined) {
            return createNativePannerNodeFaker(nativeContext, options);
        }
        (0,_helpers_assign_native_audio_node_options__WEBPACK_IMPORTED_MODULE_2__.assignNativeAudioNodeOptions)(nativePannerNode, options);
        (0,_helpers_assign_native_audio_node_audio_param_value__WEBPACK_IMPORTED_MODULE_0__.assignNativeAudioNodeAudioParamValue)(nativePannerNode, options, 'orientationX');
        (0,_helpers_assign_native_audio_node_audio_param_value__WEBPACK_IMPORTED_MODULE_0__.assignNativeAudioNodeAudioParamValue)(nativePannerNode, options, 'orientationY');
        (0,_helpers_assign_native_audio_node_audio_param_value__WEBPACK_IMPORTED_MODULE_0__.assignNativeAudioNodeAudioParamValue)(nativePannerNode, options, 'orientationZ');
        (0,_helpers_assign_native_audio_node_audio_param_value__WEBPACK_IMPORTED_MODULE_0__.assignNativeAudioNodeAudioParamValue)(nativePannerNode, options, 'positionX');
        (0,_helpers_assign_native_audio_node_audio_param_value__WEBPACK_IMPORTED_MODULE_0__.assignNativeAudioNodeAudioParamValue)(nativePannerNode, options, 'positionY');
        (0,_helpers_assign_native_audio_node_audio_param_value__WEBPACK_IMPORTED_MODULE_0__.assignNativeAudioNodeAudioParamValue)(nativePannerNode, options, 'positionZ');
        (0,_helpers_assign_native_audio_node_option__WEBPACK_IMPORTED_MODULE_1__.assignNativeAudioNodeOption)(nativePannerNode, options, 'coneInnerAngle');
        (0,_helpers_assign_native_audio_node_option__WEBPACK_IMPORTED_MODULE_1__.assignNativeAudioNodeOption)(nativePannerNode, options, 'coneOuterAngle');
        (0,_helpers_assign_native_audio_node_option__WEBPACK_IMPORTED_MODULE_1__.assignNativeAudioNodeOption)(nativePannerNode, options, 'coneOuterGain');
        (0,_helpers_assign_native_audio_node_option__WEBPACK_IMPORTED_MODULE_1__.assignNativeAudioNodeOption)(nativePannerNode, options, 'distanceModel');
        (0,_helpers_assign_native_audio_node_option__WEBPACK_IMPORTED_MODULE_1__.assignNativeAudioNodeOption)(nativePannerNode, options, 'maxDistance');
        (0,_helpers_assign_native_audio_node_option__WEBPACK_IMPORTED_MODULE_1__.assignNativeAudioNodeOption)(nativePannerNode, options, 'panningModel');
        (0,_helpers_assign_native_audio_node_option__WEBPACK_IMPORTED_MODULE_1__.assignNativeAudioNodeOption)(nativePannerNode, options, 'refDistance');
        (0,_helpers_assign_native_audio_node_option__WEBPACK_IMPORTED_MODULE_1__.assignNativeAudioNodeOption)(nativePannerNode, options, 'rolloffFactor');
        return nativePannerNode;
    };
};
//# sourceMappingURL=native-panner-node-factory.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/native-panner-node-faker-factory.js":
/*!************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/native-panner-node-faker-factory.js ***!
  \************************************************************************************************************/
/*! namespace exports */
/*! export createNativePannerNodeFakerFactory [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "createNativePannerNodeFakerFactory": () => /* binding */ createNativePannerNodeFakerFactory
/* harmony export */ });
/* harmony import */ var _helpers_assign_native_audio_node_options__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../helpers/assign-native-audio-node-options */ "./node_modules/standardized-audio-context/build/es2019/helpers/assign-native-audio-node-options.js");
/* harmony import */ var _helpers_intercept_connections__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../helpers/intercept-connections */ "./node_modules/standardized-audio-context/build/es2019/helpers/intercept-connections.js");
;

const createNativePannerNodeFakerFactory = (connectNativeAudioNodeToNativeAudioNode, createInvalidStateError, createNativeChannelMergerNode, createNativeGainNode, createNativeScriptProcessorNode, createNativeWaveShaperNode, createNotSupportedError, disconnectNativeAudioNodeFromNativeAudioNode, monitorConnections) => {
    return (nativeContext, { coneInnerAngle, coneOuterAngle, coneOuterGain, distanceModel, maxDistance, orientationX, orientationY, orientationZ, panningModel, positionX, positionY, positionZ, refDistance, rolloffFactor, ...audioNodeOptions }) => {
        const pannerNode = nativeContext.createPanner();
        // Bug #125: Safari does not throw an error yet.
        if (audioNodeOptions.channelCount > 2) {
            throw createNotSupportedError();
        }
        // Bug #126: Safari does not throw an error yet.
        if (audioNodeOptions.channelCountMode === 'max') {
            throw createNotSupportedError();
        }
        (0,_helpers_assign_native_audio_node_options__WEBPACK_IMPORTED_MODULE_0__.assignNativeAudioNodeOptions)(pannerNode, audioNodeOptions);
        const SINGLE_CHANNEL_OPTIONS = {
            channelCount: 1,
            channelCountMode: 'explicit',
            channelInterpretation: 'discrete'
        };
        const channelMergerNode = createNativeChannelMergerNode(nativeContext, {
            ...SINGLE_CHANNEL_OPTIONS,
            channelInterpretation: 'speakers',
            numberOfInputs: 6
        });
        const inputGainNode = createNativeGainNode(nativeContext, { ...audioNodeOptions, gain: 1 });
        const orientationXGainNode = createNativeGainNode(nativeContext, { ...SINGLE_CHANNEL_OPTIONS, gain: 1 });
        const orientationYGainNode = createNativeGainNode(nativeContext, { ...SINGLE_CHANNEL_OPTIONS, gain: 0 });
        const orientationZGainNode = createNativeGainNode(nativeContext, { ...SINGLE_CHANNEL_OPTIONS, gain: 0 });
        const positionXGainNode = createNativeGainNode(nativeContext, { ...SINGLE_CHANNEL_OPTIONS, gain: 0 });
        const positionYGainNode = createNativeGainNode(nativeContext, { ...SINGLE_CHANNEL_OPTIONS, gain: 0 });
        const positionZGainNode = createNativeGainNode(nativeContext, { ...SINGLE_CHANNEL_OPTIONS, gain: 0 });
        const scriptProcessorNode = createNativeScriptProcessorNode(nativeContext, 256, 6, 1);
        const waveShaperNode = createNativeWaveShaperNode(nativeContext, {
            ...SINGLE_CHANNEL_OPTIONS,
            curve: new Float32Array([1, 1]),
            oversample: 'none'
        });
        let lastOrientation = [orientationX, orientationY, orientationZ];
        let lastPosition = [positionX, positionY, positionZ];
        // tslint:disable-next-line:deprecation
        scriptProcessorNode.onaudioprocess = ({ inputBuffer }) => {
            const orientation = [
                inputBuffer.getChannelData(0)[0],
                inputBuffer.getChannelData(1)[0],
                inputBuffer.getChannelData(2)[0]
            ];
            if (orientation.some((value, index) => value !== lastOrientation[index])) {
                pannerNode.setOrientation(...orientation); // tslint:disable-line:deprecation
                lastOrientation = orientation;
            }
            const positon = [
                inputBuffer.getChannelData(3)[0],
                inputBuffer.getChannelData(4)[0],
                inputBuffer.getChannelData(5)[0]
            ];
            if (positon.some((value, index) => value !== lastPosition[index])) {
                pannerNode.setPosition(...positon); // tslint:disable-line:deprecation
                lastPosition = positon;
            }
        };
        Object.defineProperty(orientationYGainNode.gain, 'defaultValue', { get: () => 0 });
        Object.defineProperty(orientationZGainNode.gain, 'defaultValue', { get: () => 0 });
        Object.defineProperty(positionXGainNode.gain, 'defaultValue', { get: () => 0 });
        Object.defineProperty(positionYGainNode.gain, 'defaultValue', { get: () => 0 });
        Object.defineProperty(positionZGainNode.gain, 'defaultValue', { get: () => 0 });
        const nativePannerNodeFaker = {
            get bufferSize() {
                return undefined;
            },
            get channelCount() {
                return pannerNode.channelCount;
            },
            set channelCount(value) {
                // Bug #125: Safari does not throw an error yet.
                if (value > 2) {
                    throw createNotSupportedError();
                }
                inputGainNode.channelCount = value;
                pannerNode.channelCount = value;
            },
            get channelCountMode() {
                return pannerNode.channelCountMode;
            },
            set channelCountMode(value) {
                // Bug #126: Safari does not throw an error yet.
                if (value === 'max') {
                    throw createNotSupportedError();
                }
                inputGainNode.channelCountMode = value;
                pannerNode.channelCountMode = value;
            },
            get channelInterpretation() {
                return pannerNode.channelInterpretation;
            },
            set channelInterpretation(value) {
                inputGainNode.channelInterpretation = value;
                pannerNode.channelInterpretation = value;
            },
            get coneInnerAngle() {
                return pannerNode.coneInnerAngle;
            },
            set coneInnerAngle(value) {
                pannerNode.coneInnerAngle = value;
            },
            get coneOuterAngle() {
                return pannerNode.coneOuterAngle;
            },
            set coneOuterAngle(value) {
                pannerNode.coneOuterAngle = value;
            },
            get coneOuterGain() {
                return pannerNode.coneOuterGain;
            },
            set coneOuterGain(value) {
                // Bug #127: Safari does not throw an InvalidStateError yet.
                if (value < 0 || value > 1) {
                    throw createInvalidStateError();
                }
                pannerNode.coneOuterGain = value;
            },
            get context() {
                return pannerNode.context;
            },
            get distanceModel() {
                return pannerNode.distanceModel;
            },
            set distanceModel(value) {
                pannerNode.distanceModel = value;
            },
            get inputs() {
                return [inputGainNode];
            },
            get maxDistance() {
                return pannerNode.maxDistance;
            },
            set maxDistance(value) {
                // Bug #128: Safari does not throw an error yet.
                if (value < 0) {
                    throw new RangeError();
                }
                pannerNode.maxDistance = value;
            },
            get numberOfInputs() {
                return pannerNode.numberOfInputs;
            },
            get numberOfOutputs() {
                return pannerNode.numberOfOutputs;
            },
            get orientationX() {
                return orientationXGainNode.gain;
            },
            get orientationY() {
                return orientationYGainNode.gain;
            },
            get orientationZ() {
                return orientationZGainNode.gain;
            },
            get panningModel() {
                return pannerNode.panningModel;
            },
            set panningModel(value) {
                pannerNode.panningModel = value;
            },
            get positionX() {
                return positionXGainNode.gain;
            },
            get positionY() {
                return positionYGainNode.gain;
            },
            get positionZ() {
                return positionZGainNode.gain;
            },
            get refDistance() {
                return pannerNode.refDistance;
            },
            set refDistance(value) {
                // Bug #129: Safari does not throw an error yet.
                if (value < 0) {
                    throw new RangeError();
                }
                pannerNode.refDistance = value;
            },
            get rolloffFactor() {
                return pannerNode.rolloffFactor;
            },
            set rolloffFactor(value) {
                // Bug #130: Safari does not throw an error yet.
                if (value < 0) {
                    throw new RangeError();
                }
                pannerNode.rolloffFactor = value;
            },
            addEventListener(...args) {
                return inputGainNode.addEventListener(args[0], args[1], args[2]);
            },
            dispatchEvent(...args) {
                return inputGainNode.dispatchEvent(args[0]);
            },
            removeEventListener(...args) {
                return inputGainNode.removeEventListener(args[0], args[1], args[2]);
            }
        };
        if (coneInnerAngle !== nativePannerNodeFaker.coneInnerAngle) {
            nativePannerNodeFaker.coneInnerAngle = coneInnerAngle;
        }
        if (coneOuterAngle !== nativePannerNodeFaker.coneOuterAngle) {
            nativePannerNodeFaker.coneOuterAngle = coneOuterAngle;
        }
        if (coneOuterGain !== nativePannerNodeFaker.coneOuterGain) {
            nativePannerNodeFaker.coneOuterGain = coneOuterGain;
        }
        if (distanceModel !== nativePannerNodeFaker.distanceModel) {
            nativePannerNodeFaker.distanceModel = distanceModel;
        }
        if (maxDistance !== nativePannerNodeFaker.maxDistance) {
            nativePannerNodeFaker.maxDistance = maxDistance;
        }
        if (orientationX !== nativePannerNodeFaker.orientationX.value) {
            nativePannerNodeFaker.orientationX.value = orientationX;
        }
        if (orientationY !== nativePannerNodeFaker.orientationY.value) {
            nativePannerNodeFaker.orientationY.value = orientationY;
        }
        if (orientationZ !== nativePannerNodeFaker.orientationZ.value) {
            nativePannerNodeFaker.orientationZ.value = orientationZ;
        }
        if (panningModel !== nativePannerNodeFaker.panningModel) {
            nativePannerNodeFaker.panningModel = panningModel;
        }
        if (positionX !== nativePannerNodeFaker.positionX.value) {
            nativePannerNodeFaker.positionX.value = positionX;
        }
        if (positionY !== nativePannerNodeFaker.positionY.value) {
            nativePannerNodeFaker.positionY.value = positionY;
        }
        if (positionZ !== nativePannerNodeFaker.positionZ.value) {
            nativePannerNodeFaker.positionZ.value = positionZ;
        }
        if (refDistance !== nativePannerNodeFaker.refDistance) {
            nativePannerNodeFaker.refDistance = refDistance;
        }
        if (rolloffFactor !== nativePannerNodeFaker.rolloffFactor) {
            nativePannerNodeFaker.rolloffFactor = rolloffFactor;
        }
        if (lastOrientation[0] !== 1 || lastOrientation[1] !== 0 || lastOrientation[2] !== 0) {
            pannerNode.setOrientation(...lastOrientation); // tslint:disable-line:deprecation
        }
        if (lastPosition[0] !== 0 || lastPosition[1] !== 0 || lastPosition[2] !== 0) {
            pannerNode.setPosition(...lastPosition); // tslint:disable-line:deprecation
        }
        const whenConnected = () => {
            inputGainNode.connect(pannerNode);
            // Bug #119: Safari does not fully support the WaveShaperNode.
            connectNativeAudioNodeToNativeAudioNode(inputGainNode, waveShaperNode, 0, 0);
            waveShaperNode.connect(orientationXGainNode).connect(channelMergerNode, 0, 0);
            waveShaperNode.connect(orientationYGainNode).connect(channelMergerNode, 0, 1);
            waveShaperNode.connect(orientationZGainNode).connect(channelMergerNode, 0, 2);
            waveShaperNode.connect(positionXGainNode).connect(channelMergerNode, 0, 3);
            waveShaperNode.connect(positionYGainNode).connect(channelMergerNode, 0, 4);
            waveShaperNode.connect(positionZGainNode).connect(channelMergerNode, 0, 5);
            channelMergerNode.connect(scriptProcessorNode).connect(nativeContext.destination);
        };
        const whenDisconnected = () => {
            inputGainNode.disconnect(pannerNode);
            // Bug #119: Safari does not fully support the WaveShaperNode.
            disconnectNativeAudioNodeFromNativeAudioNode(inputGainNode, waveShaperNode, 0, 0);
            waveShaperNode.disconnect(orientationXGainNode);
            orientationXGainNode.disconnect(channelMergerNode);
            waveShaperNode.disconnect(orientationYGainNode);
            orientationYGainNode.disconnect(channelMergerNode);
            waveShaperNode.disconnect(orientationZGainNode);
            orientationZGainNode.disconnect(channelMergerNode);
            waveShaperNode.disconnect(positionXGainNode);
            positionXGainNode.disconnect(channelMergerNode);
            waveShaperNode.disconnect(positionYGainNode);
            positionYGainNode.disconnect(channelMergerNode);
            waveShaperNode.disconnect(positionZGainNode);
            positionZGainNode.disconnect(channelMergerNode);
            channelMergerNode.disconnect(scriptProcessorNode);
            scriptProcessorNode.disconnect(nativeContext.destination);
        };
        return monitorConnections((0,_helpers_intercept_connections__WEBPACK_IMPORTED_MODULE_1__.interceptConnections)(nativePannerNodeFaker, pannerNode), whenConnected, whenDisconnected);
    };
};
//# sourceMappingURL=native-panner-node-faker-factory.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/native-periodic-wave-factory.js":
/*!********************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/native-periodic-wave-factory.js ***!
  \********************************************************************************************************/
/*! namespace exports */
/*! export createNativePeriodicWaveFactory [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "createNativePeriodicWaveFactory": () => /* binding */ createNativePeriodicWaveFactory
/* harmony export */ });
const createNativePeriodicWaveFactory = (createIndexSizeError) => {
    return (nativeContext, { disableNormalization, imag, real }) => {
        // Bug #180: Safari does not allow to use ordinary arrays.
        const convertedImag = imag instanceof Float32Array ? imag : new Float32Array(imag);
        const convertedReal = real instanceof Float32Array ? real : new Float32Array(real);
        const nativePeriodicWave = nativeContext.createPeriodicWave(convertedReal, convertedImag, { disableNormalization });
        // Bug #181: Safari does not throw an IndexSizeError so far if the given arrays have less than two values.
        if (Array.from(imag).length < 2) {
            throw createIndexSizeError();
        }
        return nativePeriodicWave;
    };
};
//# sourceMappingURL=native-periodic-wave-factory.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/native-script-processor-node.js":
/*!********************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/native-script-processor-node.js ***!
  \********************************************************************************************************/
/*! namespace exports */
/*! export createNativeScriptProcessorNode [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "createNativeScriptProcessorNode": () => /* binding */ createNativeScriptProcessorNode
/* harmony export */ });
const createNativeScriptProcessorNode = (nativeContext, bufferSize, numberOfInputChannels, numberOfOutputChannels) => {
    return nativeContext.createScriptProcessor(bufferSize, numberOfInputChannels, numberOfOutputChannels);
};
//# sourceMappingURL=native-script-processor-node.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/native-stereo-panner-node-factory.js":
/*!*************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/native-stereo-panner-node-factory.js ***!
  \*************************************************************************************************************/
/*! namespace exports */
/*! export createNativeStereoPannerNodeFactory [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "createNativeStereoPannerNodeFactory": () => /* binding */ createNativeStereoPannerNodeFactory
/* harmony export */ });
/* harmony import */ var _helpers_assign_native_audio_node_audio_param_value__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../helpers/assign-native-audio-node-audio-param-value */ "./node_modules/standardized-audio-context/build/es2019/helpers/assign-native-audio-node-audio-param-value.js");
/* harmony import */ var _helpers_assign_native_audio_node_options__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../helpers/assign-native-audio-node-options */ "./node_modules/standardized-audio-context/build/es2019/helpers/assign-native-audio-node-options.js");
;

const createNativeStereoPannerNodeFactory = (createNativeStereoPannerNodeFaker, createNotSupportedError) => {
    return (nativeContext, options) => {
        const channelCountMode = options.channelCountMode;
        /*
         * Bug #105: The channelCountMode of 'clamped-max' should be supported. However it is not possible to write a polyfill for Safari
         * which supports it and therefore it can't be supported at all.
         */
        if (channelCountMode === 'clamped-max') {
            throw createNotSupportedError();
        }
        // Bug #105: Safari does not support the StereoPannerNode.
        if (nativeContext.createStereoPanner === undefined) {
            return createNativeStereoPannerNodeFaker(nativeContext, options);
        }
        const nativeStereoPannerNode = nativeContext.createStereoPanner();
        (0,_helpers_assign_native_audio_node_options__WEBPACK_IMPORTED_MODULE_1__.assignNativeAudioNodeOptions)(nativeStereoPannerNode, options);
        (0,_helpers_assign_native_audio_node_audio_param_value__WEBPACK_IMPORTED_MODULE_0__.assignNativeAudioNodeAudioParamValue)(nativeStereoPannerNode, options, 'pan');
        /*
         * Bug #105: The channelCountMode of 'clamped-max' should be supported. However it is not possible to write a polyfill for Safari
         * which supports it and therefore it can't be supported at all.
         */
        Object.defineProperty(nativeStereoPannerNode, 'channelCountMode', {
            get: () => channelCountMode,
            set: (value) => {
                if (value !== channelCountMode) {
                    throw createNotSupportedError();
                }
            }
        });
        return nativeStereoPannerNode;
    };
};
//# sourceMappingURL=native-stereo-panner-node-factory.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/native-stereo-panner-node-faker-factory.js":
/*!*******************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/native-stereo-panner-node-faker-factory.js ***!
  \*******************************************************************************************************************/
/*! namespace exports */
/*! export createNativeStereoPannerNodeFakerFactory [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "createNativeStereoPannerNodeFakerFactory": () => /* binding */ createNativeStereoPannerNodeFakerFactory
/* harmony export */ });
/* harmony import */ var _helpers_intercept_connections__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../helpers/intercept-connections */ "./node_modules/standardized-audio-context/build/es2019/helpers/intercept-connections.js");
;
const createNativeStereoPannerNodeFakerFactory = (createNativeChannelMergerNode, createNativeChannelSplitterNode, createNativeGainNode, createNativeWaveShaperNode, createNotSupportedError, monitorConnections) => {
    // The curve has a size of 14bit plus 1 value to have an exact representation for zero. This value has been determined experimentally.
    const CURVE_SIZE = 16385;
    const DC_CURVE = new Float32Array([1, 1]);
    const HALF_PI = Math.PI / 2;
    const SINGLE_CHANNEL_OPTIONS = { channelCount: 1, channelCountMode: 'explicit', channelInterpretation: 'discrete' };
    const SINGLE_CHANNEL_WAVE_SHAPER_OPTIONS = { ...SINGLE_CHANNEL_OPTIONS, oversample: 'none' };
    const buildInternalGraphForMono = (nativeContext, inputGainNode, panGainNode, channelMergerNode) => {
        const leftWaveShaperCurve = new Float32Array(CURVE_SIZE);
        const rightWaveShaperCurve = new Float32Array(CURVE_SIZE);
        for (let i = 0; i < CURVE_SIZE; i += 1) {
            const x = (i / (CURVE_SIZE - 1)) * HALF_PI;
            leftWaveShaperCurve[i] = Math.cos(x);
            rightWaveShaperCurve[i] = Math.sin(x);
        }
        const leftGainNode = createNativeGainNode(nativeContext, { ...SINGLE_CHANNEL_OPTIONS, gain: 0 });
        // Bug #119: Safari does not fully support the WaveShaperNode.
        const leftWaveShaperNode = (createNativeWaveShaperNode(nativeContext, { ...SINGLE_CHANNEL_WAVE_SHAPER_OPTIONS, curve: leftWaveShaperCurve }));
        // Bug #119: Safari does not fully support the WaveShaperNode.
        const panWaveShaperNode = (createNativeWaveShaperNode(nativeContext, { ...SINGLE_CHANNEL_WAVE_SHAPER_OPTIONS, curve: DC_CURVE }));
        const rightGainNode = createNativeGainNode(nativeContext, { ...SINGLE_CHANNEL_OPTIONS, gain: 0 });
        // Bug #119: Safari does not fully support the WaveShaperNode.
        const rightWaveShaperNode = (createNativeWaveShaperNode(nativeContext, { ...SINGLE_CHANNEL_WAVE_SHAPER_OPTIONS, curve: rightWaveShaperCurve }));
        return {
            connectGraph() {
                inputGainNode.connect(leftGainNode);
                inputGainNode.connect(panWaveShaperNode.inputs[0]);
                inputGainNode.connect(rightGainNode);
                panWaveShaperNode.connect(panGainNode);
                panGainNode.connect(leftWaveShaperNode.inputs[0]);
                panGainNode.connect(rightWaveShaperNode.inputs[0]);
                leftWaveShaperNode.connect(leftGainNode.gain);
                rightWaveShaperNode.connect(rightGainNode.gain);
                leftGainNode.connect(channelMergerNode, 0, 0);
                rightGainNode.connect(channelMergerNode, 0, 1);
            },
            disconnectGraph() {
                inputGainNode.disconnect(leftGainNode);
                inputGainNode.disconnect(panWaveShaperNode.inputs[0]);
                inputGainNode.disconnect(rightGainNode);
                panWaveShaperNode.disconnect(panGainNode);
                panGainNode.disconnect(leftWaveShaperNode.inputs[0]);
                panGainNode.disconnect(rightWaveShaperNode.inputs[0]);
                leftWaveShaperNode.disconnect(leftGainNode.gain);
                rightWaveShaperNode.disconnect(rightGainNode.gain);
                leftGainNode.disconnect(channelMergerNode, 0, 0);
                rightGainNode.disconnect(channelMergerNode, 0, 1);
            }
        };
    };
    const buildInternalGraphForStereo = (nativeContext, inputGainNode, panGainNode, channelMergerNode) => {
        const leftInputForLeftOutputWaveShaperCurve = new Float32Array(CURVE_SIZE);
        const leftInputForRightOutputWaveShaperCurve = new Float32Array(CURVE_SIZE);
        const rightInputForLeftOutputWaveShaperCurve = new Float32Array(CURVE_SIZE);
        const rightInputForRightOutputWaveShaperCurve = new Float32Array(CURVE_SIZE);
        const centerIndex = Math.floor(CURVE_SIZE / 2);
        for (let i = 0; i < CURVE_SIZE; i += 1) {
            if (i > centerIndex) {
                const x = ((i - centerIndex) / (CURVE_SIZE - 1 - centerIndex)) * HALF_PI;
                leftInputForLeftOutputWaveShaperCurve[i] = Math.cos(x);
                leftInputForRightOutputWaveShaperCurve[i] = Math.sin(x);
                rightInputForLeftOutputWaveShaperCurve[i] = 0;
                rightInputForRightOutputWaveShaperCurve[i] = 1;
            }
            else {
                const x = (i / (CURVE_SIZE - 1 - centerIndex)) * HALF_PI;
                leftInputForLeftOutputWaveShaperCurve[i] = 1;
                leftInputForRightOutputWaveShaperCurve[i] = 0;
                rightInputForLeftOutputWaveShaperCurve[i] = Math.cos(x);
                rightInputForRightOutputWaveShaperCurve[i] = Math.sin(x);
            }
        }
        const channelSplitterNode = createNativeChannelSplitterNode(nativeContext, {
            channelCount: 2,
            channelCountMode: 'explicit',
            channelInterpretation: 'discrete',
            numberOfOutputs: 2
        });
        const leftInputForLeftOutputGainNode = createNativeGainNode(nativeContext, { ...SINGLE_CHANNEL_OPTIONS, gain: 0 });
        // Bug #119: Safari does not fully support the WaveShaperNode.
        const leftInputForLeftOutputWaveShaperNode = createNativeWaveShaperNode(nativeContext, {
            ...SINGLE_CHANNEL_WAVE_SHAPER_OPTIONS,
            curve: leftInputForLeftOutputWaveShaperCurve
        });
        const leftInputForRightOutputGainNode = createNativeGainNode(nativeContext, { ...SINGLE_CHANNEL_OPTIONS, gain: 0 });
        // Bug #119: Safari does not fully support the WaveShaperNode.
        const leftInputForRightOutputWaveShaperNode = createNativeWaveShaperNode(nativeContext, {
            ...SINGLE_CHANNEL_WAVE_SHAPER_OPTIONS,
            curve: leftInputForRightOutputWaveShaperCurve
        });
        // Bug #119: Safari does not fully support the WaveShaperNode.
        const panWaveShaperNode = (createNativeWaveShaperNode(nativeContext, { ...SINGLE_CHANNEL_WAVE_SHAPER_OPTIONS, curve: DC_CURVE }));
        const rightInputForLeftOutputGainNode = createNativeGainNode(nativeContext, { ...SINGLE_CHANNEL_OPTIONS, gain: 0 });
        // Bug #119: Safari does not fully support the WaveShaperNode.
        const rightInputForLeftOutputWaveShaperNode = createNativeWaveShaperNode(nativeContext, {
            ...SINGLE_CHANNEL_WAVE_SHAPER_OPTIONS,
            curve: rightInputForLeftOutputWaveShaperCurve
        });
        const rightInputForRightOutputGainNode = createNativeGainNode(nativeContext, { ...SINGLE_CHANNEL_OPTIONS, gain: 0 });
        // Bug #119: Safari does not fully support the WaveShaperNode.
        const rightInputForRightOutputWaveShaperNode = createNativeWaveShaperNode(nativeContext, {
            ...SINGLE_CHANNEL_WAVE_SHAPER_OPTIONS,
            curve: rightInputForRightOutputWaveShaperCurve
        });
        return {
            connectGraph() {
                inputGainNode.connect(channelSplitterNode);
                inputGainNode.connect(panWaveShaperNode.inputs[0]);
                channelSplitterNode.connect(leftInputForLeftOutputGainNode, 0);
                channelSplitterNode.connect(leftInputForRightOutputGainNode, 0);
                channelSplitterNode.connect(rightInputForLeftOutputGainNode, 1);
                channelSplitterNode.connect(rightInputForRightOutputGainNode, 1);
                panWaveShaperNode.connect(panGainNode);
                panGainNode.connect(leftInputForLeftOutputWaveShaperNode.inputs[0]);
                panGainNode.connect(leftInputForRightOutputWaveShaperNode.inputs[0]);
                panGainNode.connect(rightInputForLeftOutputWaveShaperNode.inputs[0]);
                panGainNode.connect(rightInputForRightOutputWaveShaperNode.inputs[0]);
                leftInputForLeftOutputWaveShaperNode.connect(leftInputForLeftOutputGainNode.gain);
                leftInputForRightOutputWaveShaperNode.connect(leftInputForRightOutputGainNode.gain);
                rightInputForLeftOutputWaveShaperNode.connect(rightInputForLeftOutputGainNode.gain);
                rightInputForRightOutputWaveShaperNode.connect(rightInputForRightOutputGainNode.gain);
                leftInputForLeftOutputGainNode.connect(channelMergerNode, 0, 0);
                rightInputForLeftOutputGainNode.connect(channelMergerNode, 0, 0);
                leftInputForRightOutputGainNode.connect(channelMergerNode, 0, 1);
                rightInputForRightOutputGainNode.connect(channelMergerNode, 0, 1);
            },
            disconnectGraph() {
                inputGainNode.disconnect(channelSplitterNode);
                inputGainNode.disconnect(panWaveShaperNode.inputs[0]);
                channelSplitterNode.disconnect(leftInputForLeftOutputGainNode, 0);
                channelSplitterNode.disconnect(leftInputForRightOutputGainNode, 0);
                channelSplitterNode.disconnect(rightInputForLeftOutputGainNode, 1);
                channelSplitterNode.disconnect(rightInputForRightOutputGainNode, 1);
                panWaveShaperNode.disconnect(panGainNode);
                panGainNode.disconnect(leftInputForLeftOutputWaveShaperNode.inputs[0]);
                panGainNode.disconnect(leftInputForRightOutputWaveShaperNode.inputs[0]);
                panGainNode.disconnect(rightInputForLeftOutputWaveShaperNode.inputs[0]);
                panGainNode.disconnect(rightInputForRightOutputWaveShaperNode.inputs[0]);
                leftInputForLeftOutputWaveShaperNode.disconnect(leftInputForLeftOutputGainNode.gain);
                leftInputForRightOutputWaveShaperNode.disconnect(leftInputForRightOutputGainNode.gain);
                rightInputForLeftOutputWaveShaperNode.disconnect(rightInputForLeftOutputGainNode.gain);
                rightInputForRightOutputWaveShaperNode.disconnect(rightInputForRightOutputGainNode.gain);
                leftInputForLeftOutputGainNode.disconnect(channelMergerNode, 0, 0);
                rightInputForLeftOutputGainNode.disconnect(channelMergerNode, 0, 0);
                leftInputForRightOutputGainNode.disconnect(channelMergerNode, 0, 1);
                rightInputForRightOutputGainNode.disconnect(channelMergerNode, 0, 1);
            }
        };
    };
    const buildInternalGraph = (nativeContext, channelCount, inputGainNode, panGainNode, channelMergerNode) => {
        if (channelCount === 1) {
            return buildInternalGraphForMono(nativeContext, inputGainNode, panGainNode, channelMergerNode);
        }
        if (channelCount === 2) {
            return buildInternalGraphForStereo(nativeContext, inputGainNode, panGainNode, channelMergerNode);
        }
        throw createNotSupportedError();
    };
    return (nativeContext, { channelCount, channelCountMode, pan, ...audioNodeOptions }) => {
        if (channelCountMode === 'max') {
            throw createNotSupportedError();
        }
        const channelMergerNode = createNativeChannelMergerNode(nativeContext, {
            ...audioNodeOptions,
            channelCount: 1,
            channelCountMode,
            numberOfInputs: 2
        });
        const inputGainNode = createNativeGainNode(nativeContext, { ...audioNodeOptions, channelCount, channelCountMode, gain: 1 });
        const panGainNode = createNativeGainNode(nativeContext, {
            channelCount: 1,
            channelCountMode: 'explicit',
            channelInterpretation: 'discrete',
            gain: pan
        });
        let { connectGraph, disconnectGraph } = buildInternalGraph(nativeContext, channelCount, inputGainNode, panGainNode, channelMergerNode);
        Object.defineProperty(panGainNode.gain, 'defaultValue', { get: () => 0 });
        Object.defineProperty(panGainNode.gain, 'minValue', { get: () => -1 });
        const nativeStereoPannerNodeFakerFactory = {
            get bufferSize() {
                return undefined;
            },
            get channelCount() {
                return inputGainNode.channelCount;
            },
            set channelCount(value) {
                if (inputGainNode.channelCount !== value) {
                    if (isConnected) {
                        disconnectGraph();
                    }
                    ({ connectGraph, disconnectGraph } = buildInternalGraph(nativeContext, value, inputGainNode, panGainNode, channelMergerNode));
                    if (isConnected) {
                        connectGraph();
                    }
                }
                inputGainNode.channelCount = value;
            },
            get channelCountMode() {
                return inputGainNode.channelCountMode;
            },
            set channelCountMode(value) {
                if (value === 'clamped-max' || value === 'max') {
                    throw createNotSupportedError();
                }
                inputGainNode.channelCountMode = value;
            },
            get channelInterpretation() {
                return inputGainNode.channelInterpretation;
            },
            set channelInterpretation(value) {
                inputGainNode.channelInterpretation = value;
            },
            get context() {
                return inputGainNode.context;
            },
            get inputs() {
                return [inputGainNode];
            },
            get numberOfInputs() {
                return inputGainNode.numberOfInputs;
            },
            get numberOfOutputs() {
                return inputGainNode.numberOfOutputs;
            },
            get pan() {
                return panGainNode.gain;
            },
            addEventListener(...args) {
                return inputGainNode.addEventListener(args[0], args[1], args[2]);
            },
            dispatchEvent(...args) {
                return inputGainNode.dispatchEvent(args[0]);
            },
            removeEventListener(...args) {
                return inputGainNode.removeEventListener(args[0], args[1], args[2]);
            }
        };
        let isConnected = false;
        const whenConnected = () => {
            connectGraph();
            isConnected = true;
        };
        const whenDisconnected = () => {
            disconnectGraph();
            isConnected = false;
        };
        return monitorConnections((0,_helpers_intercept_connections__WEBPACK_IMPORTED_MODULE_0__.interceptConnections)(nativeStereoPannerNodeFakerFactory, channelMergerNode), whenConnected, whenDisconnected);
    };
};
//# sourceMappingURL=native-stereo-panner-node-faker-factory.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/native-wave-shaper-node-factory.js":
/*!***********************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/native-wave-shaper-node-factory.js ***!
  \***********************************************************************************************************/
/*! namespace exports */
/*! export createNativeWaveShaperNodeFactory [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "createNativeWaveShaperNodeFactory": () => /* binding */ createNativeWaveShaperNodeFactory
/* harmony export */ });
/* harmony import */ var _helpers_assign_native_audio_node_option__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../helpers/assign-native-audio-node-option */ "./node_modules/standardized-audio-context/build/es2019/helpers/assign-native-audio-node-option.js");
/* harmony import */ var _helpers_assign_native_audio_node_options__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../helpers/assign-native-audio-node-options */ "./node_modules/standardized-audio-context/build/es2019/helpers/assign-native-audio-node-options.js");
;

const createNativeWaveShaperNodeFactory = (createConnectedNativeAudioBufferSourceNode, createInvalidStateError, createNativeWaveShaperNodeFaker, isDCCurve, monitorConnections, nativeAudioContextConstructor, overwriteAccessors) => {
    return (nativeContext, options) => {
        const nativeWaveShaperNode = nativeContext.createWaveShaper();
        /*
         * Bug #119: Safari does not correctly map the values.
         * @todo Unfortunately there is no way to test for this behavior in a synchronous fashion which is why testing for the existence of
         * the webkitAudioContext is used as a workaround here.
         */
        if (nativeAudioContextConstructor !== null && nativeAudioContextConstructor.name === 'webkitAudioContext') {
            return createNativeWaveShaperNodeFaker(nativeContext, options);
        }
        (0,_helpers_assign_native_audio_node_options__WEBPACK_IMPORTED_MODULE_1__.assignNativeAudioNodeOptions)(nativeWaveShaperNode, options);
        const curve = options.curve === null || options.curve instanceof Float32Array ? options.curve : new Float32Array(options.curve);
        // Bug #104: Chrome, Edge and Opera will throw an InvalidAccessError when the curve has less than two samples.
        if (curve !== null && curve.length < 2) {
            throw createInvalidStateError();
        }
        // Only values of type Float32Array can be assigned to the curve property.
        (0,_helpers_assign_native_audio_node_option__WEBPACK_IMPORTED_MODULE_0__.assignNativeAudioNodeOption)(nativeWaveShaperNode, { curve }, 'curve');
        (0,_helpers_assign_native_audio_node_option__WEBPACK_IMPORTED_MODULE_0__.assignNativeAudioNodeOption)(nativeWaveShaperNode, options, 'oversample');
        let disconnectNativeAudioBufferSourceNode = null;
        let isConnected = false;
        overwriteAccessors(nativeWaveShaperNode, 'curve', (get) => () => get.call(nativeWaveShaperNode), (set) => (value) => {
            set.call(nativeWaveShaperNode, value);
            if (isConnected) {
                if (isDCCurve(value) && disconnectNativeAudioBufferSourceNode === null) {
                    disconnectNativeAudioBufferSourceNode = createConnectedNativeAudioBufferSourceNode(nativeContext, nativeWaveShaperNode);
                }
                else if (!isDCCurve(value) && disconnectNativeAudioBufferSourceNode !== null) {
                    disconnectNativeAudioBufferSourceNode();
                    disconnectNativeAudioBufferSourceNode = null;
                }
            }
            return value;
        });
        const whenConnected = () => {
            isConnected = true;
            if (isDCCurve(nativeWaveShaperNode.curve)) {
                disconnectNativeAudioBufferSourceNode = createConnectedNativeAudioBufferSourceNode(nativeContext, nativeWaveShaperNode);
            }
        };
        const whenDisconnected = () => {
            isConnected = false;
            if (disconnectNativeAudioBufferSourceNode !== null) {
                disconnectNativeAudioBufferSourceNode();
                disconnectNativeAudioBufferSourceNode = null;
            }
        };
        return monitorConnections(nativeWaveShaperNode, whenConnected, whenDisconnected);
    };
};
//# sourceMappingURL=native-wave-shaper-node-factory.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/native-wave-shaper-node-faker-factory.js":
/*!*****************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/native-wave-shaper-node-faker-factory.js ***!
  \*****************************************************************************************************************/
/*! namespace exports */
/*! export createNativeWaveShaperNodeFakerFactory [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "createNativeWaveShaperNodeFakerFactory": () => /* binding */ createNativeWaveShaperNodeFakerFactory
/* harmony export */ });
/* harmony import */ var _helpers_assign_native_audio_node_options__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../helpers/assign-native-audio-node-options */ "./node_modules/standardized-audio-context/build/es2019/helpers/assign-native-audio-node-options.js");
/* harmony import */ var _helpers_intercept_connections__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../helpers/intercept-connections */ "./node_modules/standardized-audio-context/build/es2019/helpers/intercept-connections.js");
;

const createNativeWaveShaperNodeFakerFactory = (createConnectedNativeAudioBufferSourceNode, createInvalidStateError, createNativeGainNode, isDCCurve, monitorConnections) => {
    return (nativeContext, { curve, oversample, ...audioNodeOptions }) => {
        const negativeWaveShaperNode = nativeContext.createWaveShaper();
        const positiveWaveShaperNode = nativeContext.createWaveShaper();
        (0,_helpers_assign_native_audio_node_options__WEBPACK_IMPORTED_MODULE_0__.assignNativeAudioNodeOptions)(negativeWaveShaperNode, audioNodeOptions);
        (0,_helpers_assign_native_audio_node_options__WEBPACK_IMPORTED_MODULE_0__.assignNativeAudioNodeOptions)(positiveWaveShaperNode, audioNodeOptions);
        const inputGainNode = createNativeGainNode(nativeContext, { ...audioNodeOptions, gain: 1 });
        const invertGainNode = createNativeGainNode(nativeContext, { ...audioNodeOptions, gain: -1 });
        const outputGainNode = createNativeGainNode(nativeContext, { ...audioNodeOptions, gain: 1 });
        const revertGainNode = createNativeGainNode(nativeContext, { ...audioNodeOptions, gain: -1 });
        let disconnectNativeAudioBufferSourceNode = null;
        let isConnected = false;
        let unmodifiedCurve = null;
        const nativeWaveShaperNodeFaker = {
            get bufferSize() {
                return undefined;
            },
            get channelCount() {
                return negativeWaveShaperNode.channelCount;
            },
            set channelCount(value) {
                inputGainNode.channelCount = value;
                invertGainNode.channelCount = value;
                negativeWaveShaperNode.channelCount = value;
                outputGainNode.channelCount = value;
                positiveWaveShaperNode.channelCount = value;
                revertGainNode.channelCount = value;
            },
            get channelCountMode() {
                return negativeWaveShaperNode.channelCountMode;
            },
            set channelCountMode(value) {
                inputGainNode.channelCountMode = value;
                invertGainNode.channelCountMode = value;
                negativeWaveShaperNode.channelCountMode = value;
                outputGainNode.channelCountMode = value;
                positiveWaveShaperNode.channelCountMode = value;
                revertGainNode.channelCountMode = value;
            },
            get channelInterpretation() {
                return negativeWaveShaperNode.channelInterpretation;
            },
            set channelInterpretation(value) {
                inputGainNode.channelInterpretation = value;
                invertGainNode.channelInterpretation = value;
                negativeWaveShaperNode.channelInterpretation = value;
                outputGainNode.channelInterpretation = value;
                positiveWaveShaperNode.channelInterpretation = value;
                revertGainNode.channelInterpretation = value;
            },
            get context() {
                return negativeWaveShaperNode.context;
            },
            get curve() {
                return unmodifiedCurve;
            },
            set curve(value) {
                // Bug #102: Safari does not throw an InvalidStateError when the curve has less than two samples.
                if (value !== null && value.length < 2) {
                    throw createInvalidStateError();
                }
                if (value === null) {
                    negativeWaveShaperNode.curve = value;
                    positiveWaveShaperNode.curve = value;
                }
                else {
                    const curveLength = value.length;
                    const negativeCurve = new Float32Array(curveLength + 2 - (curveLength % 2));
                    const positiveCurve = new Float32Array(curveLength + 2 - (curveLength % 2));
                    negativeCurve[0] = value[0];
                    positiveCurve[0] = -value[curveLength - 1];
                    const length = Math.ceil((curveLength + 1) / 2);
                    const centerIndex = (curveLength + 1) / 2 - 1;
                    for (let i = 1; i < length; i += 1) {
                        const theoreticIndex = (i / length) * centerIndex;
                        const lowerIndex = Math.floor(theoreticIndex);
                        const upperIndex = Math.ceil(theoreticIndex);
                        negativeCurve[i] =
                            lowerIndex === upperIndex
                                ? value[lowerIndex]
                                : (1 - (theoreticIndex - lowerIndex)) * value[lowerIndex] +
                                    (1 - (upperIndex - theoreticIndex)) * value[upperIndex];
                        positiveCurve[i] =
                            lowerIndex === upperIndex
                                ? -value[curveLength - 1 - lowerIndex]
                                : -((1 - (theoreticIndex - lowerIndex)) * value[curveLength - 1 - lowerIndex]) -
                                    (1 - (upperIndex - theoreticIndex)) * value[curveLength - 1 - upperIndex];
                    }
                    negativeCurve[length] = curveLength % 2 === 1 ? value[length - 1] : (value[length - 2] + value[length - 1]) / 2;
                    negativeWaveShaperNode.curve = negativeCurve;
                    positiveWaveShaperNode.curve = positiveCurve;
                }
                unmodifiedCurve = value;
                if (isConnected) {
                    if (isDCCurve(unmodifiedCurve) && disconnectNativeAudioBufferSourceNode === null) {
                        disconnectNativeAudioBufferSourceNode = createConnectedNativeAudioBufferSourceNode(nativeContext, inputGainNode);
                    }
                    else if (disconnectNativeAudioBufferSourceNode !== null) {
                        disconnectNativeAudioBufferSourceNode();
                        disconnectNativeAudioBufferSourceNode = null;
                    }
                }
            },
            get inputs() {
                return [inputGainNode];
            },
            get numberOfInputs() {
                return negativeWaveShaperNode.numberOfInputs;
            },
            get numberOfOutputs() {
                return negativeWaveShaperNode.numberOfOutputs;
            },
            get oversample() {
                return negativeWaveShaperNode.oversample;
            },
            set oversample(value) {
                negativeWaveShaperNode.oversample = value;
                positiveWaveShaperNode.oversample = value;
            },
            addEventListener(...args) {
                return inputGainNode.addEventListener(args[0], args[1], args[2]);
            },
            dispatchEvent(...args) {
                return inputGainNode.dispatchEvent(args[0]);
            },
            removeEventListener(...args) {
                return inputGainNode.removeEventListener(args[0], args[1], args[2]);
            }
        };
        if (curve !== null) {
            // Only values of type Float32Array can be assigned to the curve property.
            nativeWaveShaperNodeFaker.curve = curve instanceof Float32Array ? curve : new Float32Array(curve);
        }
        if (oversample !== nativeWaveShaperNodeFaker.oversample) {
            nativeWaveShaperNodeFaker.oversample = oversample;
        }
        const whenConnected = () => {
            inputGainNode.connect(negativeWaveShaperNode).connect(outputGainNode);
            inputGainNode.connect(invertGainNode).connect(positiveWaveShaperNode).connect(revertGainNode).connect(outputGainNode);
            isConnected = true;
            if (isDCCurve(unmodifiedCurve)) {
                disconnectNativeAudioBufferSourceNode = createConnectedNativeAudioBufferSourceNode(nativeContext, inputGainNode);
            }
        };
        const whenDisconnected = () => {
            inputGainNode.disconnect(negativeWaveShaperNode);
            negativeWaveShaperNode.disconnect(outputGainNode);
            inputGainNode.disconnect(invertGainNode);
            invertGainNode.disconnect(positiveWaveShaperNode);
            positiveWaveShaperNode.disconnect(revertGainNode);
            revertGainNode.disconnect(outputGainNode);
            isConnected = false;
            if (disconnectNativeAudioBufferSourceNode !== null) {
                disconnectNativeAudioBufferSourceNode();
                disconnectNativeAudioBufferSourceNode = null;
            }
        };
        return monitorConnections((0,_helpers_intercept_connections__WEBPACK_IMPORTED_MODULE_1__.interceptConnections)(nativeWaveShaperNodeFaker, outputGainNode), whenConnected, whenDisconnected);
    };
};
//# sourceMappingURL=native-wave-shaper-node-faker-factory.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/not-supported-error.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/not-supported-error.js ***!
  \***********************************************************************************************/
/*! namespace exports */
/*! export createNotSupportedError [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "createNotSupportedError": () => /* binding */ createNotSupportedError
/* harmony export */ });
const createNotSupportedError = () => new DOMException('', 'NotSupportedError');
//# sourceMappingURL=not-supported-error.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/offline-audio-context-constructor.js":
/*!*************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/offline-audio-context-constructor.js ***!
  \*************************************************************************************************************/
/*! namespace exports */
/*! export createOfflineAudioContextConstructor [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "createOfflineAudioContextConstructor": () => /* binding */ createOfflineAudioContextConstructor
/* harmony export */ });
/* harmony import */ var _helpers_deactivate_audio_graph__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../helpers/deactivate-audio-graph */ "./node_modules/standardized-audio-context/build/es2019/helpers/deactivate-audio-graph.js");
/* harmony import */ var _helpers_test_promise_support__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../helpers/test-promise-support */ "./node_modules/standardized-audio-context/build/es2019/helpers/test-promise-support.js");
;

const DEFAULT_OPTIONS = {
    numberOfChannels: 1
};
const createOfflineAudioContextConstructor = (baseAudioContextConstructor, cacheTestResult, createInvalidStateError, createNativeOfflineAudioContext, startRendering) => {
    return class OfflineAudioContext extends baseAudioContextConstructor {
        constructor(a, b, c) {
            let options;
            if (typeof a === 'number' && b !== undefined && c !== undefined) {
                options = { length: b, numberOfChannels: a, sampleRate: c };
            }
            else if (typeof a === 'object') {
                options = a;
            }
            else {
                throw new Error('The given parameters are not valid.');
            }
            const { length, numberOfChannels, sampleRate } = { ...DEFAULT_OPTIONS, ...options };
            const nativeOfflineAudioContext = createNativeOfflineAudioContext(numberOfChannels, length, sampleRate);
            // #21 Safari does not support promises and therefore would fire the statechange event before the promise can be resolved.
            if (!cacheTestResult(_helpers_test_promise_support__WEBPACK_IMPORTED_MODULE_1__.testPromiseSupport, () => (0,_helpers_test_promise_support__WEBPACK_IMPORTED_MODULE_1__.testPromiseSupport)(nativeOfflineAudioContext))) {
                nativeOfflineAudioContext.addEventListener('statechange', (() => {
                    let i = 0;
                    const delayStateChangeEvent = (event) => {
                        if (this._state === 'running') {
                            if (i > 0) {
                                nativeOfflineAudioContext.removeEventListener('statechange', delayStateChangeEvent);
                                event.stopImmediatePropagation();
                                this._waitForThePromiseToSettle(event);
                            }
                            else {
                                i += 1;
                            }
                        }
                    };
                    return delayStateChangeEvent;
                })());
            }
            super(nativeOfflineAudioContext, numberOfChannels);
            this._length = length;
            this._nativeOfflineAudioContext = nativeOfflineAudioContext;
            this._state = null;
        }
        get length() {
            // Bug #17: Safari does not yet expose the length.
            if (this._nativeOfflineAudioContext.length === undefined) {
                return this._length;
            }
            return this._nativeOfflineAudioContext.length;
        }
        get state() {
            return this._state === null ? this._nativeOfflineAudioContext.state : this._state;
        }
        startRendering() {
            /*
             * Bug #9 & #59: It is theoretically possible that startRendering() will first render a partialOfflineAudioContext. Therefore
             * the state of the nativeOfflineAudioContext might no transition to running immediately.
             */
            if (this._state === 'running') {
                return Promise.reject(createInvalidStateError());
            }
            this._state = 'running';
            return startRendering(this.destination, this._nativeOfflineAudioContext).finally(() => {
                this._state = null;
                (0,_helpers_deactivate_audio_graph__WEBPACK_IMPORTED_MODULE_0__.deactivateAudioGraph)(this);
            });
        }
        _waitForThePromiseToSettle(event) {
            if (this._state === null) {
                this._nativeOfflineAudioContext.dispatchEvent(event);
            }
            else {
                setTimeout(() => this._waitForThePromiseToSettle(event));
            }
        }
    };
};
//# sourceMappingURL=offline-audio-context-constructor.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/oscillator-node-constructor.js":
/*!*******************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/oscillator-node-constructor.js ***!
  \*******************************************************************************************************/
/*! namespace exports */
/*! export createOscillatorNodeConstructor [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "createOscillatorNodeConstructor": () => /* binding */ createOscillatorNodeConstructor
/* harmony export */ });
/* harmony import */ var _helpers_is_active_audio_node__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../helpers/is-active-audio-node */ "./node_modules/standardized-audio-context/build/es2019/helpers/is-active-audio-node.js");
/* harmony import */ var _helpers_set_internal_state_to_active__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../helpers/set-internal-state-to-active */ "./node_modules/standardized-audio-context/build/es2019/helpers/set-internal-state-to-active.js");
/* harmony import */ var _helpers_set_internal_state_to_passive__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../helpers/set-internal-state-to-passive */ "./node_modules/standardized-audio-context/build/es2019/helpers/set-internal-state-to-passive.js");
;


const DEFAULT_OPTIONS = {
    channelCount: 2,
    channelCountMode: 'max',
    channelInterpretation: 'speakers',
    detune: 0,
    frequency: 440,
    periodicWave: undefined,
    type: 'sine'
};
const createOscillatorNodeConstructor = (audioNodeConstructor, createAudioParam, createNativeOscillatorNode, createOscillatorNodeRenderer, getNativeContext, isNativeOfflineAudioContext, wrapEventListener) => {
    return class OscillatorNode extends audioNodeConstructor {
        constructor(context, options) {
            const nativeContext = getNativeContext(context);
            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };
            const nativeOscillatorNode = createNativeOscillatorNode(nativeContext, mergedOptions);
            const isOffline = isNativeOfflineAudioContext(nativeContext);
            const oscillatorNodeRenderer = (isOffline ? createOscillatorNodeRenderer() : null);
            const nyquist = context.sampleRate / 2;
            super(context, false, nativeOscillatorNode, oscillatorNodeRenderer);
            // Bug #81: Firefox & Safari do not export the correct values for maxValue and minValue.
            this._detune = createAudioParam(this, isOffline, nativeOscillatorNode.detune, 153600, -153600);
            // Bug #76: Safari does not export the correct values for maxValue and minValue.
            this._frequency = createAudioParam(this, isOffline, nativeOscillatorNode.frequency, nyquist, -nyquist);
            this._nativeOscillatorNode = nativeOscillatorNode;
            this._onended = null;
            this._oscillatorNodeRenderer = oscillatorNodeRenderer;
            if (this._oscillatorNodeRenderer !== null && mergedOptions.periodicWave !== undefined) {
                this._oscillatorNodeRenderer.periodicWave =
                    mergedOptions.periodicWave;
            }
        }
        get detune() {
            return this._detune;
        }
        get frequency() {
            return this._frequency;
        }
        get onended() {
            return this._onended;
        }
        set onended(value) {
            const wrappedListener = typeof value === 'function' ? wrapEventListener(this, value) : null;
            this._nativeOscillatorNode.onended = wrappedListener;
            const nativeOnEnded = this._nativeOscillatorNode.onended;
            this._onended = nativeOnEnded !== null && nativeOnEnded === wrappedListener ? value : nativeOnEnded;
        }
        get type() {
            return this._nativeOscillatorNode.type;
        }
        set type(value) {
            this._nativeOscillatorNode.type = value;
            if (this._oscillatorNodeRenderer !== null) {
                this._oscillatorNodeRenderer.periodicWave = null;
            }
        }
        setPeriodicWave(periodicWave) {
            this._nativeOscillatorNode.setPeriodicWave(periodicWave);
            if (this._oscillatorNodeRenderer !== null) {
                this._oscillatorNodeRenderer.periodicWave = periodicWave;
            }
        }
        start(when = 0) {
            this._nativeOscillatorNode.start(when);
            if (this._oscillatorNodeRenderer !== null) {
                this._oscillatorNodeRenderer.start = when;
            }
            if (this.context.state !== 'closed') {
                (0,_helpers_set_internal_state_to_active__WEBPACK_IMPORTED_MODULE_1__.setInternalStateToActive)(this);
                const resetInternalStateToPassive = () => {
                    this._nativeOscillatorNode.removeEventListener('ended', resetInternalStateToPassive);
                    if ((0,_helpers_is_active_audio_node__WEBPACK_IMPORTED_MODULE_0__.isActiveAudioNode)(this)) {
                        (0,_helpers_set_internal_state_to_passive__WEBPACK_IMPORTED_MODULE_2__.setInternalStateToPassive)(this);
                    }
                };
                this._nativeOscillatorNode.addEventListener('ended', resetInternalStateToPassive);
            }
        }
        stop(when = 0) {
            this._nativeOscillatorNode.stop(when);
            if (this._oscillatorNodeRenderer !== null) {
                this._oscillatorNodeRenderer.stop = when;
            }
        }
    };
};
//# sourceMappingURL=oscillator-node-constructor.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/oscillator-node-renderer-factory.js":
/*!************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/oscillator-node-renderer-factory.js ***!
  \************************************************************************************************************/
/*! namespace exports */
/*! export createOscillatorNodeRendererFactory [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "createOscillatorNodeRendererFactory": () => /* binding */ createOscillatorNodeRendererFactory
/* harmony export */ });
/* harmony import */ var _helpers_is_owned_by_context__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../helpers/is-owned-by-context */ "./node_modules/standardized-audio-context/build/es2019/helpers/is-owned-by-context.js");
;
const createOscillatorNodeRendererFactory = (connectAudioParam, createNativeOscillatorNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode) => {
    return () => {
        const renderedNativeOscillatorNodes = new WeakMap();
        let periodicWave = null;
        let start = null;
        let stop = null;
        const createOscillatorNode = async (proxy, nativeOfflineAudioContext, trace) => {
            let nativeOscillatorNode = getNativeAudioNode(proxy);
            // If the initially used nativeOscillatorNode was not constructed on the same OfflineAudioContext it needs to be created again.
            const nativeOscillatorNodeIsOwnedByContext = (0,_helpers_is_owned_by_context__WEBPACK_IMPORTED_MODULE_0__.isOwnedByContext)(nativeOscillatorNode, nativeOfflineAudioContext);
            if (!nativeOscillatorNodeIsOwnedByContext) {
                const options = {
                    channelCount: nativeOscillatorNode.channelCount,
                    channelCountMode: nativeOscillatorNode.channelCountMode,
                    channelInterpretation: nativeOscillatorNode.channelInterpretation,
                    detune: nativeOscillatorNode.detune.value,
                    frequency: nativeOscillatorNode.frequency.value,
                    periodicWave: periodicWave === null ? undefined : periodicWave,
                    type: nativeOscillatorNode.type
                };
                nativeOscillatorNode = createNativeOscillatorNode(nativeOfflineAudioContext, options);
                if (start !== null) {
                    nativeOscillatorNode.start(start);
                }
                if (stop !== null) {
                    nativeOscillatorNode.stop(stop);
                }
            }
            renderedNativeOscillatorNodes.set(nativeOfflineAudioContext, nativeOscillatorNode);
            if (!nativeOscillatorNodeIsOwnedByContext) {
                await renderAutomation(nativeOfflineAudioContext, proxy.detune, nativeOscillatorNode.detune, trace);
                await renderAutomation(nativeOfflineAudioContext, proxy.frequency, nativeOscillatorNode.frequency, trace);
            }
            else {
                await connectAudioParam(nativeOfflineAudioContext, proxy.detune, nativeOscillatorNode.detune, trace);
                await connectAudioParam(nativeOfflineAudioContext, proxy.frequency, nativeOscillatorNode.frequency, trace);
            }
            await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeOscillatorNode, trace);
            return nativeOscillatorNode;
        };
        return {
            set periodicWave(value) {
                periodicWave = value;
            },
            set start(value) {
                start = value;
            },
            set stop(value) {
                stop = value;
            },
            render(proxy, nativeOfflineAudioContext, trace) {
                const renderedNativeOscillatorNode = renderedNativeOscillatorNodes.get(nativeOfflineAudioContext);
                if (renderedNativeOscillatorNode !== undefined) {
                    return Promise.resolve(renderedNativeOscillatorNode);
                }
                return createOscillatorNode(proxy, nativeOfflineAudioContext, trace);
            }
        };
    };
};
//# sourceMappingURL=oscillator-node-renderer-factory.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/panner-node-constructor.js":
/*!***************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/panner-node-constructor.js ***!
  \***************************************************************************************************/
/*! namespace exports */
/*! export createPannerNodeConstructor [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "createPannerNodeConstructor": () => /* binding */ createPannerNodeConstructor
/* harmony export */ });
/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../constants */ "./node_modules/standardized-audio-context/build/es2019/constants.js");
;
const DEFAULT_OPTIONS = {
    channelCount: 2,
    channelCountMode: 'clamped-max',
    channelInterpretation: 'speakers',
    coneInnerAngle: 360,
    coneOuterAngle: 360,
    coneOuterGain: 0,
    distanceModel: 'inverse',
    maxDistance: 10000,
    orientationX: 1,
    orientationY: 0,
    orientationZ: 0,
    panningModel: 'equalpower',
    positionX: 0,
    positionY: 0,
    positionZ: 0,
    refDistance: 1,
    rolloffFactor: 1
};
const createPannerNodeConstructor = (audioNodeConstructor, createAudioParam, createNativePannerNode, createPannerNodeRenderer, getNativeContext, isNativeOfflineAudioContext, setAudioNodeTailTime) => {
    return class PannerNode extends audioNodeConstructor {
        constructor(context, options) {
            const nativeContext = getNativeContext(context);
            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };
            const nativePannerNode = createNativePannerNode(nativeContext, mergedOptions);
            const isOffline = isNativeOfflineAudioContext(nativeContext);
            const pannerNodeRenderer = (isOffline ? createPannerNodeRenderer() : null);
            super(context, false, nativePannerNode, pannerNodeRenderer);
            this._nativePannerNode = nativePannerNode;
            // Bug #74: Safari does not export the correct values for maxValue and minValue.
            this._orientationX = createAudioParam(this, isOffline, nativePannerNode.orientationX, _constants__WEBPACK_IMPORTED_MODULE_0__.MOST_POSITIVE_SINGLE_FLOAT, _constants__WEBPACK_IMPORTED_MODULE_0__.MOST_NEGATIVE_SINGLE_FLOAT);
            this._orientationY = createAudioParam(this, isOffline, nativePannerNode.orientationY, _constants__WEBPACK_IMPORTED_MODULE_0__.MOST_POSITIVE_SINGLE_FLOAT, _constants__WEBPACK_IMPORTED_MODULE_0__.MOST_NEGATIVE_SINGLE_FLOAT);
            this._orientationZ = createAudioParam(this, isOffline, nativePannerNode.orientationZ, _constants__WEBPACK_IMPORTED_MODULE_0__.MOST_POSITIVE_SINGLE_FLOAT, _constants__WEBPACK_IMPORTED_MODULE_0__.MOST_NEGATIVE_SINGLE_FLOAT);
            this._positionX = createAudioParam(this, isOffline, nativePannerNode.positionX, _constants__WEBPACK_IMPORTED_MODULE_0__.MOST_POSITIVE_SINGLE_FLOAT, _constants__WEBPACK_IMPORTED_MODULE_0__.MOST_NEGATIVE_SINGLE_FLOAT);
            this._positionY = createAudioParam(this, isOffline, nativePannerNode.positionY, _constants__WEBPACK_IMPORTED_MODULE_0__.MOST_POSITIVE_SINGLE_FLOAT, _constants__WEBPACK_IMPORTED_MODULE_0__.MOST_NEGATIVE_SINGLE_FLOAT);
            this._positionZ = createAudioParam(this, isOffline, nativePannerNode.positionZ, _constants__WEBPACK_IMPORTED_MODULE_0__.MOST_POSITIVE_SINGLE_FLOAT, _constants__WEBPACK_IMPORTED_MODULE_0__.MOST_NEGATIVE_SINGLE_FLOAT);
            // @todo Determine a meaningful tail-time instead of just using one second.
            setAudioNodeTailTime(this, 1);
        }
        get coneInnerAngle() {
            return this._nativePannerNode.coneInnerAngle;
        }
        set coneInnerAngle(value) {
            this._nativePannerNode.coneInnerAngle = value;
        }
        get coneOuterAngle() {
            return this._nativePannerNode.coneOuterAngle;
        }
        set coneOuterAngle(value) {
            this._nativePannerNode.coneOuterAngle = value;
        }
        get coneOuterGain() {
            return this._nativePannerNode.coneOuterGain;
        }
        set coneOuterGain(value) {
            this._nativePannerNode.coneOuterGain = value;
        }
        get distanceModel() {
            return this._nativePannerNode.distanceModel;
        }
        set distanceModel(value) {
            this._nativePannerNode.distanceModel = value;
        }
        get maxDistance() {
            return this._nativePannerNode.maxDistance;
        }
        set maxDistance(value) {
            this._nativePannerNode.maxDistance = value;
        }
        get orientationX() {
            return this._orientationX;
        }
        get orientationY() {
            return this._orientationY;
        }
        get orientationZ() {
            return this._orientationZ;
        }
        get panningModel() {
            return this._nativePannerNode.panningModel;
        }
        set panningModel(value) {
            this._nativePannerNode.panningModel = value;
        }
        get positionX() {
            return this._positionX;
        }
        get positionY() {
            return this._positionY;
        }
        get positionZ() {
            return this._positionZ;
        }
        get refDistance() {
            return this._nativePannerNode.refDistance;
        }
        set refDistance(value) {
            this._nativePannerNode.refDistance = value;
        }
        get rolloffFactor() {
            return this._nativePannerNode.rolloffFactor;
        }
        set rolloffFactor(value) {
            this._nativePannerNode.rolloffFactor = value;
        }
    };
};
//# sourceMappingURL=panner-node-constructor.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/panner-node-renderer-factory.js":
/*!********************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/panner-node-renderer-factory.js ***!
  \********************************************************************************************************/
/*! namespace exports */
/*! export createPannerNodeRendererFactory [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "createPannerNodeRendererFactory": () => /* binding */ createPannerNodeRendererFactory
/* harmony export */ });
/* harmony import */ var _guards_native_audio_node_faker__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../guards/native-audio-node-faker */ "./node_modules/standardized-audio-context/build/es2019/guards/native-audio-node-faker.js");
/* harmony import */ var _helpers_is_owned_by_context__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../helpers/is-owned-by-context */ "./node_modules/standardized-audio-context/build/es2019/helpers/is-owned-by-context.js");
;

const createPannerNodeRendererFactory = (connectAudioParam, createNativeChannelMergerNode, createNativeConstantSourceNode, createNativeGainNode, createNativePannerNode, getNativeAudioNode, nativeOfflineAudioContextConstructor, renderAutomation, renderInputsOfAudioNode, renderNativeOfflineAudioContext) => {
    return () => {
        const renderedNativeAudioNodes = new WeakMap();
        let renderedBufferPromise = null;
        const createAudioNode = async (proxy, nativeOfflineAudioContext, trace) => {
            let nativeGainNode = null;
            let nativePannerNode = getNativeAudioNode(proxy);
            const commonAudioNodeOptions = {
                channelCount: nativePannerNode.channelCount,
                channelCountMode: nativePannerNode.channelCountMode,
                channelInterpretation: nativePannerNode.channelInterpretation
            };
            const commonNativePannerNodeOptions = {
                ...commonAudioNodeOptions,
                coneInnerAngle: nativePannerNode.coneInnerAngle,
                coneOuterAngle: nativePannerNode.coneOuterAngle,
                coneOuterGain: nativePannerNode.coneOuterGain,
                distanceModel: nativePannerNode.distanceModel,
                maxDistance: nativePannerNode.maxDistance,
                panningModel: nativePannerNode.panningModel,
                refDistance: nativePannerNode.refDistance,
                rolloffFactor: nativePannerNode.rolloffFactor
            };
            // If the initially used nativePannerNode was not constructed on the same OfflineAudioContext it needs to be created again.
            const nativePannerNodeIsOwnedByContext = (0,_helpers_is_owned_by_context__WEBPACK_IMPORTED_MODULE_1__.isOwnedByContext)(nativePannerNode, nativeOfflineAudioContext);
            // Bug #124: Safari does not support modifying the orientation and the position with AudioParams.
            if ('bufferSize' in nativePannerNode) {
                nativeGainNode = createNativeGainNode(nativeOfflineAudioContext, { ...commonAudioNodeOptions, gain: 1 });
            }
            else if (!nativePannerNodeIsOwnedByContext) {
                const options = {
                    ...commonNativePannerNodeOptions,
                    orientationX: nativePannerNode.orientationX.value,
                    orientationY: nativePannerNode.orientationY.value,
                    orientationZ: nativePannerNode.orientationZ.value,
                    positionX: nativePannerNode.positionX.value,
                    positionY: nativePannerNode.positionY.value,
                    positionZ: nativePannerNode.positionZ.value
                };
                nativePannerNode = createNativePannerNode(nativeOfflineAudioContext, options);
            }
            renderedNativeAudioNodes.set(nativeOfflineAudioContext, nativeGainNode === null ? nativePannerNode : nativeGainNode);
            if (nativeGainNode !== null) {
                if (renderedBufferPromise === null) {
                    if (nativeOfflineAudioContextConstructor === null) {
                        throw new Error('Missing the native OfflineAudioContext constructor.');
                    }
                    const partialOfflineAudioContext = new nativeOfflineAudioContextConstructor(6, 
                    // Bug #17: Safari does not yet expose the length.
                    proxy.context.length, nativeOfflineAudioContext.sampleRate);
                    const nativeChannelMergerNode = createNativeChannelMergerNode(partialOfflineAudioContext, {
                        channelCount: 1,
                        channelCountMode: 'explicit',
                        channelInterpretation: 'speakers',
                        numberOfInputs: 6
                    });
                    nativeChannelMergerNode.connect(partialOfflineAudioContext.destination);
                    renderedBufferPromise = (async () => {
                        const nativeConstantSourceNodes = await Promise.all([
                            proxy.orientationX,
                            proxy.orientationY,
                            proxy.orientationZ,
                            proxy.positionX,
                            proxy.positionY,
                            proxy.positionZ
                        ].map(async (audioParam, index) => {
                            const nativeConstantSourceNode = createNativeConstantSourceNode(partialOfflineAudioContext, {
                                channelCount: 1,
                                channelCountMode: 'explicit',
                                channelInterpretation: 'discrete',
                                offset: index === 0 ? 1 : 0
                            });
                            await renderAutomation(partialOfflineAudioContext, audioParam, nativeConstantSourceNode.offset, trace);
                            return nativeConstantSourceNode;
                        }));
                        for (let i = 0; i < 6; i += 1) {
                            nativeConstantSourceNodes[i].connect(nativeChannelMergerNode, 0, i);
                            nativeConstantSourceNodes[i].start(0);
                        }
                        return renderNativeOfflineAudioContext(partialOfflineAudioContext);
                    })();
                }
                const renderedBuffer = await renderedBufferPromise;
                const inputGainNode = createNativeGainNode(nativeOfflineAudioContext, { ...commonAudioNodeOptions, gain: 1 });
                await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, inputGainNode, trace);
                const channelDatas = [];
                for (let i = 0; i < renderedBuffer.numberOfChannels; i += 1) {
                    channelDatas.push(renderedBuffer.getChannelData(i));
                }
                let lastOrientation = [channelDatas[0][0], channelDatas[1][0], channelDatas[2][0]];
                let lastPosition = [channelDatas[3][0], channelDatas[4][0], channelDatas[5][0]];
                let gateGainNode = createNativeGainNode(nativeOfflineAudioContext, { ...commonAudioNodeOptions, gain: 1 });
                let partialPannerNode = createNativePannerNode(nativeOfflineAudioContext, {
                    ...commonNativePannerNodeOptions,
                    orientationX: lastOrientation[0],
                    orientationY: lastOrientation[1],
                    orientationZ: lastOrientation[2],
                    positionX: lastPosition[0],
                    positionY: lastPosition[1],
                    positionZ: lastPosition[2]
                });
                inputGainNode.connect(gateGainNode).connect(partialPannerNode.inputs[0]);
                partialPannerNode.connect(nativeGainNode);
                for (let i = 128; i < renderedBuffer.length; i += 128) {
                    const orientation = [channelDatas[0][i], channelDatas[1][i], channelDatas[2][i]];
                    const positon = [channelDatas[3][i], channelDatas[4][i], channelDatas[5][i]];
                    if (orientation.some((value, index) => value !== lastOrientation[index]) ||
                        positon.some((value, index) => value !== lastPosition[index])) {
                        lastOrientation = orientation;
                        lastPosition = positon;
                        const currentTime = i / nativeOfflineAudioContext.sampleRate;
                        gateGainNode.gain.setValueAtTime(0, currentTime);
                        gateGainNode = createNativeGainNode(nativeOfflineAudioContext, { ...commonAudioNodeOptions, gain: 0 });
                        partialPannerNode = createNativePannerNode(nativeOfflineAudioContext, {
                            ...commonNativePannerNodeOptions,
                            orientationX: lastOrientation[0],
                            orientationY: lastOrientation[1],
                            orientationZ: lastOrientation[2],
                            positionX: lastPosition[0],
                            positionY: lastPosition[1],
                            positionZ: lastPosition[2]
                        });
                        gateGainNode.gain.setValueAtTime(1, currentTime);
                        inputGainNode.connect(gateGainNode).connect(partialPannerNode.inputs[0]);
                        partialPannerNode.connect(nativeGainNode);
                    }
                }
                return nativeGainNode;
            }
            if (!nativePannerNodeIsOwnedByContext) {
                await renderAutomation(nativeOfflineAudioContext, proxy.orientationX, nativePannerNode.orientationX, trace);
                await renderAutomation(nativeOfflineAudioContext, proxy.orientationY, nativePannerNode.orientationY, trace);
                await renderAutomation(nativeOfflineAudioContext, proxy.orientationZ, nativePannerNode.orientationZ, trace);
                await renderAutomation(nativeOfflineAudioContext, proxy.positionX, nativePannerNode.positionX, trace);
                await renderAutomation(nativeOfflineAudioContext, proxy.positionY, nativePannerNode.positionY, trace);
                await renderAutomation(nativeOfflineAudioContext, proxy.positionZ, nativePannerNode.positionZ, trace);
            }
            else {
                await connectAudioParam(nativeOfflineAudioContext, proxy.orientationX, nativePannerNode.orientationX, trace);
                await connectAudioParam(nativeOfflineAudioContext, proxy.orientationY, nativePannerNode.orientationY, trace);
                await connectAudioParam(nativeOfflineAudioContext, proxy.orientationZ, nativePannerNode.orientationZ, trace);
                await connectAudioParam(nativeOfflineAudioContext, proxy.positionX, nativePannerNode.positionX, trace);
                await connectAudioParam(nativeOfflineAudioContext, proxy.positionY, nativePannerNode.positionY, trace);
                await connectAudioParam(nativeOfflineAudioContext, proxy.positionZ, nativePannerNode.positionZ, trace);
            }
            if ((0,_guards_native_audio_node_faker__WEBPACK_IMPORTED_MODULE_0__.isNativeAudioNodeFaker)(nativePannerNode)) {
                await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativePannerNode.inputs[0], trace);
            }
            else {
                await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativePannerNode, trace);
            }
            return nativePannerNode;
        };
        return {
            render(proxy, nativeOfflineAudioContext, trace) {
                const renderedNativeGainNodeOrNativePannerNode = renderedNativeAudioNodes.get(nativeOfflineAudioContext);
                if (renderedNativeGainNodeOrNativePannerNode !== undefined) {
                    return Promise.resolve(renderedNativeGainNodeOrNativePannerNode);
                }
                return createAudioNode(proxy, nativeOfflineAudioContext, trace);
            }
        };
    };
};
//# sourceMappingURL=panner-node-renderer-factory.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/periodic-wave-constructor.js":
/*!*****************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/periodic-wave-constructor.js ***!
  \*****************************************************************************************************/
/*! namespace exports */
/*! export createPeriodicWaveConstructor [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "createPeriodicWaveConstructor": () => /* binding */ createPeriodicWaveConstructor
/* harmony export */ });
const DEFAULT_OPTIONS = {
    disableNormalization: false
};
const createPeriodicWaveConstructor = (createNativePeriodicWave, getNativeContext, periodicWaveStore, sanitizePeriodicWaveOptions) => {
    return class PeriodicWave {
        constructor(context, options) {
            const nativeContext = getNativeContext(context);
            const mergedOptions = sanitizePeriodicWaveOptions({ ...DEFAULT_OPTIONS, ...options });
            const periodicWave = createNativePeriodicWave(nativeContext, mergedOptions);
            periodicWaveStore.add(periodicWave);
            // This does violate all good pratices but it is used here to simplify the handling of periodic waves.
            return periodicWave;
        }
        static [Symbol.hasInstance](instance) {
            return ((instance !== null && typeof instance === 'object' && Object.getPrototypeOf(instance) === PeriodicWave.prototype) ||
                periodicWaveStore.has(instance));
        }
    };
};
//# sourceMappingURL=periodic-wave-constructor.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/render-automation.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/render-automation.js ***!
  \*********************************************************************************************/
/*! namespace exports */
/*! export createRenderAutomation [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "createRenderAutomation": () => /* binding */ createRenderAutomation
/* harmony export */ });
const createRenderAutomation = (getAudioParamRenderer, renderInputsOfAudioParam) => {
    return (nativeOfflineAudioContext, audioParam, nativeAudioParam, trace) => {
        const audioParamRenderer = getAudioParamRenderer(audioParam);
        audioParamRenderer.replay(nativeAudioParam);
        return renderInputsOfAudioParam(audioParam, nativeOfflineAudioContext, nativeAudioParam, trace);
    };
};
//# sourceMappingURL=render-automation.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/render-inputs-of-audio-node.js":
/*!*******************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/render-inputs-of-audio-node.js ***!
  \*******************************************************************************************************/
/*! namespace exports */
/*! export createRenderInputsOfAudioNode [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "createRenderInputsOfAudioNode": () => /* binding */ createRenderInputsOfAudioNode
/* harmony export */ });
const createRenderInputsOfAudioNode = (getAudioNodeConnections, getAudioNodeRenderer, isPartOfACycle) => {
    return async (audioNode, nativeOfflineAudioContext, nativeAudioNode, trace) => {
        const audioNodeConnections = getAudioNodeConnections(audioNode);
        const nextTrace = [...trace, audioNode];
        await Promise.all(audioNodeConnections.activeInputs
            .map((connections, input) => Array.from(connections)
            .filter(([source]) => !nextTrace.includes(source))
            .map(async ([source, output]) => {
            const audioNodeRenderer = getAudioNodeRenderer(source);
            const renderedNativeAudioNode = await audioNodeRenderer.render(source, nativeOfflineAudioContext, nextTrace);
            const destination = audioNode.context.destination;
            if (!isPartOfACycle(source) && (audioNode !== destination || !isPartOfACycle(audioNode))) {
                renderedNativeAudioNode.connect(nativeAudioNode, output, input);
            }
        }))
            .reduce((allRenderingPromises, renderingPromises) => [...allRenderingPromises, ...renderingPromises], []));
    };
};
//# sourceMappingURL=render-inputs-of-audio-node.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/render-inputs-of-audio-param.js":
/*!********************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/render-inputs-of-audio-param.js ***!
  \********************************************************************************************************/
/*! namespace exports */
/*! export createRenderInputsOfAudioParam [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "createRenderInputsOfAudioParam": () => /* binding */ createRenderInputsOfAudioParam
/* harmony export */ });
const createRenderInputsOfAudioParam = (getAudioNodeRenderer, getAudioParamConnections, isPartOfACycle) => {
    return async (audioParam, nativeOfflineAudioContext, nativeAudioParam, trace) => {
        const audioParamConnections = getAudioParamConnections(audioParam);
        await Promise.all(Array.from(audioParamConnections.activeInputs).map(async ([source, output]) => {
            const audioNodeRenderer = getAudioNodeRenderer(source);
            const renderedNativeAudioNode = await audioNodeRenderer.render(source, nativeOfflineAudioContext, trace);
            if (!isPartOfACycle(source)) {
                renderedNativeAudioNode.connect(nativeAudioParam, output);
            }
        }));
    };
};
//# sourceMappingURL=render-inputs-of-audio-param.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/render-native-offline-audio-context.js":
/*!***************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/render-native-offline-audio-context.js ***!
  \***************************************************************************************************************/
/*! namespace exports */
/*! export createRenderNativeOfflineAudioContext [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "createRenderNativeOfflineAudioContext": () => /* binding */ createRenderNativeOfflineAudioContext
/* harmony export */ });
/* harmony import */ var _helpers_test_promise_support__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../helpers/test-promise-support */ "./node_modules/standardized-audio-context/build/es2019/helpers/test-promise-support.js");
;
const createRenderNativeOfflineAudioContext = (cacheTestResult, createNativeGainNode, createNativeScriptProcessorNode, testOfflineAudioContextCurrentTimeSupport) => {
    return (nativeOfflineAudioContext) => {
        // Bug #21: Safari does not support promises yet.
        if (cacheTestResult(_helpers_test_promise_support__WEBPACK_IMPORTED_MODULE_0__.testPromiseSupport, () => (0,_helpers_test_promise_support__WEBPACK_IMPORTED_MODULE_0__.testPromiseSupport)(nativeOfflineAudioContext))) {
            // Bug #158: Chrome and Edge do not advance currentTime if it is not accessed while rendering the audio.
            return Promise.resolve(cacheTestResult(testOfflineAudioContextCurrentTimeSupport, testOfflineAudioContextCurrentTimeSupport)).then((isOfflineAudioContextCurrentTimeSupported) => {
                if (!isOfflineAudioContextCurrentTimeSupported) {
                    const scriptProcessorNode = createNativeScriptProcessorNode(nativeOfflineAudioContext, 512, 0, 1);
                    nativeOfflineAudioContext.oncomplete = () => {
                        scriptProcessorNode.onaudioprocess = null; // tslint:disable-line:deprecation
                        scriptProcessorNode.disconnect();
                    };
                    scriptProcessorNode.onaudioprocess = () => nativeOfflineAudioContext.currentTime; // tslint:disable-line:deprecation
                    scriptProcessorNode.connect(nativeOfflineAudioContext.destination);
                }
                return nativeOfflineAudioContext.startRendering();
            });
        }
        return new Promise((resolve) => {
            // Bug #48: Safari does not render an OfflineAudioContext without any connected node.
            const gainNode = createNativeGainNode(nativeOfflineAudioContext, {
                channelCount: 1,
                channelCountMode: 'explicit',
                channelInterpretation: 'discrete',
                gain: 0
            });
            nativeOfflineAudioContext.oncomplete = (event) => {
                gainNode.disconnect();
                resolve(event.renderedBuffer);
            };
            gainNode.connect(nativeOfflineAudioContext.destination);
            nativeOfflineAudioContext.startRendering();
        });
    };
};
//# sourceMappingURL=render-native-offline-audio-context.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/set-active-audio-worklet-node-inputs.js":
/*!****************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/set-active-audio-worklet-node-inputs.js ***!
  \****************************************************************************************************************/
/*! namespace exports */
/*! export createSetActiveAudioWorkletNodeInputs [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "createSetActiveAudioWorkletNodeInputs": () => /* binding */ createSetActiveAudioWorkletNodeInputs
/* harmony export */ });
const createSetActiveAudioWorkletNodeInputs = (activeAudioWorkletNodeInputsStore) => {
    return (nativeAudioWorkletNode, activeInputs) => {
        activeAudioWorkletNodeInputsStore.set(nativeAudioWorkletNode, activeInputs);
    };
};
//# sourceMappingURL=set-active-audio-worklet-node-inputs.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/set-audio-node-tail-time.js":
/*!****************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/set-audio-node-tail-time.js ***!
  \****************************************************************************************************/
/*! namespace exports */
/*! export createSetAudioNodeTailTime [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "createSetAudioNodeTailTime": () => /* binding */ createSetAudioNodeTailTime
/* harmony export */ });
const createSetAudioNodeTailTime = (audioNodeTailTimeStore) => {
    return (audioNode, tailTime) => audioNodeTailTimeStore.set(audioNode, tailTime);
};
//# sourceMappingURL=set-audio-node-tail-time.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/start-rendering.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/start-rendering.js ***!
  \*******************************************************************************************/
/*! namespace exports */
/*! export createStartRendering [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "createStartRendering": () => /* binding */ createStartRendering
/* harmony export */ });
/* harmony import */ var _helpers_wrap_audio_buffer_get_channel_data_method__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../helpers/wrap-audio-buffer-get-channel-data-method */ "./node_modules/standardized-audio-context/build/es2019/helpers/wrap-audio-buffer-get-channel-data-method.js");
;
const createStartRendering = (audioBufferStore, cacheTestResult, getAudioNodeRenderer, getUnrenderedAudioWorkletNodes, renderNativeOfflineAudioContext, testAudioBufferCopyChannelMethodsOutOfBoundsSupport, wrapAudioBufferCopyChannelMethods, wrapAudioBufferCopyChannelMethodsOutOfBounds) => {
    const trace = [];
    return (destination, nativeOfflineAudioContext) => getAudioNodeRenderer(destination)
        .render(destination, nativeOfflineAudioContext, trace)
        /*
         * Bug #86 & #87: Invoking the renderer of an AudioWorkletNode might be necessary if it has no direct or indirect connection to the
         * destination.
         */
        .then(() => Promise.all(Array.from(getUnrenderedAudioWorkletNodes(nativeOfflineAudioContext)).map((audioWorkletNode) => getAudioNodeRenderer(audioWorkletNode).render(audioWorkletNode, nativeOfflineAudioContext, trace))))
        .then(() => renderNativeOfflineAudioContext(nativeOfflineAudioContext))
        .then((audioBuffer) => {
        // Bug #5: Safari does not support copyFromChannel() and copyToChannel().
        // Bug #100: Safari does throw a wrong error when calling getChannelData() with an out-of-bounds value.
        if (typeof audioBuffer.copyFromChannel !== 'function') {
            wrapAudioBufferCopyChannelMethods(audioBuffer);
            (0,_helpers_wrap_audio_buffer_get_channel_data_method__WEBPACK_IMPORTED_MODULE_0__.wrapAudioBufferGetChannelDataMethod)(audioBuffer);
            // Bug #157: Firefox does not allow the bufferOffset to be out-of-bounds.
        }
        else if (!cacheTestResult(testAudioBufferCopyChannelMethodsOutOfBoundsSupport, () => testAudioBufferCopyChannelMethodsOutOfBoundsSupport(audioBuffer))) {
            wrapAudioBufferCopyChannelMethodsOutOfBounds(audioBuffer);
        }
        audioBufferStore.add(audioBuffer);
        return audioBuffer;
    });
};
//# sourceMappingURL=start-rendering.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/stereo-panner-node-constructor.js":
/*!**********************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/stereo-panner-node-constructor.js ***!
  \**********************************************************************************************************/
/*! namespace exports */
/*! export createStereoPannerNodeConstructor [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "createStereoPannerNodeConstructor": () => /* binding */ createStereoPannerNodeConstructor
/* harmony export */ });
const DEFAULT_OPTIONS = {
    channelCount: 2,
    /*
     * Bug #105: The channelCountMode should be 'clamped-max' according to the spec but is set to 'explicit' to achieve consistent
     * behavior.
     */
    channelCountMode: 'explicit',
    channelInterpretation: 'speakers',
    pan: 0
};
const createStereoPannerNodeConstructor = (audioNodeConstructor, createAudioParam, createNativeStereoPannerNode, createStereoPannerNodeRenderer, getNativeContext, isNativeOfflineAudioContext) => {
    return class StereoPannerNode extends audioNodeConstructor {
        constructor(context, options) {
            const nativeContext = getNativeContext(context);
            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };
            const nativeStereoPannerNode = createNativeStereoPannerNode(nativeContext, mergedOptions);
            const isOffline = isNativeOfflineAudioContext(nativeContext);
            const stereoPannerNodeRenderer = (isOffline ? createStereoPannerNodeRenderer() : null);
            super(context, false, nativeStereoPannerNode, stereoPannerNodeRenderer);
            this._pan = createAudioParam(this, isOffline, nativeStereoPannerNode.pan);
        }
        get pan() {
            return this._pan;
        }
    };
};
//# sourceMappingURL=stereo-panner-node-constructor.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/stereo-panner-node-renderer-factory.js":
/*!***************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/stereo-panner-node-renderer-factory.js ***!
  \***************************************************************************************************************/
/*! namespace exports */
/*! export createStereoPannerNodeRendererFactory [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "createStereoPannerNodeRendererFactory": () => /* binding */ createStereoPannerNodeRendererFactory
/* harmony export */ });
/* harmony import */ var _guards_native_audio_node_faker__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../guards/native-audio-node-faker */ "./node_modules/standardized-audio-context/build/es2019/guards/native-audio-node-faker.js");
/* harmony import */ var _helpers_is_owned_by_context__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../helpers/is-owned-by-context */ "./node_modules/standardized-audio-context/build/es2019/helpers/is-owned-by-context.js");
;

const createStereoPannerNodeRendererFactory = (connectAudioParam, createNativeStereoPannerNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode) => {
    return () => {
        const renderedNativeStereoPannerNodes = new WeakMap();
        const createStereoPannerNode = async (proxy, nativeOfflineAudioContext, trace) => {
            let nativeStereoPannerNode = getNativeAudioNode(proxy);
            /*
             * If the initially used nativeStereoPannerNode was not constructed on the same OfflineAudioContext it needs to be created
             * again.
             */
            const nativeStereoPannerNodeIsOwnedByContext = (0,_helpers_is_owned_by_context__WEBPACK_IMPORTED_MODULE_1__.isOwnedByContext)(nativeStereoPannerNode, nativeOfflineAudioContext);
            if (!nativeStereoPannerNodeIsOwnedByContext) {
                const options = {
                    channelCount: nativeStereoPannerNode.channelCount,
                    channelCountMode: nativeStereoPannerNode.channelCountMode,
                    channelInterpretation: nativeStereoPannerNode.channelInterpretation,
                    pan: nativeStereoPannerNode.pan.value
                };
                nativeStereoPannerNode = createNativeStereoPannerNode(nativeOfflineAudioContext, options);
            }
            renderedNativeStereoPannerNodes.set(nativeOfflineAudioContext, nativeStereoPannerNode);
            if (!nativeStereoPannerNodeIsOwnedByContext) {
                await renderAutomation(nativeOfflineAudioContext, proxy.pan, nativeStereoPannerNode.pan, trace);
            }
            else {
                await connectAudioParam(nativeOfflineAudioContext, proxy.pan, nativeStereoPannerNode.pan, trace);
            }
            if ((0,_guards_native_audio_node_faker__WEBPACK_IMPORTED_MODULE_0__.isNativeAudioNodeFaker)(nativeStereoPannerNode)) {
                await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeStereoPannerNode.inputs[0], trace);
            }
            else {
                await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeStereoPannerNode, trace);
            }
            return nativeStereoPannerNode;
        };
        return {
            render(proxy, nativeOfflineAudioContext, trace) {
                const renderedNativeStereoPannerNode = renderedNativeStereoPannerNodes.get(nativeOfflineAudioContext);
                if (renderedNativeStereoPannerNode !== undefined) {
                    return Promise.resolve(renderedNativeStereoPannerNode);
                }
                return createStereoPannerNode(proxy, nativeOfflineAudioContext, trace);
            }
        };
    };
};
//# sourceMappingURL=stereo-panner-node-renderer-factory.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/test-audio-buffer-constructor-support.js":
/*!*****************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/test-audio-buffer-constructor-support.js ***!
  \*****************************************************************************************************************/
/*! namespace exports */
/*! export createTestAudioBufferConstructorSupport [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "createTestAudioBufferConstructorSupport": () => /* binding */ createTestAudioBufferConstructorSupport
/* harmony export */ });
// Bug #33: Safari exposes an AudioBuffer but it can't be used as a constructor.
const createTestAudioBufferConstructorSupport = (nativeAudioBufferConstructor) => {
    return () => {
        if (nativeAudioBufferConstructor === null) {
            return false;
        }
        try {
            new nativeAudioBufferConstructor({ length: 1, sampleRate: 44100 }); // tslint:disable-line:no-unused-expression
        }
        catch {
            return false;
        }
        return true;
    };
};
//# sourceMappingURL=test-audio-buffer-constructor-support.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/test-audio-buffer-copy-channel-methods-subarray-support.js":
/*!***********************************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/test-audio-buffer-copy-channel-methods-subarray-support.js ***!
  \***********************************************************************************************************************************/
/*! namespace exports */
/*! export createTestAudioBufferCopyChannelMethodsSubarraySupport [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "createTestAudioBufferCopyChannelMethodsSubarraySupport": () => /* binding */ createTestAudioBufferCopyChannelMethodsSubarraySupport
/* harmony export */ });
/*
 * Firefox up to version 67 didn't fully support the copyFromChannel() and copyToChannel() methods. Therefore testing one of those methods
 * is enough to know if the other one is supported as well.
 */
const createTestAudioBufferCopyChannelMethodsSubarraySupport = (nativeOfflineAudioContextConstructor) => {
    return () => {
        if (nativeOfflineAudioContextConstructor === null) {
            return false;
        }
        const nativeOfflineAudioContext = new nativeOfflineAudioContextConstructor(1, 1, 44100);
        const nativeAudioBuffer = nativeOfflineAudioContext.createBuffer(1, 1, 44100);
        // Bug #5: Safari does not support copyFromChannel() and copyToChannel().
        if (nativeAudioBuffer.copyToChannel === undefined) {
            return true;
        }
        const source = new Float32Array(2);
        try {
            nativeAudioBuffer.copyFromChannel(source, 0, 0);
        }
        catch {
            return false;
        }
        return true;
    };
};
//# sourceMappingURL=test-audio-buffer-copy-channel-methods-subarray-support.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/test-audio-context-close-method-support.js":
/*!*******************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/test-audio-context-close-method-support.js ***!
  \*******************************************************************************************************************/
/*! namespace exports */
/*! export createTestAudioContextCloseMethodSupport [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "createTestAudioContextCloseMethodSupport": () => /* binding */ createTestAudioContextCloseMethodSupport
/* harmony export */ });
const createTestAudioContextCloseMethodSupport = (nativeAudioContextConstructor) => {
    return () => {
        if (nativeAudioContextConstructor === null) {
            return false;
        }
        // Try to check the prototype before constructing the AudioContext.
        if (nativeAudioContextConstructor.prototype !== undefined && nativeAudioContextConstructor.prototype.close !== undefined) {
            return true;
        }
        const audioContext = new nativeAudioContextConstructor();
        const isAudioContextClosable = audioContext.close !== undefined;
        try {
            audioContext.close();
        }
        catch {
            // Ignore errors.
        }
        return isAudioContextClosable;
    };
};
//# sourceMappingURL=test-audio-context-close-method-support.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/test-audio-context-decode-audio-data-method-type-error-support.js":
/*!******************************************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/test-audio-context-decode-audio-data-method-type-error-support.js ***!
  \******************************************************************************************************************************************/
/*! namespace exports */
/*! export createTestAudioContextDecodeAudioDataMethodTypeErrorSupport [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "createTestAudioContextDecodeAudioDataMethodTypeErrorSupport": () => /* binding */ createTestAudioContextDecodeAudioDataMethodTypeErrorSupport
/* harmony export */ });
/**
 * Edge up to version 14, Firefox up to version 52, Safari up to version 9 and maybe other browsers
 * did not refuse to decode invalid parameters with a TypeError.
 */
const createTestAudioContextDecodeAudioDataMethodTypeErrorSupport = (nativeOfflineAudioContextConstructor) => {
    return () => {
        if (nativeOfflineAudioContextConstructor === null) {
            return Promise.resolve(false);
        }
        const offlineAudioContext = new nativeOfflineAudioContextConstructor(1, 1, 44100);
        // Bug #21: Safari does not support promises yet.
        return new Promise((resolve) => {
            let isPending = true;
            const resolvePromise = (err) => {
                if (isPending) {
                    isPending = false;
                    offlineAudioContext.startRendering();
                    resolve(err instanceof TypeError);
                }
            };
            let promise;
            // Bug #26: Safari throws a synchronous error.
            try {
                promise = offlineAudioContext
                    // Bug #1: Safari requires a successCallback.
                    .decodeAudioData(null, () => {
                    // Ignore the success callback.
                }, resolvePromise);
            }
            catch (err) {
                resolvePromise(err);
            }
            // Bug #21: Safari does not support promises yet.
            if (promise !== undefined) {
                // Bug #6: Chrome, Edge, Firefox and Opera do not call the errorCallback.
                promise.catch(resolvePromise);
            }
        });
    };
};
//# sourceMappingURL=test-audio-context-decode-audio-data-method-type-error-support.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/test-audio-context-options-support.js":
/*!**************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/test-audio-context-options-support.js ***!
  \**************************************************************************************************************/
/*! namespace exports */
/*! export createTestAudioContextOptionsSupport [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "createTestAudioContextOptionsSupport": () => /* binding */ createTestAudioContextOptionsSupport
/* harmony export */ });
const createTestAudioContextOptionsSupport = (nativeAudioContextConstructor) => {
    return () => {
        if (nativeAudioContextConstructor === null) {
            return false;
        }
        let audioContext;
        try {
            audioContext = new nativeAudioContextConstructor({ latencyHint: 'balanced' });
        }
        catch {
            return false;
        }
        audioContext.close();
        return true;
    };
};
//# sourceMappingURL=test-audio-context-options-support.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/test-audio-node-connect-method-support.js":
/*!******************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/test-audio-node-connect-method-support.js ***!
  \******************************************************************************************************************/
/*! namespace exports */
/*! export createTestAudioNodeConnectMethodSupport [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "createTestAudioNodeConnectMethodSupport": () => /* binding */ createTestAudioNodeConnectMethodSupport
/* harmony export */ });
// Safari up to version 12.0 (but not v12.1) didn't return the destination in case it was an AudioNode.
const createTestAudioNodeConnectMethodSupport = (nativeOfflineAudioContextConstructor) => {
    return () => {
        if (nativeOfflineAudioContextConstructor === null) {
            return false;
        }
        const nativeOfflineAudioContext = new nativeOfflineAudioContextConstructor(1, 1, 44100);
        const nativeGainNode = nativeOfflineAudioContext.createGain();
        const isSupported = nativeGainNode.connect(nativeGainNode) === nativeGainNode;
        nativeGainNode.disconnect(nativeGainNode);
        return isSupported;
    };
};
//# sourceMappingURL=test-audio-node-connect-method-support.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/test-audio-worklet-processor-no-outputs-support.js":
/*!***************************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/test-audio-worklet-processor-no-outputs-support.js ***!
  \***************************************************************************************************************************/
/*! namespace exports */
/*! export createTestAudioWorkletProcessorNoOutputsSupport [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "createTestAudioWorkletProcessorNoOutputsSupport": () => /* binding */ createTestAudioWorkletProcessorNoOutputsSupport
/* harmony export */ });
/**
 * Chrome version 66 and 67 did not call the process() function of an AudioWorkletProcessor if it had no outputs. AudioWorklet support was
 * enabled by default in version 66.
 */
const createTestAudioWorkletProcessorNoOutputsSupport = (nativeAudioWorkletNodeConstructor, nativeOfflineAudioContextConstructor) => {
    return async () => {
        // Bug #61: If there is no native AudioWorkletNode it gets faked and therefore it is no problem if the it doesn't exist.
        if (nativeAudioWorkletNodeConstructor === null) {
            return true;
        }
        if (nativeOfflineAudioContextConstructor === null) {
            return false;
        }
        const blob = new Blob(['class A extends AudioWorkletProcessor{process(){this.port.postMessage(0)}}registerProcessor("a",A)'], {
            type: 'application/javascript; charset=utf-8'
        });
        const offlineAudioContext = new nativeOfflineAudioContextConstructor(1, 128, 8000);
        const url = URL.createObjectURL(blob);
        let isCallingProcess = false;
        try {
            await offlineAudioContext.audioWorklet.addModule(url);
            const audioWorkletNode = new nativeAudioWorkletNodeConstructor(offlineAudioContext, 'a', { numberOfOutputs: 0 });
            const oscillator = offlineAudioContext.createOscillator();
            audioWorkletNode.port.onmessage = () => (isCallingProcess = true);
            oscillator.connect(audioWorkletNode);
            oscillator.start(0);
            await offlineAudioContext.startRendering();
            if (!isCallingProcess) {
                await new Promise((resolve) => setTimeout(resolve, 5));
            }
        }
        catch {
            // Ignore errors.
        }
        finally {
            URL.revokeObjectURL(url);
        }
        return isCallingProcess;
    };
};
//# sourceMappingURL=test-audio-worklet-processor-no-outputs-support.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/test-audio-worklet-processor-post-message-support.js":
/*!*****************************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/test-audio-worklet-processor-post-message-support.js ***!
  \*****************************************************************************************************************************/
/*! namespace exports */
/*! export createTestAudioWorkletProcessorPostMessageSupport [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "createTestAudioWorkletProcessorPostMessageSupport": () => /* binding */ createTestAudioWorkletProcessorPostMessageSupport
/* harmony export */ });
// Bug #179: Firefox does not allow to transfer any buffer which has been passed to the process() method as an argument.
const createTestAudioWorkletProcessorPostMessageSupport = (nativeAudioWorkletNodeConstructor, nativeOfflineAudioContextConstructor) => {
    return async () => {
        // Bug #61: If there is no native AudioWorkletNode it gets faked and therefore it is no problem if the it doesn't exist.
        if (nativeAudioWorkletNodeConstructor === null) {
            return true;
        }
        if (nativeOfflineAudioContextConstructor === null) {
            return false;
        }
        const blob = new Blob(['class A extends AudioWorkletProcessor{process(i){this.port.postMessage(i,[i[0][0].buffer])}}registerProcessor("a",A)'], {
            type: 'application/javascript; charset=utf-8'
        });
        const offlineAudioContext = new nativeOfflineAudioContextConstructor(1, 128, 8000);
        const url = URL.createObjectURL(blob);
        let isEmittingMessageEvents = false;
        let isEmittingProcessorErrorEvents = false;
        try {
            await offlineAudioContext.audioWorklet.addModule(url);
            const audioWorkletNode = new nativeAudioWorkletNodeConstructor(offlineAudioContext, 'a', { numberOfOutputs: 0 });
            const oscillator = offlineAudioContext.createOscillator();
            audioWorkletNode.port.onmessage = () => (isEmittingMessageEvents = true);
            audioWorkletNode.onprocessorerror = () => (isEmittingProcessorErrorEvents = true);
            oscillator.connect(audioWorkletNode);
            await offlineAudioContext.startRendering();
        }
        catch {
            // Ignore errors.
        }
        finally {
            URL.revokeObjectURL(url);
        }
        return isEmittingMessageEvents && !isEmittingProcessorErrorEvents;
    };
};
//# sourceMappingURL=test-audio-worklet-processor-post-message-support.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/test-channel-merger-node-channel-count-support.js":
/*!**************************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/test-channel-merger-node-channel-count-support.js ***!
  \**************************************************************************************************************************/
/*! namespace exports */
/*! export createTestChannelMergerNodeChannelCountSupport [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "createTestChannelMergerNodeChannelCountSupport": () => /* binding */ createTestChannelMergerNodeChannelCountSupport
/* harmony export */ });
/**
 * Firefox up to version 69 did not throw an error when setting a different channelCount or channelCountMode.
 */
const createTestChannelMergerNodeChannelCountSupport = (nativeOfflineAudioContextConstructor) => {
    return () => {
        if (nativeOfflineAudioContextConstructor === null) {
            return false;
        }
        const offlineAudioContext = new nativeOfflineAudioContextConstructor(1, 1, 44100);
        const nativeChannelMergerNode = offlineAudioContext.createChannelMerger();
        /**
         * Bug #15: Safari does not return the default properties. It still needs to be patched. This test is supposed to test the support
         * in other browsers.
         */
        if (nativeChannelMergerNode.channelCountMode === 'max') {
            return true;
        }
        try {
            nativeChannelMergerNode.channelCount = 2;
        }
        catch {
            return true;
        }
        return false;
    };
};
//# sourceMappingURL=test-channel-merger-node-channel-count-support.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/test-constant-source-node-accurate-scheduling-support.js":
/*!*********************************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/test-constant-source-node-accurate-scheduling-support.js ***!
  \*********************************************************************************************************************************/
/*! namespace exports */
/*! export createTestConstantSourceNodeAccurateSchedulingSupport [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "createTestConstantSourceNodeAccurateSchedulingSupport": () => /* binding */ createTestConstantSourceNodeAccurateSchedulingSupport
/* harmony export */ });
const createTestConstantSourceNodeAccurateSchedulingSupport = (nativeOfflineAudioContextConstructor) => {
    return () => {
        if (nativeOfflineAudioContextConstructor === null) {
            return false;
        }
        const nativeOfflineAudioContext = new nativeOfflineAudioContextConstructor(1, 1, 44100);
        // Bug #62: Safari does not support ConstantSourceNodes.
        if (nativeOfflineAudioContext.createConstantSource === undefined) {
            return true;
        }
        const nativeConstantSourceNode = nativeOfflineAudioContext.createConstantSource();
        /*
         * @todo This is using bug #75 to detect bug #70. That works because both bugs were unique to
         * the implementation of Firefox right now, but it could probably be done in a better way.
         */
        return nativeConstantSourceNode.offset.maxValue !== Number.POSITIVE_INFINITY;
    };
};
//# sourceMappingURL=test-constant-source-node-accurate-scheduling-support.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/test-convolver-node-buffer-reassignability-support.js":
/*!******************************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/test-convolver-node-buffer-reassignability-support.js ***!
  \******************************************************************************************************************************/
/*! namespace exports */
/*! export createTestConvolverNodeBufferReassignabilitySupport [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "createTestConvolverNodeBufferReassignabilitySupport": () => /* binding */ createTestConvolverNodeBufferReassignabilitySupport
/* harmony export */ });
// Opera up to version 57 did not allow to reassign the buffer of a ConvolverNode.
const createTestConvolverNodeBufferReassignabilitySupport = (nativeOfflineAudioContextConstructor) => {
    return () => {
        if (nativeOfflineAudioContextConstructor === null) {
            return false;
        }
        const offlineAudioContext = new nativeOfflineAudioContextConstructor(1, 1, 44100);
        const nativeConvolverNode = offlineAudioContext.createConvolver();
        nativeConvolverNode.buffer = offlineAudioContext.createBuffer(1, 1, offlineAudioContext.sampleRate);
        try {
            nativeConvolverNode.buffer = offlineAudioContext.createBuffer(1, 1, offlineAudioContext.sampleRate);
        }
        catch {
            return false;
        }
        return true;
    };
};
//# sourceMappingURL=test-convolver-node-buffer-reassignability-support.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/test-convolver-node-channel-count-support.js":
/*!*********************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/test-convolver-node-channel-count-support.js ***!
  \*********************************************************************************************************************/
/*! namespace exports */
/*! export createTestConvolverNodeChannelCountSupport [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "createTestConvolverNodeChannelCountSupport": () => /* binding */ createTestConvolverNodeChannelCountSupport
/* harmony export */ });
// Chrome up to version v80, Edge up to version v80 and Opera up to version v67 did not allow to set the channelCount property of a ConvolverNode to 1. They also did not allow to set the channelCountMode to 'explicit'.
const createTestConvolverNodeChannelCountSupport = (nativeOfflineAudioContextConstructor) => {
    return () => {
        if (nativeOfflineAudioContextConstructor === null) {
            return false;
        }
        const offlineAudioContext = new nativeOfflineAudioContextConstructor(1, 1, 44100);
        const nativeConvolverNode = offlineAudioContext.createConvolver();
        try {
            nativeConvolverNode.channelCount = 1;
        }
        catch {
            return false;
        }
        return true;
    };
};
//# sourceMappingURL=test-convolver-node-channel-count-support.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/test-is-secure-context-support.js":
/*!**********************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/test-is-secure-context-support.js ***!
  \**********************************************************************************************************/
/*! namespace exports */
/*! export createTestIsSecureContextSupport [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "createTestIsSecureContextSupport": () => /* binding */ createTestIsSecureContextSupport
/* harmony export */ });
const createTestIsSecureContextSupport = (window) => {
    return () => window !== null && window.hasOwnProperty('isSecureContext');
};
//# sourceMappingURL=test-is-secure-context-support.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/test-media-stream-audio-source-node-media-stream-without-audio-track-support.js":
/*!********************************************************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/test-media-stream-audio-source-node-media-stream-without-audio-track-support.js ***!
  \********************************************************************************************************************************************************/
/*! namespace exports */
/*! export createTestMediaStreamAudioSourceNodeMediaStreamWithoutAudioTrackSupport [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "createTestMediaStreamAudioSourceNodeMediaStreamWithoutAudioTrackSupport": () => /* binding */ createTestMediaStreamAudioSourceNodeMediaStreamWithoutAudioTrackSupport
/* harmony export */ });
// Firefox up to version 68 did not throw an error when creating a MediaStreamAudioSourceNode with a mediaStream that had no audio track.
const createTestMediaStreamAudioSourceNodeMediaStreamWithoutAudioTrackSupport = (nativeAudioContextConstructor) => {
    return () => {
        if (nativeAudioContextConstructor === null) {
            return false;
        }
        const audioContext = new nativeAudioContextConstructor();
        try {
            audioContext.createMediaStreamSource(new MediaStream());
            return false;
        }
        catch (err) {
            return true;
        }
    };
};
//# sourceMappingURL=test-media-stream-audio-source-node-media-stream-without-audio-track-support.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/test-offline-audio-context-current-time-support.js":
/*!***************************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/test-offline-audio-context-current-time-support.js ***!
  \***************************************************************************************************************************/
/*! namespace exports */
/*! export createTestOfflineAudioContextCurrentTimeSupport [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "createTestOfflineAudioContextCurrentTimeSupport": () => /* binding */ createTestOfflineAudioContextCurrentTimeSupport
/* harmony export */ });
const createTestOfflineAudioContextCurrentTimeSupport = (createNativeGainNode, nativeOfflineAudioContextConstructor) => {
    return () => {
        if (nativeOfflineAudioContextConstructor === null) {
            return Promise.resolve(false);
        }
        const nativeOfflineAudioContext = new nativeOfflineAudioContextConstructor(1, 1, 44100);
        // Bug #48: Safari does not render an OfflineAudioContext without any connected node.
        const gainNode = createNativeGainNode(nativeOfflineAudioContext, {
            channelCount: 1,
            channelCountMode: 'explicit',
            channelInterpretation: 'discrete',
            gain: 0
        });
        // Bug #21: Safari does not support promises yet.
        return new Promise((resolve) => {
            nativeOfflineAudioContext.oncomplete = () => {
                gainNode.disconnect();
                resolve(nativeOfflineAudioContext.currentTime !== 0);
            };
            nativeOfflineAudioContext.startRendering();
        });
    };
};
//# sourceMappingURL=test-offline-audio-context-current-time-support.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/test-stereo-panner-node-default-value-support.js":
/*!*************************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/test-stereo-panner-node-default-value-support.js ***!
  \*************************************************************************************************************************/
/*! namespace exports */
/*! export createTestStereoPannerNodeDefaultValueSupport [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "createTestStereoPannerNodeDefaultValueSupport": () => /* binding */ createTestStereoPannerNodeDefaultValueSupport
/* harmony export */ });
/**
 * Firefox up to version 62 did not kick off the processing of the StereoPannerNode if the value of pan was zero.
 */
const createTestStereoPannerNodeDefaultValueSupport = (nativeOfflineAudioContextConstructor) => {
    return () => {
        if (nativeOfflineAudioContextConstructor === null) {
            return Promise.resolve(false);
        }
        const nativeOfflineAudioContext = new nativeOfflineAudioContextConstructor(1, 1, 44100);
        /*
         * Bug #105: Safari does not support the StereoPannerNode. Therefore the returned value should normally be false but the faker does
         * support the tested behaviour.
         */
        if (nativeOfflineAudioContext.createStereoPanner === undefined) {
            return Promise.resolve(true);
        }
        // Bug #62: Safari does not support ConstantSourceNodes.
        if (nativeOfflineAudioContext.createConstantSource === undefined) {
            return Promise.resolve(true);
        }
        const constantSourceNode = nativeOfflineAudioContext.createConstantSource();
        const stereoPanner = nativeOfflineAudioContext.createStereoPanner();
        constantSourceNode.channelCount = 1;
        constantSourceNode.offset.value = 1;
        stereoPanner.channelCount = 1;
        constantSourceNode.start();
        constantSourceNode.connect(stereoPanner).connect(nativeOfflineAudioContext.destination);
        return nativeOfflineAudioContext.startRendering().then((buffer) => buffer.getChannelData(0)[0] !== 1);
    };
};
//# sourceMappingURL=test-stereo-panner-node-default-value-support.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/unknown-error.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/unknown-error.js ***!
  \*****************************************************************************************/
/*! namespace exports */
/*! export createUnknownError [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "createUnknownError": () => /* binding */ createUnknownError
/* harmony export */ });
const createUnknownError = () => new DOMException('', 'UnknownError');
//# sourceMappingURL=unknown-error.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/wave-shaper-node-constructor.js":
/*!********************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/wave-shaper-node-constructor.js ***!
  \********************************************************************************************************/
/*! namespace exports */
/*! export createWaveShaperNodeConstructor [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "createWaveShaperNodeConstructor": () => /* binding */ createWaveShaperNodeConstructor
/* harmony export */ });
const DEFAULT_OPTIONS = {
    channelCount: 2,
    channelCountMode: 'max',
    channelInterpretation: 'speakers',
    curve: null,
    oversample: 'none'
};
const createWaveShaperNodeConstructor = (audioNodeConstructor, createInvalidStateError, createNativeWaveShaperNode, createWaveShaperNodeRenderer, getNativeContext, isNativeOfflineAudioContext, setAudioNodeTailTime) => {
    return class WaveShaperNode extends audioNodeConstructor {
        constructor(context, options) {
            const nativeContext = getNativeContext(context);
            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };
            const nativeWaveShaperNode = createNativeWaveShaperNode(nativeContext, mergedOptions);
            const isOffline = isNativeOfflineAudioContext(nativeContext);
            const waveShaperNodeRenderer = (isOffline ? createWaveShaperNodeRenderer() : null);
            // @todo Add a mechanism to only switch a WaveShaperNode to active while it is connected.
            super(context, true, nativeWaveShaperNode, waveShaperNodeRenderer);
            this._isCurveNullified = false;
            this._nativeWaveShaperNode = nativeWaveShaperNode;
            // @todo Determine a meaningful tail-time instead of just using one second.
            setAudioNodeTailTime(this, 1);
        }
        get curve() {
            if (this._isCurveNullified) {
                return null;
            }
            return this._nativeWaveShaperNode.curve;
        }
        set curve(value) {
            // Bug #103: Safari does not allow to set the curve to null.
            if (value === null) {
                this._isCurveNullified = true;
                this._nativeWaveShaperNode.curve = new Float32Array([0, 0]);
            }
            else {
                // Bug #102: Safari does not throw an InvalidStateError when the curve has less than two samples.
                // Bug #104: Chrome, Edge and Opera will throw an InvalidAccessError when the curve has less than two samples.
                if (value.length < 2) {
                    throw createInvalidStateError();
                }
                this._isCurveNullified = false;
                this._nativeWaveShaperNode.curve = value;
            }
        }
        get oversample() {
            return this._nativeWaveShaperNode.oversample;
        }
        set oversample(value) {
            this._nativeWaveShaperNode.oversample = value;
        }
    };
};
//# sourceMappingURL=wave-shaper-node-constructor.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/wave-shaper-node-renderer-factory.js":
/*!*************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/wave-shaper-node-renderer-factory.js ***!
  \*************************************************************************************************************/
/*! namespace exports */
/*! export createWaveShaperNodeRendererFactory [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "createWaveShaperNodeRendererFactory": () => /* binding */ createWaveShaperNodeRendererFactory
/* harmony export */ });
/* harmony import */ var _guards_native_audio_node_faker__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../guards/native-audio-node-faker */ "./node_modules/standardized-audio-context/build/es2019/guards/native-audio-node-faker.js");
/* harmony import */ var _helpers_is_owned_by_context__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../helpers/is-owned-by-context */ "./node_modules/standardized-audio-context/build/es2019/helpers/is-owned-by-context.js");
;

const createWaveShaperNodeRendererFactory = (createNativeWaveShaperNode, getNativeAudioNode, renderInputsOfAudioNode) => {
    return () => {
        const renderedNativeWaveShaperNodes = new WeakMap();
        const createWaveShaperNode = async (proxy, nativeOfflineAudioContext, trace) => {
            let nativeWaveShaperNode = getNativeAudioNode(proxy);
            // If the initially used nativeWaveShaperNode was not constructed on the same OfflineAudioContext it needs to be created again.
            const nativeWaveShaperNodeIsOwnedByContext = (0,_helpers_is_owned_by_context__WEBPACK_IMPORTED_MODULE_1__.isOwnedByContext)(nativeWaveShaperNode, nativeOfflineAudioContext);
            if (!nativeWaveShaperNodeIsOwnedByContext) {
                const options = {
                    channelCount: nativeWaveShaperNode.channelCount,
                    channelCountMode: nativeWaveShaperNode.channelCountMode,
                    channelInterpretation: nativeWaveShaperNode.channelInterpretation,
                    curve: nativeWaveShaperNode.curve,
                    oversample: nativeWaveShaperNode.oversample
                };
                nativeWaveShaperNode = createNativeWaveShaperNode(nativeOfflineAudioContext, options);
            }
            renderedNativeWaveShaperNodes.set(nativeOfflineAudioContext, nativeWaveShaperNode);
            if ((0,_guards_native_audio_node_faker__WEBPACK_IMPORTED_MODULE_0__.isNativeAudioNodeFaker)(nativeWaveShaperNode)) {
                await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeWaveShaperNode.inputs[0], trace);
            }
            else {
                await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeWaveShaperNode, trace);
            }
            return nativeWaveShaperNode;
        };
        return {
            render(proxy, nativeOfflineAudioContext, trace) {
                const renderedNativeWaveShaperNode = renderedNativeWaveShaperNodes.get(nativeOfflineAudioContext);
                if (renderedNativeWaveShaperNode !== undefined) {
                    return Promise.resolve(renderedNativeWaveShaperNode);
                }
                return createWaveShaperNode(proxy, nativeOfflineAudioContext, trace);
            }
        };
    };
};
//# sourceMappingURL=wave-shaper-node-renderer-factory.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/window.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/window.js ***!
  \**********************************************************************************/
/*! namespace exports */
/*! export createWindow [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "createWindow": () => /* binding */ createWindow
/* harmony export */ });
const createWindow = () => (typeof window === 'undefined' ? null : window);
//# sourceMappingURL=window.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/wrap-audio-buffer-copy-channel-methods-out-of-bounds.js":
/*!********************************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/wrap-audio-buffer-copy-channel-methods-out-of-bounds.js ***!
  \********************************************************************************************************************************/
/*! namespace exports */
/*! export createWrapAudioBufferCopyChannelMethodsOutOfBounds [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "createWrapAudioBufferCopyChannelMethodsOutOfBounds": () => /* binding */ createWrapAudioBufferCopyChannelMethodsOutOfBounds
/* harmony export */ });
const createWrapAudioBufferCopyChannelMethodsOutOfBounds = (convertNumberToUnsignedLong) => {
    return (audioBuffer) => {
        audioBuffer.copyFromChannel = ((copyFromChannel) => {
            return (destination, channelNumberAsNumber, bufferOffsetAsNumber = 0) => {
                const bufferOffset = convertNumberToUnsignedLong(bufferOffsetAsNumber);
                const channelNumber = convertNumberToUnsignedLong(channelNumberAsNumber);
                if (bufferOffset < audioBuffer.length) {
                    return copyFromChannel.call(audioBuffer, destination, channelNumber, bufferOffset);
                }
            };
        })(audioBuffer.copyFromChannel);
        audioBuffer.copyToChannel = ((copyToChannel) => {
            return (source, channelNumberAsNumber, bufferOffsetAsNumber = 0) => {
                const bufferOffset = convertNumberToUnsignedLong(bufferOffsetAsNumber);
                const channelNumber = convertNumberToUnsignedLong(channelNumberAsNumber);
                if (bufferOffset < audioBuffer.length) {
                    return copyToChannel.call(audioBuffer, source, channelNumber, bufferOffset);
                }
            };
        })(audioBuffer.copyToChannel);
    };
};
//# sourceMappingURL=wrap-audio-buffer-copy-channel-methods-out-of-bounds.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/wrap-audio-buffer-copy-channel-methods.js":
/*!******************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/wrap-audio-buffer-copy-channel-methods.js ***!
  \******************************************************************************************************************/
/*! namespace exports */
/*! export createWrapAudioBufferCopyChannelMethods [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "createWrapAudioBufferCopyChannelMethods": () => /* binding */ createWrapAudioBufferCopyChannelMethods
/* harmony export */ });
const createWrapAudioBufferCopyChannelMethods = (convertNumberToUnsignedLong, createIndexSizeError) => {
    return (audioBuffer) => {
        audioBuffer.copyFromChannel = (destination, channelNumberAsNumber, bufferOffsetAsNumber = 0) => {
            const bufferOffset = convertNumberToUnsignedLong(bufferOffsetAsNumber);
            const channelNumber = convertNumberToUnsignedLong(channelNumberAsNumber);
            if (channelNumber >= audioBuffer.numberOfChannels) {
                throw createIndexSizeError();
            }
            const audioBufferLength = audioBuffer.length;
            const channelData = audioBuffer.getChannelData(channelNumber);
            const destinationLength = destination.length;
            for (let i = bufferOffset < 0 ? -bufferOffset : 0; i + bufferOffset < audioBufferLength && i < destinationLength; i += 1) {
                destination[i] = channelData[i + bufferOffset];
            }
        };
        audioBuffer.copyToChannel = (source, channelNumberAsNumber, bufferOffsetAsNumber = 0) => {
            const bufferOffset = convertNumberToUnsignedLong(bufferOffsetAsNumber);
            const channelNumber = convertNumberToUnsignedLong(channelNumberAsNumber);
            if (channelNumber >= audioBuffer.numberOfChannels) {
                throw createIndexSizeError();
            }
            const audioBufferLength = audioBuffer.length;
            const channelData = audioBuffer.getChannelData(channelNumber);
            const sourceLength = source.length;
            for (let i = bufferOffset < 0 ? -bufferOffset : 0; i + bufferOffset < audioBufferLength && i < sourceLength; i += 1) {
                channelData[i + bufferOffset] = source[i];
            }
        };
    };
};
//# sourceMappingURL=wrap-audio-buffer-copy-channel-methods.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/wrap-audio-buffer-source-node-stop-method-nullified-buffer.js":
/*!**************************************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/wrap-audio-buffer-source-node-stop-method-nullified-buffer.js ***!
  \**************************************************************************************************************************************/
/*! namespace exports */
/*! export createWrapAudioBufferSourceNodeStopMethodNullifiedBuffer [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "createWrapAudioBufferSourceNodeStopMethodNullifiedBuffer": () => /* binding */ createWrapAudioBufferSourceNodeStopMethodNullifiedBuffer
/* harmony export */ });
const createWrapAudioBufferSourceNodeStopMethodNullifiedBuffer = (overwriteAccessors) => {
    return (nativeAudioBufferSourceNode, nativeContext) => {
        const nullifiedBuffer = nativeContext.createBuffer(1, 1, 44100);
        if (nativeAudioBufferSourceNode.buffer === null) {
            nativeAudioBufferSourceNode.buffer = nullifiedBuffer;
        }
        overwriteAccessors(nativeAudioBufferSourceNode, 'buffer', (get) => () => {
            const value = get.call(nativeAudioBufferSourceNode);
            return value === nullifiedBuffer ? null : value;
        }, (set) => (value) => {
            return set.call(nativeAudioBufferSourceNode, value === null ? nullifiedBuffer : value);
        });
    };
};
//# sourceMappingURL=wrap-audio-buffer-source-node-stop-method-nullified-buffer.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/wrap-channel-merger-node.js":
/*!****************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/wrap-channel-merger-node.js ***!
  \****************************************************************************************************/
/*! namespace exports */
/*! export createWrapChannelMergerNode [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "createWrapChannelMergerNode": () => /* binding */ createWrapChannelMergerNode
/* harmony export */ });
const createWrapChannelMergerNode = (createInvalidStateError, monitorConnections) => {
    return (nativeContext, channelMergerNode) => {
        // Bug #15: Safari does not return the default properties.
        channelMergerNode.channelCount = 1;
        channelMergerNode.channelCountMode = 'explicit';
        // Bug #16: Safari does not throw an error when setting a different channelCount or channelCountMode.
        Object.defineProperty(channelMergerNode, 'channelCount', {
            get: () => 1,
            set: () => {
                throw createInvalidStateError();
            }
        });
        Object.defineProperty(channelMergerNode, 'channelCountMode', {
            get: () => 'explicit',
            set: () => {
                throw createInvalidStateError();
            }
        });
        // Bug #20: Safari requires a connection of any kind to treat the input signal correctly.
        const audioBufferSourceNode = nativeContext.createBufferSource();
        const whenConnected = () => {
            const length = channelMergerNode.numberOfInputs;
            for (let i = 0; i < length; i += 1) {
                audioBufferSourceNode.connect(channelMergerNode, 0, i);
            }
        };
        const whenDisconnected = () => audioBufferSourceNode.disconnect(channelMergerNode);
        monitorConnections(channelMergerNode, whenConnected, whenDisconnected);
    };
};
//# sourceMappingURL=wrap-channel-merger-node.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/globals.js":
/*!*************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/globals.js ***!
  \*************************************************************************/
/*! namespace exports */
/*! export ACTIVE_AUDIO_NODE_STORE [provided] [no usage info] [missing usage info prevents renaming] */
/*! export AUDIO_NODE_CONNECTIONS_STORE [provided] [no usage info] [missing usage info prevents renaming] */
/*! export AUDIO_NODE_STORE [provided] [no usage info] [missing usage info prevents renaming] */
/*! export AUDIO_PARAM_CONNECTIONS_STORE [provided] [no usage info] [missing usage info prevents renaming] */
/*! export AUDIO_PARAM_STORE [provided] [no usage info] [missing usage info prevents renaming] */
/*! export CONTEXT_STORE [provided] [no usage info] [missing usage info prevents renaming] */
/*! export CYCLE_COUNTERS [provided] [no usage info] [missing usage info prevents renaming] */
/*! export EVENT_LISTENERS [provided] [no usage info] [missing usage info prevents renaming] */
/*! export NODE_NAME_TO_PROCESSOR_CONSTRUCTOR_MAPS [provided] [no usage info] [missing usage info prevents renaming] */
/*! export NODE_TO_PROCESSOR_MAPS [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ACTIVE_AUDIO_NODE_STORE": () => /* binding */ ACTIVE_AUDIO_NODE_STORE,
/* harmony export */   "AUDIO_NODE_CONNECTIONS_STORE": () => /* binding */ AUDIO_NODE_CONNECTIONS_STORE,
/* harmony export */   "AUDIO_NODE_STORE": () => /* binding */ AUDIO_NODE_STORE,
/* harmony export */   "AUDIO_PARAM_CONNECTIONS_STORE": () => /* binding */ AUDIO_PARAM_CONNECTIONS_STORE,
/* harmony export */   "AUDIO_PARAM_STORE": () => /* binding */ AUDIO_PARAM_STORE,
/* harmony export */   "CONTEXT_STORE": () => /* binding */ CONTEXT_STORE,
/* harmony export */   "EVENT_LISTENERS": () => /* binding */ EVENT_LISTENERS,
/* harmony export */   "CYCLE_COUNTERS": () => /* binding */ CYCLE_COUNTERS,
/* harmony export */   "NODE_NAME_TO_PROCESSOR_CONSTRUCTOR_MAPS": () => /* binding */ NODE_NAME_TO_PROCESSOR_CONSTRUCTOR_MAPS,
/* harmony export */   "NODE_TO_PROCESSOR_MAPS": () => /* binding */ NODE_TO_PROCESSOR_MAPS
/* harmony export */ });
const ACTIVE_AUDIO_NODE_STORE = new WeakSet();
const AUDIO_NODE_CONNECTIONS_STORE = new WeakMap();
const AUDIO_NODE_STORE = new WeakMap();
const AUDIO_PARAM_CONNECTIONS_STORE = new WeakMap();
const AUDIO_PARAM_STORE = new WeakMap();
const CONTEXT_STORE = new WeakMap();
const EVENT_LISTENERS = new WeakMap();
const CYCLE_COUNTERS = new WeakMap();
// This clunky name is borrowed from the spec. :-)
const NODE_NAME_TO_PROCESSOR_CONSTRUCTOR_MAPS = new WeakMap();
const NODE_TO_PROCESSOR_MAPS = new WeakMap();
//# sourceMappingURL=globals.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/guards/audio-buffer-source-node.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/guards/audio-buffer-source-node.js ***!
  \*************************************************************************************************/
/*! namespace exports */
/*! export isAudioBufferSourceNode [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "isAudioBufferSourceNode": () => /* binding */ isAudioBufferSourceNode
/* harmony export */ });
const isAudioBufferSourceNode = (audioNode) => {
    return 'playbackRate' in audioNode;
};
//# sourceMappingURL=audio-buffer-source-node.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/guards/audio-node-output-connection.js":
/*!*****************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/guards/audio-node-output-connection.js ***!
  \*****************************************************************************************************/
/*! namespace exports */
/*! export isAudioNodeOutputConnection [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "isAudioNodeOutputConnection": () => /* binding */ isAudioNodeOutputConnection
/* harmony export */ });
/* harmony import */ var _audio_node__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./audio-node */ "./node_modules/standardized-audio-context/build/es2019/guards/audio-node.js");
;
const isAudioNodeOutputConnection = (outputConnection) => {
    return (0,_audio_node__WEBPACK_IMPORTED_MODULE_0__.isAudioNode)(outputConnection[0]);
};
//# sourceMappingURL=audio-node-output-connection.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/guards/audio-node.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/guards/audio-node.js ***!
  \***********************************************************************************/
/*! namespace exports */
/*! export isAudioNode [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "isAudioNode": () => /* binding */ isAudioNode
/* harmony export */ });
const isAudioNode = (audioNodeOrAudioParam) => {
    return 'context' in audioNodeOrAudioParam;
};
//# sourceMappingURL=audio-node.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/guards/audio-worklet-node.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/guards/audio-worklet-node.js ***!
  \*******************************************************************************************/
/*! namespace exports */
/*! export isAudioWorkletNode [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "isAudioWorkletNode": () => /* binding */ isAudioWorkletNode
/* harmony export */ });
const isAudioWorkletNode = (audioNode) => {
    return 'port' in audioNode;
};
//# sourceMappingURL=audio-worklet-node.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/guards/biquad-filter-node.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/guards/biquad-filter-node.js ***!
  \*******************************************************************************************/
/*! namespace exports */
/*! export isBiquadFilterNode [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "isBiquadFilterNode": () => /* binding */ isBiquadFilterNode
/* harmony export */ });
const isBiquadFilterNode = (audioNode) => {
    return 'frequency' in audioNode && 'gain' in audioNode;
};
//# sourceMappingURL=biquad-filter-node.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/guards/constant-source-node.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/guards/constant-source-node.js ***!
  \*********************************************************************************************/
/*! namespace exports */
/*! export isConstantSourceNode [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "isConstantSourceNode": () => /* binding */ isConstantSourceNode
/* harmony export */ });
const isConstantSourceNode = (audioNode) => {
    return 'offset' in audioNode;
};
//# sourceMappingURL=constant-source-node.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/guards/delay-node.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/guards/delay-node.js ***!
  \***********************************************************************************/
/*! namespace exports */
/*! export isDelayNode [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "isDelayNode": () => /* binding */ isDelayNode
/* harmony export */ });
const isDelayNode = (audioNode) => {
    return 'delayTime' in audioNode;
};
//# sourceMappingURL=delay-node.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/guards/gain-node.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/guards/gain-node.js ***!
  \**********************************************************************************/
/*! namespace exports */
/*! export isGainNode [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "isGainNode": () => /* binding */ isGainNode
/* harmony export */ });
const isGainNode = (audioNode) => {
    return !('frequency' in audioNode) && 'gain' in audioNode;
};
//# sourceMappingURL=gain-node.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/guards/native-audio-node-faker.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/guards/native-audio-node-faker.js ***!
  \************************************************************************************************/
/*! namespace exports */
/*! export isNativeAudioNodeFaker [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "isNativeAudioNodeFaker": () => /* binding */ isNativeAudioNodeFaker
/* harmony export */ });
const isNativeAudioNodeFaker = (nativeAudioNodeOrNativeAudioNodeFaker) => {
    return 'inputs' in nativeAudioNodeOrNativeAudioNodeFaker;
};
//# sourceMappingURL=native-audio-node-faker.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/guards/native-audio-node.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/guards/native-audio-node.js ***!
  \******************************************************************************************/
/*! namespace exports */
/*! export isNativeAudioNode [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "isNativeAudioNode": () => /* binding */ isNativeAudioNode
/* harmony export */ });
const isNativeAudioNode = (nativeAudioNodeOrAudioParam) => {
    return 'context' in nativeAudioNodeOrAudioParam;
};
//# sourceMappingURL=native-audio-node.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/guards/oscillator-node.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/guards/oscillator-node.js ***!
  \****************************************************************************************/
/*! namespace exports */
/*! export isOscillatorNode [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "isOscillatorNode": () => /* binding */ isOscillatorNode
/* harmony export */ });
const isOscillatorNode = (audioNode) => {
    return 'detune' in audioNode && 'frequency' in audioNode;
};
//# sourceMappingURL=oscillator-node.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/guards/stereo-panner-node.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/guards/stereo-panner-node.js ***!
  \*******************************************************************************************/
/*! namespace exports */
/*! export isStereoPannerNode [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "isStereoPannerNode": () => /* binding */ isStereoPannerNode
/* harmony export */ });
const isStereoPannerNode = (audioNode) => {
    return 'pan' in audioNode;
};
//# sourceMappingURL=stereo-panner-node.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/helpers/add-active-input-connection-to-audio-param.js":
/*!********************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/helpers/add-active-input-connection-to-audio-param.js ***!
  \********************************************************************************************************************/
/*! namespace exports */
/*! export addActiveInputConnectionToAudioParam [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "addActiveInputConnectionToAudioParam": () => /* binding */ addActiveInputConnectionToAudioParam
/* harmony export */ });
/* harmony import */ var _insert_element_in_set__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./insert-element-in-set */ "./node_modules/standardized-audio-context/build/es2019/helpers/insert-element-in-set.js");
;
const addActiveInputConnectionToAudioParam = (activeInputs, source, [output, eventListener], ignoreDuplicates) => {
    (0,_insert_element_in_set__WEBPACK_IMPORTED_MODULE_0__.insertElementInSet)(activeInputs, [source, output, eventListener], (activeInputConnection) => activeInputConnection[0] === source && activeInputConnection[1] === output, ignoreDuplicates);
};
//# sourceMappingURL=add-active-input-connection-to-audio-param.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/helpers/add-passive-input-connection-to-audio-param.js":
/*!*********************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/helpers/add-passive-input-connection-to-audio-param.js ***!
  \*********************************************************************************************************************/
/*! namespace exports */
/*! export addPassiveInputConnectionToAudioParam [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "addPassiveInputConnectionToAudioParam": () => /* binding */ addPassiveInputConnectionToAudioParam
/* harmony export */ });
/* harmony import */ var _insert_element_in_set__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./insert-element-in-set */ "./node_modules/standardized-audio-context/build/es2019/helpers/insert-element-in-set.js");
;
const addPassiveInputConnectionToAudioParam = (passiveInputs, [source, output, eventListener], ignoreDuplicates) => {
    const passiveInputConnections = passiveInputs.get(source);
    if (passiveInputConnections === undefined) {
        passiveInputs.set(source, new Set([[output, eventListener]]));
    }
    else {
        (0,_insert_element_in_set__WEBPACK_IMPORTED_MODULE_0__.insertElementInSet)(passiveInputConnections, [output, eventListener], (passiveInputConnection) => passiveInputConnection[0] === output, ignoreDuplicates);
    }
};
//# sourceMappingURL=add-passive-input-connection-to-audio-param.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/helpers/assign-native-audio-node-audio-param-value.js":
/*!********************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/helpers/assign-native-audio-node-audio-param-value.js ***!
  \********************************************************************************************************************/
/*! namespace exports */
/*! export assignNativeAudioNodeAudioParamValue [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "assignNativeAudioNodeAudioParamValue": () => /* binding */ assignNativeAudioNodeAudioParamValue
/* harmony export */ });
const assignNativeAudioNodeAudioParamValue = (nativeAudioNode, options, audioParam) => {
    const value = options[audioParam];
    if (value !== undefined && value !== nativeAudioNode[audioParam].value) {
        nativeAudioNode[audioParam].value = value;
    }
};
//# sourceMappingURL=assign-native-audio-node-audio-param-value.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/helpers/assign-native-audio-node-option.js":
/*!*********************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/helpers/assign-native-audio-node-option.js ***!
  \*********************************************************************************************************/
/*! namespace exports */
/*! export assignNativeAudioNodeOption [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "assignNativeAudioNodeOption": () => /* binding */ assignNativeAudioNodeOption
/* harmony export */ });
const assignNativeAudioNodeOption = (nativeAudioNode, options, option) => {
    const value = options[option];
    if (value !== undefined && value !== nativeAudioNode[option]) {
        nativeAudioNode[option] = value;
    }
};
//# sourceMappingURL=assign-native-audio-node-option.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/helpers/assign-native-audio-node-options.js":
/*!**********************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/helpers/assign-native-audio-node-options.js ***!
  \**********************************************************************************************************/
/*! namespace exports */
/*! export assignNativeAudioNodeOptions [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "assignNativeAudioNodeOptions": () => /* binding */ assignNativeAudioNodeOptions
/* harmony export */ });
/* harmony import */ var _assign_native_audio_node_option__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./assign-native-audio-node-option */ "./node_modules/standardized-audio-context/build/es2019/helpers/assign-native-audio-node-option.js");
;
const assignNativeAudioNodeOptions = (nativeAudioNode, options) => {
    (0,_assign_native_audio_node_option__WEBPACK_IMPORTED_MODULE_0__.assignNativeAudioNodeOption)(nativeAudioNode, options, 'channelCount');
    (0,_assign_native_audio_node_option__WEBPACK_IMPORTED_MODULE_0__.assignNativeAudioNodeOption)(nativeAudioNode, options, 'channelCountMode');
    (0,_assign_native_audio_node_option__WEBPACK_IMPORTED_MODULE_0__.assignNativeAudioNodeOption)(nativeAudioNode, options, 'channelInterpretation');
};
//# sourceMappingURL=assign-native-audio-node-options.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/helpers/clone-audio-worklet-node-options.js":
/*!**********************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/helpers/clone-audio-worklet-node-options.js ***!
  \**********************************************************************************************************/
/*! namespace exports */
/*! export cloneAudioWorkletNodeOptions [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "cloneAudioWorkletNodeOptions": () => /* binding */ cloneAudioWorkletNodeOptions
/* harmony export */ });
const cloneAudioWorkletNodeOptions = (audioWorkletNodeOptions) => {
    return new Promise((resolve, reject) => {
        const { port1, port2 } = new MessageChannel();
        port1.onmessage = ({ data }) => {
            port1.close();
            port2.close();
            resolve(data);
        };
        port1.onmessageerror = ({ data }) => {
            port1.close();
            port2.close();
            reject(data);
        };
        // This will throw an error if the audioWorkletNodeOptions are not clonable.
        port2.postMessage(audioWorkletNodeOptions);
    });
};
//# sourceMappingURL=clone-audio-worklet-node-options.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/helpers/compute-buffer-size.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/helpers/compute-buffer-size.js ***!
  \*********************************************************************************************/
/*! namespace exports */
/*! export computeBufferSize [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "computeBufferSize": () => /* binding */ computeBufferSize
/* harmony export */ });
const computeBufferSize = (baseLatency, sampleRate) => {
    if (baseLatency === null) {
        return 512;
    }
    return Math.max(512, Math.min(16384, Math.pow(2, Math.round(Math.log2(baseLatency * sampleRate)))));
};
//# sourceMappingURL=compute-buffer-size.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/helpers/connect-native-audio-node-to-native-audio-node.js":
/*!************************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/helpers/connect-native-audio-node-to-native-audio-node.js ***!
  \************************************************************************************************************************/
/*! namespace exports */
/*! export connectNativeAudioNodeToNativeAudioNode [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "connectNativeAudioNodeToNativeAudioNode": () => /* binding */ connectNativeAudioNodeToNativeAudioNode
/* harmony export */ });
/* harmony import */ var _guards_native_audio_node_faker__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../guards/native-audio-node-faker */ "./node_modules/standardized-audio-context/build/es2019/guards/native-audio-node-faker.js");
;
const connectNativeAudioNodeToNativeAudioNode = (nativeSourceAudioNode, nativeDestinationAudioNode, output, input) => {
    if ((0,_guards_native_audio_node_faker__WEBPACK_IMPORTED_MODULE_0__.isNativeAudioNodeFaker)(nativeDestinationAudioNode)) {
        const fakeNativeDestinationAudioNode = nativeDestinationAudioNode.inputs[input];
        nativeSourceAudioNode.connect(fakeNativeDestinationAudioNode, output, 0);
        return [fakeNativeDestinationAudioNode, output, 0];
    }
    nativeSourceAudioNode.connect(nativeDestinationAudioNode, output, input);
    return [nativeDestinationAudioNode, output, input];
};
//# sourceMappingURL=connect-native-audio-node-to-native-audio-node.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/helpers/copy-from-channel.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/helpers/copy-from-channel.js ***!
  \*******************************************************************************************/
/*! namespace exports */
/*! export copyFromChannel [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "copyFromChannel": () => /* binding */ copyFromChannel
/* harmony export */ });
function copyFromChannel(audioBuffer, 
// @todo There is currently no way to define something like { [ key: number | string ]: Float32Array }
parent, key, channelNumber, bufferOffset) {
    if (typeof audioBuffer.copyFromChannel === 'function') {
        // The byteLength will be 0 when the ArrayBuffer was transferred.
        if (parent[key].byteLength === 0) {
            parent[key] = new Float32Array(128);
        }
        audioBuffer.copyFromChannel(parent[key], channelNumber, bufferOffset);
        // Bug #5: Safari does not support copyFromChannel().
    }
    else {
        const channelData = audioBuffer.getChannelData(channelNumber);
        // The byteLength will be 0 when the ArrayBuffer was transferred.
        if (parent[key].byteLength === 0) {
            parent[key] = channelData.slice(bufferOffset, bufferOffset + 128);
        }
        else {
            const slicedInput = new Float32Array(channelData.buffer, bufferOffset * Float32Array.BYTES_PER_ELEMENT, 128);
            parent[key].set(slicedInput);
        }
    }
}
//# sourceMappingURL=copy-from-channel.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/helpers/copy-to-channel.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/helpers/copy-to-channel.js ***!
  \*****************************************************************************************/
/*! namespace exports */
/*! export copyToChannel [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "copyToChannel": () => /* binding */ copyToChannel
/* harmony export */ });
const copyToChannel = (audioBuffer, parent, key, channelNumber, bufferOffset) => {
    if (typeof audioBuffer.copyToChannel === 'function') {
        // The byteLength will be 0 when the ArrayBuffer was transferred.
        if (parent[key].byteLength !== 0) {
            audioBuffer.copyToChannel(parent[key], channelNumber, bufferOffset);
        }
        // Bug #5: Safari does not support copyToChannel().
    }
    else {
        // The byteLength will be 0 when the ArrayBuffer was transferred.
        if (parent[key].byteLength !== 0) {
            audioBuffer.getChannelData(channelNumber).set(parent[key], bufferOffset);
        }
    }
};
//# sourceMappingURL=copy-to-channel.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/helpers/create-audio-worklet-processor-promise.js":
/*!****************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/helpers/create-audio-worklet-processor-promise.js ***!
  \****************************************************************************************************************/
/*! namespace exports */
/*! export createAudioWorkletProcessorPromise [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "createAudioWorkletProcessorPromise": () => /* binding */ createAudioWorkletProcessorPromise
/* harmony export */ });
/* harmony import */ var _clone_audio_worklet_node_options__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./clone-audio-worklet-node-options */ "./node_modules/standardized-audio-context/build/es2019/helpers/clone-audio-worklet-node-options.js");
;
const createAudioWorkletProcessorPromise = async (processorConstructor, audioWorkletNodeOptions) => {
    const clonedAudioWorkletNodeOptions = await (0,_clone_audio_worklet_node_options__WEBPACK_IMPORTED_MODULE_0__.cloneAudioWorkletNodeOptions)(audioWorkletNodeOptions);
    return new processorConstructor(clonedAudioWorkletNodeOptions);
};
//# sourceMappingURL=create-audio-worklet-processor-promise.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/helpers/create-audio-worklet-processor.js":
/*!********************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/helpers/create-audio-worklet-processor.js ***!
  \********************************************************************************************************/
/*! namespace exports */
/*! export createAudioWorkletProcessor [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "createAudioWorkletProcessor": () => /* binding */ createAudioWorkletProcessor
/* harmony export */ });
/* harmony import */ var _globals__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../globals */ "./node_modules/standardized-audio-context/build/es2019/globals.js");
/* harmony import */ var _create_audio_worklet_processor_promise__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./create-audio-worklet-processor-promise */ "./node_modules/standardized-audio-context/build/es2019/helpers/create-audio-worklet-processor-promise.js");
;

const createAudioWorkletProcessor = (nativeContext, nativeAudioWorkletNode, processorConstructor, audioWorkletNodeOptions) => {
    let nodeToProcessorMap = _globals__WEBPACK_IMPORTED_MODULE_0__.NODE_TO_PROCESSOR_MAPS.get(nativeContext);
    if (nodeToProcessorMap === undefined) {
        nodeToProcessorMap = new WeakMap();
        _globals__WEBPACK_IMPORTED_MODULE_0__.NODE_TO_PROCESSOR_MAPS.set(nativeContext, nodeToProcessorMap);
    }
    const audioWorkletProcessorPromise = (0,_create_audio_worklet_processor_promise__WEBPACK_IMPORTED_MODULE_1__.createAudioWorkletProcessorPromise)(processorConstructor, audioWorkletNodeOptions);
    nodeToProcessorMap.set(nativeAudioWorkletNode, audioWorkletProcessorPromise);
    return audioWorkletProcessorPromise;
};
//# sourceMappingURL=create-audio-worklet-processor.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/helpers/create-nested-arrays.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/helpers/create-nested-arrays.js ***!
  \**********************************************************************************************/
/*! namespace exports */
/*! export createNestedArrays [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "createNestedArrays": () => /* binding */ createNestedArrays
/* harmony export */ });
const createNestedArrays = (x, y) => {
    const arrays = [];
    for (let i = 0; i < x; i += 1) {
        const array = [];
        const length = typeof y === 'number' ? y : y[i];
        for (let j = 0; j < length; j += 1) {
            array.push(new Float32Array(128));
        }
        arrays.push(array);
    }
    return arrays;
};
//# sourceMappingURL=create-nested-arrays.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/helpers/deactivate-active-audio-node-input-connections.js":
/*!************************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/helpers/deactivate-active-audio-node-input-connections.js ***!
  \************************************************************************************************************************/
/*! namespace exports */
/*! export deactivateActiveAudioNodeInputConnections [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "deactivateActiveAudioNodeInputConnections": () => /* binding */ deactivateActiveAudioNodeInputConnections
/* harmony export */ });
/* harmony import */ var _guards_audio_buffer_source_node__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../guards/audio-buffer-source-node */ "./node_modules/standardized-audio-context/build/es2019/guards/audio-buffer-source-node.js");
/* harmony import */ var _guards_audio_worklet_node__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../guards/audio-worklet-node */ "./node_modules/standardized-audio-context/build/es2019/guards/audio-worklet-node.js");
/* harmony import */ var _guards_biquad_filter_node__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../guards/biquad-filter-node */ "./node_modules/standardized-audio-context/build/es2019/guards/biquad-filter-node.js");
/* harmony import */ var _guards_constant_source_node__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../guards/constant-source-node */ "./node_modules/standardized-audio-context/build/es2019/guards/constant-source-node.js");
/* harmony import */ var _guards_gain_node__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../guards/gain-node */ "./node_modules/standardized-audio-context/build/es2019/guards/gain-node.js");
/* harmony import */ var _guards_oscillator_node__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../guards/oscillator-node */ "./node_modules/standardized-audio-context/build/es2019/guards/oscillator-node.js");
/* harmony import */ var _guards_stereo_panner_node__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../guards/stereo-panner-node */ "./node_modules/standardized-audio-context/build/es2019/guards/stereo-panner-node.js");
/* harmony import */ var _get_audio_node_connections__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./get-audio-node-connections */ "./node_modules/standardized-audio-context/build/es2019/helpers/get-audio-node-connections.js");
/* harmony import */ var _get_audio_param_connections__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./get-audio-param-connections */ "./node_modules/standardized-audio-context/build/es2019/helpers/get-audio-param-connections.js");
/* harmony import */ var _is_active_audio_node__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./is-active-audio-node */ "./node_modules/standardized-audio-context/build/es2019/helpers/is-active-audio-node.js");
/* harmony import */ var _set_internal_state_to_passive__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./set-internal-state-to-passive */ "./node_modules/standardized-audio-context/build/es2019/helpers/set-internal-state-to-passive.js");
;










const deactivateActiveAudioNodeInputConnections = (audioNode, trace) => {
    const { activeInputs } = (0,_get_audio_node_connections__WEBPACK_IMPORTED_MODULE_7__.getAudioNodeConnections)(audioNode);
    activeInputs.forEach((connections) => connections.forEach(([source]) => {
        if (!trace.includes(audioNode)) {
            deactivateActiveAudioNodeInputConnections(source, [...trace, audioNode]);
        }
    }));
    const audioParams = (0,_guards_audio_buffer_source_node__WEBPACK_IMPORTED_MODULE_0__.isAudioBufferSourceNode)(audioNode)
        ? [
            // Bug #149: Safari does not yet support the detune AudioParam.
            audioNode.playbackRate
        ]
        : (0,_guards_audio_worklet_node__WEBPACK_IMPORTED_MODULE_1__.isAudioWorkletNode)(audioNode)
            ? Array.from(audioNode.parameters.values())
            : (0,_guards_biquad_filter_node__WEBPACK_IMPORTED_MODULE_2__.isBiquadFilterNode)(audioNode)
                ? [audioNode.Q, audioNode.detune, audioNode.frequency, audioNode.gain]
                : (0,_guards_constant_source_node__WEBPACK_IMPORTED_MODULE_3__.isConstantSourceNode)(audioNode)
                    ? [audioNode.offset]
                    : (0,_guards_gain_node__WEBPACK_IMPORTED_MODULE_4__.isGainNode)(audioNode)
                        ? [audioNode.gain]
                        : (0,_guards_oscillator_node__WEBPACK_IMPORTED_MODULE_5__.isOscillatorNode)(audioNode)
                            ? [audioNode.detune, audioNode.frequency]
                            : (0,_guards_stereo_panner_node__WEBPACK_IMPORTED_MODULE_6__.isStereoPannerNode)(audioNode)
                                ? [audioNode.pan]
                                : [];
    for (const audioParam of audioParams) {
        const audioParamConnections = (0,_get_audio_param_connections__WEBPACK_IMPORTED_MODULE_8__.getAudioParamConnections)(audioParam);
        if (audioParamConnections !== undefined) {
            audioParamConnections.activeInputs.forEach(([source]) => deactivateActiveAudioNodeInputConnections(source, trace));
        }
    }
    if ((0,_is_active_audio_node__WEBPACK_IMPORTED_MODULE_9__.isActiveAudioNode)(audioNode)) {
        (0,_set_internal_state_to_passive__WEBPACK_IMPORTED_MODULE_10__.setInternalStateToPassive)(audioNode);
    }
};
//# sourceMappingURL=deactivate-active-audio-node-input-connections.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/helpers/deactivate-audio-graph.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/helpers/deactivate-audio-graph.js ***!
  \************************************************************************************************/
/*! namespace exports */
/*! export deactivateAudioGraph [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "deactivateAudioGraph": () => /* binding */ deactivateAudioGraph
/* harmony export */ });
/* harmony import */ var _deactivate_active_audio_node_input_connections__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./deactivate-active-audio-node-input-connections */ "./node_modules/standardized-audio-context/build/es2019/helpers/deactivate-active-audio-node-input-connections.js");
;
const deactivateAudioGraph = (context) => {
    (0,_deactivate_active_audio_node_input_connections__WEBPACK_IMPORTED_MODULE_0__.deactivateActiveAudioNodeInputConnections)(context.destination, []);
};
//# sourceMappingURL=deactivate-audio-graph.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/helpers/delete-active-input-connection-to-audio-param.js":
/*!***********************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/helpers/delete-active-input-connection-to-audio-param.js ***!
  \***********************************************************************************************************************/
/*! namespace exports */
/*! export deleteActiveInputConnectionToAudioParam [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "deleteActiveInputConnectionToAudioParam": () => /* binding */ deleteActiveInputConnectionToAudioParam
/* harmony export */ });
/* harmony import */ var _pick_element_from_set__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./pick-element-from-set */ "./node_modules/standardized-audio-context/build/es2019/helpers/pick-element-from-set.js");
;
const deleteActiveInputConnectionToAudioParam = (activeInputs, source, output) => {
    return (0,_pick_element_from_set__WEBPACK_IMPORTED_MODULE_0__.pickElementFromSet)(activeInputs, (activeInputConnection) => activeInputConnection[0] === source && activeInputConnection[1] === output);
};
//# sourceMappingURL=delete-active-input-connection-to-audio-param.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/helpers/delete-active-input-connection.js":
/*!********************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/helpers/delete-active-input-connection.js ***!
  \********************************************************************************************************/
/*! namespace exports */
/*! export deleteActiveInputConnection [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "deleteActiveInputConnection": () => /* binding */ deleteActiveInputConnection
/* harmony export */ });
const deleteActiveInputConnection = (activeInputConnections, source, output) => {
    for (const activeInputConnection of activeInputConnections) {
        if (activeInputConnection[0] === source && activeInputConnection[1] === output) {
            activeInputConnections.delete(activeInputConnection);
            return activeInputConnection;
        }
    }
    return null;
};
//# sourceMappingURL=delete-active-input-connection.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/helpers/delete-event-listeners-of-audio-node.js":
/*!**************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/helpers/delete-event-listeners-of-audio-node.js ***!
  \**************************************************************************************************************/
/*! namespace exports */
/*! export deleteEventListenerOfAudioNode [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "deleteEventListenerOfAudioNode": () => /* binding */ deleteEventListenerOfAudioNode
/* harmony export */ });
/* harmony import */ var _get_event_listeners_of_audio_node__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./get-event-listeners-of-audio-node */ "./node_modules/standardized-audio-context/build/es2019/helpers/get-event-listeners-of-audio-node.js");
;
const deleteEventListenerOfAudioNode = (audioNode, eventListener) => {
    const eventListeners = (0,_get_event_listeners_of_audio_node__WEBPACK_IMPORTED_MODULE_0__.getEventListenersOfAudioNode)(audioNode);
    if (!eventListeners.delete(eventListener)) {
        throw new Error('Missing the expected event listener.');
    }
};
//# sourceMappingURL=delete-event-listeners-of-audio-node.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/helpers/delete-passive-input-connection-to-audio-node.js":
/*!***********************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/helpers/delete-passive-input-connection-to-audio-node.js ***!
  \***********************************************************************************************************************/
/*! namespace exports */
/*! export deletePassiveInputConnectionToAudioNode [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "deletePassiveInputConnectionToAudioNode": () => /* binding */ deletePassiveInputConnectionToAudioNode
/* harmony export */ });
/* harmony import */ var _get_value_for_key__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./get-value-for-key */ "./node_modules/standardized-audio-context/build/es2019/helpers/get-value-for-key.js");
/* harmony import */ var _pick_element_from_set__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./pick-element-from-set */ "./node_modules/standardized-audio-context/build/es2019/helpers/pick-element-from-set.js");
;

const deletePassiveInputConnectionToAudioNode = (passiveInputs, source, output, input) => {
    const passiveInputConnections = (0,_get_value_for_key__WEBPACK_IMPORTED_MODULE_0__.getValueForKey)(passiveInputs, source);
    const matchingConnection = (0,_pick_element_from_set__WEBPACK_IMPORTED_MODULE_1__.pickElementFromSet)(passiveInputConnections, (passiveInputConnection) => passiveInputConnection[0] === output && passiveInputConnection[1] === input);
    if (passiveInputConnections.size === 0) {
        passiveInputs.delete(source);
    }
    return matchingConnection;
};
//# sourceMappingURL=delete-passive-input-connection-to-audio-node.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/helpers/delete-passive-input-connection-to-audio-param.js":
/*!************************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/helpers/delete-passive-input-connection-to-audio-param.js ***!
  \************************************************************************************************************************/
/*! namespace exports */
/*! export deletePassiveInputConnectionToAudioParam [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "deletePassiveInputConnectionToAudioParam": () => /* binding */ deletePassiveInputConnectionToAudioParam
/* harmony export */ });
/* harmony import */ var _get_value_for_key__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./get-value-for-key */ "./node_modules/standardized-audio-context/build/es2019/helpers/get-value-for-key.js");
/* harmony import */ var _pick_element_from_set__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./pick-element-from-set */ "./node_modules/standardized-audio-context/build/es2019/helpers/pick-element-from-set.js");
;

const deletePassiveInputConnectionToAudioParam = (passiveInputs, source, output) => {
    const passiveInputConnections = (0,_get_value_for_key__WEBPACK_IMPORTED_MODULE_0__.getValueForKey)(passiveInputs, source);
    const matchingConnection = (0,_pick_element_from_set__WEBPACK_IMPORTED_MODULE_1__.pickElementFromSet)(passiveInputConnections, (passiveInputConnection) => passiveInputConnection[0] === output);
    if (passiveInputConnections.size === 0) {
        passiveInputs.delete(source);
    }
    return matchingConnection;
};
//# sourceMappingURL=delete-passive-input-connection-to-audio-param.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/helpers/detach-array-buffer.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/helpers/detach-array-buffer.js ***!
  \*********************************************************************************************/
/*! namespace exports */
/*! export detachArrayBuffer [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "detachArrayBuffer": () => /* binding */ detachArrayBuffer
/* harmony export */ });
const detachArrayBuffer = (arrayBuffer) => {
    const { port1 } = new MessageChannel();
    port1.postMessage(arrayBuffer, [arrayBuffer]);
};
//# sourceMappingURL=detach-array-buffer.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/helpers/disconnect-native-audio-node-from-native-audio-node.js":
/*!*****************************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/helpers/disconnect-native-audio-node-from-native-audio-node.js ***!
  \*****************************************************************************************************************************/
/*! namespace exports */
/*! export disconnectNativeAudioNodeFromNativeAudioNode [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "disconnectNativeAudioNodeFromNativeAudioNode": () => /* binding */ disconnectNativeAudioNodeFromNativeAudioNode
/* harmony export */ });
/* harmony import */ var _guards_native_audio_node_faker__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../guards/native-audio-node-faker */ "./node_modules/standardized-audio-context/build/es2019/guards/native-audio-node-faker.js");
;
const disconnectNativeAudioNodeFromNativeAudioNode = (nativeSourceAudioNode, nativeDestinationAudioNode, output, input) => {
    if ((0,_guards_native_audio_node_faker__WEBPACK_IMPORTED_MODULE_0__.isNativeAudioNodeFaker)(nativeDestinationAudioNode)) {
        nativeSourceAudioNode.disconnect(nativeDestinationAudioNode.inputs[input], output, 0);
    }
    else {
        nativeSourceAudioNode.disconnect(nativeDestinationAudioNode, output, input);
    }
};
//# sourceMappingURL=disconnect-native-audio-node-from-native-audio-node.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/helpers/filter-buffer.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/helpers/filter-buffer.js ***!
  \***************************************************************************************/
/*! namespace exports */
/*! export filterBuffer [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "filterBuffer": () => /* binding */ filterBuffer
/* harmony export */ });
// This implementation as shamelessly inspired by source code of
// tslint:disable-next-line:max-line-length
// {@link https://chromium.googlesource.com/chromium/src.git/+/master/third_party/WebKit/Source/platform/audio/IIRFilter.cpp|Chromium's IIRFilter}.
const filterBuffer = (feedback, feedbackLength, feedforward, feedforwardLength, minLength, xBuffer, yBuffer, bufferIndex, bufferLength, input, output) => {
    const inputLength = input.length;
    let i = bufferIndex;
    for (let j = 0; j < inputLength; j += 1) {
        let y = feedforward[0] * input[j];
        for (let k = 1; k < minLength; k += 1) {
            const x = (i - k) & (bufferLength - 1); // tslint:disable-line:no-bitwise
            y += feedforward[k] * xBuffer[x];
            y -= feedback[k] * yBuffer[x];
        }
        for (let k = minLength; k < feedforwardLength; k += 1) {
            y += feedforward[k] * xBuffer[(i - k) & (bufferLength - 1)]; // tslint:disable-line:no-bitwise
        }
        for (let k = minLength; k < feedbackLength; k += 1) {
            y -= feedback[k] * yBuffer[(i - k) & (bufferLength - 1)]; // tslint:disable-line:no-bitwise
        }
        xBuffer[i] = input[j];
        yBuffer[i] = y;
        i = (i + 1) & (bufferLength - 1); // tslint:disable-line:no-bitwise
        output[j] = y;
    }
    return i;
};
//# sourceMappingURL=filter-buffer.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/helpers/get-audio-node-connections.js":
/*!****************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/helpers/get-audio-node-connections.js ***!
  \****************************************************************************************************/
/*! namespace exports */
/*! export getAudioNodeConnections [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "getAudioNodeConnections": () => /* binding */ getAudioNodeConnections
/* harmony export */ });
/* harmony import */ var _globals__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../globals */ "./node_modules/standardized-audio-context/build/es2019/globals.js");
/* harmony import */ var _get_value_for_key__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./get-value-for-key */ "./node_modules/standardized-audio-context/build/es2019/helpers/get-value-for-key.js");
;

const getAudioNodeConnections = (audioNode) => {
    return (0,_get_value_for_key__WEBPACK_IMPORTED_MODULE_1__.getValueForKey)(_globals__WEBPACK_IMPORTED_MODULE_0__.AUDIO_NODE_CONNECTIONS_STORE, audioNode);
};
//# sourceMappingURL=get-audio-node-connections.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/helpers/get-audio-param-connections.js":
/*!*****************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/helpers/get-audio-param-connections.js ***!
  \*****************************************************************************************************/
/*! namespace exports */
/*! export getAudioParamConnections [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "getAudioParamConnections": () => /* binding */ getAudioParamConnections
/* harmony export */ });
/* harmony import */ var _globals__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../globals */ "./node_modules/standardized-audio-context/build/es2019/globals.js");
/* harmony import */ var _get_value_for_key__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./get-value-for-key */ "./node_modules/standardized-audio-context/build/es2019/helpers/get-value-for-key.js");
;

const getAudioParamConnections = (audioParam) => {
    return (0,_get_value_for_key__WEBPACK_IMPORTED_MODULE_1__.getValueForKey)(_globals__WEBPACK_IMPORTED_MODULE_0__.AUDIO_PARAM_CONNECTIONS_STORE, audioParam);
};
//# sourceMappingURL=get-audio-param-connections.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/helpers/get-audio-worklet-processor.js":
/*!*****************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/helpers/get-audio-worklet-processor.js ***!
  \*****************************************************************************************************/
/*! namespace exports */
/*! export getAudioWorkletProcessor [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "getAudioWorkletProcessor": () => /* binding */ getAudioWorkletProcessor
/* harmony export */ });
/* harmony import */ var _globals__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../globals */ "./node_modules/standardized-audio-context/build/es2019/globals.js");
/* harmony import */ var _get_native_audio_node__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./get-native-audio-node */ "./node_modules/standardized-audio-context/build/es2019/helpers/get-native-audio-node.js");
/* harmony import */ var _get_value_for_key__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./get-value-for-key */ "./node_modules/standardized-audio-context/build/es2019/helpers/get-value-for-key.js");
;


const getAudioWorkletProcessor = (nativeOfflineAudioContext, proxy) => {
    const nodeToProcessorMap = (0,_get_value_for_key__WEBPACK_IMPORTED_MODULE_2__.getValueForKey)(_globals__WEBPACK_IMPORTED_MODULE_0__.NODE_TO_PROCESSOR_MAPS, nativeOfflineAudioContext);
    const nativeAudioWorkletNode = (0,_get_native_audio_node__WEBPACK_IMPORTED_MODULE_1__.getNativeAudioNode)(proxy);
    return (0,_get_value_for_key__WEBPACK_IMPORTED_MODULE_2__.getValueForKey)(nodeToProcessorMap, nativeAudioWorkletNode);
};
//# sourceMappingURL=get-audio-worklet-processor.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/helpers/get-event-listeners-of-audio-node.js":
/*!***********************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/helpers/get-event-listeners-of-audio-node.js ***!
  \***********************************************************************************************************/
/*! namespace exports */
/*! export getEventListenersOfAudioNode [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "getEventListenersOfAudioNode": () => /* binding */ getEventListenersOfAudioNode
/* harmony export */ });
/* harmony import */ var _globals__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../globals */ "./node_modules/standardized-audio-context/build/es2019/globals.js");
/* harmony import */ var _get_value_for_key__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./get-value-for-key */ "./node_modules/standardized-audio-context/build/es2019/helpers/get-value-for-key.js");
;

const getEventListenersOfAudioNode = (audioNode) => {
    return (0,_get_value_for_key__WEBPACK_IMPORTED_MODULE_1__.getValueForKey)(_globals__WEBPACK_IMPORTED_MODULE_0__.EVENT_LISTENERS, audioNode);
};
//# sourceMappingURL=get-event-listeners-of-audio-node.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/helpers/get-native-audio-node.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/helpers/get-native-audio-node.js ***!
  \***********************************************************************************************/
/*! namespace exports */
/*! export getNativeAudioNode [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "getNativeAudioNode": () => /* binding */ getNativeAudioNode
/* harmony export */ });
/* harmony import */ var _globals__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../globals */ "./node_modules/standardized-audio-context/build/es2019/globals.js");
/* harmony import */ var _get_value_for_key__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./get-value-for-key */ "./node_modules/standardized-audio-context/build/es2019/helpers/get-value-for-key.js");
;

const getNativeAudioNode = (audioNode) => {
    return (0,_get_value_for_key__WEBPACK_IMPORTED_MODULE_1__.getValueForKey)(_globals__WEBPACK_IMPORTED_MODULE_0__.AUDIO_NODE_STORE, audioNode);
};
//# sourceMappingURL=get-native-audio-node.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/helpers/get-native-audio-param.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/helpers/get-native-audio-param.js ***!
  \************************************************************************************************/
/*! namespace exports */
/*! export getNativeAudioParam [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "getNativeAudioParam": () => /* binding */ getNativeAudioParam
/* harmony export */ });
/* harmony import */ var _globals__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../globals */ "./node_modules/standardized-audio-context/build/es2019/globals.js");
/* harmony import */ var _get_value_for_key__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./get-value-for-key */ "./node_modules/standardized-audio-context/build/es2019/helpers/get-value-for-key.js");
;

const getNativeAudioParam = (audioParam) => {
    return (0,_get_value_for_key__WEBPACK_IMPORTED_MODULE_1__.getValueForKey)(_globals__WEBPACK_IMPORTED_MODULE_0__.AUDIO_PARAM_STORE, audioParam);
};
//# sourceMappingURL=get-native-audio-param.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/helpers/get-value-for-key.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/helpers/get-value-for-key.js ***!
  \*******************************************************************************************/
/*! namespace exports */
/*! export getValueForKey [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "getValueForKey": () => /* binding */ getValueForKey
/* harmony export */ });
const getValueForKey = (map, key) => {
    const value = map.get(key);
    if (value === undefined) {
        throw new Error('A value with the given key could not be found.');
    }
    return value;
};
//# sourceMappingURL=get-value-for-key.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/helpers/insert-element-in-set.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/helpers/insert-element-in-set.js ***!
  \***********************************************************************************************/
/*! namespace exports */
/*! export insertElementInSet [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "insertElementInSet": () => /* binding */ insertElementInSet
/* harmony export */ });
const insertElementInSet = (set, element, predicate, ignoreDuplicates) => {
    for (const lmnt of set) {
        if (predicate(lmnt)) {
            if (ignoreDuplicates) {
                return false;
            }
            throw Error('The set contains at least one similar element.');
        }
    }
    set.add(element);
    return true;
};
//# sourceMappingURL=insert-element-in-set.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/helpers/intercept-connections.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/helpers/intercept-connections.js ***!
  \***********************************************************************************************/
/*! namespace exports */
/*! export interceptConnections [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "interceptConnections": () => /* binding */ interceptConnections
/* harmony export */ });
const interceptConnections = (original, interceptor) => {
    original.connect = interceptor.connect.bind(interceptor);
    original.disconnect = interceptor.disconnect.bind(interceptor);
    return original;
};
//# sourceMappingURL=intercept-connections.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/helpers/is-active-audio-node.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/helpers/is-active-audio-node.js ***!
  \**********************************************************************************************/
/*! namespace exports */
/*! export isActiveAudioNode [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "isActiveAudioNode": () => /* binding */ isActiveAudioNode
/* harmony export */ });
/* harmony import */ var _globals__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../globals */ "./node_modules/standardized-audio-context/build/es2019/globals.js");
;
const isActiveAudioNode = (audioNode) => _globals__WEBPACK_IMPORTED_MODULE_0__.ACTIVE_AUDIO_NODE_STORE.has(audioNode);
//# sourceMappingURL=is-active-audio-node.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/helpers/is-constructible.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/helpers/is-constructible.js ***!
  \******************************************************************************************/
/*! namespace exports */
/*! export isConstructible [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "isConstructible": () => /* binding */ isConstructible
/* harmony export */ });
const handler = {
    construct() {
        return handler;
    }
};
const isConstructible = (constructible) => {
    try {
        const proxy = new Proxy(constructible, handler);
        new proxy(); // tslint:disable-line:no-unused-expression
    }
    catch {
        return false;
    }
    return true;
};
//# sourceMappingURL=is-constructible.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/helpers/is-dc-curve.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/helpers/is-dc-curve.js ***!
  \*************************************************************************************/
/*! namespace exports */
/*! export isDCCurve [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "isDCCurve": () => /* binding */ isDCCurve
/* harmony export */ });
const isDCCurve = (curve) => {
    if (curve === null) {
        return false;
    }
    const length = curve.length;
    if (length % 2 !== 0) {
        return curve[Math.floor(length / 2)] !== 0;
    }
    return curve[length / 2 - 1] + curve[length / 2] !== 0;
};
//# sourceMappingURL=is-dc-curve.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/helpers/is-owned-by-context.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/helpers/is-owned-by-context.js ***!
  \*********************************************************************************************/
/*! namespace exports */
/*! export isOwnedByContext [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "isOwnedByContext": () => /* binding */ isOwnedByContext
/* harmony export */ });
const isOwnedByContext = (nativeAudioNode, nativeContext) => {
    return nativeAudioNode.context === nativeContext;
};
//# sourceMappingURL=is-owned-by-context.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/helpers/is-part-of-a-cycle.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/helpers/is-part-of-a-cycle.js ***!
  \********************************************************************************************/
/*! namespace exports */
/*! export isPartOfACycle [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "isPartOfACycle": () => /* binding */ isPartOfACycle
/* harmony export */ });
/* harmony import */ var _globals__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../globals */ "./node_modules/standardized-audio-context/build/es2019/globals.js");
;
const isPartOfACycle = (audioNode) => {
    return _globals__WEBPACK_IMPORTED_MODULE_0__.CYCLE_COUNTERS.has(audioNode);
};
//# sourceMappingURL=is-part-of-a-cycle.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/helpers/is-passive-audio-node.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/helpers/is-passive-audio-node.js ***!
  \***********************************************************************************************/
/*! namespace exports */
/*! export isPassiveAudioNode [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "isPassiveAudioNode": () => /* binding */ isPassiveAudioNode
/* harmony export */ });
/* harmony import */ var _globals__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../globals */ "./node_modules/standardized-audio-context/build/es2019/globals.js");
;
const isPassiveAudioNode = (audioNode) => {
    return !_globals__WEBPACK_IMPORTED_MODULE_0__.ACTIVE_AUDIO_NODE_STORE.has(audioNode);
};
//# sourceMappingURL=is-passive-audio-node.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/helpers/is-valid-latency-hint.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/helpers/is-valid-latency-hint.js ***!
  \***********************************************************************************************/
/*! namespace exports */
/*! export isValidLatencyHint [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "isValidLatencyHint": () => /* binding */ isValidLatencyHint
/* harmony export */ });
const isValidLatencyHint = (latencyHint) => {
    return (latencyHint === undefined ||
        typeof latencyHint === 'number' ||
        (typeof latencyHint === 'string' && (latencyHint === 'balanced' || latencyHint === 'interactive' || latencyHint === 'playback')));
};
//# sourceMappingURL=is-valid-latency-hint.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/helpers/overwrite-accessors.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/helpers/overwrite-accessors.js ***!
  \*********************************************************************************************/
/*! namespace exports */
/*! export overwriteAccessors [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "overwriteAccessors": () => /* binding */ overwriteAccessors
/* harmony export */ });
const overwriteAccessors = (object, property, createGetter, createSetter) => {
    let prototype = Object.getPrototypeOf(object);
    while (!prototype.hasOwnProperty(property)) {
        prototype = Object.getPrototypeOf(prototype);
    }
    const { get, set } = Object.getOwnPropertyDescriptor(prototype, property);
    Object.defineProperty(object, property, { get: createGetter(get), set: createSetter(set) });
};
//# sourceMappingURL=overwrite-accessors.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/helpers/pick-element-from-set.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/helpers/pick-element-from-set.js ***!
  \***********************************************************************************************/
/*! namespace exports */
/*! export pickElementFromSet [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "pickElementFromSet": () => /* binding */ pickElementFromSet
/* harmony export */ });
const pickElementFromSet = (set, predicate) => {
    const matchingElements = Array.from(set).filter(predicate);
    if (matchingElements.length > 1) {
        throw Error('More than one element was found.');
    }
    if (matchingElements.length === 0) {
        throw Error('No element was found.');
    }
    const [matchingElement] = matchingElements;
    set.delete(matchingElement);
    return matchingElement;
};
//# sourceMappingURL=pick-element-from-set.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/helpers/sanitize-audio-worklet-node-options.js":
/*!*************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/helpers/sanitize-audio-worklet-node-options.js ***!
  \*************************************************************************************************************/
/*! namespace exports */
/*! export sanitizeAudioWorkletNodeOptions [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "sanitizeAudioWorkletNodeOptions": () => /* binding */ sanitizeAudioWorkletNodeOptions
/* harmony export */ });
const sanitizeAudioWorkletNodeOptions = (options) => {
    return {
        ...options,
        outputChannelCount: options.outputChannelCount !== undefined
            ? options.outputChannelCount
            : options.numberOfInputs === 1 && options.numberOfOutputs === 1
                ? /*
                   * Bug #61: This should be the computedNumberOfChannels, but unfortunately that is almost impossible to fake. That's why
                   * the channelCountMode is required to be 'explicit' as long as there is not a native implementation in every browser. That
                   * makes sure the computedNumberOfChannels is equivilant to the channelCount which makes it much easier to compute.
                   */
                    [options.channelCount]
                : Array.from({ length: options.numberOfOutputs }, () => 1)
    };
};
//# sourceMappingURL=sanitize-audio-worklet-node-options.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/helpers/sanitize-channel-splitter-options.js":
/*!***********************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/helpers/sanitize-channel-splitter-options.js ***!
  \***********************************************************************************************************/
/*! namespace exports */
/*! export sanitizeChannelSplitterOptions [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "sanitizeChannelSplitterOptions": () => /* binding */ sanitizeChannelSplitterOptions
/* harmony export */ });
const sanitizeChannelSplitterOptions = (options) => {
    return { ...options, channelCount: options.numberOfOutputs };
};
//# sourceMappingURL=sanitize-channel-splitter-options.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/helpers/sanitize-periodic-wave-options.js":
/*!********************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/helpers/sanitize-periodic-wave-options.js ***!
  \********************************************************************************************************/
/*! namespace exports */
/*! export sanitizePeriodicWaveOptions [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "sanitizePeriodicWaveOptions": () => /* binding */ sanitizePeriodicWaveOptions
/* harmony export */ });
const sanitizePeriodicWaveOptions = (options) => {
    const { imag, real } = options;
    if (imag === undefined) {
        if (real === undefined) {
            return { ...options, imag: [0, 0], real: [0, 0] };
        }
        return { ...options, imag: Array.from(real, () => 0), real };
    }
    if (real === undefined) {
        return { ...options, imag, real: Array.from(imag, () => 0) };
    }
    return { ...options, imag, real };
};
//# sourceMappingURL=sanitize-periodic-wave-options.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/helpers/set-internal-state-to-active.js":
/*!******************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/helpers/set-internal-state-to-active.js ***!
  \******************************************************************************************************/
/*! namespace exports */
/*! export setInternalStateToActive [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "setInternalStateToActive": () => /* binding */ setInternalStateToActive
/* harmony export */ });
/* harmony import */ var _globals__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../globals */ "./node_modules/standardized-audio-context/build/es2019/globals.js");
/* harmony import */ var _get_event_listeners_of_audio_node__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./get-event-listeners-of-audio-node */ "./node_modules/standardized-audio-context/build/es2019/helpers/get-event-listeners-of-audio-node.js");
;

const setInternalStateToActive = (audioNode) => {
    if (_globals__WEBPACK_IMPORTED_MODULE_0__.ACTIVE_AUDIO_NODE_STORE.has(audioNode)) {
        throw new Error('The AudioNode is already stored.');
    }
    _globals__WEBPACK_IMPORTED_MODULE_0__.ACTIVE_AUDIO_NODE_STORE.add(audioNode);
    (0,_get_event_listeners_of_audio_node__WEBPACK_IMPORTED_MODULE_1__.getEventListenersOfAudioNode)(audioNode).forEach((eventListener) => eventListener(true));
};
//# sourceMappingURL=set-internal-state-to-active.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/helpers/set-internal-state-to-passive-when-necessary.js":
/*!**********************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/helpers/set-internal-state-to-passive-when-necessary.js ***!
  \**********************************************************************************************************************/
/*! namespace exports */
/*! export setInternalStateToPassiveWhenNecessary [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "setInternalStateToPassiveWhenNecessary": () => /* binding */ setInternalStateToPassiveWhenNecessary
/* harmony export */ });
/* harmony import */ var _guards_audio_worklet_node__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../guards/audio-worklet-node */ "./node_modules/standardized-audio-context/build/es2019/guards/audio-worklet-node.js");
/* harmony import */ var _set_internal_state_to_passive__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./set-internal-state-to-passive */ "./node_modules/standardized-audio-context/build/es2019/helpers/set-internal-state-to-passive.js");
;

// Set the internalState of the audioNode to 'passive' if it is not an AudioWorkletNode and if it has no 'active' input connections.
const setInternalStateToPassiveWhenNecessary = (audioNode, activeInputs) => {
    if (!(0,_guards_audio_worklet_node__WEBPACK_IMPORTED_MODULE_0__.isAudioWorkletNode)(audioNode) && activeInputs.every((connections) => connections.size === 0)) {
        (0,_set_internal_state_to_passive__WEBPACK_IMPORTED_MODULE_1__.setInternalStateToPassive)(audioNode);
    }
};
//# sourceMappingURL=set-internal-state-to-passive-when-necessary.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/helpers/set-internal-state-to-passive.js":
/*!*******************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/helpers/set-internal-state-to-passive.js ***!
  \*******************************************************************************************************/
/*! namespace exports */
/*! export setInternalStateToPassive [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "setInternalStateToPassive": () => /* binding */ setInternalStateToPassive
/* harmony export */ });
/* harmony import */ var _globals__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../globals */ "./node_modules/standardized-audio-context/build/es2019/globals.js");
/* harmony import */ var _get_event_listeners_of_audio_node__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./get-event-listeners-of-audio-node */ "./node_modules/standardized-audio-context/build/es2019/helpers/get-event-listeners-of-audio-node.js");
;

const setInternalStateToPassive = (audioNode) => {
    if (!_globals__WEBPACK_IMPORTED_MODULE_0__.ACTIVE_AUDIO_NODE_STORE.has(audioNode)) {
        throw new Error('The AudioNode is not stored.');
    }
    _globals__WEBPACK_IMPORTED_MODULE_0__.ACTIVE_AUDIO_NODE_STORE.delete(audioNode);
    (0,_get_event_listeners_of_audio_node__WEBPACK_IMPORTED_MODULE_1__.getEventListenersOfAudioNode)(audioNode).forEach((eventListener) => eventListener(false));
};
//# sourceMappingURL=set-internal-state-to-passive.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/helpers/split-import-statements.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/helpers/split-import-statements.js ***!
  \*************************************************************************************************/
/*! namespace exports */
/*! export splitImportStatements [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "splitImportStatements": () => /* binding */ splitImportStatements
/* harmony export */ });
/*
 * This massive regex tries to cover all the following cases.
 *
 * import './path';
 * import defaultImport from './path';
 * import { namedImport } from './path';
 * import { namedImport as renamendImport } from './path';
 * import * as namespaceImport from './path';
 * import defaultImport, { namedImport } from './path';
 * import defaultImport, { namedImport as renamendImport } from './path';
 * import defaultImport, * as namespaceImport from './path';
 */
const IMPORT_STATEMENT_REGEX = /^import(?:(?:[\s]+[\w]+|(?:[\s]+[\w]+[\s]*,)?[\s]*\{[\s]*[\w]+(?:[\s]+as[\s]+[\w]+)?(?:[\s]*,[\s]*[\w]+(?:[\s]+as[\s]+[\w]+)?)*[\s]*}|(?:[\s]+[\w]+[\s]*,)?[\s]*\*[\s]+as[\s]+[\w]+)[\s]+from)?(?:[\s]*)("([^"\\]|\\.)+"|'([^'\\]|\\.)+')(?:[\s]*);?/; // tslint:disable-line:max-line-length
const splitImportStatements = (source, url) => {
    const importStatements = [];
    let sourceWithoutImportStatements = source.replace(/^[\s]+/, '');
    let result = sourceWithoutImportStatements.match(IMPORT_STATEMENT_REGEX);
    while (result !== null) {
        const unresolvedUrl = result[1].slice(1, -1);
        const importStatementWithResolvedUrl = result[0]
            .replace(/([\s]+)?;?$/, '')
            .replace(unresolvedUrl, new URL(unresolvedUrl, url).toString());
        importStatements.push(importStatementWithResolvedUrl);
        sourceWithoutImportStatements = sourceWithoutImportStatements.slice(result[0].length).replace(/^[\s]+/, '');
        result = sourceWithoutImportStatements.match(IMPORT_STATEMENT_REGEX);
    }
    return [importStatements.join(';'), sourceWithoutImportStatements];
};
//# sourceMappingURL=split-import-statements.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/helpers/test-analyser-node-get-float-time-domain-data-method-support.js":
/*!**************************************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/helpers/test-analyser-node-get-float-time-domain-data-method-support.js ***!
  \**************************************************************************************************************************************/
/*! namespace exports */
/*! export testAnalyserNodeGetFloatTimeDomainDataMethodSupport [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "testAnalyserNodeGetFloatTimeDomainDataMethodSupport": () => /* binding */ testAnalyserNodeGetFloatTimeDomainDataMethodSupport
/* harmony export */ });
const testAnalyserNodeGetFloatTimeDomainDataMethodSupport = (nativeAnalyserNode) => {
    return typeof nativeAnalyserNode.getFloatTimeDomainData === 'function';
};
//# sourceMappingURL=test-analyser-node-get-float-time-domain-data-method-support.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/helpers/test-audio-buffer-copy-channel-methods-out-of-bounds-support.js":
/*!**************************************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/helpers/test-audio-buffer-copy-channel-methods-out-of-bounds-support.js ***!
  \**************************************************************************************************************************************/
/*! namespace exports */
/*! export testAudioBufferCopyChannelMethodsOutOfBoundsSupport [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "testAudioBufferCopyChannelMethodsOutOfBoundsSupport": () => /* binding */ testAudioBufferCopyChannelMethodsOutOfBoundsSupport
/* harmony export */ });
const testAudioBufferCopyChannelMethodsOutOfBoundsSupport = (nativeAudioBuffer) => {
    try {
        nativeAudioBuffer.copyToChannel(new Float32Array(1), 0, -1);
    }
    catch {
        return false;
    }
    return true;
};
//# sourceMappingURL=test-audio-buffer-copy-channel-methods-out-of-bounds-support.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/helpers/test-audio-buffer-source-node-start-method-consecutive-calls-support.js":
/*!**********************************************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/helpers/test-audio-buffer-source-node-start-method-consecutive-calls-support.js ***!
  \**********************************************************************************************************************************************/
/*! namespace exports */
/*! export testAudioBufferSourceNodeStartMethodConsecutiveCallsSupport [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "testAudioBufferSourceNodeStartMethodConsecutiveCallsSupport": () => /* binding */ testAudioBufferSourceNodeStartMethodConsecutiveCallsSupport
/* harmony export */ });
const testAudioBufferSourceNodeStartMethodConsecutiveCallsSupport = (nativeContext) => {
    const nativeAudioBufferSourceNode = nativeContext.createBufferSource();
    nativeAudioBufferSourceNode.start();
    try {
        nativeAudioBufferSourceNode.start();
    }
    catch {
        return true;
    }
    return false;
};
//# sourceMappingURL=test-audio-buffer-source-node-start-method-consecutive-calls-support.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/helpers/test-audio-buffer-source-node-start-method-offset-clamping-support.js":
/*!********************************************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/helpers/test-audio-buffer-source-node-start-method-offset-clamping-support.js ***!
  \********************************************************************************************************************************************/
/*! namespace exports */
/*! export testAudioBufferSourceNodeStartMethodOffsetClampingSupport [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "testAudioBufferSourceNodeStartMethodOffsetClampingSupport": () => /* binding */ testAudioBufferSourceNodeStartMethodOffsetClampingSupport
/* harmony export */ });
const testAudioBufferSourceNodeStartMethodOffsetClampingSupport = (nativeContext) => {
    const nativeAudioBufferSourceNode = nativeContext.createBufferSource();
    const nativeAudioBuffer = nativeContext.createBuffer(1, 1, 44100);
    nativeAudioBufferSourceNode.buffer = nativeAudioBuffer;
    try {
        nativeAudioBufferSourceNode.start(0, 1);
    }
    catch {
        return false;
    }
    return true;
};
//# sourceMappingURL=test-audio-buffer-source-node-start-method-offset-clamping-support.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/helpers/test-audio-buffer-source-node-stop-method-nullified-buffer-support.js":
/*!********************************************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/helpers/test-audio-buffer-source-node-stop-method-nullified-buffer-support.js ***!
  \********************************************************************************************************************************************/
/*! namespace exports */
/*! export testAudioBufferSourceNodeStopMethodNullifiedBufferSupport [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "testAudioBufferSourceNodeStopMethodNullifiedBufferSupport": () => /* binding */ testAudioBufferSourceNodeStopMethodNullifiedBufferSupport
/* harmony export */ });
const testAudioBufferSourceNodeStopMethodNullifiedBufferSupport = (nativeContext) => {
    const nativeAudioBufferSourceNode = nativeContext.createBufferSource();
    nativeAudioBufferSourceNode.start();
    try {
        nativeAudioBufferSourceNode.stop();
    }
    catch {
        return false;
    }
    return true;
};
//# sourceMappingURL=test-audio-buffer-source-node-stop-method-nullified-buffer-support.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/helpers/test-audio-node-disconnect-method-support.js":
/*!*******************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/helpers/test-audio-node-disconnect-method-support.js ***!
  \*******************************************************************************************************************/
/*! namespace exports */
/*! export testAudioNodeDisconnectMethodSupport [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "testAudioNodeDisconnectMethodSupport": () => /* binding */ testAudioNodeDisconnectMethodSupport
/* harmony export */ });
const testAudioNodeDisconnectMethodSupport = (nativeAudioContext) => {
    return new Promise((resolve) => {
        const analyzer = nativeAudioContext.createScriptProcessor(256, 1, 1);
        const dummy = nativeAudioContext.createGain();
        // Bug #95: Safari does not play one sample buffers.
        const ones = nativeAudioContext.createBuffer(1, 2, 44100);
        const channelData = ones.getChannelData(0);
        channelData[0] = 1;
        channelData[1] = 1;
        const source = nativeAudioContext.createBufferSource();
        source.buffer = ones;
        source.loop = true;
        source.connect(analyzer).connect(nativeAudioContext.destination);
        source.connect(dummy);
        source.disconnect(dummy);
        // tslint:disable-next-line:deprecation
        analyzer.onaudioprocess = (event) => {
            const chnnlDt = event.inputBuffer.getChannelData(0);
            if (Array.prototype.some.call(chnnlDt, (sample) => sample === 1)) {
                resolve(true);
            }
            else {
                resolve(false);
            }
            source.stop();
            analyzer.onaudioprocess = null; // tslint:disable-line:deprecation
            source.disconnect(analyzer);
            analyzer.disconnect(nativeAudioContext.destination);
        };
        source.start();
    });
};
//# sourceMappingURL=test-audio-node-disconnect-method-support.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/helpers/test-audio-scheduled-source-node-start-method-negative-parameters-support.js":
/*!***************************************************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/helpers/test-audio-scheduled-source-node-start-method-negative-parameters-support.js ***!
  \***************************************************************************************************************************************************/
/*! namespace exports */
/*! export testAudioScheduledSourceNodeStartMethodNegativeParametersSupport [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "testAudioScheduledSourceNodeStartMethodNegativeParametersSupport": () => /* binding */ testAudioScheduledSourceNodeStartMethodNegativeParametersSupport
/* harmony export */ });
const testAudioScheduledSourceNodeStartMethodNegativeParametersSupport = (nativeContext) => {
    const nativeAudioBufferSourceNode = nativeContext.createOscillator();
    try {
        nativeAudioBufferSourceNode.start(-1);
    }
    catch (err) {
        return err instanceof RangeError;
    }
    return false;
};
//# sourceMappingURL=test-audio-scheduled-source-node-start-method-negative-parameters-support.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/helpers/test-audio-scheduled-source-node-stop-method-consecutive-calls-support.js":
/*!************************************************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/helpers/test-audio-scheduled-source-node-stop-method-consecutive-calls-support.js ***!
  \************************************************************************************************************************************************/
/*! namespace exports */
/*! export testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport": () => /* binding */ testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport
/* harmony export */ });
const testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport = (nativeContext) => {
    const nativeAudioBuffer = nativeContext.createBuffer(1, 1, 44100);
    const nativeAudioBufferSourceNode = nativeContext.createBufferSource();
    nativeAudioBufferSourceNode.buffer = nativeAudioBuffer;
    nativeAudioBufferSourceNode.start();
    nativeAudioBufferSourceNode.stop();
    try {
        nativeAudioBufferSourceNode.stop();
        return true;
    }
    catch {
        return false;
    }
};
//# sourceMappingURL=test-audio-scheduled-source-node-stop-method-consecutive-calls-support.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/helpers/test-audio-scheduled-source-node-stop-method-negative-parameters-support.js":
/*!**************************************************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/helpers/test-audio-scheduled-source-node-stop-method-negative-parameters-support.js ***!
  \**************************************************************************************************************************************************/
/*! namespace exports */
/*! export testAudioScheduledSourceNodeStopMethodNegativeParametersSupport [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "testAudioScheduledSourceNodeStopMethodNegativeParametersSupport": () => /* binding */ testAudioScheduledSourceNodeStopMethodNegativeParametersSupport
/* harmony export */ });
const testAudioScheduledSourceNodeStopMethodNegativeParametersSupport = (nativeContext) => {
    const nativeAudioBufferSourceNode = nativeContext.createOscillator();
    try {
        nativeAudioBufferSourceNode.stop(-1);
    }
    catch (err) {
        return err instanceof RangeError;
    }
    return false;
};
//# sourceMappingURL=test-audio-scheduled-source-node-stop-method-negative-parameters-support.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/helpers/test-clonability-of-audio-worklet-node-options.js":
/*!************************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/helpers/test-clonability-of-audio-worklet-node-options.js ***!
  \************************************************************************************************************************/
/*! namespace exports */
/*! export testClonabilityOfAudioWorkletNodeOptions [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "testClonabilityOfAudioWorkletNodeOptions": () => /* binding */ testClonabilityOfAudioWorkletNodeOptions
/* harmony export */ });
const testClonabilityOfAudioWorkletNodeOptions = (audioWorkletNodeOptions) => {
    const { port1 } = new MessageChannel();
    try {
        // This will throw an error if the audioWorkletNodeOptions are not clonable.
        port1.postMessage(audioWorkletNodeOptions);
    }
    finally {
        port1.close();
    }
};
//# sourceMappingURL=test-clonability-of-audio-worklet-node-options.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/helpers/test-dom-exception-constructor-support.js":
/*!****************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/helpers/test-dom-exception-constructor-support.js ***!
  \****************************************************************************************************************/
/*! namespace exports */
/*! export testDomExceptionConstructorSupport [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "testDomExceptionConstructorSupport": () => /* binding */ testDomExceptionConstructorSupport
/* harmony export */ });
/*
 * Bug #122: Edge up to version v18 did not allow to construct a DOMException'. It also had a couple more bugs but since this is easy to
 * test it's used here as a placeholder.
 *
 * Bug #27: Edge up to version v18 did reject an invalid arrayBuffer passed to decodeAudioData() with a DOMException.
 *
 * Bug #50: Edge up to version v18 did not allow to create AudioNodes on a closed context.
 *
 * Bug #57: Edge up to version v18 did not throw an error when assigning the type of an OscillatorNode to 'custom'.
 *
 * Bug #63: Edge up to version v18 did not expose the mediaElement property of a MediaElementAudioSourceNode.
 *
 * Bug #64: Edge up to version v18 did not support the MediaStreamAudioDestinationNode.
 *
 * Bug #71: Edge up to version v18 did not allow to set the buffer of an AudioBufferSourceNode to null.
 *
 * Bug #93: Edge up to version v18 did set the sampleRate of an AudioContext to zero when it was closed.
 *
 * Bug #101: Edge up to version v18 refused to execute decodeAudioData() on a closed context.
 *
 * Bug #106: Edge up to version v18 did not expose the maxValue and minValue properties of the pan AudioParam of a StereoPannerNode.
 *
 * Bug #110: Edge up to version v18 did not expose the maxValue and minValue properties of the attack, knee, ratio, release and threshold AudioParams of a DynamicsCompressorNode.
 *
 * Bug #123: Edge up to version v18 did not support HRTF as the panningModel for a PannerNode.
 *
 * Bug #145: Edge up to version v18 did throw an IndexSizeError when an OfflineAudioContext was created with a sampleRate of zero.
 *
 * Bug #161: Edge up to version v18 did not expose the maxValue and minValue properties of the delayTime AudioParam of a DelayNode.
 */
const testDomExceptionConstructorSupport = () => {
    try {
        new DOMException(); // tslint:disable-line:no-unused-expression
    }
    catch {
        return false;
    }
    return true;
};
//# sourceMappingURL=test-dom-exception-constructor-support.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/helpers/test-promise-support.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/helpers/test-promise-support.js ***!
  \**********************************************************************************************/
/*! namespace exports */
/*! export testPromiseSupport [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "testPromiseSupport": () => /* binding */ testPromiseSupport
/* harmony export */ });
const testPromiseSupport = (nativeContext) => {
    // This 12 numbers represent the 48 bytes of an empty WAVE file with a single sample.
    const uint32Array = new Uint32Array([1179011410, 40, 1163280727, 544501094, 16, 131073, 44100, 176400, 1048580, 1635017060, 4, 0]);
    try {
        // Bug #1: Safari requires a successCallback.
        const promise = nativeContext.decodeAudioData(uint32Array.buffer, () => {
            // Ignore the success callback.
        });
        if (promise === undefined) {
            return false;
        }
        promise.catch(() => {
            // Ignore rejected errors.
        });
        return true;
    }
    catch {
        // Ignore errors.
    }
    return false;
};
//# sourceMappingURL=test-promise-support.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/helpers/test-transferables-support.js":
/*!****************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/helpers/test-transferables-support.js ***!
  \****************************************************************************************************/
/*! namespace exports */
/*! export testTransferablesSupport [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "testTransferablesSupport": () => /* binding */ testTransferablesSupport
/* harmony export */ });
// Safari at version 11 did not support transferables.
const testTransferablesSupport = () => new Promise((resolve) => {
    const arrayBuffer = new ArrayBuffer(0);
    const { port1, port2 } = new MessageChannel();
    port1.onmessage = ({ data }) => resolve(data !== null);
    port2.postMessage(arrayBuffer, [arrayBuffer]);
});
//# sourceMappingURL=test-transferables-support.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/helpers/visit-each-audio-node-once.js":
/*!****************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/helpers/visit-each-audio-node-once.js ***!
  \****************************************************************************************************/
/*! namespace exports */
/*! export visitEachAudioNodeOnce [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "visitEachAudioNodeOnce": () => /* binding */ visitEachAudioNodeOnce
/* harmony export */ });
const visitEachAudioNodeOnce = (cycles, visitor) => {
    const counts = new Map();
    for (const cycle of cycles) {
        for (const audioNode of cycle) {
            const count = counts.get(audioNode);
            counts.set(audioNode, count === undefined ? 1 : count + 1);
        }
    }
    counts.forEach((count, audioNode) => visitor(audioNode, count));
};
//# sourceMappingURL=visit-each-audio-node-once.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/helpers/wrap-analyser-node-get-float-time-domain-data-method.js":
/*!******************************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/helpers/wrap-analyser-node-get-float-time-domain-data-method.js ***!
  \******************************************************************************************************************************/
/*! namespace exports */
/*! export wrapAnalyserNodeGetFloatTimeDomainDataMethod [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "wrapAnalyserNodeGetFloatTimeDomainDataMethod": () => /* binding */ wrapAnalyserNodeGetFloatTimeDomainDataMethod
/* harmony export */ });
const wrapAnalyserNodeGetFloatTimeDomainDataMethod = (nativeAnalyserNode) => {
    nativeAnalyserNode.getFloatTimeDomainData = (array) => {
        const byteTimeDomainData = new Uint8Array(array.length);
        nativeAnalyserNode.getByteTimeDomainData(byteTimeDomainData);
        const length = Math.max(byteTimeDomainData.length, nativeAnalyserNode.fftSize);
        for (let i = 0; i < length; i += 1) {
            array[i] = (byteTimeDomainData[i] - 128) * 0.0078125;
        }
        return array;
    };
};
//# sourceMappingURL=wrap-analyser-node-get-float-time-domain-data-method.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/helpers/wrap-audio-buffer-get-channel-data-method.js":
/*!*******************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/helpers/wrap-audio-buffer-get-channel-data-method.js ***!
  \*******************************************************************************************************************/
/*! namespace exports */
/*! export wrapAudioBufferGetChannelDataMethod [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "wrapAudioBufferGetChannelDataMethod": () => /* binding */ wrapAudioBufferGetChannelDataMethod
/* harmony export */ });
/* harmony import */ var _factories_index_size_error__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../factories/index-size-error */ "./node_modules/standardized-audio-context/build/es2019/factories/index-size-error.js");
;
const wrapAudioBufferGetChannelDataMethod = (audioBuffer) => {
    audioBuffer.getChannelData = ((getChannelData) => {
        return (channel) => {
            try {
                return getChannelData.call(audioBuffer, channel);
            }
            catch (err) {
                if (err.code === 12) {
                    throw (0,_factories_index_size_error__WEBPACK_IMPORTED_MODULE_0__.createIndexSizeError)();
                }
                throw err;
            }
        };
    })(audioBuffer.getChannelData);
};
//# sourceMappingURL=wrap-audio-buffer-get-channel-data-method.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/helpers/wrap-audio-buffer-source-node-start-method-consecutive-calls.js":
/*!**************************************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/helpers/wrap-audio-buffer-source-node-start-method-consecutive-calls.js ***!
  \**************************************************************************************************************************************/
/*! namespace exports */
/*! export wrapAudioBufferSourceNodeStartMethodConsecutiveCalls [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "wrapAudioBufferSourceNodeStartMethodConsecutiveCalls": () => /* binding */ wrapAudioBufferSourceNodeStartMethodConsecutiveCalls
/* harmony export */ });
/* harmony import */ var _factories_invalid_state_error__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../factories/invalid-state-error */ "./node_modules/standardized-audio-context/build/es2019/factories/invalid-state-error.js");
;
const wrapAudioBufferSourceNodeStartMethodConsecutiveCalls = (nativeAudioBufferSourceNode) => {
    nativeAudioBufferSourceNode.start = ((start) => {
        let isScheduled = false;
        return (when = 0, offset = 0, duration) => {
            if (isScheduled) {
                throw (0,_factories_invalid_state_error__WEBPACK_IMPORTED_MODULE_0__.createInvalidStateError)();
            }
            start.call(nativeAudioBufferSourceNode, when, offset, duration);
            isScheduled = true;
        };
    })(nativeAudioBufferSourceNode.start);
};
//# sourceMappingURL=wrap-audio-buffer-source-node-start-method-consecutive-calls.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/helpers/wrap-audio-buffer-source-node-start-method-offset-clamping.js":
/*!************************************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/helpers/wrap-audio-buffer-source-node-start-method-offset-clamping.js ***!
  \************************************************************************************************************************************/
/*! namespace exports */
/*! export wrapAudioBufferSourceNodeStartMethodOffsetClamping [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "wrapAudioBufferSourceNodeStartMethodOffsetClamping": () => /* binding */ wrapAudioBufferSourceNodeStartMethodOffsetClamping
/* harmony export */ });
const wrapAudioBufferSourceNodeStartMethodOffsetClamping = (nativeAudioBufferSourceNode) => {
    nativeAudioBufferSourceNode.start = ((start) => {
        return (when = 0, offset = 0, duration) => {
            const buffer = nativeAudioBufferSourceNode.buffer;
            // Bug #154: Safari does not clamp the offset if it is equal to or greater than the duration of the buffer.
            const clampedOffset = buffer === null ? offset : Math.min(buffer.duration, offset);
            // Bug #155: Safari does not handle the offset correctly if it would cause the buffer to be not be played at all.
            if (buffer !== null && clampedOffset > buffer.duration - 0.5 / nativeAudioBufferSourceNode.context.sampleRate) {
                start.call(nativeAudioBufferSourceNode, when, 0, 0);
            }
            else {
                start.call(nativeAudioBufferSourceNode, when, clampedOffset, duration);
            }
        };
    })(nativeAudioBufferSourceNode.start);
};
//# sourceMappingURL=wrap-audio-buffer-source-node-start-method-offset-clamping.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/helpers/wrap-audio-node-disconnect-method.js":
/*!***********************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/helpers/wrap-audio-node-disconnect-method.js ***!
  \***********************************************************************************************************/
/*! namespace exports */
/*! export wrapAudioNodeDisconnectMethod [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "wrapAudioNodeDisconnectMethod": () => /* binding */ wrapAudioNodeDisconnectMethod
/* harmony export */ });
/* harmony import */ var _guards_native_audio_node__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../guards/native-audio-node */ "./node_modules/standardized-audio-context/build/es2019/guards/native-audio-node.js");
;
const wrapAudioNodeDisconnectMethod = (nativeAudioNode) => {
    const connections = new Map();
    nativeAudioNode.connect = ((connect) => {
        // tslint:disable-next-line:invalid-void
        return (destination, output = 0, input = 0) => {
            const returnValue = (0,_guards_native_audio_node__WEBPACK_IMPORTED_MODULE_0__.isNativeAudioNode)(destination) ? connect(destination, output, input) : connect(destination, output);
            // Save the new connection only if the calls to connect above didn't throw an error.
            const connectionsToDestination = connections.get(destination);
            if (connectionsToDestination === undefined) {
                connections.set(destination, [{ input, output }]);
            }
            else {
                if (connectionsToDestination.every((connection) => connection.input !== input || connection.output !== output)) {
                    connectionsToDestination.push({ input, output });
                }
            }
            return returnValue;
        };
    })(nativeAudioNode.connect.bind(nativeAudioNode));
    nativeAudioNode.disconnect = ((disconnect) => {
        return (destinationOrOutput, output, input) => {
            disconnect.apply(nativeAudioNode);
            if (destinationOrOutput === undefined) {
                connections.clear();
            }
            else if (typeof destinationOrOutput === 'number') {
                for (const [destination, connectionsToDestination] of connections) {
                    const filteredConnections = connectionsToDestination.filter((connection) => connection.output !== destinationOrOutput);
                    if (filteredConnections.length === 0) {
                        connections.delete(destination);
                    }
                    else {
                        connections.set(destination, filteredConnections);
                    }
                }
            }
            else if (connections.has(destinationOrOutput)) {
                if (output === undefined) {
                    connections.delete(destinationOrOutput);
                }
                else {
                    const connectionsToDestination = connections.get(destinationOrOutput);
                    if (connectionsToDestination !== undefined) {
                        const filteredConnections = connectionsToDestination.filter((connection) => connection.output !== output && (connection.input !== input || input === undefined));
                        if (filteredConnections.length === 0) {
                            connections.delete(destinationOrOutput);
                        }
                        else {
                            connections.set(destinationOrOutput, filteredConnections);
                        }
                    }
                }
            }
            for (const [destination, connectionsToDestination] of connections) {
                connectionsToDestination.forEach((connection) => {
                    if ((0,_guards_native_audio_node__WEBPACK_IMPORTED_MODULE_0__.isNativeAudioNode)(destination)) {
                        nativeAudioNode.connect(destination, connection.output, connection.input);
                    }
                    else {
                        nativeAudioNode.connect(destination, connection.output);
                    }
                });
            }
        };
    })(nativeAudioNode.disconnect);
};
//# sourceMappingURL=wrap-audio-node-disconnect-method.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/helpers/wrap-audio-scheduled-source-node-start-method-negative-parameters.js":
/*!*******************************************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/helpers/wrap-audio-scheduled-source-node-start-method-negative-parameters.js ***!
  \*******************************************************************************************************************************************/
/*! namespace exports */
/*! export wrapAudioScheduledSourceNodeStartMethodNegativeParameters [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "wrapAudioScheduledSourceNodeStartMethodNegativeParameters": () => /* binding */ wrapAudioScheduledSourceNodeStartMethodNegativeParameters
/* harmony export */ });
const wrapAudioScheduledSourceNodeStartMethodNegativeParameters = (nativeAudioScheduledSourceNode) => {
    nativeAudioScheduledSourceNode.start = ((start) => {
        return (when = 0, offset = 0, duration) => {
            if ((typeof duration === 'number' && duration < 0) || offset < 0 || when < 0) {
                throw new RangeError("The parameters can't be negative.");
            }
            // @todo TypeScript cannot infer the overloaded signature with 3 arguments yet.
            start.call(nativeAudioScheduledSourceNode, when, offset, duration);
        };
    })(nativeAudioScheduledSourceNode.start);
};
//# sourceMappingURL=wrap-audio-scheduled-source-node-start-method-negative-parameters.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/helpers/wrap-audio-scheduled-source-node-stop-method-consecutive-calls.js":
/*!****************************************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/helpers/wrap-audio-scheduled-source-node-stop-method-consecutive-calls.js ***!
  \****************************************************************************************************************************************/
/*! namespace exports */
/*! export wrapAudioScheduledSourceNodeStopMethodConsecutiveCalls [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "wrapAudioScheduledSourceNodeStopMethodConsecutiveCalls": () => /* binding */ wrapAudioScheduledSourceNodeStopMethodConsecutiveCalls
/* harmony export */ });
/* harmony import */ var _intercept_connections__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./intercept-connections */ "./node_modules/standardized-audio-context/build/es2019/helpers/intercept-connections.js");
;
const wrapAudioScheduledSourceNodeStopMethodConsecutiveCalls = (nativeAudioScheduledSourceNode, nativeContext) => {
    const nativeGainNode = nativeContext.createGain();
    nativeAudioScheduledSourceNode.connect(nativeGainNode);
    const disconnectGainNode = ((disconnect) => {
        return () => {
            // @todo TypeScript cannot infer the overloaded signature with 1 argument yet.
            disconnect.call(nativeAudioScheduledSourceNode, nativeGainNode);
            nativeAudioScheduledSourceNode.removeEventListener('ended', disconnectGainNode);
        };
    })(nativeAudioScheduledSourceNode.disconnect);
    nativeAudioScheduledSourceNode.addEventListener('ended', disconnectGainNode);
    (0,_intercept_connections__WEBPACK_IMPORTED_MODULE_0__.interceptConnections)(nativeAudioScheduledSourceNode, nativeGainNode);
    nativeAudioScheduledSourceNode.stop = ((stop) => {
        let isStopped = false;
        return (when = 0) => {
            if (isStopped) {
                try {
                    stop.call(nativeAudioScheduledSourceNode, when);
                }
                catch {
                    nativeGainNode.gain.setValueAtTime(0, when);
                }
            }
            else {
                stop.call(nativeAudioScheduledSourceNode, when);
                isStopped = true;
            }
        };
    })(nativeAudioScheduledSourceNode.stop);
};
//# sourceMappingURL=wrap-audio-scheduled-source-node-stop-method-consecutive-calls.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/helpers/wrap-audio-scheduled-source-node-stop-method-negative-parameters.js":
/*!******************************************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/helpers/wrap-audio-scheduled-source-node-stop-method-negative-parameters.js ***!
  \******************************************************************************************************************************************/
/*! namespace exports */
/*! export wrapAudioScheduledSourceNodeStopMethodNegativeParameters [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "wrapAudioScheduledSourceNodeStopMethodNegativeParameters": () => /* binding */ wrapAudioScheduledSourceNodeStopMethodNegativeParameters
/* harmony export */ });
const wrapAudioScheduledSourceNodeStopMethodNegativeParameters = (nativeAudioScheduledSourceNode) => {
    nativeAudioScheduledSourceNode.stop = ((stop) => {
        return (when = 0) => {
            if (when < 0) {
                throw new RangeError("The parameter can't be negative.");
            }
            stop.call(nativeAudioScheduledSourceNode, when);
        };
    })(nativeAudioScheduledSourceNode.stop);
};
//# sourceMappingURL=wrap-audio-scheduled-source-node-stop-method-negative-parameters.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/helpers/wrap-channel-splitter-node.js":
/*!****************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/helpers/wrap-channel-splitter-node.js ***!
  \****************************************************************************************************/
/*! namespace exports */
/*! export wrapChannelSplitterNode [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "wrapChannelSplitterNode": () => /* binding */ wrapChannelSplitterNode
/* harmony export */ });
/* harmony import */ var _factories_invalid_state_error__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../factories/invalid-state-error */ "./node_modules/standardized-audio-context/build/es2019/factories/invalid-state-error.js");
;
const wrapChannelSplitterNode = (channelSplitterNode) => {
    const channelCount = channelSplitterNode.numberOfOutputs;
    // Bug #97: Safari does not throw an error when attempting to change the channelCount to something other than its initial value.
    Object.defineProperty(channelSplitterNode, 'channelCount', {
        get: () => channelCount,
        set: (value) => {
            if (value !== channelCount) {
                throw (0,_factories_invalid_state_error__WEBPACK_IMPORTED_MODULE_0__.createInvalidStateError)();
            }
        }
    });
    // Bug #30: Safari does not throw an error when attempting to change the channelCountMode to something other than explicit.
    Object.defineProperty(channelSplitterNode, 'channelCountMode', {
        get: () => 'explicit',
        set: (value) => {
            if (value !== 'explicit') {
                throw (0,_factories_invalid_state_error__WEBPACK_IMPORTED_MODULE_0__.createInvalidStateError)();
            }
        }
    });
    // Bug #32: Safari does not throw an error when attempting to change the channelInterpretation to something other than discrete.
    Object.defineProperty(channelSplitterNode, 'channelInterpretation', {
        get: () => 'discrete',
        set: (value) => {
            if (value !== 'discrete') {
                throw (0,_factories_invalid_state_error__WEBPACK_IMPORTED_MODULE_0__.createInvalidStateError)();
            }
        }
    });
};
//# sourceMappingURL=wrap-channel-splitter-node.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/helpers/wrap-event-listener.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/helpers/wrap-event-listener.js ***!
  \*********************************************************************************************/
/*! namespace exports */
/*! export wrapEventListener [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "wrapEventListener": () => /* binding */ wrapEventListener
/* harmony export */ });
const wrapEventListener = (target, eventListener) => {
    return (event) => {
        const descriptor = { value: target };
        Object.defineProperties(event, {
            currentTarget: descriptor,
            target: descriptor
        });
        if (typeof eventListener === 'function') {
            return eventListener.call(target, event);
        }
        return eventListener.handleEvent.call(target, event);
    };
};
//# sourceMappingURL=wrap-event-listener.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/helpers/wrap-iir-filter-node-get-frequency-response-method.js":
/*!****************************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/helpers/wrap-iir-filter-node-get-frequency-response-method.js ***!
  \****************************************************************************************************************************/
/*! namespace exports */
/*! export wrapIIRFilterNodeGetFrequencyResponseMethod [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "wrapIIRFilterNodeGetFrequencyResponseMethod": () => /* binding */ wrapIIRFilterNodeGetFrequencyResponseMethod
/* harmony export */ });
/* harmony import */ var _factories_invalid_access_error__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../factories/invalid-access-error */ "./node_modules/standardized-audio-context/build/es2019/factories/invalid-access-error.js");
;
const wrapIIRFilterNodeGetFrequencyResponseMethod = (nativeIIRFilterNode) => {
    nativeIIRFilterNode.getFrequencyResponse = ((getFrequencyResponse) => {
        return (frequencyHz, magResponse, phaseResponse) => {
            if (frequencyHz.length !== magResponse.length || magResponse.length !== phaseResponse.length) {
                throw (0,_factories_invalid_access_error__WEBPACK_IMPORTED_MODULE_0__.createInvalidAccessError)();
            }
            return getFrequencyResponse.call(nativeIIRFilterNode, frequencyHz, magResponse, phaseResponse);
        };
    })(nativeIIRFilterNode.getFrequencyResponse);
};
//# sourceMappingURL=wrap-iir-filter-node-get-frequency-response-method.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/interfaces/analyser-node.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/interfaces/analyser-node.js ***!
  \******************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=analyser-node.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/interfaces/analyser-options.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/interfaces/analyser-options.js ***!
  \*********************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=analyser-options.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/interfaces/audio-buffer-options.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/interfaces/audio-buffer-options.js ***!
  \*************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=audio-buffer-options.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/interfaces/audio-buffer-source-node-renderer.js":
/*!**************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/interfaces/audio-buffer-source-node-renderer.js ***!
  \**************************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=audio-buffer-source-node-renderer.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/interfaces/audio-buffer-source-node.js":
/*!*****************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/interfaces/audio-buffer-source-node.js ***!
  \*****************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=audio-buffer-source-node.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/interfaces/audio-buffer-source-options.js":
/*!********************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/interfaces/audio-buffer-source-options.js ***!
  \********************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=audio-buffer-source-options.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/interfaces/audio-buffer.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/interfaces/audio-buffer.js ***!
  \*****************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=audio-buffer.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/interfaces/audio-context-options.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/interfaces/audio-context-options.js ***!
  \**************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=audio-context-options.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/interfaces/audio-context.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/interfaces/audio-context.js ***!
  \******************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=audio-context.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/interfaces/audio-destination-node.js":
/*!***************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/interfaces/audio-destination-node.js ***!
  \***************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=audio-destination-node.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/interfaces/audio-listener.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/interfaces/audio-listener.js ***!
  \*******************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=audio-listener.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/interfaces/audio-node-options.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/interfaces/audio-node-options.js ***!
  \***********************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=audio-node-options.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/interfaces/audio-node-renderer.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/interfaces/audio-node-renderer.js ***!
  \************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=audio-node-renderer.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/interfaces/audio-node.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/interfaces/audio-node.js ***!
  \***************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=audio-node.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/interfaces/audio-param-descriptor.js":
/*!***************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/interfaces/audio-param-descriptor.js ***!
  \***************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=audio-param-descriptor.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/interfaces/audio-param-renderer.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/interfaces/audio-param-renderer.js ***!
  \*************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=audio-param-renderer.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/interfaces/audio-param.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/interfaces/audio-param.js ***!
  \****************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=audio-param.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/interfaces/audio-scheduled-source-node-event-map.js":
/*!******************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/interfaces/audio-scheduled-source-node-event-map.js ***!
  \******************************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=audio-scheduled-source-node-event-map.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/interfaces/audio-scheduled-source-node.js":
/*!********************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/interfaces/audio-scheduled-source-node.js ***!
  \********************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=audio-scheduled-source-node.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/interfaces/audio-worklet-node-event-map.js":
/*!*********************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/interfaces/audio-worklet-node-event-map.js ***!
  \*********************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=audio-worklet-node-event-map.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/interfaces/audio-worklet-node-options.js":
/*!*******************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/interfaces/audio-worklet-node-options.js ***!
  \*******************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=audio-worklet-node-options.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/interfaces/audio-worklet-node.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/interfaces/audio-worklet-node.js ***!
  \***********************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=audio-worklet-node.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/interfaces/audio-worklet-processor-constructor.js":
/*!****************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/interfaces/audio-worklet-processor-constructor.js ***!
  \****************************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=audio-worklet-processor-constructor.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/interfaces/audio-worklet-processor.js":
/*!****************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/interfaces/audio-worklet-processor.js ***!
  \****************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=audio-worklet-processor.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/interfaces/audio-worklet.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/interfaces/audio-worklet.js ***!
  \******************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=audio-worklet.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/interfaces/automation.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/interfaces/automation.js ***!
  \***************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=automation.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/interfaces/base-audio-context.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/interfaces/base-audio-context.js ***!
  \***********************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=base-audio-context.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/interfaces/biquad-filter-node.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/interfaces/biquad-filter-node.js ***!
  \***********************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=biquad-filter-node.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/interfaces/biquad-filter-options.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/interfaces/biquad-filter-options.js ***!
  \**************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=biquad-filter-options.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/interfaces/channel-merger-options.js":
/*!***************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/interfaces/channel-merger-options.js ***!
  \***************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=channel-merger-options.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/interfaces/channel-splitter-options.js":
/*!*****************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/interfaces/channel-splitter-options.js ***!
  \*****************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=channel-splitter-options.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/interfaces/common-audio-context.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/interfaces/common-audio-context.js ***!
  \*************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=common-audio-context.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/interfaces/common-offline-audio-context.js":
/*!*********************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/interfaces/common-offline-audio-context.js ***!
  \*********************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=common-offline-audio-context.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/interfaces/constant-source-node-renderer.js":
/*!**********************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/interfaces/constant-source-node-renderer.js ***!
  \**********************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=constant-source-node-renderer.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/interfaces/constant-source-node.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/interfaces/constant-source-node.js ***!
  \*************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=constant-source-node.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/interfaces/constant-source-options.js":
/*!****************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/interfaces/constant-source-options.js ***!
  \****************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=constant-source-options.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/interfaces/convolver-node.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/interfaces/convolver-node.js ***!
  \*******************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=convolver-node.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/interfaces/convolver-options.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/interfaces/convolver-options.js ***!
  \**********************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=convolver-options.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/interfaces/delay-node.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/interfaces/delay-node.js ***!
  \***************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=delay-node.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/interfaces/delay-options.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/interfaces/delay-options.js ***!
  \******************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=delay-options.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/interfaces/dynamics-compressor-node.js":
/*!*****************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/interfaces/dynamics-compressor-node.js ***!
  \*****************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=dynamics-compressor-node.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/interfaces/dynamics-compressor-options.js":
/*!********************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/interfaces/dynamics-compressor-options.js ***!
  \********************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=dynamics-compressor-options.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/interfaces/gain-node.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/interfaces/gain-node.js ***!
  \**************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=gain-node.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/interfaces/gain-options.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/interfaces/gain-options.js ***!
  \*****************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=gain-options.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/interfaces/iir-filter-node.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/interfaces/iir-filter-node.js ***!
  \********************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=iir-filter-node.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/interfaces/iir-filter-options.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/interfaces/iir-filter-options.js ***!
  \***********************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=iir-filter-options.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/interfaces/index.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/interfaces/index.js ***!
  \**********************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _analyser_node__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./analyser-node */ "./node_modules/standardized-audio-context/build/es2019/interfaces/analyser-node.js");
/* harmony import */ var _analyser_options__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./analyser-options */ "./node_modules/standardized-audio-context/build/es2019/interfaces/analyser-options.js");
/* harmony import */ var _audio_buffer__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./audio-buffer */ "./node_modules/standardized-audio-context/build/es2019/interfaces/audio-buffer.js");
/* harmony import */ var _audio_buffer_options__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./audio-buffer-options */ "./node_modules/standardized-audio-context/build/es2019/interfaces/audio-buffer-options.js");
/* harmony import */ var _audio_buffer_source_node__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./audio-buffer-source-node */ "./node_modules/standardized-audio-context/build/es2019/interfaces/audio-buffer-source-node.js");
/* harmony import */ var _audio_buffer_source_node_renderer__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./audio-buffer-source-node-renderer */ "./node_modules/standardized-audio-context/build/es2019/interfaces/audio-buffer-source-node-renderer.js");
/* harmony import */ var _audio_buffer_source_options__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./audio-buffer-source-options */ "./node_modules/standardized-audio-context/build/es2019/interfaces/audio-buffer-source-options.js");
/* harmony import */ var _audio_context__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./audio-context */ "./node_modules/standardized-audio-context/build/es2019/interfaces/audio-context.js");
/* harmony import */ var _audio_context_options__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./audio-context-options */ "./node_modules/standardized-audio-context/build/es2019/interfaces/audio-context-options.js");
/* harmony import */ var _audio_destination_node__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./audio-destination-node */ "./node_modules/standardized-audio-context/build/es2019/interfaces/audio-destination-node.js");
/* harmony import */ var _audio_listener__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./audio-listener */ "./node_modules/standardized-audio-context/build/es2019/interfaces/audio-listener.js");
/* harmony import */ var _audio_node__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./audio-node */ "./node_modules/standardized-audio-context/build/es2019/interfaces/audio-node.js");
/* harmony import */ var _audio_node_options__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./audio-node-options */ "./node_modules/standardized-audio-context/build/es2019/interfaces/audio-node-options.js");
/* harmony import */ var _audio_node_renderer__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./audio-node-renderer */ "./node_modules/standardized-audio-context/build/es2019/interfaces/audio-node-renderer.js");
/* harmony import */ var _audio_param__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./audio-param */ "./node_modules/standardized-audio-context/build/es2019/interfaces/audio-param.js");
/* harmony import */ var _audio_param_descriptor__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./audio-param-descriptor */ "./node_modules/standardized-audio-context/build/es2019/interfaces/audio-param-descriptor.js");
/* harmony import */ var _audio_param_renderer__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./audio-param-renderer */ "./node_modules/standardized-audio-context/build/es2019/interfaces/audio-param-renderer.js");
/* harmony import */ var _audio_scheduled_source_node__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./audio-scheduled-source-node */ "./node_modules/standardized-audio-context/build/es2019/interfaces/audio-scheduled-source-node.js");
/* harmony import */ var _audio_scheduled_source_node_event_map__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./audio-scheduled-source-node-event-map */ "./node_modules/standardized-audio-context/build/es2019/interfaces/audio-scheduled-source-node-event-map.js");
/* harmony import */ var _audio_worklet__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./audio-worklet */ "./node_modules/standardized-audio-context/build/es2019/interfaces/audio-worklet.js");
/* harmony import */ var _audio_worklet_node__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./audio-worklet-node */ "./node_modules/standardized-audio-context/build/es2019/interfaces/audio-worklet-node.js");
/* harmony import */ var _audio_worklet_node_event_map__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./audio-worklet-node-event-map */ "./node_modules/standardized-audio-context/build/es2019/interfaces/audio-worklet-node-event-map.js");
/* harmony import */ var _audio_worklet_node_options__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ./audio-worklet-node-options */ "./node_modules/standardized-audio-context/build/es2019/interfaces/audio-worklet-node-options.js");
/* harmony import */ var _audio_worklet_processor__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ./audio-worklet-processor */ "./node_modules/standardized-audio-context/build/es2019/interfaces/audio-worklet-processor.js");
/* harmony import */ var _audio_worklet_processor_constructor__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ./audio-worklet-processor-constructor */ "./node_modules/standardized-audio-context/build/es2019/interfaces/audio-worklet-processor-constructor.js");
/* harmony import */ var _automation__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ./automation */ "./node_modules/standardized-audio-context/build/es2019/interfaces/automation.js");
/* harmony import */ var _base_audio_context__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ./base-audio-context */ "./node_modules/standardized-audio-context/build/es2019/interfaces/base-audio-context.js");
/* harmony import */ var _biquad_filter_node__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! ./biquad-filter-node */ "./node_modules/standardized-audio-context/build/es2019/interfaces/biquad-filter-node.js");
/* harmony import */ var _biquad_filter_options__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! ./biquad-filter-options */ "./node_modules/standardized-audio-context/build/es2019/interfaces/biquad-filter-options.js");
/* harmony import */ var _channel_merger_options__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! ./channel-merger-options */ "./node_modules/standardized-audio-context/build/es2019/interfaces/channel-merger-options.js");
/* harmony import */ var _channel_splitter_options__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(/*! ./channel-splitter-options */ "./node_modules/standardized-audio-context/build/es2019/interfaces/channel-splitter-options.js");
/* harmony import */ var _common_audio_context__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(/*! ./common-audio-context */ "./node_modules/standardized-audio-context/build/es2019/interfaces/common-audio-context.js");
/* harmony import */ var _common_offline_audio_context__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(/*! ./common-offline-audio-context */ "./node_modules/standardized-audio-context/build/es2019/interfaces/common-offline-audio-context.js");
/* harmony import */ var _constant_source_node__WEBPACK_IMPORTED_MODULE_33__ = __webpack_require__(/*! ./constant-source-node */ "./node_modules/standardized-audio-context/build/es2019/interfaces/constant-source-node.js");
/* harmony import */ var _constant_source_node_renderer__WEBPACK_IMPORTED_MODULE_34__ = __webpack_require__(/*! ./constant-source-node-renderer */ "./node_modules/standardized-audio-context/build/es2019/interfaces/constant-source-node-renderer.js");
/* harmony import */ var _constant_source_options__WEBPACK_IMPORTED_MODULE_35__ = __webpack_require__(/*! ./constant-source-options */ "./node_modules/standardized-audio-context/build/es2019/interfaces/constant-source-options.js");
/* harmony import */ var _convolver_node__WEBPACK_IMPORTED_MODULE_36__ = __webpack_require__(/*! ./convolver-node */ "./node_modules/standardized-audio-context/build/es2019/interfaces/convolver-node.js");
/* harmony import */ var _convolver_options__WEBPACK_IMPORTED_MODULE_37__ = __webpack_require__(/*! ./convolver-options */ "./node_modules/standardized-audio-context/build/es2019/interfaces/convolver-options.js");
/* harmony import */ var _delay_node__WEBPACK_IMPORTED_MODULE_38__ = __webpack_require__(/*! ./delay-node */ "./node_modules/standardized-audio-context/build/es2019/interfaces/delay-node.js");
/* harmony import */ var _delay_options__WEBPACK_IMPORTED_MODULE_39__ = __webpack_require__(/*! ./delay-options */ "./node_modules/standardized-audio-context/build/es2019/interfaces/delay-options.js");
/* harmony import */ var _dynamics_compressor_node__WEBPACK_IMPORTED_MODULE_40__ = __webpack_require__(/*! ./dynamics-compressor-node */ "./node_modules/standardized-audio-context/build/es2019/interfaces/dynamics-compressor-node.js");
/* harmony import */ var _dynamics_compressor_options__WEBPACK_IMPORTED_MODULE_41__ = __webpack_require__(/*! ./dynamics-compressor-options */ "./node_modules/standardized-audio-context/build/es2019/interfaces/dynamics-compressor-options.js");
/* harmony import */ var _gain_node__WEBPACK_IMPORTED_MODULE_42__ = __webpack_require__(/*! ./gain-node */ "./node_modules/standardized-audio-context/build/es2019/interfaces/gain-node.js");
/* harmony import */ var _gain_options__WEBPACK_IMPORTED_MODULE_43__ = __webpack_require__(/*! ./gain-options */ "./node_modules/standardized-audio-context/build/es2019/interfaces/gain-options.js");
/* harmony import */ var _iir_filter_node__WEBPACK_IMPORTED_MODULE_44__ = __webpack_require__(/*! ./iir-filter-node */ "./node_modules/standardized-audio-context/build/es2019/interfaces/iir-filter-node.js");
/* harmony import */ var _iir_filter_options__WEBPACK_IMPORTED_MODULE_45__ = __webpack_require__(/*! ./iir-filter-options */ "./node_modules/standardized-audio-context/build/es2019/interfaces/iir-filter-options.js");
/* harmony import */ var _media_element_audio_source_node__WEBPACK_IMPORTED_MODULE_46__ = __webpack_require__(/*! ./media-element-audio-source-node */ "./node_modules/standardized-audio-context/build/es2019/interfaces/media-element-audio-source-node.js");
/* harmony import */ var _media_element_audio_source_options__WEBPACK_IMPORTED_MODULE_47__ = __webpack_require__(/*! ./media-element-audio-source-options */ "./node_modules/standardized-audio-context/build/es2019/interfaces/media-element-audio-source-options.js");
/* harmony import */ var _media_stream_audio_destination_node__WEBPACK_IMPORTED_MODULE_48__ = __webpack_require__(/*! ./media-stream-audio-destination-node */ "./node_modules/standardized-audio-context/build/es2019/interfaces/media-stream-audio-destination-node.js");
/* harmony import */ var _media_stream_audio_source_node__WEBPACK_IMPORTED_MODULE_49__ = __webpack_require__(/*! ./media-stream-audio-source-node */ "./node_modules/standardized-audio-context/build/es2019/interfaces/media-stream-audio-source-node.js");
/* harmony import */ var _media_stream_audio_source_options__WEBPACK_IMPORTED_MODULE_50__ = __webpack_require__(/*! ./media-stream-audio-source-options */ "./node_modules/standardized-audio-context/build/es2019/interfaces/media-stream-audio-source-options.js");
/* harmony import */ var _media_stream_track_audio_source_node__WEBPACK_IMPORTED_MODULE_51__ = __webpack_require__(/*! ./media-stream-track-audio-source-node */ "./node_modules/standardized-audio-context/build/es2019/interfaces/media-stream-track-audio-source-node.js");
/* harmony import */ var _media_stream_track_audio_source_options__WEBPACK_IMPORTED_MODULE_52__ = __webpack_require__(/*! ./media-stream-track-audio-source-options */ "./node_modules/standardized-audio-context/build/es2019/interfaces/media-stream-track-audio-source-options.js");
/* harmony import */ var _minimal_audio_context__WEBPACK_IMPORTED_MODULE_53__ = __webpack_require__(/*! ./minimal-audio-context */ "./node_modules/standardized-audio-context/build/es2019/interfaces/minimal-audio-context.js");
/* harmony import */ var _minimal_base_audio_context__WEBPACK_IMPORTED_MODULE_54__ = __webpack_require__(/*! ./minimal-base-audio-context */ "./node_modules/standardized-audio-context/build/es2019/interfaces/minimal-base-audio-context.js");
/* harmony import */ var _minimal_base_audio_context_event_map__WEBPACK_IMPORTED_MODULE_55__ = __webpack_require__(/*! ./minimal-base-audio-context-event-map */ "./node_modules/standardized-audio-context/build/es2019/interfaces/minimal-base-audio-context-event-map.js");
/* harmony import */ var _minimal_offline_audio_context__WEBPACK_IMPORTED_MODULE_56__ = __webpack_require__(/*! ./minimal-offline-audio-context */ "./node_modules/standardized-audio-context/build/es2019/interfaces/minimal-offline-audio-context.js");
/* harmony import */ var _native_audio_node_faker__WEBPACK_IMPORTED_MODULE_57__ = __webpack_require__(/*! ./native-audio-node-faker */ "./node_modules/standardized-audio-context/build/es2019/interfaces/native-audio-node-faker.js");
/* harmony import */ var _native_audio_worklet_node_faker__WEBPACK_IMPORTED_MODULE_58__ = __webpack_require__(/*! ./native-audio-worklet-node-faker */ "./node_modules/standardized-audio-context/build/es2019/interfaces/native-audio-worklet-node-faker.js");
/* harmony import */ var _native_constant_source_node_faker__WEBPACK_IMPORTED_MODULE_59__ = __webpack_require__(/*! ./native-constant-source-node-faker */ "./node_modules/standardized-audio-context/build/es2019/interfaces/native-constant-source-node-faker.js");
/* harmony import */ var _native_convolver_node_faker__WEBPACK_IMPORTED_MODULE_60__ = __webpack_require__(/*! ./native-convolver-node-faker */ "./node_modules/standardized-audio-context/build/es2019/interfaces/native-convolver-node-faker.js");
/* harmony import */ var _native_iir_filter_node_faker__WEBPACK_IMPORTED_MODULE_61__ = __webpack_require__(/*! ./native-iir-filter-node-faker */ "./node_modules/standardized-audio-context/build/es2019/interfaces/native-iir-filter-node-faker.js");
/* harmony import */ var _native_panner_node_faker__WEBPACK_IMPORTED_MODULE_62__ = __webpack_require__(/*! ./native-panner-node-faker */ "./node_modules/standardized-audio-context/build/es2019/interfaces/native-panner-node-faker.js");
/* harmony import */ var _native_stereo_panner_node_faker__WEBPACK_IMPORTED_MODULE_63__ = __webpack_require__(/*! ./native-stereo-panner-node-faker */ "./node_modules/standardized-audio-context/build/es2019/interfaces/native-stereo-panner-node-faker.js");
/* harmony import */ var _native_wave_shaper_node_faker__WEBPACK_IMPORTED_MODULE_64__ = __webpack_require__(/*! ./native-wave-shaper-node-faker */ "./node_modules/standardized-audio-context/build/es2019/interfaces/native-wave-shaper-node-faker.js");
/* harmony import */ var _offline_audio_completion_event__WEBPACK_IMPORTED_MODULE_65__ = __webpack_require__(/*! ./offline-audio-completion-event */ "./node_modules/standardized-audio-context/build/es2019/interfaces/offline-audio-completion-event.js");
/* harmony import */ var _offline_audio_context__WEBPACK_IMPORTED_MODULE_66__ = __webpack_require__(/*! ./offline-audio-context */ "./node_modules/standardized-audio-context/build/es2019/interfaces/offline-audio-context.js");
/* harmony import */ var _offline_audio_context_constructor__WEBPACK_IMPORTED_MODULE_67__ = __webpack_require__(/*! ./offline-audio-context-constructor */ "./node_modules/standardized-audio-context/build/es2019/interfaces/offline-audio-context-constructor.js");
/* harmony import */ var _offline_audio_context_options__WEBPACK_IMPORTED_MODULE_68__ = __webpack_require__(/*! ./offline-audio-context-options */ "./node_modules/standardized-audio-context/build/es2019/interfaces/offline-audio-context-options.js");
/* harmony import */ var _oscillator_node__WEBPACK_IMPORTED_MODULE_69__ = __webpack_require__(/*! ./oscillator-node */ "./node_modules/standardized-audio-context/build/es2019/interfaces/oscillator-node.js");
/* harmony import */ var _oscillator_node_renderer__WEBPACK_IMPORTED_MODULE_70__ = __webpack_require__(/*! ./oscillator-node-renderer */ "./node_modules/standardized-audio-context/build/es2019/interfaces/oscillator-node-renderer.js");
/* harmony import */ var _oscillator_options__WEBPACK_IMPORTED_MODULE_71__ = __webpack_require__(/*! ./oscillator-options */ "./node_modules/standardized-audio-context/build/es2019/interfaces/oscillator-options.js");
/* harmony import */ var _panner_node__WEBPACK_IMPORTED_MODULE_72__ = __webpack_require__(/*! ./panner-node */ "./node_modules/standardized-audio-context/build/es2019/interfaces/panner-node.js");
/* harmony import */ var _panner_options__WEBPACK_IMPORTED_MODULE_73__ = __webpack_require__(/*! ./panner-options */ "./node_modules/standardized-audio-context/build/es2019/interfaces/panner-options.js");
/* harmony import */ var _periodic_wave__WEBPACK_IMPORTED_MODULE_74__ = __webpack_require__(/*! ./periodic-wave */ "./node_modules/standardized-audio-context/build/es2019/interfaces/periodic-wave.js");
/* harmony import */ var _periodic_wave_constraints__WEBPACK_IMPORTED_MODULE_75__ = __webpack_require__(/*! ./periodic-wave-constraints */ "./node_modules/standardized-audio-context/build/es2019/interfaces/periodic-wave-constraints.js");
/* harmony import */ var _periodic_wave_options__WEBPACK_IMPORTED_MODULE_76__ = __webpack_require__(/*! ./periodic-wave-options */ "./node_modules/standardized-audio-context/build/es2019/interfaces/periodic-wave-options.js");
/* harmony import */ var _read_only_map__WEBPACK_IMPORTED_MODULE_77__ = __webpack_require__(/*! ./read-only-map */ "./node_modules/standardized-audio-context/build/es2019/interfaces/read-only-map.js");
/* harmony import */ var _stereo_panner_node__WEBPACK_IMPORTED_MODULE_78__ = __webpack_require__(/*! ./stereo-panner-node */ "./node_modules/standardized-audio-context/build/es2019/interfaces/stereo-panner-node.js");
/* harmony import */ var _stereo_panner_options__WEBPACK_IMPORTED_MODULE_79__ = __webpack_require__(/*! ./stereo-panner-options */ "./node_modules/standardized-audio-context/build/es2019/interfaces/stereo-panner-options.js");
/* harmony import */ var _wave_shaper_node__WEBPACK_IMPORTED_MODULE_80__ = __webpack_require__(/*! ./wave-shaper-node */ "./node_modules/standardized-audio-context/build/es2019/interfaces/wave-shaper-node.js");
/* harmony import */ var _wave_shaper_options__WEBPACK_IMPORTED_MODULE_81__ = __webpack_require__(/*! ./wave-shaper-options */ "./node_modules/standardized-audio-context/build/es2019/interfaces/wave-shaper-options.js");
/* harmony import */ var _worklet_options__WEBPACK_IMPORTED_MODULE_82__ = __webpack_require__(/*! ./worklet-options */ "./node_modules/standardized-audio-context/build/es2019/interfaces/worklet-options.js");



















































































//# sourceMappingURL=index.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/interfaces/media-element-audio-source-node.js":
/*!************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/interfaces/media-element-audio-source-node.js ***!
  \************************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=media-element-audio-source-node.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/interfaces/media-element-audio-source-options.js":
/*!***************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/interfaces/media-element-audio-source-options.js ***!
  \***************************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=media-element-audio-source-options.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/interfaces/media-stream-audio-destination-node.js":
/*!****************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/interfaces/media-stream-audio-destination-node.js ***!
  \****************************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=media-stream-audio-destination-node.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/interfaces/media-stream-audio-source-node.js":
/*!***********************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/interfaces/media-stream-audio-source-node.js ***!
  \***********************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=media-stream-audio-source-node.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/interfaces/media-stream-audio-source-options.js":
/*!**************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/interfaces/media-stream-audio-source-options.js ***!
  \**************************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=media-stream-audio-source-options.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/interfaces/media-stream-track-audio-source-node.js":
/*!*****************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/interfaces/media-stream-track-audio-source-node.js ***!
  \*****************************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=media-stream-track-audio-source-node.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/interfaces/media-stream-track-audio-source-options.js":
/*!********************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/interfaces/media-stream-track-audio-source-options.js ***!
  \********************************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=media-stream-track-audio-source-options.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/interfaces/minimal-audio-context.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/interfaces/minimal-audio-context.js ***!
  \**************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=minimal-audio-context.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/interfaces/minimal-base-audio-context-event-map.js":
/*!*****************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/interfaces/minimal-base-audio-context-event-map.js ***!
  \*****************************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=minimal-base-audio-context-event-map.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/interfaces/minimal-base-audio-context.js":
/*!*******************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/interfaces/minimal-base-audio-context.js ***!
  \*******************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=minimal-base-audio-context.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/interfaces/minimal-offline-audio-context.js":
/*!**********************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/interfaces/minimal-offline-audio-context.js ***!
  \**********************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=minimal-offline-audio-context.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/interfaces/native-audio-node-faker.js":
/*!****************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/interfaces/native-audio-node-faker.js ***!
  \****************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=native-audio-node-faker.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/interfaces/native-audio-worklet-node-faker.js":
/*!************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/interfaces/native-audio-worklet-node-faker.js ***!
  \************************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=native-audio-worklet-node-faker.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/interfaces/native-constant-source-node-faker.js":
/*!**************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/interfaces/native-constant-source-node-faker.js ***!
  \**************************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=native-constant-source-node-faker.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/interfaces/native-convolver-node-faker.js":
/*!********************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/interfaces/native-convolver-node-faker.js ***!
  \********************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=native-convolver-node-faker.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/interfaces/native-iir-filter-node-faker.js":
/*!*********************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/interfaces/native-iir-filter-node-faker.js ***!
  \*********************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=native-iir-filter-node-faker.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/interfaces/native-panner-node-faker.js":
/*!*****************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/interfaces/native-panner-node-faker.js ***!
  \*****************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=native-panner-node-faker.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/interfaces/native-stereo-panner-node-faker.js":
/*!************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/interfaces/native-stereo-panner-node-faker.js ***!
  \************************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=native-stereo-panner-node-faker.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/interfaces/native-wave-shaper-node-faker.js":
/*!**********************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/interfaces/native-wave-shaper-node-faker.js ***!
  \**********************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=native-wave-shaper-node-faker.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/interfaces/offline-audio-completion-event.js":
/*!***********************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/interfaces/offline-audio-completion-event.js ***!
  \***********************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=offline-audio-completion-event.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/interfaces/offline-audio-context-constructor.js":
/*!**************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/interfaces/offline-audio-context-constructor.js ***!
  \**************************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=offline-audio-context-constructor.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/interfaces/offline-audio-context-options.js":
/*!**********************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/interfaces/offline-audio-context-options.js ***!
  \**********************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=offline-audio-context-options.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/interfaces/offline-audio-context.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/interfaces/offline-audio-context.js ***!
  \**************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=offline-audio-context.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/interfaces/oscillator-node-renderer.js":
/*!*****************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/interfaces/oscillator-node-renderer.js ***!
  \*****************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=oscillator-node-renderer.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/interfaces/oscillator-node.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/interfaces/oscillator-node.js ***!
  \********************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=oscillator-node.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/interfaces/oscillator-options.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/interfaces/oscillator-options.js ***!
  \***********************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=oscillator-options.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/interfaces/panner-node.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/interfaces/panner-node.js ***!
  \****************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=panner-node.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/interfaces/panner-options.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/interfaces/panner-options.js ***!
  \*******************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=panner-options.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/interfaces/periodic-wave-constraints.js":
/*!******************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/interfaces/periodic-wave-constraints.js ***!
  \******************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=periodic-wave-constraints.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/interfaces/periodic-wave-options.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/interfaces/periodic-wave-options.js ***!
  \**************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=periodic-wave-options.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/interfaces/periodic-wave.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/interfaces/periodic-wave.js ***!
  \******************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=periodic-wave.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/interfaces/read-only-map.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/interfaces/read-only-map.js ***!
  \******************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=read-only-map.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/interfaces/stereo-panner-node.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/interfaces/stereo-panner-node.js ***!
  \***********************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=stereo-panner-node.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/interfaces/stereo-panner-options.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/interfaces/stereo-panner-options.js ***!
  \**************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=stereo-panner-options.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/interfaces/wave-shaper-node.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/interfaces/wave-shaper-node.js ***!
  \*********************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=wave-shaper-node.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/interfaces/wave-shaper-options.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/interfaces/wave-shaper-options.js ***!
  \************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=wave-shaper-options.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/interfaces/worklet-options.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/interfaces/worklet-options.js ***!
  \********************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
// @todo This is currently named IWorkletOptions and not IAudioWorkletOptions because it defines the options of a generic Worklet.

//# sourceMappingURL=worklet-options.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/module.js":
/*!************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/module.js ***!
  \************************************************************************/
/*! namespace exports */
/*! export AnalyserNode [provided] [no usage info] [missing usage info prevents renaming] */
/*! export AudioBuffer [provided] [no usage info] [missing usage info prevents renaming] */
/*! export AudioBufferSourceNode [provided] [no usage info] [missing usage info prevents renaming] */
/*! export AudioContext [provided] [no usage info] [missing usage info prevents renaming] */
/*! export AudioWorkletNode [provided] [no usage info] [missing usage info prevents renaming] */
/*! export BiquadFilterNode [provided] [no usage info] [missing usage info prevents renaming] */
/*! export ChannelMergerNode [provided] [no usage info] [missing usage info prevents renaming] */
/*! export ChannelSplitterNode [provided] [no usage info] [missing usage info prevents renaming] */
/*! export ConstantSourceNode [provided] [no usage info] [missing usage info prevents renaming] */
/*! export ConvolverNode [provided] [no usage info] [missing usage info prevents renaming] */
/*! export DelayNode [provided] [no usage info] [missing usage info prevents renaming] */
/*! export DynamicsCompressorNode [provided] [no usage info] [missing usage info prevents renaming] */
/*! export GainNode [provided] [no usage info] [missing usage info prevents renaming] */
/*! export IIRFilterNode [provided] [no usage info] [missing usage info prevents renaming] */
/*! export MediaElementAudioSourceNode [provided] [no usage info] [missing usage info prevents renaming] */
/*! export MediaStreamAudioDestinationNode [provided] [no usage info] [missing usage info prevents renaming] */
/*! export MediaStreamAudioSourceNode [provided] [no usage info] [missing usage info prevents renaming] */
/*! export MediaStreamTrackAudioSourceNode [provided] [no usage info] [missing usage info prevents renaming] */
/*! export MinimalAudioContext [provided] [no usage info] [missing usage info prevents renaming] */
/*! export MinimalOfflineAudioContext [provided] [no usage info] [missing usage info prevents renaming] */
/*! export OfflineAudioContext [provided] [no usage info] [missing usage info prevents renaming] */
/*! export OscillatorNode [provided] [no usage info] [missing usage info prevents renaming] */
/*! export PannerNode [provided] [no usage info] [missing usage info prevents renaming] */
/*! export PeriodicWave [provided] [no usage info] [missing usage info prevents renaming] */
/*! export StereoPannerNode [provided] [no usage info] [missing usage info prevents renaming] */
/*! export WaveShaperNode [provided] [no usage info] [missing usage info prevents renaming] */
/*! export addAudioWorkletModule [provided] [no usage info] [missing usage info prevents renaming] */
/*! export decodeAudioData [provided] [no usage info] [missing usage info prevents renaming] */
/*! export isAnyAudioContext [provided] [no usage info] [missing usage info prevents renaming] */
/*! export isAnyAudioNode [provided] [no usage info] [missing usage info prevents renaming] */
/*! export isAnyAudioParam [provided] [no usage info] [missing usage info prevents renaming] */
/*! export isAnyOfflineAudioContext [provided] [no usage info] [missing usage info prevents renaming] */
/*! export isSupported [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.n, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "AnalyserNode": () => /* binding */ analyserNodeConstructor,
/* harmony export */   "AudioBuffer": () => /* binding */ audioBufferConstructor,
/* harmony export */   "AudioBufferSourceNode": () => /* binding */ audioBufferSourceNodeConstructor,
/* harmony export */   "addAudioWorkletModule": () => /* binding */ addAudioWorkletModule,
/* harmony export */   "decodeAudioData": () => /* binding */ decodeAudioData,
/* harmony export */   "AudioContext": () => /* binding */ audioContextConstructor,
/* harmony export */   "AudioWorkletNode": () => /* binding */ audioWorkletNodeConstructor,
/* harmony export */   "BiquadFilterNode": () => /* binding */ biquadFilterNodeConstructor,
/* harmony export */   "ChannelMergerNode": () => /* binding */ channelMergerNodeConstructor,
/* harmony export */   "ChannelSplitterNode": () => /* binding */ channelSplitterNodeConstructor,
/* harmony export */   "ConvolverNode": () => /* binding */ convolverNodeConstructor,
/* harmony export */   "ConstantSourceNode": () => /* binding */ constantSourceNodeConstructor,
/* harmony export */   "DelayNode": () => /* binding */ delayNodeConstructor,
/* harmony export */   "DynamicsCompressorNode": () => /* binding */ dynamicsCompressorNodeConstructor,
/* harmony export */   "GainNode": () => /* binding */ gainNodeConstructor,
/* harmony export */   "IIRFilterNode": () => /* binding */ iIRFilterNodeConstructor,
/* harmony export */   "MediaElementAudioSourceNode": () => /* binding */ mediaElementAudioSourceNodeConstructor,
/* harmony export */   "MediaStreamAudioDestinationNode": () => /* binding */ mediaStreamAudioDestinationNodeConstructor,
/* harmony export */   "MediaStreamAudioSourceNode": () => /* binding */ mediaStreamAudioSourceNodeConstructor,
/* harmony export */   "MediaStreamTrackAudioSourceNode": () => /* binding */ mediaStreamTrackAudioSourceNodeConstructor,
/* harmony export */   "MinimalAudioContext": () => /* binding */ minimalAudioContextConstructor,
/* harmony export */   "MinimalOfflineAudioContext": () => /* binding */ minimalOfflineAudioContextConstructor,
/* harmony export */   "OfflineAudioContext": () => /* binding */ offlineAudioContextConstructor,
/* harmony export */   "OscillatorNode": () => /* binding */ oscillatorNodeConstructor,
/* harmony export */   "PannerNode": () => /* binding */ pannerNodeConstructor,
/* harmony export */   "PeriodicWave": () => /* binding */ periodicWaveConstructor,
/* harmony export */   "StereoPannerNode": () => /* binding */ stereoPannerNodeConstructor,
/* harmony export */   "WaveShaperNode": () => /* binding */ waveShaperNodeConstructor,
/* harmony export */   "isAnyAudioContext": () => /* binding */ isAnyAudioContext,
/* harmony export */   "isAnyAudioNode": () => /* binding */ isAnyAudioNode,
/* harmony export */   "isAnyAudioParam": () => /* binding */ isAnyAudioParam,
/* harmony export */   "isAnyOfflineAudioContext": () => /* binding */ isAnyOfflineAudioContext,
/* harmony export */   "isSupported": () => /* binding */ isSupported
/* harmony export */ });
/* harmony import */ var automation_events__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! automation-events */ "./node_modules/automation-events/build/es5/bundle.js");
/* harmony import */ var automation_events__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(automation_events__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _factories_abort_error__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./factories/abort-error */ "./node_modules/standardized-audio-context/build/es2019/factories/abort-error.js");
/* harmony import */ var _factories_add_active_input_connection_to_audio_node__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./factories/add-active-input-connection-to-audio-node */ "./node_modules/standardized-audio-context/build/es2019/factories/add-active-input-connection-to-audio-node.js");
/* harmony import */ var _factories_add_audio_node_connections__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./factories/add-audio-node-connections */ "./node_modules/standardized-audio-context/build/es2019/factories/add-audio-node-connections.js");
/* harmony import */ var _factories_add_audio_param_connections__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./factories/add-audio-param-connections */ "./node_modules/standardized-audio-context/build/es2019/factories/add-audio-param-connections.js");
/* harmony import */ var _factories_add_audio_worklet_module__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./factories/add-audio-worklet-module */ "./node_modules/standardized-audio-context/build/es2019/factories/add-audio-worklet-module.js");
/* harmony import */ var _factories_add_connection_to_audio_node__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./factories/add-connection-to-audio-node */ "./node_modules/standardized-audio-context/build/es2019/factories/add-connection-to-audio-node.js");
/* harmony import */ var _factories_add_passive_input_connection_to_audio_node__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./factories/add-passive-input-connection-to-audio-node */ "./node_modules/standardized-audio-context/build/es2019/factories/add-passive-input-connection-to-audio-node.js");
/* harmony import */ var _factories_add_silent_connection__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./factories/add-silent-connection */ "./node_modules/standardized-audio-context/build/es2019/factories/add-silent-connection.js");
/* harmony import */ var _factories_add_unrendered_audio_worklet_node__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./factories/add-unrendered-audio-worklet-node */ "./node_modules/standardized-audio-context/build/es2019/factories/add-unrendered-audio-worklet-node.js");
/* harmony import */ var _factories_analyser_node_constructor__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./factories/analyser-node-constructor */ "./node_modules/standardized-audio-context/build/es2019/factories/analyser-node-constructor.js");
/* harmony import */ var _factories_analyser_node_renderer_factory__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./factories/analyser-node-renderer-factory */ "./node_modules/standardized-audio-context/build/es2019/factories/analyser-node-renderer-factory.js");
/* harmony import */ var _factories_audio_buffer_constructor__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./factories/audio-buffer-constructor */ "./node_modules/standardized-audio-context/build/es2019/factories/audio-buffer-constructor.js");
/* harmony import */ var _factories_audio_buffer_source_node_constructor__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./factories/audio-buffer-source-node-constructor */ "./node_modules/standardized-audio-context/build/es2019/factories/audio-buffer-source-node-constructor.js");
/* harmony import */ var _factories_audio_buffer_source_node_renderer_factory__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./factories/audio-buffer-source-node-renderer-factory */ "./node_modules/standardized-audio-context/build/es2019/factories/audio-buffer-source-node-renderer-factory.js");
/* harmony import */ var _factories_audio_context_constructor__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./factories/audio-context-constructor */ "./node_modules/standardized-audio-context/build/es2019/factories/audio-context-constructor.js");
/* harmony import */ var _factories_audio_destination_node_constructor__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./factories/audio-destination-node-constructor */ "./node_modules/standardized-audio-context/build/es2019/factories/audio-destination-node-constructor.js");
/* harmony import */ var _factories_audio_destination_node_renderer_factory__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./factories/audio-destination-node-renderer-factory */ "./node_modules/standardized-audio-context/build/es2019/factories/audio-destination-node-renderer-factory.js");
/* harmony import */ var _factories_audio_listener_factory__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./factories/audio-listener-factory */ "./node_modules/standardized-audio-context/build/es2019/factories/audio-listener-factory.js");
/* harmony import */ var _factories_audio_node_constructor__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./factories/audio-node-constructor */ "./node_modules/standardized-audio-context/build/es2019/factories/audio-node-constructor.js");
/* harmony import */ var _factories_audio_param_factory__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./factories/audio-param-factory */ "./node_modules/standardized-audio-context/build/es2019/factories/audio-param-factory.js");
/* harmony import */ var _factories_audio_param_renderer__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./factories/audio-param-renderer */ "./node_modules/standardized-audio-context/build/es2019/factories/audio-param-renderer.js");
/* harmony import */ var _factories_audio_worklet_node_constructor__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ./factories/audio-worklet-node-constructor */ "./node_modules/standardized-audio-context/build/es2019/factories/audio-worklet-node-constructor.js");
/* harmony import */ var _factories_audio_worklet_node_renderer_factory__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ./factories/audio-worklet-node-renderer-factory */ "./node_modules/standardized-audio-context/build/es2019/factories/audio-worklet-node-renderer-factory.js");
/* harmony import */ var _factories_base_audio_context_constructor__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ./factories/base-audio-context-constructor */ "./node_modules/standardized-audio-context/build/es2019/factories/base-audio-context-constructor.js");
/* harmony import */ var _factories_biquad_filter_node_constructor__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ./factories/biquad-filter-node-constructor */ "./node_modules/standardized-audio-context/build/es2019/factories/biquad-filter-node-constructor.js");
/* harmony import */ var _factories_biquad_filter_node_renderer_factory__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ./factories/biquad-filter-node-renderer-factory */ "./node_modules/standardized-audio-context/build/es2019/factories/biquad-filter-node-renderer-factory.js");
/* harmony import */ var _factories_cache_test_result__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! ./factories/cache-test-result */ "./node_modules/standardized-audio-context/build/es2019/factories/cache-test-result.js");
/* harmony import */ var _factories_channel_merger_node_constructor__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! ./factories/channel-merger-node-constructor */ "./node_modules/standardized-audio-context/build/es2019/factories/channel-merger-node-constructor.js");
/* harmony import */ var _factories_channel_merger_node_renderer_factory__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! ./factories/channel-merger-node-renderer-factory */ "./node_modules/standardized-audio-context/build/es2019/factories/channel-merger-node-renderer-factory.js");
/* harmony import */ var _factories_channel_splitter_node_constructor__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(/*! ./factories/channel-splitter-node-constructor */ "./node_modules/standardized-audio-context/build/es2019/factories/channel-splitter-node-constructor.js");
/* harmony import */ var _factories_channel_splitter_node_renderer_factory__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(/*! ./factories/channel-splitter-node-renderer-factory */ "./node_modules/standardized-audio-context/build/es2019/factories/channel-splitter-node-renderer-factory.js");
/* harmony import */ var _factories_connect_audio_param__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(/*! ./factories/connect-audio-param */ "./node_modules/standardized-audio-context/build/es2019/factories/connect-audio-param.js");
/* harmony import */ var _factories_connect_multiple_outputs__WEBPACK_IMPORTED_MODULE_33__ = __webpack_require__(/*! ./factories/connect-multiple-outputs */ "./node_modules/standardized-audio-context/build/es2019/factories/connect-multiple-outputs.js");
/* harmony import */ var _factories_connected_native_audio_buffer_source_node_factory__WEBPACK_IMPORTED_MODULE_34__ = __webpack_require__(/*! ./factories/connected-native-audio-buffer-source-node-factory */ "./node_modules/standardized-audio-context/build/es2019/factories/connected-native-audio-buffer-source-node-factory.js");
/* harmony import */ var _factories_constant_source_node_constructor__WEBPACK_IMPORTED_MODULE_35__ = __webpack_require__(/*! ./factories/constant-source-node-constructor */ "./node_modules/standardized-audio-context/build/es2019/factories/constant-source-node-constructor.js");
/* harmony import */ var _factories_constant_source_node_renderer_factory__WEBPACK_IMPORTED_MODULE_36__ = __webpack_require__(/*! ./factories/constant-source-node-renderer-factory */ "./node_modules/standardized-audio-context/build/es2019/factories/constant-source-node-renderer-factory.js");
/* harmony import */ var _factories_convert_number_to_unsigned_long__WEBPACK_IMPORTED_MODULE_37__ = __webpack_require__(/*! ./factories/convert-number-to-unsigned-long */ "./node_modules/standardized-audio-context/build/es2019/factories/convert-number-to-unsigned-long.js");
/* harmony import */ var _factories_convolver_node_constructor__WEBPACK_IMPORTED_MODULE_38__ = __webpack_require__(/*! ./factories/convolver-node-constructor */ "./node_modules/standardized-audio-context/build/es2019/factories/convolver-node-constructor.js");
/* harmony import */ var _factories_convolver_node_renderer_factory__WEBPACK_IMPORTED_MODULE_39__ = __webpack_require__(/*! ./factories/convolver-node-renderer-factory */ "./node_modules/standardized-audio-context/build/es2019/factories/convolver-node-renderer-factory.js");
/* harmony import */ var _factories_create_native_offline_audio_context__WEBPACK_IMPORTED_MODULE_40__ = __webpack_require__(/*! ./factories/create-native-offline-audio-context */ "./node_modules/standardized-audio-context/build/es2019/factories/create-native-offline-audio-context.js");
/* harmony import */ var _factories_data_clone_error__WEBPACK_IMPORTED_MODULE_41__ = __webpack_require__(/*! ./factories/data-clone-error */ "./node_modules/standardized-audio-context/build/es2019/factories/data-clone-error.js");
/* harmony import */ var _factories_decode_audio_data__WEBPACK_IMPORTED_MODULE_42__ = __webpack_require__(/*! ./factories/decode-audio-data */ "./node_modules/standardized-audio-context/build/es2019/factories/decode-audio-data.js");
/* harmony import */ var _factories_decrement_cycle_counter__WEBPACK_IMPORTED_MODULE_43__ = __webpack_require__(/*! ./factories/decrement-cycle-counter */ "./node_modules/standardized-audio-context/build/es2019/factories/decrement-cycle-counter.js");
/* harmony import */ var _factories_delay_node_constructor__WEBPACK_IMPORTED_MODULE_44__ = __webpack_require__(/*! ./factories/delay-node-constructor */ "./node_modules/standardized-audio-context/build/es2019/factories/delay-node-constructor.js");
/* harmony import */ var _factories_delay_node_renderer_factory__WEBPACK_IMPORTED_MODULE_45__ = __webpack_require__(/*! ./factories/delay-node-renderer-factory */ "./node_modules/standardized-audio-context/build/es2019/factories/delay-node-renderer-factory.js");
/* harmony import */ var _factories_delete_active_input_connection_to_audio_node__WEBPACK_IMPORTED_MODULE_46__ = __webpack_require__(/*! ./factories/delete-active-input-connection-to-audio-node */ "./node_modules/standardized-audio-context/build/es2019/factories/delete-active-input-connection-to-audio-node.js");
/* harmony import */ var _factories_delete_unrendered_audio_worklet_node__WEBPACK_IMPORTED_MODULE_47__ = __webpack_require__(/*! ./factories/delete-unrendered-audio-worklet-node */ "./node_modules/standardized-audio-context/build/es2019/factories/delete-unrendered-audio-worklet-node.js");
/* harmony import */ var _factories_detect_cycles__WEBPACK_IMPORTED_MODULE_48__ = __webpack_require__(/*! ./factories/detect-cycles */ "./node_modules/standardized-audio-context/build/es2019/factories/detect-cycles.js");
/* harmony import */ var _factories_disconnect_multiple_outputs__WEBPACK_IMPORTED_MODULE_49__ = __webpack_require__(/*! ./factories/disconnect-multiple-outputs */ "./node_modules/standardized-audio-context/build/es2019/factories/disconnect-multiple-outputs.js");
/* harmony import */ var _factories_dynamics_compressor_node_constructor__WEBPACK_IMPORTED_MODULE_50__ = __webpack_require__(/*! ./factories/dynamics-compressor-node-constructor */ "./node_modules/standardized-audio-context/build/es2019/factories/dynamics-compressor-node-constructor.js");
/* harmony import */ var _factories_dynamics_compressor_node_renderer_factory__WEBPACK_IMPORTED_MODULE_51__ = __webpack_require__(/*! ./factories/dynamics-compressor-node-renderer-factory */ "./node_modules/standardized-audio-context/build/es2019/factories/dynamics-compressor-node-renderer-factory.js");
/* harmony import */ var _factories_encoding_error__WEBPACK_IMPORTED_MODULE_52__ = __webpack_require__(/*! ./factories/encoding-error */ "./node_modules/standardized-audio-context/build/es2019/factories/encoding-error.js");
/* harmony import */ var _factories_evaluate_source__WEBPACK_IMPORTED_MODULE_53__ = __webpack_require__(/*! ./factories/evaluate-source */ "./node_modules/standardized-audio-context/build/es2019/factories/evaluate-source.js");
/* harmony import */ var _factories_event_target_constructor__WEBPACK_IMPORTED_MODULE_54__ = __webpack_require__(/*! ./factories/event-target-constructor */ "./node_modules/standardized-audio-context/build/es2019/factories/event-target-constructor.js");
/* harmony import */ var _factories_expose_current_frame_and_current_time__WEBPACK_IMPORTED_MODULE_55__ = __webpack_require__(/*! ./factories/expose-current-frame-and-current-time */ "./node_modules/standardized-audio-context/build/es2019/factories/expose-current-frame-and-current-time.js");
/* harmony import */ var _factories_fetch_source__WEBPACK_IMPORTED_MODULE_56__ = __webpack_require__(/*! ./factories/fetch-source */ "./node_modules/standardized-audio-context/build/es2019/factories/fetch-source.js");
/* harmony import */ var _factories_gain_node_constructor__WEBPACK_IMPORTED_MODULE_57__ = __webpack_require__(/*! ./factories/gain-node-constructor */ "./node_modules/standardized-audio-context/build/es2019/factories/gain-node-constructor.js");
/* harmony import */ var _factories_gain_node_renderer_factory__WEBPACK_IMPORTED_MODULE_58__ = __webpack_require__(/*! ./factories/gain-node-renderer-factory */ "./node_modules/standardized-audio-context/build/es2019/factories/gain-node-renderer-factory.js");
/* harmony import */ var _factories_get_active_audio_worklet_node_inputs__WEBPACK_IMPORTED_MODULE_59__ = __webpack_require__(/*! ./factories/get-active-audio-worklet-node-inputs */ "./node_modules/standardized-audio-context/build/es2019/factories/get-active-audio-worklet-node-inputs.js");
/* harmony import */ var _factories_get_audio_node_renderer__WEBPACK_IMPORTED_MODULE_60__ = __webpack_require__(/*! ./factories/get-audio-node-renderer */ "./node_modules/standardized-audio-context/build/es2019/factories/get-audio-node-renderer.js");
/* harmony import */ var _factories_get_audio_node_tail_time__WEBPACK_IMPORTED_MODULE_61__ = __webpack_require__(/*! ./factories/get-audio-node-tail-time */ "./node_modules/standardized-audio-context/build/es2019/factories/get-audio-node-tail-time.js");
/* harmony import */ var _factories_get_audio_param_renderer__WEBPACK_IMPORTED_MODULE_62__ = __webpack_require__(/*! ./factories/get-audio-param-renderer */ "./node_modules/standardized-audio-context/build/es2019/factories/get-audio-param-renderer.js");
/* harmony import */ var _factories_get_backup_offline_audio_context__WEBPACK_IMPORTED_MODULE_63__ = __webpack_require__(/*! ./factories/get-backup-offline-audio-context */ "./node_modules/standardized-audio-context/build/es2019/factories/get-backup-offline-audio-context.js");
/* harmony import */ var _factories_get_native_context__WEBPACK_IMPORTED_MODULE_64__ = __webpack_require__(/*! ./factories/get-native-context */ "./node_modules/standardized-audio-context/build/es2019/factories/get-native-context.js");
/* harmony import */ var _factories_get_or_create_backup_offline_audio_context__WEBPACK_IMPORTED_MODULE_65__ = __webpack_require__(/*! ./factories/get-or-create-backup-offline-audio-context */ "./node_modules/standardized-audio-context/build/es2019/factories/get-or-create-backup-offline-audio-context.js");
/* harmony import */ var _factories_get_unrendered_audio_worklet_nodes__WEBPACK_IMPORTED_MODULE_66__ = __webpack_require__(/*! ./factories/get-unrendered-audio-worklet-nodes */ "./node_modules/standardized-audio-context/build/es2019/factories/get-unrendered-audio-worklet-nodes.js");
/* harmony import */ var _factories_iir_filter_node_constructor__WEBPACK_IMPORTED_MODULE_67__ = __webpack_require__(/*! ./factories/iir-filter-node-constructor */ "./node_modules/standardized-audio-context/build/es2019/factories/iir-filter-node-constructor.js");
/* harmony import */ var _factories_iir_filter_node_renderer_factory__WEBPACK_IMPORTED_MODULE_68__ = __webpack_require__(/*! ./factories/iir-filter-node-renderer-factory */ "./node_modules/standardized-audio-context/build/es2019/factories/iir-filter-node-renderer-factory.js");
/* harmony import */ var _factories_increment_cycle_counter_factory__WEBPACK_IMPORTED_MODULE_69__ = __webpack_require__(/*! ./factories/increment-cycle-counter-factory */ "./node_modules/standardized-audio-context/build/es2019/factories/increment-cycle-counter-factory.js");
/* harmony import */ var _factories_index_size_error__WEBPACK_IMPORTED_MODULE_70__ = __webpack_require__(/*! ./factories/index-size-error */ "./node_modules/standardized-audio-context/build/es2019/factories/index-size-error.js");
/* harmony import */ var _factories_invalid_access_error__WEBPACK_IMPORTED_MODULE_71__ = __webpack_require__(/*! ./factories/invalid-access-error */ "./node_modules/standardized-audio-context/build/es2019/factories/invalid-access-error.js");
/* harmony import */ var _factories_invalid_state_error__WEBPACK_IMPORTED_MODULE_72__ = __webpack_require__(/*! ./factories/invalid-state-error */ "./node_modules/standardized-audio-context/build/es2019/factories/invalid-state-error.js");
/* harmony import */ var _factories_is_any_audio_context__WEBPACK_IMPORTED_MODULE_73__ = __webpack_require__(/*! ./factories/is-any-audio-context */ "./node_modules/standardized-audio-context/build/es2019/factories/is-any-audio-context.js");
/* harmony import */ var _factories_is_any_audio_node__WEBPACK_IMPORTED_MODULE_74__ = __webpack_require__(/*! ./factories/is-any-audio-node */ "./node_modules/standardized-audio-context/build/es2019/factories/is-any-audio-node.js");
/* harmony import */ var _factories_is_any_audio_param__WEBPACK_IMPORTED_MODULE_75__ = __webpack_require__(/*! ./factories/is-any-audio-param */ "./node_modules/standardized-audio-context/build/es2019/factories/is-any-audio-param.js");
/* harmony import */ var _factories_is_any_offline_audio_context__WEBPACK_IMPORTED_MODULE_76__ = __webpack_require__(/*! ./factories/is-any-offline-audio-context */ "./node_modules/standardized-audio-context/build/es2019/factories/is-any-offline-audio-context.js");
/* harmony import */ var _factories_is_native_audio_context__WEBPACK_IMPORTED_MODULE_77__ = __webpack_require__(/*! ./factories/is-native-audio-context */ "./node_modules/standardized-audio-context/build/es2019/factories/is-native-audio-context.js");
/* harmony import */ var _factories_is_native_audio_node__WEBPACK_IMPORTED_MODULE_78__ = __webpack_require__(/*! ./factories/is-native-audio-node */ "./node_modules/standardized-audio-context/build/es2019/factories/is-native-audio-node.js");
/* harmony import */ var _factories_is_native_audio_param__WEBPACK_IMPORTED_MODULE_79__ = __webpack_require__(/*! ./factories/is-native-audio-param */ "./node_modules/standardized-audio-context/build/es2019/factories/is-native-audio-param.js");
/* harmony import */ var _factories_is_native_context__WEBPACK_IMPORTED_MODULE_80__ = __webpack_require__(/*! ./factories/is-native-context */ "./node_modules/standardized-audio-context/build/es2019/factories/is-native-context.js");
/* harmony import */ var _factories_is_native_offline_audio_context__WEBPACK_IMPORTED_MODULE_81__ = __webpack_require__(/*! ./factories/is-native-offline-audio-context */ "./node_modules/standardized-audio-context/build/es2019/factories/is-native-offline-audio-context.js");
/* harmony import */ var _factories_is_secure_context__WEBPACK_IMPORTED_MODULE_82__ = __webpack_require__(/*! ./factories/is-secure-context */ "./node_modules/standardized-audio-context/build/es2019/factories/is-secure-context.js");
/* harmony import */ var _factories_is_supported_promise__WEBPACK_IMPORTED_MODULE_83__ = __webpack_require__(/*! ./factories/is-supported-promise */ "./node_modules/standardized-audio-context/build/es2019/factories/is-supported-promise.js");
/* harmony import */ var _factories_media_element_audio_source_node_constructor__WEBPACK_IMPORTED_MODULE_84__ = __webpack_require__(/*! ./factories/media-element-audio-source-node-constructor */ "./node_modules/standardized-audio-context/build/es2019/factories/media-element-audio-source-node-constructor.js");
/* harmony import */ var _factories_media_stream_audio_destination_node_constructor__WEBPACK_IMPORTED_MODULE_85__ = __webpack_require__(/*! ./factories/media-stream-audio-destination-node-constructor */ "./node_modules/standardized-audio-context/build/es2019/factories/media-stream-audio-destination-node-constructor.js");
/* harmony import */ var _factories_media_stream_audio_source_node_constructor__WEBPACK_IMPORTED_MODULE_86__ = __webpack_require__(/*! ./factories/media-stream-audio-source-node-constructor */ "./node_modules/standardized-audio-context/build/es2019/factories/media-stream-audio-source-node-constructor.js");
/* harmony import */ var _factories_media_stream_track_audio_source_node_constructor__WEBPACK_IMPORTED_MODULE_87__ = __webpack_require__(/*! ./factories/media-stream-track-audio-source-node-constructor */ "./node_modules/standardized-audio-context/build/es2019/factories/media-stream-track-audio-source-node-constructor.js");
/* harmony import */ var _factories_minimal_audio_context_constructor__WEBPACK_IMPORTED_MODULE_88__ = __webpack_require__(/*! ./factories/minimal-audio-context-constructor */ "./node_modules/standardized-audio-context/build/es2019/factories/minimal-audio-context-constructor.js");
/* harmony import */ var _factories_minimal_base_audio_context_constructor__WEBPACK_IMPORTED_MODULE_89__ = __webpack_require__(/*! ./factories/minimal-base-audio-context-constructor */ "./node_modules/standardized-audio-context/build/es2019/factories/minimal-base-audio-context-constructor.js");
/* harmony import */ var _factories_minimal_offline_audio_context_constructor__WEBPACK_IMPORTED_MODULE_90__ = __webpack_require__(/*! ./factories/minimal-offline-audio-context-constructor */ "./node_modules/standardized-audio-context/build/es2019/factories/minimal-offline-audio-context-constructor.js");
/* harmony import */ var _factories_monitor_connections__WEBPACK_IMPORTED_MODULE_91__ = __webpack_require__(/*! ./factories/monitor-connections */ "./node_modules/standardized-audio-context/build/es2019/factories/monitor-connections.js");
/* harmony import */ var _factories_native_analyser_node_factory__WEBPACK_IMPORTED_MODULE_92__ = __webpack_require__(/*! ./factories/native-analyser-node-factory */ "./node_modules/standardized-audio-context/build/es2019/factories/native-analyser-node-factory.js");
/* harmony import */ var _factories_native_audio_buffer_constructor__WEBPACK_IMPORTED_MODULE_93__ = __webpack_require__(/*! ./factories/native-audio-buffer-constructor */ "./node_modules/standardized-audio-context/build/es2019/factories/native-audio-buffer-constructor.js");
/* harmony import */ var _factories_native_audio_buffer_source_node_factory__WEBPACK_IMPORTED_MODULE_94__ = __webpack_require__(/*! ./factories/native-audio-buffer-source-node-factory */ "./node_modules/standardized-audio-context/build/es2019/factories/native-audio-buffer-source-node-factory.js");
/* harmony import */ var _factories_native_audio_context_constructor__WEBPACK_IMPORTED_MODULE_95__ = __webpack_require__(/*! ./factories/native-audio-context-constructor */ "./node_modules/standardized-audio-context/build/es2019/factories/native-audio-context-constructor.js");
/* harmony import */ var _factories_native_audio_destination_node__WEBPACK_IMPORTED_MODULE_96__ = __webpack_require__(/*! ./factories/native-audio-destination-node */ "./node_modules/standardized-audio-context/build/es2019/factories/native-audio-destination-node.js");
/* harmony import */ var _factories_native_audio_worklet_node_constructor__WEBPACK_IMPORTED_MODULE_97__ = __webpack_require__(/*! ./factories/native-audio-worklet-node-constructor */ "./node_modules/standardized-audio-context/build/es2019/factories/native-audio-worklet-node-constructor.js");
/* harmony import */ var _factories_native_audio_worklet_node_factory__WEBPACK_IMPORTED_MODULE_98__ = __webpack_require__(/*! ./factories/native-audio-worklet-node-factory */ "./node_modules/standardized-audio-context/build/es2019/factories/native-audio-worklet-node-factory.js");
/* harmony import */ var _factories_native_audio_worklet_node_faker_factory__WEBPACK_IMPORTED_MODULE_99__ = __webpack_require__(/*! ./factories/native-audio-worklet-node-faker-factory */ "./node_modules/standardized-audio-context/build/es2019/factories/native-audio-worklet-node-faker-factory.js");
/* harmony import */ var _factories_native_biquad_filter_node__WEBPACK_IMPORTED_MODULE_100__ = __webpack_require__(/*! ./factories/native-biquad-filter-node */ "./node_modules/standardized-audio-context/build/es2019/factories/native-biquad-filter-node.js");
/* harmony import */ var _factories_native_channel_merger_node_factory__WEBPACK_IMPORTED_MODULE_101__ = __webpack_require__(/*! ./factories/native-channel-merger-node-factory */ "./node_modules/standardized-audio-context/build/es2019/factories/native-channel-merger-node-factory.js");
/* harmony import */ var _factories_native_channel_splitter_node__WEBPACK_IMPORTED_MODULE_102__ = __webpack_require__(/*! ./factories/native-channel-splitter-node */ "./node_modules/standardized-audio-context/build/es2019/factories/native-channel-splitter-node.js");
/* harmony import */ var _factories_native_constant_source_node_factory__WEBPACK_IMPORTED_MODULE_103__ = __webpack_require__(/*! ./factories/native-constant-source-node-factory */ "./node_modules/standardized-audio-context/build/es2019/factories/native-constant-source-node-factory.js");
/* harmony import */ var _factories_native_constant_source_node_faker_factory__WEBPACK_IMPORTED_MODULE_104__ = __webpack_require__(/*! ./factories/native-constant-source-node-faker-factory */ "./node_modules/standardized-audio-context/build/es2019/factories/native-constant-source-node-faker-factory.js");
/* harmony import */ var _factories_native_convolver_node_factory__WEBPACK_IMPORTED_MODULE_105__ = __webpack_require__(/*! ./factories/native-convolver-node-factory */ "./node_modules/standardized-audio-context/build/es2019/factories/native-convolver-node-factory.js");
/* harmony import */ var _factories_native_delay_node__WEBPACK_IMPORTED_MODULE_106__ = __webpack_require__(/*! ./factories/native-delay-node */ "./node_modules/standardized-audio-context/build/es2019/factories/native-delay-node.js");
/* harmony import */ var _factories_native_dynamics_compressor_node_factory__WEBPACK_IMPORTED_MODULE_107__ = __webpack_require__(/*! ./factories/native-dynamics-compressor-node-factory */ "./node_modules/standardized-audio-context/build/es2019/factories/native-dynamics-compressor-node-factory.js");
/* harmony import */ var _factories_native_gain_node__WEBPACK_IMPORTED_MODULE_108__ = __webpack_require__(/*! ./factories/native-gain-node */ "./node_modules/standardized-audio-context/build/es2019/factories/native-gain-node.js");
/* harmony import */ var _factories_native_iir_filter_node_factory__WEBPACK_IMPORTED_MODULE_109__ = __webpack_require__(/*! ./factories/native-iir-filter-node-factory */ "./node_modules/standardized-audio-context/build/es2019/factories/native-iir-filter-node-factory.js");
/* harmony import */ var _factories_native_iir_filter_node_faker_factory__WEBPACK_IMPORTED_MODULE_110__ = __webpack_require__(/*! ./factories/native-iir-filter-node-faker-factory */ "./node_modules/standardized-audio-context/build/es2019/factories/native-iir-filter-node-faker-factory.js");
/* harmony import */ var _factories_native_media_element_audio_source_node__WEBPACK_IMPORTED_MODULE_111__ = __webpack_require__(/*! ./factories/native-media-element-audio-source-node */ "./node_modules/standardized-audio-context/build/es2019/factories/native-media-element-audio-source-node.js");
/* harmony import */ var _factories_native_media_stream_audio_destination_node__WEBPACK_IMPORTED_MODULE_112__ = __webpack_require__(/*! ./factories/native-media-stream-audio-destination-node */ "./node_modules/standardized-audio-context/build/es2019/factories/native-media-stream-audio-destination-node.js");
/* harmony import */ var _factories_native_media_stream_audio_source_node__WEBPACK_IMPORTED_MODULE_113__ = __webpack_require__(/*! ./factories/native-media-stream-audio-source-node */ "./node_modules/standardized-audio-context/build/es2019/factories/native-media-stream-audio-source-node.js");
/* harmony import */ var _factories_native_media_stream_track_audio_source_node_factory__WEBPACK_IMPORTED_MODULE_114__ = __webpack_require__(/*! ./factories/native-media-stream-track-audio-source-node-factory */ "./node_modules/standardized-audio-context/build/es2019/factories/native-media-stream-track-audio-source-node-factory.js");
/* harmony import */ var _factories_native_offline_audio_context_constructor__WEBPACK_IMPORTED_MODULE_115__ = __webpack_require__(/*! ./factories/native-offline-audio-context-constructor */ "./node_modules/standardized-audio-context/build/es2019/factories/native-offline-audio-context-constructor.js");
/* harmony import */ var _factories_native_oscillator_node_factory__WEBPACK_IMPORTED_MODULE_116__ = __webpack_require__(/*! ./factories/native-oscillator-node-factory */ "./node_modules/standardized-audio-context/build/es2019/factories/native-oscillator-node-factory.js");
/* harmony import */ var _factories_native_panner_node_factory__WEBPACK_IMPORTED_MODULE_117__ = __webpack_require__(/*! ./factories/native-panner-node-factory */ "./node_modules/standardized-audio-context/build/es2019/factories/native-panner-node-factory.js");
/* harmony import */ var _factories_native_panner_node_faker_factory__WEBPACK_IMPORTED_MODULE_118__ = __webpack_require__(/*! ./factories/native-panner-node-faker-factory */ "./node_modules/standardized-audio-context/build/es2019/factories/native-panner-node-faker-factory.js");
/* harmony import */ var _factories_native_periodic_wave_factory__WEBPACK_IMPORTED_MODULE_119__ = __webpack_require__(/*! ./factories/native-periodic-wave-factory */ "./node_modules/standardized-audio-context/build/es2019/factories/native-periodic-wave-factory.js");
/* harmony import */ var _factories_native_script_processor_node__WEBPACK_IMPORTED_MODULE_120__ = __webpack_require__(/*! ./factories/native-script-processor-node */ "./node_modules/standardized-audio-context/build/es2019/factories/native-script-processor-node.js");
/* harmony import */ var _factories_native_stereo_panner_node_factory__WEBPACK_IMPORTED_MODULE_121__ = __webpack_require__(/*! ./factories/native-stereo-panner-node-factory */ "./node_modules/standardized-audio-context/build/es2019/factories/native-stereo-panner-node-factory.js");
/* harmony import */ var _factories_native_stereo_panner_node_faker_factory__WEBPACK_IMPORTED_MODULE_122__ = __webpack_require__(/*! ./factories/native-stereo-panner-node-faker-factory */ "./node_modules/standardized-audio-context/build/es2019/factories/native-stereo-panner-node-faker-factory.js");
/* harmony import */ var _factories_native_wave_shaper_node_factory__WEBPACK_IMPORTED_MODULE_123__ = __webpack_require__(/*! ./factories/native-wave-shaper-node-factory */ "./node_modules/standardized-audio-context/build/es2019/factories/native-wave-shaper-node-factory.js");
/* harmony import */ var _factories_native_wave_shaper_node_faker_factory__WEBPACK_IMPORTED_MODULE_124__ = __webpack_require__(/*! ./factories/native-wave-shaper-node-faker-factory */ "./node_modules/standardized-audio-context/build/es2019/factories/native-wave-shaper-node-faker-factory.js");
/* harmony import */ var _factories_not_supported_error__WEBPACK_IMPORTED_MODULE_125__ = __webpack_require__(/*! ./factories/not-supported-error */ "./node_modules/standardized-audio-context/build/es2019/factories/not-supported-error.js");
/* harmony import */ var _factories_offline_audio_context_constructor__WEBPACK_IMPORTED_MODULE_126__ = __webpack_require__(/*! ./factories/offline-audio-context-constructor */ "./node_modules/standardized-audio-context/build/es2019/factories/offline-audio-context-constructor.js");
/* harmony import */ var _factories_oscillator_node_constructor__WEBPACK_IMPORTED_MODULE_127__ = __webpack_require__(/*! ./factories/oscillator-node-constructor */ "./node_modules/standardized-audio-context/build/es2019/factories/oscillator-node-constructor.js");
/* harmony import */ var _factories_oscillator_node_renderer_factory__WEBPACK_IMPORTED_MODULE_128__ = __webpack_require__(/*! ./factories/oscillator-node-renderer-factory */ "./node_modules/standardized-audio-context/build/es2019/factories/oscillator-node-renderer-factory.js");
/* harmony import */ var _factories_panner_node_constructor__WEBPACK_IMPORTED_MODULE_129__ = __webpack_require__(/*! ./factories/panner-node-constructor */ "./node_modules/standardized-audio-context/build/es2019/factories/panner-node-constructor.js");
/* harmony import */ var _factories_panner_node_renderer_factory__WEBPACK_IMPORTED_MODULE_130__ = __webpack_require__(/*! ./factories/panner-node-renderer-factory */ "./node_modules/standardized-audio-context/build/es2019/factories/panner-node-renderer-factory.js");
/* harmony import */ var _factories_periodic_wave_constructor__WEBPACK_IMPORTED_MODULE_131__ = __webpack_require__(/*! ./factories/periodic-wave-constructor */ "./node_modules/standardized-audio-context/build/es2019/factories/periodic-wave-constructor.js");
/* harmony import */ var _factories_render_automation__WEBPACK_IMPORTED_MODULE_132__ = __webpack_require__(/*! ./factories/render-automation */ "./node_modules/standardized-audio-context/build/es2019/factories/render-automation.js");
/* harmony import */ var _factories_render_inputs_of_audio_node__WEBPACK_IMPORTED_MODULE_133__ = __webpack_require__(/*! ./factories/render-inputs-of-audio-node */ "./node_modules/standardized-audio-context/build/es2019/factories/render-inputs-of-audio-node.js");
/* harmony import */ var _factories_render_inputs_of_audio_param__WEBPACK_IMPORTED_MODULE_134__ = __webpack_require__(/*! ./factories/render-inputs-of-audio-param */ "./node_modules/standardized-audio-context/build/es2019/factories/render-inputs-of-audio-param.js");
/* harmony import */ var _factories_render_native_offline_audio_context__WEBPACK_IMPORTED_MODULE_135__ = __webpack_require__(/*! ./factories/render-native-offline-audio-context */ "./node_modules/standardized-audio-context/build/es2019/factories/render-native-offline-audio-context.js");
/* harmony import */ var _factories_set_active_audio_worklet_node_inputs__WEBPACK_IMPORTED_MODULE_136__ = __webpack_require__(/*! ./factories/set-active-audio-worklet-node-inputs */ "./node_modules/standardized-audio-context/build/es2019/factories/set-active-audio-worklet-node-inputs.js");
/* harmony import */ var _factories_set_audio_node_tail_time__WEBPACK_IMPORTED_MODULE_137__ = __webpack_require__(/*! ./factories/set-audio-node-tail-time */ "./node_modules/standardized-audio-context/build/es2019/factories/set-audio-node-tail-time.js");
/* harmony import */ var _factories_start_rendering__WEBPACK_IMPORTED_MODULE_138__ = __webpack_require__(/*! ./factories/start-rendering */ "./node_modules/standardized-audio-context/build/es2019/factories/start-rendering.js");
/* harmony import */ var _factories_stereo_panner_node_constructor__WEBPACK_IMPORTED_MODULE_139__ = __webpack_require__(/*! ./factories/stereo-panner-node-constructor */ "./node_modules/standardized-audio-context/build/es2019/factories/stereo-panner-node-constructor.js");
/* harmony import */ var _factories_stereo_panner_node_renderer_factory__WEBPACK_IMPORTED_MODULE_140__ = __webpack_require__(/*! ./factories/stereo-panner-node-renderer-factory */ "./node_modules/standardized-audio-context/build/es2019/factories/stereo-panner-node-renderer-factory.js");
/* harmony import */ var _factories_test_audio_buffer_constructor_support__WEBPACK_IMPORTED_MODULE_141__ = __webpack_require__(/*! ./factories/test-audio-buffer-constructor-support */ "./node_modules/standardized-audio-context/build/es2019/factories/test-audio-buffer-constructor-support.js");
/* harmony import */ var _factories_test_audio_buffer_copy_channel_methods_subarray_support__WEBPACK_IMPORTED_MODULE_142__ = __webpack_require__(/*! ./factories/test-audio-buffer-copy-channel-methods-subarray-support */ "./node_modules/standardized-audio-context/build/es2019/factories/test-audio-buffer-copy-channel-methods-subarray-support.js");
/* harmony import */ var _factories_test_audio_context_close_method_support__WEBPACK_IMPORTED_MODULE_143__ = __webpack_require__(/*! ./factories/test-audio-context-close-method-support */ "./node_modules/standardized-audio-context/build/es2019/factories/test-audio-context-close-method-support.js");
/* harmony import */ var _factories_test_audio_context_decode_audio_data_method_type_error_support__WEBPACK_IMPORTED_MODULE_144__ = __webpack_require__(/*! ./factories/test-audio-context-decode-audio-data-method-type-error-support */ "./node_modules/standardized-audio-context/build/es2019/factories/test-audio-context-decode-audio-data-method-type-error-support.js");
/* harmony import */ var _factories_test_audio_context_options_support__WEBPACK_IMPORTED_MODULE_145__ = __webpack_require__(/*! ./factories/test-audio-context-options-support */ "./node_modules/standardized-audio-context/build/es2019/factories/test-audio-context-options-support.js");
/* harmony import */ var _factories_test_audio_node_connect_method_support__WEBPACK_IMPORTED_MODULE_146__ = __webpack_require__(/*! ./factories/test-audio-node-connect-method-support */ "./node_modules/standardized-audio-context/build/es2019/factories/test-audio-node-connect-method-support.js");
/* harmony import */ var _factories_test_audio_worklet_processor_no_outputs_support__WEBPACK_IMPORTED_MODULE_147__ = __webpack_require__(/*! ./factories/test-audio-worklet-processor-no-outputs-support */ "./node_modules/standardized-audio-context/build/es2019/factories/test-audio-worklet-processor-no-outputs-support.js");
/* harmony import */ var _factories_test_audio_worklet_processor_post_message_support__WEBPACK_IMPORTED_MODULE_148__ = __webpack_require__(/*! ./factories/test-audio-worklet-processor-post-message-support */ "./node_modules/standardized-audio-context/build/es2019/factories/test-audio-worklet-processor-post-message-support.js");
/* harmony import */ var _factories_test_channel_merger_node_channel_count_support__WEBPACK_IMPORTED_MODULE_149__ = __webpack_require__(/*! ./factories/test-channel-merger-node-channel-count-support */ "./node_modules/standardized-audio-context/build/es2019/factories/test-channel-merger-node-channel-count-support.js");
/* harmony import */ var _factories_test_constant_source_node_accurate_scheduling_support__WEBPACK_IMPORTED_MODULE_150__ = __webpack_require__(/*! ./factories/test-constant-source-node-accurate-scheduling-support */ "./node_modules/standardized-audio-context/build/es2019/factories/test-constant-source-node-accurate-scheduling-support.js");
/* harmony import */ var _factories_test_convolver_node_buffer_reassignability_support__WEBPACK_IMPORTED_MODULE_151__ = __webpack_require__(/*! ./factories/test-convolver-node-buffer-reassignability-support */ "./node_modules/standardized-audio-context/build/es2019/factories/test-convolver-node-buffer-reassignability-support.js");
/* harmony import */ var _factories_test_convolver_node_channel_count_support__WEBPACK_IMPORTED_MODULE_152__ = __webpack_require__(/*! ./factories/test-convolver-node-channel-count-support */ "./node_modules/standardized-audio-context/build/es2019/factories/test-convolver-node-channel-count-support.js");
/* harmony import */ var _factories_test_is_secure_context_support__WEBPACK_IMPORTED_MODULE_153__ = __webpack_require__(/*! ./factories/test-is-secure-context-support */ "./node_modules/standardized-audio-context/build/es2019/factories/test-is-secure-context-support.js");
/* harmony import */ var _factories_test_media_stream_audio_source_node_media_stream_without_audio_track_support__WEBPACK_IMPORTED_MODULE_154__ = __webpack_require__(/*! ./factories/test-media-stream-audio-source-node-media-stream-without-audio-track-support */ "./node_modules/standardized-audio-context/build/es2019/factories/test-media-stream-audio-source-node-media-stream-without-audio-track-support.js");
/* harmony import */ var _factories_test_offline_audio_context_current_time_support__WEBPACK_IMPORTED_MODULE_155__ = __webpack_require__(/*! ./factories/test-offline-audio-context-current-time-support */ "./node_modules/standardized-audio-context/build/es2019/factories/test-offline-audio-context-current-time-support.js");
/* harmony import */ var _factories_test_stereo_panner_node_default_value_support__WEBPACK_IMPORTED_MODULE_156__ = __webpack_require__(/*! ./factories/test-stereo-panner-node-default-value-support */ "./node_modules/standardized-audio-context/build/es2019/factories/test-stereo-panner-node-default-value-support.js");
/* harmony import */ var _factories_unknown_error__WEBPACK_IMPORTED_MODULE_157__ = __webpack_require__(/*! ./factories/unknown-error */ "./node_modules/standardized-audio-context/build/es2019/factories/unknown-error.js");
/* harmony import */ var _factories_wave_shaper_node_constructor__WEBPACK_IMPORTED_MODULE_158__ = __webpack_require__(/*! ./factories/wave-shaper-node-constructor */ "./node_modules/standardized-audio-context/build/es2019/factories/wave-shaper-node-constructor.js");
/* harmony import */ var _factories_wave_shaper_node_renderer_factory__WEBPACK_IMPORTED_MODULE_159__ = __webpack_require__(/*! ./factories/wave-shaper-node-renderer-factory */ "./node_modules/standardized-audio-context/build/es2019/factories/wave-shaper-node-renderer-factory.js");
/* harmony import */ var _factories_window__WEBPACK_IMPORTED_MODULE_160__ = __webpack_require__(/*! ./factories/window */ "./node_modules/standardized-audio-context/build/es2019/factories/window.js");
/* harmony import */ var _factories_wrap_audio_buffer_copy_channel_methods__WEBPACK_IMPORTED_MODULE_161__ = __webpack_require__(/*! ./factories/wrap-audio-buffer-copy-channel-methods */ "./node_modules/standardized-audio-context/build/es2019/factories/wrap-audio-buffer-copy-channel-methods.js");
/* harmony import */ var _factories_wrap_audio_buffer_copy_channel_methods_out_of_bounds__WEBPACK_IMPORTED_MODULE_162__ = __webpack_require__(/*! ./factories/wrap-audio-buffer-copy-channel-methods-out-of-bounds */ "./node_modules/standardized-audio-context/build/es2019/factories/wrap-audio-buffer-copy-channel-methods-out-of-bounds.js");
/* harmony import */ var _factories_wrap_audio_buffer_source_node_stop_method_nullified_buffer__WEBPACK_IMPORTED_MODULE_163__ = __webpack_require__(/*! ./factories/wrap-audio-buffer-source-node-stop-method-nullified-buffer */ "./node_modules/standardized-audio-context/build/es2019/factories/wrap-audio-buffer-source-node-stop-method-nullified-buffer.js");
/* harmony import */ var _factories_wrap_channel_merger_node__WEBPACK_IMPORTED_MODULE_164__ = __webpack_require__(/*! ./factories/wrap-channel-merger-node */ "./node_modules/standardized-audio-context/build/es2019/factories/wrap-channel-merger-node.js");
/* harmony import */ var _globals__WEBPACK_IMPORTED_MODULE_165__ = __webpack_require__(/*! ./globals */ "./node_modules/standardized-audio-context/build/es2019/globals.js");
/* harmony import */ var _helpers_connect_native_audio_node_to_native_audio_node__WEBPACK_IMPORTED_MODULE_166__ = __webpack_require__(/*! ./helpers/connect-native-audio-node-to-native-audio-node */ "./node_modules/standardized-audio-context/build/es2019/helpers/connect-native-audio-node-to-native-audio-node.js");
/* harmony import */ var _helpers_disconnect_native_audio_node_from_native_audio_node__WEBPACK_IMPORTED_MODULE_167__ = __webpack_require__(/*! ./helpers/disconnect-native-audio-node-from-native-audio-node */ "./node_modules/standardized-audio-context/build/es2019/helpers/disconnect-native-audio-node-from-native-audio-node.js");
/* harmony import */ var _helpers_get_audio_node_connections__WEBPACK_IMPORTED_MODULE_168__ = __webpack_require__(/*! ./helpers/get-audio-node-connections */ "./node_modules/standardized-audio-context/build/es2019/helpers/get-audio-node-connections.js");
/* harmony import */ var _helpers_get_audio_param_connections__WEBPACK_IMPORTED_MODULE_169__ = __webpack_require__(/*! ./helpers/get-audio-param-connections */ "./node_modules/standardized-audio-context/build/es2019/helpers/get-audio-param-connections.js");
/* harmony import */ var _helpers_get_event_listeners_of_audio_node__WEBPACK_IMPORTED_MODULE_170__ = __webpack_require__(/*! ./helpers/get-event-listeners-of-audio-node */ "./node_modules/standardized-audio-context/build/es2019/helpers/get-event-listeners-of-audio-node.js");
/* harmony import */ var _helpers_get_native_audio_node__WEBPACK_IMPORTED_MODULE_171__ = __webpack_require__(/*! ./helpers/get-native-audio-node */ "./node_modules/standardized-audio-context/build/es2019/helpers/get-native-audio-node.js");
/* harmony import */ var _helpers_get_native_audio_param__WEBPACK_IMPORTED_MODULE_172__ = __webpack_require__(/*! ./helpers/get-native-audio-param */ "./node_modules/standardized-audio-context/build/es2019/helpers/get-native-audio-param.js");
/* harmony import */ var _helpers_get_value_for_key__WEBPACK_IMPORTED_MODULE_173__ = __webpack_require__(/*! ./helpers/get-value-for-key */ "./node_modules/standardized-audio-context/build/es2019/helpers/get-value-for-key.js");
/* harmony import */ var _helpers_insert_element_in_set__WEBPACK_IMPORTED_MODULE_174__ = __webpack_require__(/*! ./helpers/insert-element-in-set */ "./node_modules/standardized-audio-context/build/es2019/helpers/insert-element-in-set.js");
/* harmony import */ var _helpers_is_active_audio_node__WEBPACK_IMPORTED_MODULE_175__ = __webpack_require__(/*! ./helpers/is-active-audio-node */ "./node_modules/standardized-audio-context/build/es2019/helpers/is-active-audio-node.js");
/* harmony import */ var _helpers_is_dc_curve__WEBPACK_IMPORTED_MODULE_176__ = __webpack_require__(/*! ./helpers/is-dc-curve */ "./node_modules/standardized-audio-context/build/es2019/helpers/is-dc-curve.js");
/* harmony import */ var _helpers_is_part_of_a_cycle__WEBPACK_IMPORTED_MODULE_177__ = __webpack_require__(/*! ./helpers/is-part-of-a-cycle */ "./node_modules/standardized-audio-context/build/es2019/helpers/is-part-of-a-cycle.js");
/* harmony import */ var _helpers_is_passive_audio_node__WEBPACK_IMPORTED_MODULE_178__ = __webpack_require__(/*! ./helpers/is-passive-audio-node */ "./node_modules/standardized-audio-context/build/es2019/helpers/is-passive-audio-node.js");
/* harmony import */ var _helpers_overwrite_accessors__WEBPACK_IMPORTED_MODULE_179__ = __webpack_require__(/*! ./helpers/overwrite-accessors */ "./node_modules/standardized-audio-context/build/es2019/helpers/overwrite-accessors.js");
/* harmony import */ var _helpers_pick_element_from_set__WEBPACK_IMPORTED_MODULE_180__ = __webpack_require__(/*! ./helpers/pick-element-from-set */ "./node_modules/standardized-audio-context/build/es2019/helpers/pick-element-from-set.js");
/* harmony import */ var _helpers_sanitize_audio_worklet_node_options__WEBPACK_IMPORTED_MODULE_181__ = __webpack_require__(/*! ./helpers/sanitize-audio-worklet-node-options */ "./node_modules/standardized-audio-context/build/es2019/helpers/sanitize-audio-worklet-node-options.js");
/* harmony import */ var _helpers_sanitize_channel_splitter_options__WEBPACK_IMPORTED_MODULE_182__ = __webpack_require__(/*! ./helpers/sanitize-channel-splitter-options */ "./node_modules/standardized-audio-context/build/es2019/helpers/sanitize-channel-splitter-options.js");
/* harmony import */ var _helpers_sanitize_periodic_wave_options__WEBPACK_IMPORTED_MODULE_183__ = __webpack_require__(/*! ./helpers/sanitize-periodic-wave-options */ "./node_modules/standardized-audio-context/build/es2019/helpers/sanitize-periodic-wave-options.js");
/* harmony import */ var _helpers_test_audio_buffer_copy_channel_methods_out_of_bounds_support__WEBPACK_IMPORTED_MODULE_184__ = __webpack_require__(/*! ./helpers/test-audio-buffer-copy-channel-methods-out-of-bounds-support */ "./node_modules/standardized-audio-context/build/es2019/helpers/test-audio-buffer-copy-channel-methods-out-of-bounds-support.js");
/* harmony import */ var _helpers_test_audio_buffer_source_node_start_method_consecutive_calls_support__WEBPACK_IMPORTED_MODULE_185__ = __webpack_require__(/*! ./helpers/test-audio-buffer-source-node-start-method-consecutive-calls-support */ "./node_modules/standardized-audio-context/build/es2019/helpers/test-audio-buffer-source-node-start-method-consecutive-calls-support.js");
/* harmony import */ var _helpers_test_audio_buffer_source_node_start_method_offset_clamping_support__WEBPACK_IMPORTED_MODULE_186__ = __webpack_require__(/*! ./helpers/test-audio-buffer-source-node-start-method-offset-clamping-support */ "./node_modules/standardized-audio-context/build/es2019/helpers/test-audio-buffer-source-node-start-method-offset-clamping-support.js");
/* harmony import */ var _helpers_test_audio_buffer_source_node_stop_method_nullified_buffer_support__WEBPACK_IMPORTED_MODULE_187__ = __webpack_require__(/*! ./helpers/test-audio-buffer-source-node-stop-method-nullified-buffer-support */ "./node_modules/standardized-audio-context/build/es2019/helpers/test-audio-buffer-source-node-stop-method-nullified-buffer-support.js");
/* harmony import */ var _helpers_test_audio_scheduled_source_node_start_method_negative_parameters_support__WEBPACK_IMPORTED_MODULE_188__ = __webpack_require__(/*! ./helpers/test-audio-scheduled-source-node-start-method-negative-parameters-support */ "./node_modules/standardized-audio-context/build/es2019/helpers/test-audio-scheduled-source-node-start-method-negative-parameters-support.js");
/* harmony import */ var _helpers_test_audio_scheduled_source_node_stop_method_consecutive_calls_support__WEBPACK_IMPORTED_MODULE_189__ = __webpack_require__(/*! ./helpers/test-audio-scheduled-source-node-stop-method-consecutive-calls-support */ "./node_modules/standardized-audio-context/build/es2019/helpers/test-audio-scheduled-source-node-stop-method-consecutive-calls-support.js");
/* harmony import */ var _helpers_test_audio_scheduled_source_node_stop_method_negative_parameters_support__WEBPACK_IMPORTED_MODULE_190__ = __webpack_require__(/*! ./helpers/test-audio-scheduled-source-node-stop-method-negative-parameters-support */ "./node_modules/standardized-audio-context/build/es2019/helpers/test-audio-scheduled-source-node-stop-method-negative-parameters-support.js");
/* harmony import */ var _helpers_test_dom_exception_constructor_support__WEBPACK_IMPORTED_MODULE_191__ = __webpack_require__(/*! ./helpers/test-dom-exception-constructor-support */ "./node_modules/standardized-audio-context/build/es2019/helpers/test-dom-exception-constructor-support.js");
/* harmony import */ var _helpers_test_promise_support__WEBPACK_IMPORTED_MODULE_192__ = __webpack_require__(/*! ./helpers/test-promise-support */ "./node_modules/standardized-audio-context/build/es2019/helpers/test-promise-support.js");
/* harmony import */ var _helpers_test_transferables_support__WEBPACK_IMPORTED_MODULE_193__ = __webpack_require__(/*! ./helpers/test-transferables-support */ "./node_modules/standardized-audio-context/build/es2019/helpers/test-transferables-support.js");
/* harmony import */ var _helpers_wrap_audio_buffer_source_node_start_method_offset_clamping__WEBPACK_IMPORTED_MODULE_194__ = __webpack_require__(/*! ./helpers/wrap-audio-buffer-source-node-start-method-offset-clamping */ "./node_modules/standardized-audio-context/build/es2019/helpers/wrap-audio-buffer-source-node-start-method-offset-clamping.js");
/* harmony import */ var _helpers_wrap_audio_scheduled_source_node_stop_method_consecutive_calls__WEBPACK_IMPORTED_MODULE_195__ = __webpack_require__(/*! ./helpers/wrap-audio-scheduled-source-node-stop-method-consecutive-calls */ "./node_modules/standardized-audio-context/build/es2019/helpers/wrap-audio-scheduled-source-node-stop-method-consecutive-calls.js");
/* harmony import */ var _helpers_wrap_event_listener__WEBPACK_IMPORTED_MODULE_196__ = __webpack_require__(/*! ./helpers/wrap-event-listener */ "./node_modules/standardized-audio-context/build/es2019/helpers/wrap-event-listener.js");
/* harmony import */ var _interfaces_index__WEBPACK_IMPORTED_MODULE_197__ = __webpack_require__(/*! ./interfaces/index */ "./node_modules/standardized-audio-context/build/es2019/interfaces/index.js");
/* harmony import */ var _types_index__WEBPACK_IMPORTED_MODULE_198__ = __webpack_require__(/*! ./types/index */ "./node_modules/standardized-audio-context/build/es2019/types/index.js");
;




































































































































































































/*
 * @todo Explicitly referencing the barrel file seems to be necessary when enabling the
 * isolatedModules compiler option.
 */


const addActiveInputConnectionToAudioNode = (0,_factories_add_active_input_connection_to_audio_node__WEBPACK_IMPORTED_MODULE_2__.createAddActiveInputConnectionToAudioNode)(_helpers_insert_element_in_set__WEBPACK_IMPORTED_MODULE_174__.insertElementInSet);
const addPassiveInputConnectionToAudioNode = (0,_factories_add_passive_input_connection_to_audio_node__WEBPACK_IMPORTED_MODULE_7__.createAddPassiveInputConnectionToAudioNode)(_helpers_insert_element_in_set__WEBPACK_IMPORTED_MODULE_174__.insertElementInSet);
const deleteActiveInputConnectionToAudioNode = (0,_factories_delete_active_input_connection_to_audio_node__WEBPACK_IMPORTED_MODULE_46__.createDeleteActiveInputConnectionToAudioNode)(_helpers_pick_element_from_set__WEBPACK_IMPORTED_MODULE_180__.pickElementFromSet);
const audioNodeTailTimeStore = new WeakMap();
const getAudioNodeTailTime = (0,_factories_get_audio_node_tail_time__WEBPACK_IMPORTED_MODULE_61__.createGetAudioNodeTailTime)(audioNodeTailTimeStore);
const cacheTestResult = (0,_factories_cache_test_result__WEBPACK_IMPORTED_MODULE_27__.createCacheTestResult)(new Map(), new WeakMap());
const window = (0,_factories_window__WEBPACK_IMPORTED_MODULE_160__.createWindow)();
const createNativeAnalyserNode = (0,_factories_native_analyser_node_factory__WEBPACK_IMPORTED_MODULE_92__.createNativeAnalyserNodeFactory)(cacheTestResult, _factories_index_size_error__WEBPACK_IMPORTED_MODULE_70__.createIndexSizeError);
const getAudioNodeRenderer = (0,_factories_get_audio_node_renderer__WEBPACK_IMPORTED_MODULE_60__.createGetAudioNodeRenderer)(_helpers_get_audio_node_connections__WEBPACK_IMPORTED_MODULE_168__.getAudioNodeConnections);
const renderInputsOfAudioNode = (0,_factories_render_inputs_of_audio_node__WEBPACK_IMPORTED_MODULE_133__.createRenderInputsOfAudioNode)(_helpers_get_audio_node_connections__WEBPACK_IMPORTED_MODULE_168__.getAudioNodeConnections, getAudioNodeRenderer, _helpers_is_part_of_a_cycle__WEBPACK_IMPORTED_MODULE_177__.isPartOfACycle);
const createAnalyserNodeRenderer = (0,_factories_analyser_node_renderer_factory__WEBPACK_IMPORTED_MODULE_11__.createAnalyserNodeRendererFactory)(createNativeAnalyserNode, _helpers_get_native_audio_node__WEBPACK_IMPORTED_MODULE_171__.getNativeAudioNode, renderInputsOfAudioNode);
const getNativeContext = (0,_factories_get_native_context__WEBPACK_IMPORTED_MODULE_64__.createGetNativeContext)(_globals__WEBPACK_IMPORTED_MODULE_165__.CONTEXT_STORE);
const nativeOfflineAudioContextConstructor = (0,_factories_native_offline_audio_context_constructor__WEBPACK_IMPORTED_MODULE_115__.createNativeOfflineAudioContextConstructor)(window);
const isNativeOfflineAudioContext = (0,_factories_is_native_offline_audio_context__WEBPACK_IMPORTED_MODULE_81__.createIsNativeOfflineAudioContext)(nativeOfflineAudioContextConstructor);
const audioParamAudioNodeStore = new WeakMap();
const eventTargetConstructor = (0,_factories_event_target_constructor__WEBPACK_IMPORTED_MODULE_54__.createEventTargetConstructor)(_helpers_wrap_event_listener__WEBPACK_IMPORTED_MODULE_196__.wrapEventListener);
const nativeAudioContextConstructor = (0,_factories_native_audio_context_constructor__WEBPACK_IMPORTED_MODULE_95__.createNativeAudioContextConstructor)(window);
const isNativeAudioContext = (0,_factories_is_native_audio_context__WEBPACK_IMPORTED_MODULE_77__.createIsNativeAudioContext)(nativeAudioContextConstructor);
const isNativeAudioNode = (0,_factories_is_native_audio_node__WEBPACK_IMPORTED_MODULE_78__.createIsNativeAudioNode)(window);
const isNativeAudioParam = (0,_factories_is_native_audio_param__WEBPACK_IMPORTED_MODULE_79__.createIsNativeAudioParam)(window);
const audioNodeConstructor = (0,_factories_audio_node_constructor__WEBPACK_IMPORTED_MODULE_19__.createAudioNodeConstructor)((0,_factories_add_audio_node_connections__WEBPACK_IMPORTED_MODULE_3__.createAddAudioNodeConnections)(_globals__WEBPACK_IMPORTED_MODULE_165__.AUDIO_NODE_CONNECTIONS_STORE), (0,_factories_add_connection_to_audio_node__WEBPACK_IMPORTED_MODULE_6__.createAddConnectionToAudioNode)(addActiveInputConnectionToAudioNode, addPassiveInputConnectionToAudioNode, _helpers_connect_native_audio_node_to_native_audio_node__WEBPACK_IMPORTED_MODULE_166__.connectNativeAudioNodeToNativeAudioNode, deleteActiveInputConnectionToAudioNode, _helpers_disconnect_native_audio_node_from_native_audio_node__WEBPACK_IMPORTED_MODULE_167__.disconnectNativeAudioNodeFromNativeAudioNode, _helpers_get_audio_node_connections__WEBPACK_IMPORTED_MODULE_168__.getAudioNodeConnections, getAudioNodeTailTime, _helpers_get_event_listeners_of_audio_node__WEBPACK_IMPORTED_MODULE_170__.getEventListenersOfAudioNode, _helpers_get_native_audio_node__WEBPACK_IMPORTED_MODULE_171__.getNativeAudioNode, _helpers_insert_element_in_set__WEBPACK_IMPORTED_MODULE_174__.insertElementInSet, _helpers_is_active_audio_node__WEBPACK_IMPORTED_MODULE_175__.isActiveAudioNode, _helpers_is_part_of_a_cycle__WEBPACK_IMPORTED_MODULE_177__.isPartOfACycle, _helpers_is_passive_audio_node__WEBPACK_IMPORTED_MODULE_178__.isPassiveAudioNode), cacheTestResult, (0,_factories_increment_cycle_counter_factory__WEBPACK_IMPORTED_MODULE_69__.createIncrementCycleCounterFactory)(_globals__WEBPACK_IMPORTED_MODULE_165__.CYCLE_COUNTERS, _helpers_disconnect_native_audio_node_from_native_audio_node__WEBPACK_IMPORTED_MODULE_167__.disconnectNativeAudioNodeFromNativeAudioNode, _helpers_get_audio_node_connections__WEBPACK_IMPORTED_MODULE_168__.getAudioNodeConnections, _helpers_get_native_audio_node__WEBPACK_IMPORTED_MODULE_171__.getNativeAudioNode, _helpers_get_native_audio_param__WEBPACK_IMPORTED_MODULE_172__.getNativeAudioParam, _helpers_is_active_audio_node__WEBPACK_IMPORTED_MODULE_175__.isActiveAudioNode), _factories_index_size_error__WEBPACK_IMPORTED_MODULE_70__.createIndexSizeError, _factories_invalid_access_error__WEBPACK_IMPORTED_MODULE_71__.createInvalidAccessError, _factories_not_supported_error__WEBPACK_IMPORTED_MODULE_125__.createNotSupportedError, (0,_factories_decrement_cycle_counter__WEBPACK_IMPORTED_MODULE_43__.createDecrementCycleCounter)(_helpers_connect_native_audio_node_to_native_audio_node__WEBPACK_IMPORTED_MODULE_166__.connectNativeAudioNodeToNativeAudioNode, _globals__WEBPACK_IMPORTED_MODULE_165__.CYCLE_COUNTERS, _helpers_get_audio_node_connections__WEBPACK_IMPORTED_MODULE_168__.getAudioNodeConnections, _helpers_get_native_audio_node__WEBPACK_IMPORTED_MODULE_171__.getNativeAudioNode, _helpers_get_native_audio_param__WEBPACK_IMPORTED_MODULE_172__.getNativeAudioParam, getNativeContext, _helpers_is_active_audio_node__WEBPACK_IMPORTED_MODULE_175__.isActiveAudioNode, isNativeOfflineAudioContext), (0,_factories_detect_cycles__WEBPACK_IMPORTED_MODULE_48__.createDetectCycles)(audioParamAudioNodeStore, _helpers_get_audio_node_connections__WEBPACK_IMPORTED_MODULE_168__.getAudioNodeConnections, _helpers_get_value_for_key__WEBPACK_IMPORTED_MODULE_173__.getValueForKey), eventTargetConstructor, getNativeContext, isNativeAudioContext, isNativeAudioNode, isNativeAudioParam, isNativeOfflineAudioContext);
const analyserNodeConstructor = (0,_factories_analyser_node_constructor__WEBPACK_IMPORTED_MODULE_10__.createAnalyserNodeConstructor)(audioNodeConstructor, createAnalyserNodeRenderer, _factories_index_size_error__WEBPACK_IMPORTED_MODULE_70__.createIndexSizeError, createNativeAnalyserNode, getNativeContext, isNativeOfflineAudioContext);

const audioBufferStore = new WeakSet();
const nativeAudioBufferConstructor = (0,_factories_native_audio_buffer_constructor__WEBPACK_IMPORTED_MODULE_93__.createNativeAudioBufferConstructor)(window);
const convertNumberToUnsignedLong = (0,_factories_convert_number_to_unsigned_long__WEBPACK_IMPORTED_MODULE_37__.createConvertNumberToUnsignedLong)(new Uint32Array(1));
const wrapAudioBufferCopyChannelMethods = (0,_factories_wrap_audio_buffer_copy_channel_methods__WEBPACK_IMPORTED_MODULE_161__.createWrapAudioBufferCopyChannelMethods)(convertNumberToUnsignedLong, _factories_index_size_error__WEBPACK_IMPORTED_MODULE_70__.createIndexSizeError);
const wrapAudioBufferCopyChannelMethodsOutOfBounds = (0,_factories_wrap_audio_buffer_copy_channel_methods_out_of_bounds__WEBPACK_IMPORTED_MODULE_162__.createWrapAudioBufferCopyChannelMethodsOutOfBounds)(convertNumberToUnsignedLong);
const audioBufferConstructor = (0,_factories_audio_buffer_constructor__WEBPACK_IMPORTED_MODULE_12__.createAudioBufferConstructor)(audioBufferStore, cacheTestResult, _factories_not_supported_error__WEBPACK_IMPORTED_MODULE_125__.createNotSupportedError, nativeAudioBufferConstructor, nativeOfflineAudioContextConstructor, (0,_factories_test_audio_buffer_constructor_support__WEBPACK_IMPORTED_MODULE_141__.createTestAudioBufferConstructorSupport)(nativeAudioBufferConstructor), wrapAudioBufferCopyChannelMethods, wrapAudioBufferCopyChannelMethodsOutOfBounds);

const addSilentConnection = (0,_factories_add_silent_connection__WEBPACK_IMPORTED_MODULE_8__.createAddSilentConnection)(_factories_native_gain_node__WEBPACK_IMPORTED_MODULE_108__.createNativeGainNode);
const renderInputsOfAudioParam = (0,_factories_render_inputs_of_audio_param__WEBPACK_IMPORTED_MODULE_134__.createRenderInputsOfAudioParam)(getAudioNodeRenderer, _helpers_get_audio_param_connections__WEBPACK_IMPORTED_MODULE_169__.getAudioParamConnections, _helpers_is_part_of_a_cycle__WEBPACK_IMPORTED_MODULE_177__.isPartOfACycle);
const connectAudioParam = (0,_factories_connect_audio_param__WEBPACK_IMPORTED_MODULE_32__.createConnectAudioParam)(renderInputsOfAudioParam);
const createNativeAudioBufferSourceNode = (0,_factories_native_audio_buffer_source_node_factory__WEBPACK_IMPORTED_MODULE_94__.createNativeAudioBufferSourceNodeFactory)(addSilentConnection, cacheTestResult, _helpers_test_audio_buffer_source_node_start_method_consecutive_calls_support__WEBPACK_IMPORTED_MODULE_185__.testAudioBufferSourceNodeStartMethodConsecutiveCallsSupport, _helpers_test_audio_buffer_source_node_start_method_offset_clamping_support__WEBPACK_IMPORTED_MODULE_186__.testAudioBufferSourceNodeStartMethodOffsetClampingSupport, _helpers_test_audio_buffer_source_node_stop_method_nullified_buffer_support__WEBPACK_IMPORTED_MODULE_187__.testAudioBufferSourceNodeStopMethodNullifiedBufferSupport, _helpers_test_audio_scheduled_source_node_start_method_negative_parameters_support__WEBPACK_IMPORTED_MODULE_188__.testAudioScheduledSourceNodeStartMethodNegativeParametersSupport, _helpers_test_audio_scheduled_source_node_stop_method_consecutive_calls_support__WEBPACK_IMPORTED_MODULE_189__.testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport, _helpers_test_audio_scheduled_source_node_stop_method_negative_parameters_support__WEBPACK_IMPORTED_MODULE_190__.testAudioScheduledSourceNodeStopMethodNegativeParametersSupport, _helpers_wrap_audio_buffer_source_node_start_method_offset_clamping__WEBPACK_IMPORTED_MODULE_194__.wrapAudioBufferSourceNodeStartMethodOffsetClamping, (0,_factories_wrap_audio_buffer_source_node_stop_method_nullified_buffer__WEBPACK_IMPORTED_MODULE_163__.createWrapAudioBufferSourceNodeStopMethodNullifiedBuffer)(_helpers_overwrite_accessors__WEBPACK_IMPORTED_MODULE_179__.overwriteAccessors), _helpers_wrap_audio_scheduled_source_node_stop_method_consecutive_calls__WEBPACK_IMPORTED_MODULE_195__.wrapAudioScheduledSourceNodeStopMethodConsecutiveCalls);
const renderAutomation = (0,_factories_render_automation__WEBPACK_IMPORTED_MODULE_132__.createRenderAutomation)((0,_factories_get_audio_param_renderer__WEBPACK_IMPORTED_MODULE_62__.createGetAudioParamRenderer)(_helpers_get_audio_param_connections__WEBPACK_IMPORTED_MODULE_169__.getAudioParamConnections), renderInputsOfAudioParam);
const createAudioBufferSourceNodeRenderer = (0,_factories_audio_buffer_source_node_renderer_factory__WEBPACK_IMPORTED_MODULE_14__.createAudioBufferSourceNodeRendererFactory)(connectAudioParam, createNativeAudioBufferSourceNode, _helpers_get_native_audio_node__WEBPACK_IMPORTED_MODULE_171__.getNativeAudioNode, renderAutomation, renderInputsOfAudioNode);
const createAudioParam = (0,_factories_audio_param_factory__WEBPACK_IMPORTED_MODULE_20__.createAudioParamFactory)((0,_factories_add_audio_param_connections__WEBPACK_IMPORTED_MODULE_4__.createAddAudioParamConnections)(_globals__WEBPACK_IMPORTED_MODULE_165__.AUDIO_PARAM_CONNECTIONS_STORE), audioParamAudioNodeStore, _globals__WEBPACK_IMPORTED_MODULE_165__.AUDIO_PARAM_STORE, _factories_audio_param_renderer__WEBPACK_IMPORTED_MODULE_21__.createAudioParamRenderer, automation_events__WEBPACK_IMPORTED_MODULE_0__.createCancelAndHoldAutomationEvent, automation_events__WEBPACK_IMPORTED_MODULE_0__.createCancelScheduledValuesAutomationEvent, automation_events__WEBPACK_IMPORTED_MODULE_0__.createExponentialRampToValueAutomationEvent, automation_events__WEBPACK_IMPORTED_MODULE_0__.createLinearRampToValueAutomationEvent, automation_events__WEBPACK_IMPORTED_MODULE_0__.createSetTargetAutomationEvent, automation_events__WEBPACK_IMPORTED_MODULE_0__.createSetValueAutomationEvent, automation_events__WEBPACK_IMPORTED_MODULE_0__.createSetValueCurveAutomationEvent, nativeAudioContextConstructor);
const audioBufferSourceNodeConstructor = (0,_factories_audio_buffer_source_node_constructor__WEBPACK_IMPORTED_MODULE_13__.createAudioBufferSourceNodeConstructor)(audioNodeConstructor, createAudioBufferSourceNodeRenderer, createAudioParam, _factories_invalid_state_error__WEBPACK_IMPORTED_MODULE_72__.createInvalidStateError, createNativeAudioBufferSourceNode, getNativeContext, isNativeOfflineAudioContext, _helpers_wrap_event_listener__WEBPACK_IMPORTED_MODULE_196__.wrapEventListener);

const audioDestinationNodeConstructor = (0,_factories_audio_destination_node_constructor__WEBPACK_IMPORTED_MODULE_16__.createAudioDestinationNodeConstructor)(audioNodeConstructor, _factories_audio_destination_node_renderer_factory__WEBPACK_IMPORTED_MODULE_17__.createAudioDestinationNodeRenderer, _factories_index_size_error__WEBPACK_IMPORTED_MODULE_70__.createIndexSizeError, _factories_invalid_state_error__WEBPACK_IMPORTED_MODULE_72__.createInvalidStateError, (0,_factories_native_audio_destination_node__WEBPACK_IMPORTED_MODULE_96__.createNativeAudioDestinationNodeFactory)(_factories_native_gain_node__WEBPACK_IMPORTED_MODULE_108__.createNativeGainNode, _helpers_overwrite_accessors__WEBPACK_IMPORTED_MODULE_179__.overwriteAccessors), getNativeContext, isNativeOfflineAudioContext, renderInputsOfAudioNode);
const createBiquadFilterNodeRenderer = (0,_factories_biquad_filter_node_renderer_factory__WEBPACK_IMPORTED_MODULE_26__.createBiquadFilterNodeRendererFactory)(connectAudioParam, _factories_native_biquad_filter_node__WEBPACK_IMPORTED_MODULE_100__.createNativeBiquadFilterNode, _helpers_get_native_audio_node__WEBPACK_IMPORTED_MODULE_171__.getNativeAudioNode, renderAutomation, renderInputsOfAudioNode);
const setAudioNodeTailTime = (0,_factories_set_audio_node_tail_time__WEBPACK_IMPORTED_MODULE_137__.createSetAudioNodeTailTime)(audioNodeTailTimeStore);
const biquadFilterNodeConstructor = (0,_factories_biquad_filter_node_constructor__WEBPACK_IMPORTED_MODULE_25__.createBiquadFilterNodeConstructor)(audioNodeConstructor, createAudioParam, createBiquadFilterNodeRenderer, _factories_invalid_access_error__WEBPACK_IMPORTED_MODULE_71__.createInvalidAccessError, _factories_native_biquad_filter_node__WEBPACK_IMPORTED_MODULE_100__.createNativeBiquadFilterNode, getNativeContext, isNativeOfflineAudioContext, setAudioNodeTailTime);
const monitorConnections = (0,_factories_monitor_connections__WEBPACK_IMPORTED_MODULE_91__.createMonitorConnections)(_helpers_insert_element_in_set__WEBPACK_IMPORTED_MODULE_174__.insertElementInSet, isNativeAudioNode);
const wrapChannelMergerNode = (0,_factories_wrap_channel_merger_node__WEBPACK_IMPORTED_MODULE_164__.createWrapChannelMergerNode)(_factories_invalid_state_error__WEBPACK_IMPORTED_MODULE_72__.createInvalidStateError, monitorConnections);
const createNativeChannelMergerNode = (0,_factories_native_channel_merger_node_factory__WEBPACK_IMPORTED_MODULE_101__.createNativeChannelMergerNodeFactory)(nativeAudioContextConstructor, wrapChannelMergerNode);
const createChannelMergerNodeRenderer = (0,_factories_channel_merger_node_renderer_factory__WEBPACK_IMPORTED_MODULE_29__.createChannelMergerNodeRendererFactory)(createNativeChannelMergerNode, _helpers_get_native_audio_node__WEBPACK_IMPORTED_MODULE_171__.getNativeAudioNode, renderInputsOfAudioNode);
const channelMergerNodeConstructor = (0,_factories_channel_merger_node_constructor__WEBPACK_IMPORTED_MODULE_28__.createChannelMergerNodeConstructor)(audioNodeConstructor, createChannelMergerNodeRenderer, createNativeChannelMergerNode, getNativeContext, isNativeOfflineAudioContext);
const createChannelSplitterNodeRenderer = (0,_factories_channel_splitter_node_renderer_factory__WEBPACK_IMPORTED_MODULE_31__.createChannelSplitterNodeRendererFactory)(_factories_native_channel_splitter_node__WEBPACK_IMPORTED_MODULE_102__.createNativeChannelSplitterNode, _helpers_get_native_audio_node__WEBPACK_IMPORTED_MODULE_171__.getNativeAudioNode, renderInputsOfAudioNode);
const channelSplitterNodeConstructor = (0,_factories_channel_splitter_node_constructor__WEBPACK_IMPORTED_MODULE_30__.createChannelSplitterNodeConstructor)(audioNodeConstructor, createChannelSplitterNodeRenderer, _factories_native_channel_splitter_node__WEBPACK_IMPORTED_MODULE_102__.createNativeChannelSplitterNode, getNativeContext, isNativeOfflineAudioContext, _helpers_sanitize_channel_splitter_options__WEBPACK_IMPORTED_MODULE_182__.sanitizeChannelSplitterOptions);
const createNativeConstantSourceNodeFaker = (0,_factories_native_constant_source_node_faker_factory__WEBPACK_IMPORTED_MODULE_104__.createNativeConstantSourceNodeFakerFactory)(addSilentConnection, createNativeAudioBufferSourceNode, _factories_native_gain_node__WEBPACK_IMPORTED_MODULE_108__.createNativeGainNode, monitorConnections);
const createNativeConstantSourceNode = (0,_factories_native_constant_source_node_factory__WEBPACK_IMPORTED_MODULE_103__.createNativeConstantSourceNodeFactory)(addSilentConnection, cacheTestResult, createNativeConstantSourceNodeFaker, _helpers_test_audio_scheduled_source_node_start_method_negative_parameters_support__WEBPACK_IMPORTED_MODULE_188__.testAudioScheduledSourceNodeStartMethodNegativeParametersSupport, _helpers_test_audio_scheduled_source_node_stop_method_negative_parameters_support__WEBPACK_IMPORTED_MODULE_190__.testAudioScheduledSourceNodeStopMethodNegativeParametersSupport);
const createConstantSourceNodeRenderer = (0,_factories_constant_source_node_renderer_factory__WEBPACK_IMPORTED_MODULE_36__.createConstantSourceNodeRendererFactory)(connectAudioParam, createNativeConstantSourceNode, _helpers_get_native_audio_node__WEBPACK_IMPORTED_MODULE_171__.getNativeAudioNode, renderAutomation, renderInputsOfAudioNode);
const constantSourceNodeConstructor = (0,_factories_constant_source_node_constructor__WEBPACK_IMPORTED_MODULE_35__.createConstantSourceNodeConstructor)(audioNodeConstructor, createAudioParam, createConstantSourceNodeRenderer, createNativeConstantSourceNode, getNativeContext, isNativeOfflineAudioContext, _helpers_wrap_event_listener__WEBPACK_IMPORTED_MODULE_196__.wrapEventListener);
const createNativeConvolverNode = (0,_factories_native_convolver_node_factory__WEBPACK_IMPORTED_MODULE_105__.createNativeConvolverNodeFactory)(_factories_not_supported_error__WEBPACK_IMPORTED_MODULE_125__.createNotSupportedError, _helpers_overwrite_accessors__WEBPACK_IMPORTED_MODULE_179__.overwriteAccessors);
const createConvolverNodeRenderer = (0,_factories_convolver_node_renderer_factory__WEBPACK_IMPORTED_MODULE_39__.createConvolverNodeRendererFactory)(createNativeConvolverNode, _helpers_get_native_audio_node__WEBPACK_IMPORTED_MODULE_171__.getNativeAudioNode, renderInputsOfAudioNode);
const convolverNodeConstructor = (0,_factories_convolver_node_constructor__WEBPACK_IMPORTED_MODULE_38__.createConvolverNodeConstructor)(audioNodeConstructor, createConvolverNodeRenderer, createNativeConvolverNode, getNativeContext, isNativeOfflineAudioContext, setAudioNodeTailTime);
const createDelayNodeRenderer = (0,_factories_delay_node_renderer_factory__WEBPACK_IMPORTED_MODULE_45__.createDelayNodeRendererFactory)(connectAudioParam, _factories_native_delay_node__WEBPACK_IMPORTED_MODULE_106__.createNativeDelayNode, _helpers_get_native_audio_node__WEBPACK_IMPORTED_MODULE_171__.getNativeAudioNode, renderAutomation, renderInputsOfAudioNode);
const delayNodeConstructor = (0,_factories_delay_node_constructor__WEBPACK_IMPORTED_MODULE_44__.createDelayNodeConstructor)(audioNodeConstructor, createAudioParam, createDelayNodeRenderer, _factories_native_delay_node__WEBPACK_IMPORTED_MODULE_106__.createNativeDelayNode, getNativeContext, isNativeOfflineAudioContext, setAudioNodeTailTime);
const createNativeDynamicsCompressorNode = (0,_factories_native_dynamics_compressor_node_factory__WEBPACK_IMPORTED_MODULE_107__.createNativeDynamicsCompressorNodeFactory)(_factories_not_supported_error__WEBPACK_IMPORTED_MODULE_125__.createNotSupportedError);
const createDynamicsCompressorNodeRenderer = (0,_factories_dynamics_compressor_node_renderer_factory__WEBPACK_IMPORTED_MODULE_51__.createDynamicsCompressorNodeRendererFactory)(connectAudioParam, createNativeDynamicsCompressorNode, _helpers_get_native_audio_node__WEBPACK_IMPORTED_MODULE_171__.getNativeAudioNode, renderAutomation, renderInputsOfAudioNode);
const dynamicsCompressorNodeConstructor = (0,_factories_dynamics_compressor_node_constructor__WEBPACK_IMPORTED_MODULE_50__.createDynamicsCompressorNodeConstructor)(audioNodeConstructor, createAudioParam, createDynamicsCompressorNodeRenderer, createNativeDynamicsCompressorNode, _factories_not_supported_error__WEBPACK_IMPORTED_MODULE_125__.createNotSupportedError, getNativeContext, isNativeOfflineAudioContext, setAudioNodeTailTime);
const createGainNodeRenderer = (0,_factories_gain_node_renderer_factory__WEBPACK_IMPORTED_MODULE_58__.createGainNodeRendererFactory)(connectAudioParam, _factories_native_gain_node__WEBPACK_IMPORTED_MODULE_108__.createNativeGainNode, _helpers_get_native_audio_node__WEBPACK_IMPORTED_MODULE_171__.getNativeAudioNode, renderAutomation, renderInputsOfAudioNode);
const gainNodeConstructor = (0,_factories_gain_node_constructor__WEBPACK_IMPORTED_MODULE_57__.createGainNodeConstructor)(audioNodeConstructor, createAudioParam, createGainNodeRenderer, _factories_native_gain_node__WEBPACK_IMPORTED_MODULE_108__.createNativeGainNode, getNativeContext, isNativeOfflineAudioContext);
const createNativeIIRFilterNodeFaker = (0,_factories_native_iir_filter_node_faker_factory__WEBPACK_IMPORTED_MODULE_110__.createNativeIIRFilterNodeFakerFactory)(_factories_invalid_access_error__WEBPACK_IMPORTED_MODULE_71__.createInvalidAccessError, _factories_invalid_state_error__WEBPACK_IMPORTED_MODULE_72__.createInvalidStateError, _factories_native_script_processor_node__WEBPACK_IMPORTED_MODULE_120__.createNativeScriptProcessorNode, _factories_not_supported_error__WEBPACK_IMPORTED_MODULE_125__.createNotSupportedError);
const renderNativeOfflineAudioContext = (0,_factories_render_native_offline_audio_context__WEBPACK_IMPORTED_MODULE_135__.createRenderNativeOfflineAudioContext)(cacheTestResult, _factories_native_gain_node__WEBPACK_IMPORTED_MODULE_108__.createNativeGainNode, _factories_native_script_processor_node__WEBPACK_IMPORTED_MODULE_120__.createNativeScriptProcessorNode, (0,_factories_test_offline_audio_context_current_time_support__WEBPACK_IMPORTED_MODULE_155__.createTestOfflineAudioContextCurrentTimeSupport)(_factories_native_gain_node__WEBPACK_IMPORTED_MODULE_108__.createNativeGainNode, nativeOfflineAudioContextConstructor));
const createIIRFilterNodeRenderer = (0,_factories_iir_filter_node_renderer_factory__WEBPACK_IMPORTED_MODULE_68__.createIIRFilterNodeRendererFactory)(createNativeAudioBufferSourceNode, _helpers_get_native_audio_node__WEBPACK_IMPORTED_MODULE_171__.getNativeAudioNode, nativeOfflineAudioContextConstructor, renderInputsOfAudioNode, renderNativeOfflineAudioContext);
const createNativeIIRFilterNode = (0,_factories_native_iir_filter_node_factory__WEBPACK_IMPORTED_MODULE_109__.createNativeIIRFilterNodeFactory)(createNativeIIRFilterNodeFaker);
const iIRFilterNodeConstructor = (0,_factories_iir_filter_node_constructor__WEBPACK_IMPORTED_MODULE_67__.createIIRFilterNodeConstructor)(audioNodeConstructor, createNativeIIRFilterNode, createIIRFilterNodeRenderer, getNativeContext, isNativeOfflineAudioContext, setAudioNodeTailTime);
const createAudioListener = (0,_factories_audio_listener_factory__WEBPACK_IMPORTED_MODULE_18__.createAudioListenerFactory)(createAudioParam, createNativeChannelMergerNode, createNativeConstantSourceNode, _factories_native_script_processor_node__WEBPACK_IMPORTED_MODULE_120__.createNativeScriptProcessorNode, isNativeOfflineAudioContext);
const unrenderedAudioWorkletNodeStore = new WeakMap();
const minimalBaseAudioContextConstructor = (0,_factories_minimal_base_audio_context_constructor__WEBPACK_IMPORTED_MODULE_89__.createMinimalBaseAudioContextConstructor)(audioDestinationNodeConstructor, createAudioListener, eventTargetConstructor, isNativeOfflineAudioContext, unrenderedAudioWorkletNodeStore, _helpers_wrap_event_listener__WEBPACK_IMPORTED_MODULE_196__.wrapEventListener);
const createNativeOscillatorNode = (0,_factories_native_oscillator_node_factory__WEBPACK_IMPORTED_MODULE_116__.createNativeOscillatorNodeFactory)(addSilentConnection, cacheTestResult, _helpers_test_audio_scheduled_source_node_start_method_negative_parameters_support__WEBPACK_IMPORTED_MODULE_188__.testAudioScheduledSourceNodeStartMethodNegativeParametersSupport, _helpers_test_audio_scheduled_source_node_stop_method_consecutive_calls_support__WEBPACK_IMPORTED_MODULE_189__.testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport, _helpers_test_audio_scheduled_source_node_stop_method_negative_parameters_support__WEBPACK_IMPORTED_MODULE_190__.testAudioScheduledSourceNodeStopMethodNegativeParametersSupport, _helpers_wrap_audio_scheduled_source_node_stop_method_consecutive_calls__WEBPACK_IMPORTED_MODULE_195__.wrapAudioScheduledSourceNodeStopMethodConsecutiveCalls);
const createOscillatorNodeRenderer = (0,_factories_oscillator_node_renderer_factory__WEBPACK_IMPORTED_MODULE_128__.createOscillatorNodeRendererFactory)(connectAudioParam, createNativeOscillatorNode, _helpers_get_native_audio_node__WEBPACK_IMPORTED_MODULE_171__.getNativeAudioNode, renderAutomation, renderInputsOfAudioNode);
const oscillatorNodeConstructor = (0,_factories_oscillator_node_constructor__WEBPACK_IMPORTED_MODULE_127__.createOscillatorNodeConstructor)(audioNodeConstructor, createAudioParam, createNativeOscillatorNode, createOscillatorNodeRenderer, getNativeContext, isNativeOfflineAudioContext, _helpers_wrap_event_listener__WEBPACK_IMPORTED_MODULE_196__.wrapEventListener);
const createConnectedNativeAudioBufferSourceNode = (0,_factories_connected_native_audio_buffer_source_node_factory__WEBPACK_IMPORTED_MODULE_34__.createConnectedNativeAudioBufferSourceNodeFactory)(createNativeAudioBufferSourceNode);
const createNativeWaveShaperNodeFaker = (0,_factories_native_wave_shaper_node_faker_factory__WEBPACK_IMPORTED_MODULE_124__.createNativeWaveShaperNodeFakerFactory)(createConnectedNativeAudioBufferSourceNode, _factories_invalid_state_error__WEBPACK_IMPORTED_MODULE_72__.createInvalidStateError, _factories_native_gain_node__WEBPACK_IMPORTED_MODULE_108__.createNativeGainNode, _helpers_is_dc_curve__WEBPACK_IMPORTED_MODULE_176__.isDCCurve, monitorConnections);
const createNativeWaveShaperNode = (0,_factories_native_wave_shaper_node_factory__WEBPACK_IMPORTED_MODULE_123__.createNativeWaveShaperNodeFactory)(createConnectedNativeAudioBufferSourceNode, _factories_invalid_state_error__WEBPACK_IMPORTED_MODULE_72__.createInvalidStateError, createNativeWaveShaperNodeFaker, _helpers_is_dc_curve__WEBPACK_IMPORTED_MODULE_176__.isDCCurve, monitorConnections, nativeAudioContextConstructor, _helpers_overwrite_accessors__WEBPACK_IMPORTED_MODULE_179__.overwriteAccessors);
const createNativePannerNodeFaker = (0,_factories_native_panner_node_faker_factory__WEBPACK_IMPORTED_MODULE_118__.createNativePannerNodeFakerFactory)(_helpers_connect_native_audio_node_to_native_audio_node__WEBPACK_IMPORTED_MODULE_166__.connectNativeAudioNodeToNativeAudioNode, _factories_invalid_state_error__WEBPACK_IMPORTED_MODULE_72__.createInvalidStateError, createNativeChannelMergerNode, _factories_native_gain_node__WEBPACK_IMPORTED_MODULE_108__.createNativeGainNode, _factories_native_script_processor_node__WEBPACK_IMPORTED_MODULE_120__.createNativeScriptProcessorNode, createNativeWaveShaperNode, _factories_not_supported_error__WEBPACK_IMPORTED_MODULE_125__.createNotSupportedError, _helpers_disconnect_native_audio_node_from_native_audio_node__WEBPACK_IMPORTED_MODULE_167__.disconnectNativeAudioNodeFromNativeAudioNode, monitorConnections);
const createNativePannerNode = (0,_factories_native_panner_node_factory__WEBPACK_IMPORTED_MODULE_117__.createNativePannerNodeFactory)(createNativePannerNodeFaker);
const createPannerNodeRenderer = (0,_factories_panner_node_renderer_factory__WEBPACK_IMPORTED_MODULE_130__.createPannerNodeRendererFactory)(connectAudioParam, createNativeChannelMergerNode, createNativeConstantSourceNode, _factories_native_gain_node__WEBPACK_IMPORTED_MODULE_108__.createNativeGainNode, createNativePannerNode, _helpers_get_native_audio_node__WEBPACK_IMPORTED_MODULE_171__.getNativeAudioNode, nativeOfflineAudioContextConstructor, renderAutomation, renderInputsOfAudioNode, renderNativeOfflineAudioContext);
const pannerNodeConstructor = (0,_factories_panner_node_constructor__WEBPACK_IMPORTED_MODULE_129__.createPannerNodeConstructor)(audioNodeConstructor, createAudioParam, createNativePannerNode, createPannerNodeRenderer, getNativeContext, isNativeOfflineAudioContext, setAudioNodeTailTime);
const createNativePeriodicWave = (0,_factories_native_periodic_wave_factory__WEBPACK_IMPORTED_MODULE_119__.createNativePeriodicWaveFactory)(_factories_index_size_error__WEBPACK_IMPORTED_MODULE_70__.createIndexSizeError);
const periodicWaveConstructor = (0,_factories_periodic_wave_constructor__WEBPACK_IMPORTED_MODULE_131__.createPeriodicWaveConstructor)(createNativePeriodicWave, getNativeContext, new WeakSet(), _helpers_sanitize_periodic_wave_options__WEBPACK_IMPORTED_MODULE_183__.sanitizePeriodicWaveOptions);
const nativeStereoPannerNodeFakerFactory = (0,_factories_native_stereo_panner_node_faker_factory__WEBPACK_IMPORTED_MODULE_122__.createNativeStereoPannerNodeFakerFactory)(createNativeChannelMergerNode, _factories_native_channel_splitter_node__WEBPACK_IMPORTED_MODULE_102__.createNativeChannelSplitterNode, _factories_native_gain_node__WEBPACK_IMPORTED_MODULE_108__.createNativeGainNode, createNativeWaveShaperNode, _factories_not_supported_error__WEBPACK_IMPORTED_MODULE_125__.createNotSupportedError, monitorConnections);
const createNativeStereoPannerNode = (0,_factories_native_stereo_panner_node_factory__WEBPACK_IMPORTED_MODULE_121__.createNativeStereoPannerNodeFactory)(nativeStereoPannerNodeFakerFactory, _factories_not_supported_error__WEBPACK_IMPORTED_MODULE_125__.createNotSupportedError);
const createStereoPannerNodeRenderer = (0,_factories_stereo_panner_node_renderer_factory__WEBPACK_IMPORTED_MODULE_140__.createStereoPannerNodeRendererFactory)(connectAudioParam, createNativeStereoPannerNode, _helpers_get_native_audio_node__WEBPACK_IMPORTED_MODULE_171__.getNativeAudioNode, renderAutomation, renderInputsOfAudioNode);
const stereoPannerNodeConstructor = (0,_factories_stereo_panner_node_constructor__WEBPACK_IMPORTED_MODULE_139__.createStereoPannerNodeConstructor)(audioNodeConstructor, createAudioParam, createNativeStereoPannerNode, createStereoPannerNodeRenderer, getNativeContext, isNativeOfflineAudioContext);
const createWaveShaperNodeRenderer = (0,_factories_wave_shaper_node_renderer_factory__WEBPACK_IMPORTED_MODULE_159__.createWaveShaperNodeRendererFactory)(createNativeWaveShaperNode, _helpers_get_native_audio_node__WEBPACK_IMPORTED_MODULE_171__.getNativeAudioNode, renderInputsOfAudioNode);
const waveShaperNodeConstructor = (0,_factories_wave_shaper_node_constructor__WEBPACK_IMPORTED_MODULE_158__.createWaveShaperNodeConstructor)(audioNodeConstructor, _factories_invalid_state_error__WEBPACK_IMPORTED_MODULE_72__.createInvalidStateError, createNativeWaveShaperNode, createWaveShaperNodeRenderer, getNativeContext, isNativeOfflineAudioContext, setAudioNodeTailTime);
const isSecureContext = (0,_factories_is_secure_context__WEBPACK_IMPORTED_MODULE_82__.createIsSecureContext)(window);
const exposeCurrentFrameAndCurrentTime = (0,_factories_expose_current_frame_and_current_time__WEBPACK_IMPORTED_MODULE_55__.createExposeCurrentFrameAndCurrentTime)(window);
const backupOfflineAudioContextStore = new WeakMap();
const getOrCreateBackupOfflineAudioContext = (0,_factories_get_or_create_backup_offline_audio_context__WEBPACK_IMPORTED_MODULE_65__.createGetOrCreateBackupOfflineAudioContext)(backupOfflineAudioContextStore, nativeOfflineAudioContextConstructor);
const nativeAudioWorkletNodeConstructor = (0,_factories_native_audio_worklet_node_constructor__WEBPACK_IMPORTED_MODULE_97__.createNativeAudioWorkletNodeConstructor)(window);
// The addAudioWorkletModule() function is only available in a SecureContext.
const addAudioWorkletModule = isSecureContext
    ? (0,_factories_add_audio_worklet_module__WEBPACK_IMPORTED_MODULE_5__.createAddAudioWorkletModule)(cacheTestResult, _factories_not_supported_error__WEBPACK_IMPORTED_MODULE_125__.createNotSupportedError, (0,_factories_evaluate_source__WEBPACK_IMPORTED_MODULE_53__.createEvaluateSource)(window), exposeCurrentFrameAndCurrentTime, (0,_factories_fetch_source__WEBPACK_IMPORTED_MODULE_56__.createFetchSource)(_factories_abort_error__WEBPACK_IMPORTED_MODULE_1__.createAbortError), getNativeContext, getOrCreateBackupOfflineAudioContext, isNativeOfflineAudioContext, new WeakMap(), new WeakMap(), (0,_factories_test_audio_worklet_processor_post_message_support__WEBPACK_IMPORTED_MODULE_148__.createTestAudioWorkletProcessorPostMessageSupport)(nativeAudioWorkletNodeConstructor, nativeOfflineAudioContextConstructor), 
    // @todo window is guaranteed to be defined because isSecureContext checks that as well.
    window)
    : undefined;
const isNativeContext = (0,_factories_is_native_context__WEBPACK_IMPORTED_MODULE_80__.createIsNativeContext)(isNativeAudioContext, isNativeOfflineAudioContext);
const decodeAudioData = (0,_factories_decode_audio_data__WEBPACK_IMPORTED_MODULE_42__.createDecodeAudioData)(audioBufferStore, cacheTestResult, _factories_data_clone_error__WEBPACK_IMPORTED_MODULE_41__.createDataCloneError, _factories_encoding_error__WEBPACK_IMPORTED_MODULE_52__.createEncodingError, new WeakSet(), getNativeContext, isNativeContext, _helpers_test_audio_buffer_copy_channel_methods_out_of_bounds_support__WEBPACK_IMPORTED_MODULE_184__.testAudioBufferCopyChannelMethodsOutOfBoundsSupport, _helpers_test_promise_support__WEBPACK_IMPORTED_MODULE_192__.testPromiseSupport, wrapAudioBufferCopyChannelMethods, wrapAudioBufferCopyChannelMethodsOutOfBounds);
const baseAudioContextConstructor = (0,_factories_base_audio_context_constructor__WEBPACK_IMPORTED_MODULE_24__.createBaseAudioContextConstructor)(addAudioWorkletModule, analyserNodeConstructor, audioBufferConstructor, audioBufferSourceNodeConstructor, biquadFilterNodeConstructor, channelMergerNodeConstructor, channelSplitterNodeConstructor, constantSourceNodeConstructor, convolverNodeConstructor, decodeAudioData, delayNodeConstructor, dynamicsCompressorNodeConstructor, gainNodeConstructor, iIRFilterNodeConstructor, minimalBaseAudioContextConstructor, oscillatorNodeConstructor, pannerNodeConstructor, periodicWaveConstructor, stereoPannerNodeConstructor, waveShaperNodeConstructor);
const mediaElementAudioSourceNodeConstructor = (0,_factories_media_element_audio_source_node_constructor__WEBPACK_IMPORTED_MODULE_84__.createMediaElementAudioSourceNodeConstructor)(audioNodeConstructor, _factories_native_media_element_audio_source_node__WEBPACK_IMPORTED_MODULE_111__.createNativeMediaElementAudioSourceNode, getNativeContext, isNativeOfflineAudioContext);
const mediaStreamAudioDestinationNodeConstructor = (0,_factories_media_stream_audio_destination_node_constructor__WEBPACK_IMPORTED_MODULE_85__.createMediaStreamAudioDestinationNodeConstructor)(audioNodeConstructor, _factories_native_media_stream_audio_destination_node__WEBPACK_IMPORTED_MODULE_112__.createNativeMediaStreamAudioDestinationNode, getNativeContext, isNativeOfflineAudioContext);
const mediaStreamAudioSourceNodeConstructor = (0,_factories_media_stream_audio_source_node_constructor__WEBPACK_IMPORTED_MODULE_86__.createMediaStreamAudioSourceNodeConstructor)(audioNodeConstructor, _factories_native_media_stream_audio_source_node__WEBPACK_IMPORTED_MODULE_113__.createNativeMediaStreamAudioSourceNode, getNativeContext, isNativeOfflineAudioContext);
const createNativeMediaStreamTrackAudioSourceNode = (0,_factories_native_media_stream_track_audio_source_node_factory__WEBPACK_IMPORTED_MODULE_114__.createNativeMediaStreamTrackAudioSourceNodeFactory)(_factories_invalid_state_error__WEBPACK_IMPORTED_MODULE_72__.createInvalidStateError, isNativeOfflineAudioContext);
const mediaStreamTrackAudioSourceNodeConstructor = (0,_factories_media_stream_track_audio_source_node_constructor__WEBPACK_IMPORTED_MODULE_87__.createMediaStreamTrackAudioSourceNodeConstructor)(audioNodeConstructor, createNativeMediaStreamTrackAudioSourceNode, getNativeContext);
const audioContextConstructor = (0,_factories_audio_context_constructor__WEBPACK_IMPORTED_MODULE_15__.createAudioContextConstructor)(baseAudioContextConstructor, _factories_invalid_state_error__WEBPACK_IMPORTED_MODULE_72__.createInvalidStateError, _factories_not_supported_error__WEBPACK_IMPORTED_MODULE_125__.createNotSupportedError, _factories_unknown_error__WEBPACK_IMPORTED_MODULE_157__.createUnknownError, mediaElementAudioSourceNodeConstructor, mediaStreamAudioDestinationNodeConstructor, mediaStreamAudioSourceNodeConstructor, mediaStreamTrackAudioSourceNodeConstructor, nativeAudioContextConstructor);

const getUnrenderedAudioWorkletNodes = (0,_factories_get_unrendered_audio_worklet_nodes__WEBPACK_IMPORTED_MODULE_66__.createGetUnrenderedAudioWorkletNodes)(unrenderedAudioWorkletNodeStore);
const addUnrenderedAudioWorkletNode = (0,_factories_add_unrendered_audio_worklet_node__WEBPACK_IMPORTED_MODULE_9__.createAddUnrenderedAudioWorkletNode)(getUnrenderedAudioWorkletNodes);
const connectMultipleOutputs = (0,_factories_connect_multiple_outputs__WEBPACK_IMPORTED_MODULE_33__.createConnectMultipleOutputs)(_factories_index_size_error__WEBPACK_IMPORTED_MODULE_70__.createIndexSizeError);
const deleteUnrenderedAudioWorkletNode = (0,_factories_delete_unrendered_audio_worklet_node__WEBPACK_IMPORTED_MODULE_47__.createDeleteUnrenderedAudioWorkletNode)(getUnrenderedAudioWorkletNodes);
const disconnectMultipleOutputs = (0,_factories_disconnect_multiple_outputs__WEBPACK_IMPORTED_MODULE_49__.createDisconnectMultipleOutputs)(_factories_index_size_error__WEBPACK_IMPORTED_MODULE_70__.createIndexSizeError);
const activeAudioWorkletNodeInputsStore = new WeakMap();
const getActiveAudioWorkletNodeInputs = (0,_factories_get_active_audio_worklet_node_inputs__WEBPACK_IMPORTED_MODULE_59__.createGetActiveAudioWorkletNodeInputs)(activeAudioWorkletNodeInputsStore, _helpers_get_value_for_key__WEBPACK_IMPORTED_MODULE_173__.getValueForKey);
const createNativeAudioWorkletNodeFaker = (0,_factories_native_audio_worklet_node_faker_factory__WEBPACK_IMPORTED_MODULE_99__.createNativeAudioWorkletNodeFakerFactory)(connectMultipleOutputs, _factories_index_size_error__WEBPACK_IMPORTED_MODULE_70__.createIndexSizeError, _factories_invalid_state_error__WEBPACK_IMPORTED_MODULE_72__.createInvalidStateError, createNativeChannelMergerNode, _factories_native_channel_splitter_node__WEBPACK_IMPORTED_MODULE_102__.createNativeChannelSplitterNode, createNativeConstantSourceNode, _factories_native_gain_node__WEBPACK_IMPORTED_MODULE_108__.createNativeGainNode, _factories_native_script_processor_node__WEBPACK_IMPORTED_MODULE_120__.createNativeScriptProcessorNode, _factories_not_supported_error__WEBPACK_IMPORTED_MODULE_125__.createNotSupportedError, disconnectMultipleOutputs, exposeCurrentFrameAndCurrentTime, getActiveAudioWorkletNodeInputs, monitorConnections);
const createNativeAudioWorkletNode = (0,_factories_native_audio_worklet_node_factory__WEBPACK_IMPORTED_MODULE_98__.createNativeAudioWorkletNodeFactory)(_factories_invalid_state_error__WEBPACK_IMPORTED_MODULE_72__.createInvalidStateError, createNativeAudioWorkletNodeFaker, _factories_native_gain_node__WEBPACK_IMPORTED_MODULE_108__.createNativeGainNode, _factories_not_supported_error__WEBPACK_IMPORTED_MODULE_125__.createNotSupportedError, monitorConnections);
const createAudioWorkletNodeRenderer = (0,_factories_audio_worklet_node_renderer_factory__WEBPACK_IMPORTED_MODULE_23__.createAudioWorkletNodeRendererFactory)(connectAudioParam, connectMultipleOutputs, createNativeAudioBufferSourceNode, createNativeChannelMergerNode, _factories_native_channel_splitter_node__WEBPACK_IMPORTED_MODULE_102__.createNativeChannelSplitterNode, createNativeConstantSourceNode, _factories_native_gain_node__WEBPACK_IMPORTED_MODULE_108__.createNativeGainNode, deleteUnrenderedAudioWorkletNode, disconnectMultipleOutputs, exposeCurrentFrameAndCurrentTime, _helpers_get_native_audio_node__WEBPACK_IMPORTED_MODULE_171__.getNativeAudioNode, nativeAudioWorkletNodeConstructor, nativeOfflineAudioContextConstructor, renderAutomation, renderInputsOfAudioNode, renderNativeOfflineAudioContext);
const getBackupOfflineAudioContext = (0,_factories_get_backup_offline_audio_context__WEBPACK_IMPORTED_MODULE_63__.createGetBackupOfflineAudioContext)(backupOfflineAudioContextStore);
const setActiveAudioWorkletNodeInputs = (0,_factories_set_active_audio_worklet_node_inputs__WEBPACK_IMPORTED_MODULE_136__.createSetActiveAudioWorkletNodeInputs)(activeAudioWorkletNodeInputsStore);
// The AudioWorkletNode constructor is only available in a SecureContext.
const audioWorkletNodeConstructor = isSecureContext
    ? (0,_factories_audio_worklet_node_constructor__WEBPACK_IMPORTED_MODULE_22__.createAudioWorkletNodeConstructor)(addUnrenderedAudioWorkletNode, audioNodeConstructor, createAudioParam, createAudioWorkletNodeRenderer, createNativeAudioWorkletNode, _helpers_get_audio_node_connections__WEBPACK_IMPORTED_MODULE_168__.getAudioNodeConnections, getBackupOfflineAudioContext, getNativeContext, isNativeOfflineAudioContext, nativeAudioWorkletNodeConstructor, _helpers_sanitize_audio_worklet_node_options__WEBPACK_IMPORTED_MODULE_181__.sanitizeAudioWorkletNodeOptions, setActiveAudioWorkletNodeInputs, _helpers_wrap_event_listener__WEBPACK_IMPORTED_MODULE_196__.wrapEventListener)
    : undefined;














const minimalAudioContextConstructor = (0,_factories_minimal_audio_context_constructor__WEBPACK_IMPORTED_MODULE_88__.createMinimalAudioContextConstructor)(_factories_invalid_state_error__WEBPACK_IMPORTED_MODULE_72__.createInvalidStateError, _factories_not_supported_error__WEBPACK_IMPORTED_MODULE_125__.createNotSupportedError, _factories_unknown_error__WEBPACK_IMPORTED_MODULE_157__.createUnknownError, minimalBaseAudioContextConstructor, nativeAudioContextConstructor);

const createNativeOfflineAudioContext = (0,_factories_create_native_offline_audio_context__WEBPACK_IMPORTED_MODULE_40__.createCreateNativeOfflineAudioContext)(_factories_not_supported_error__WEBPACK_IMPORTED_MODULE_125__.createNotSupportedError, nativeOfflineAudioContextConstructor);
const startRendering = (0,_factories_start_rendering__WEBPACK_IMPORTED_MODULE_138__.createStartRendering)(audioBufferStore, cacheTestResult, getAudioNodeRenderer, getUnrenderedAudioWorkletNodes, renderNativeOfflineAudioContext, _helpers_test_audio_buffer_copy_channel_methods_out_of_bounds_support__WEBPACK_IMPORTED_MODULE_184__.testAudioBufferCopyChannelMethodsOutOfBoundsSupport, wrapAudioBufferCopyChannelMethods, wrapAudioBufferCopyChannelMethodsOutOfBounds);
const minimalOfflineAudioContextConstructor = (0,_factories_minimal_offline_audio_context_constructor__WEBPACK_IMPORTED_MODULE_90__.createMinimalOfflineAudioContextConstructor)(cacheTestResult, _factories_invalid_state_error__WEBPACK_IMPORTED_MODULE_72__.createInvalidStateError, createNativeOfflineAudioContext, minimalBaseAudioContextConstructor, startRendering);

const offlineAudioContextConstructor = (0,_factories_offline_audio_context_constructor__WEBPACK_IMPORTED_MODULE_126__.createOfflineAudioContextConstructor)(baseAudioContextConstructor, cacheTestResult, _factories_invalid_state_error__WEBPACK_IMPORTED_MODULE_72__.createInvalidStateError, createNativeOfflineAudioContext, startRendering);






const isAnyAudioContext = (0,_factories_is_any_audio_context__WEBPACK_IMPORTED_MODULE_73__.createIsAnyAudioContext)(_globals__WEBPACK_IMPORTED_MODULE_165__.CONTEXT_STORE, isNativeAudioContext);
const isAnyAudioNode = (0,_factories_is_any_audio_node__WEBPACK_IMPORTED_MODULE_74__.createIsAnyAudioNode)(_globals__WEBPACK_IMPORTED_MODULE_165__.AUDIO_NODE_STORE, isNativeAudioNode);
const isAnyAudioParam = (0,_factories_is_any_audio_param__WEBPACK_IMPORTED_MODULE_75__.createIsAnyAudioParam)(_globals__WEBPACK_IMPORTED_MODULE_165__.AUDIO_PARAM_STORE, isNativeAudioParam);
const isAnyOfflineAudioContext = (0,_factories_is_any_offline_audio_context__WEBPACK_IMPORTED_MODULE_76__.createIsAnyOfflineAudioContext)(_globals__WEBPACK_IMPORTED_MODULE_165__.CONTEXT_STORE, isNativeOfflineAudioContext);
const isSupported = () => (0,_factories_is_supported_promise__WEBPACK_IMPORTED_MODULE_83__.createIsSupportedPromise)(cacheTestResult, (0,_factories_test_audio_buffer_copy_channel_methods_subarray_support__WEBPACK_IMPORTED_MODULE_142__.createTestAudioBufferCopyChannelMethodsSubarraySupport)(nativeOfflineAudioContextConstructor), (0,_factories_test_audio_context_close_method_support__WEBPACK_IMPORTED_MODULE_143__.createTestAudioContextCloseMethodSupport)(nativeAudioContextConstructor), (0,_factories_test_audio_context_decode_audio_data_method_type_error_support__WEBPACK_IMPORTED_MODULE_144__.createTestAudioContextDecodeAudioDataMethodTypeErrorSupport)(nativeOfflineAudioContextConstructor), (0,_factories_test_audio_context_options_support__WEBPACK_IMPORTED_MODULE_145__.createTestAudioContextOptionsSupport)(nativeAudioContextConstructor), (0,_factories_test_audio_node_connect_method_support__WEBPACK_IMPORTED_MODULE_146__.createTestAudioNodeConnectMethodSupport)(nativeOfflineAudioContextConstructor), (0,_factories_test_audio_worklet_processor_no_outputs_support__WEBPACK_IMPORTED_MODULE_147__.createTestAudioWorkletProcessorNoOutputsSupport)(nativeAudioWorkletNodeConstructor, nativeOfflineAudioContextConstructor), (0,_factories_test_channel_merger_node_channel_count_support__WEBPACK_IMPORTED_MODULE_149__.createTestChannelMergerNodeChannelCountSupport)(nativeOfflineAudioContextConstructor), (0,_factories_test_constant_source_node_accurate_scheduling_support__WEBPACK_IMPORTED_MODULE_150__.createTestConstantSourceNodeAccurateSchedulingSupport)(nativeOfflineAudioContextConstructor), (0,_factories_test_convolver_node_buffer_reassignability_support__WEBPACK_IMPORTED_MODULE_151__.createTestConvolverNodeBufferReassignabilitySupport)(nativeOfflineAudioContextConstructor), (0,_factories_test_convolver_node_channel_count_support__WEBPACK_IMPORTED_MODULE_152__.createTestConvolverNodeChannelCountSupport)(nativeOfflineAudioContextConstructor), _helpers_test_dom_exception_constructor_support__WEBPACK_IMPORTED_MODULE_191__.testDomExceptionConstructorSupport, (0,_factories_test_is_secure_context_support__WEBPACK_IMPORTED_MODULE_153__.createTestIsSecureContextSupport)(window), (0,_factories_test_media_stream_audio_source_node_media_stream_without_audio_track_support__WEBPACK_IMPORTED_MODULE_154__.createTestMediaStreamAudioSourceNodeMediaStreamWithoutAudioTrackSupport)(nativeAudioContextConstructor), (0,_factories_test_stereo_panner_node_default_value_support__WEBPACK_IMPORTED_MODULE_156__.createTestStereoPannerNodeDefaultValueSupport)(nativeOfflineAudioContextConstructor), _helpers_test_transferables_support__WEBPACK_IMPORTED_MODULE_193__.testTransferablesSupport);
//# sourceMappingURL=module.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/read-only-map.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/read-only-map.js ***!
  \*******************************************************************************/
/*! namespace exports */
/*! export ReadOnlyMap [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ReadOnlyMap": () => /* binding */ ReadOnlyMap
/* harmony export */ });
class ReadOnlyMap {
    constructor(parameters) {
        this._map = new Map(parameters);
    }
    get size() {
        return this._map.size;
    }
    entries() {
        return this._map.entries();
    }
    forEach(callback, thisArg = null) {
        return this._map.forEach((value, key) => callback.call(thisArg, value, key, this));
    }
    get(name) {
        return this._map.get(name);
    }
    has(name) {
        return this._map.has(name);
    }
    keys() {
        return this._map.keys();
    }
    values() {
        return this._map.values();
    }
}
//# sourceMappingURL=read-only-map.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/abort-error-factory.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/abort-error-factory.js ***!
  \*******************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=abort-error-factory.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/active-audio-worklet-node-inputs-store.js":
/*!**************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/active-audio-worklet-node-inputs-store.js ***!
  \**************************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=active-audio-worklet-node-inputs-store.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/active-input-connection.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/active-input-connection.js ***!
  \***********************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=active-input-connection.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/add-active-input-connection-to-audio-node-factory.js":
/*!*************************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/add-active-input-connection-to-audio-node-factory.js ***!
  \*************************************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=add-active-input-connection-to-audio-node-factory.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/add-active-input-connection-to-audio-node-function.js":
/*!**************************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/add-active-input-connection-to-audio-node-function.js ***!
  \**************************************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=add-active-input-connection-to-audio-node-function.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/add-audio-node-connections-factory.js":
/*!**********************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/add-audio-node-connections-factory.js ***!
  \**********************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=add-audio-node-connections-factory.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/add-audio-node-connections-function.js":
/*!***********************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/add-audio-node-connections-function.js ***!
  \***********************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=add-audio-node-connections-function.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/add-audio-param-connections-factory.js":
/*!***********************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/add-audio-param-connections-factory.js ***!
  \***********************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=add-audio-param-connections-factory.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/add-audio-param-connections-function.js":
/*!************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/add-audio-param-connections-function.js ***!
  \************************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=add-audio-param-connections-function.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/add-audio-worklet-module-factory.js":
/*!********************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/add-audio-worklet-module-factory.js ***!
  \********************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=add-audio-worklet-module-factory.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/add-audio-worklet-module-function.js":
/*!*********************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/add-audio-worklet-module-function.js ***!
  \*********************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=add-audio-worklet-module-function.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/add-connection-to-audio-node-factory.js":
/*!************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/add-connection-to-audio-node-factory.js ***!
  \************************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=add-connection-to-audio-node-factory.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/add-connection-to-audio-node-function.js":
/*!*************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/add-connection-to-audio-node-function.js ***!
  \*************************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=add-connection-to-audio-node-function.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/add-passive-input-connection-to-audio-node-factory.js":
/*!**************************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/add-passive-input-connection-to-audio-node-factory.js ***!
  \**************************************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=add-passive-input-connection-to-audio-node-factory.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/add-passive-input-connection-to-audio-node-function.js":
/*!***************************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/add-passive-input-connection-to-audio-node-function.js ***!
  \***************************************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=add-passive-input-connection-to-audio-node-function.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/add-silent-connection-factory.js":
/*!*****************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/add-silent-connection-factory.js ***!
  \*****************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=add-silent-connection-factory.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/add-silent-connection-function.js":
/*!******************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/add-silent-connection-function.js ***!
  \******************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=add-silent-connection-function.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/add-unrendered-audio-worklet-node-factory.js":
/*!*****************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/add-unrendered-audio-worklet-node-factory.js ***!
  \*****************************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=add-unrendered-audio-worklet-node-factory.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/add-unrendered-audio-worklet-node-function.js":
/*!******************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/add-unrendered-audio-worklet-node-function.js ***!
  \******************************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=add-unrendered-audio-worklet-node-function.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/analyser-node-constructor-factory.js":
/*!*********************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/analyser-node-constructor-factory.js ***!
  \*********************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=analyser-node-constructor-factory.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/analyser-node-constructor.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/analyser-node-constructor.js ***!
  \*************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=analyser-node-constructor.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/analyser-node-renderer-factory-factory.js":
/*!**************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/analyser-node-renderer-factory-factory.js ***!
  \**************************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=analyser-node-renderer-factory-factory.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/analyser-node-renderer-factory.js":
/*!******************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/analyser-node-renderer-factory.js ***!
  \******************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=analyser-node-renderer-factory.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/any-audio-buffer.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/any-audio-buffer.js ***!
  \****************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=any-audio-buffer.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/any-context.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/any-context.js ***!
  \***********************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=any-context.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/audio-buffer-constructor-factory.js":
/*!********************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/audio-buffer-constructor-factory.js ***!
  \********************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=audio-buffer-constructor-factory.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/audio-buffer-constructor.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/audio-buffer-constructor.js ***!
  \************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=audio-buffer-constructor.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/audio-buffer-source-node-constructor-factory.js":
/*!********************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/audio-buffer-source-node-constructor-factory.js ***!
  \********************************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=audio-buffer-source-node-constructor-factory.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/audio-buffer-source-node-constructor.js":
/*!************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/audio-buffer-source-node-constructor.js ***!
  \************************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=audio-buffer-source-node-constructor.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/audio-buffer-source-node-renderer-factory-factory.js":
/*!*************************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/audio-buffer-source-node-renderer-factory-factory.js ***!
  \*************************************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=audio-buffer-source-node-renderer-factory-factory.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/audio-buffer-source-node-renderer-factory.js":
/*!*****************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/audio-buffer-source-node-renderer-factory.js ***!
  \*****************************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=audio-buffer-source-node-renderer-factory.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/audio-buffer-source-node-renderer.js":
/*!*********************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/audio-buffer-source-node-renderer.js ***!
  \*********************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=audio-buffer-source-node-renderer.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/audio-buffer-store.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/audio-buffer-store.js ***!
  \******************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=audio-buffer-store.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/audio-context-constructor-factory.js":
/*!*********************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/audio-context-constructor-factory.js ***!
  \*********************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=audio-context-constructor-factory.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/audio-context-constructor.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/audio-context-constructor.js ***!
  \*************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=audio-context-constructor.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/audio-context-latency-category.js":
/*!******************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/audio-context-latency-category.js ***!
  \******************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=audio-context-latency-category.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/audio-context-state.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/audio-context-state.js ***!
  \*******************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=audio-context-state.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/audio-destination-node-constructor-factory.js":
/*!******************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/audio-destination-node-constructor-factory.js ***!
  \******************************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=audio-destination-node-constructor-factory.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/audio-destination-node-constructor.js":
/*!**********************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/audio-destination-node-constructor.js ***!
  \**********************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=audio-destination-node-constructor.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/audio-destination-node-renderer-factory.js":
/*!***************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/audio-destination-node-renderer-factory.js ***!
  \***************************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=audio-destination-node-renderer-factory.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/audio-listener-factory-factory.js":
/*!******************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/audio-listener-factory-factory.js ***!
  \******************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=audio-listener-factory-factory.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/audio-listener-factory.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/audio-listener-factory.js ***!
  \**********************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=audio-listener-factory.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/audio-node-connections-store.js":
/*!****************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/audio-node-connections-store.js ***!
  \****************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=audio-node-connections-store.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/audio-node-connections.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/audio-node-connections.js ***!
  \**********************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=audio-node-connections.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/audio-node-constructor-factory.js":
/*!******************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/audio-node-constructor-factory.js ***!
  \******************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=audio-node-constructor-factory.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/audio-node-constructor.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/audio-node-constructor.js ***!
  \**********************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=audio-node-constructor.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/audio-node-output-connection.js":
/*!****************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/audio-node-output-connection.js ***!
  \****************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=audio-node-output-connection.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/audio-node-renderer.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/audio-node-renderer.js ***!
  \*******************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=audio-node-renderer.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/audio-node-store.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/audio-node-store.js ***!
  \****************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=audio-node-store.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/audio-node-tail-time-store.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/audio-node-tail-time-store.js ***!
  \**************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=audio-node-tail-time-store.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/audio-param-audio-node-store.js":
/*!****************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/audio-param-audio-node-store.js ***!
  \****************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=audio-param-audio-node-store.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/audio-param-connections-store.js":
/*!*****************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/audio-param-connections-store.js ***!
  \*****************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=audio-param-connections-store.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/audio-param-connections.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/audio-param-connections.js ***!
  \***********************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=audio-param-connections.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/audio-param-factory-factory.js":
/*!***************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/audio-param-factory-factory.js ***!
  \***************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=audio-param-factory-factory.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/audio-param-factory.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/audio-param-factory.js ***!
  \*******************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=audio-param-factory.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/audio-param-map.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/audio-param-map.js ***!
  \***************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=audio-param-map.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/audio-param-output-connection.js":
/*!*****************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/audio-param-output-connection.js ***!
  \*****************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=audio-param-output-connection.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/audio-param-renderer-factory.js":
/*!****************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/audio-param-renderer-factory.js ***!
  \****************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=audio-param-renderer-factory.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/audio-param-store.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/audio-param-store.js ***!
  \*****************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=audio-param-store.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/audio-worklet-node-constructor-factory.js":
/*!**************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/audio-worklet-node-constructor-factory.js ***!
  \**************************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=audio-worklet-node-constructor-factory.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/audio-worklet-node-constructor.js":
/*!******************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/audio-worklet-node-constructor.js ***!
  \******************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=audio-worklet-node-constructor.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/audio-worklet-node-renderer-factory-factory.js":
/*!*******************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/audio-worklet-node-renderer-factory-factory.js ***!
  \*******************************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=audio-worklet-node-renderer-factory-factory.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/audio-worklet-node-renderer-factory.js":
/*!***********************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/audio-worklet-node-renderer-factory.js ***!
  \***********************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=audio-worklet-node-renderer-factory.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/backup-offline-audio-context-store.js":
/*!**********************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/backup-offline-audio-context-store.js ***!
  \**********************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=backup-offline-audio-context-store.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/base-audio-context-constructor-factory.js":
/*!**************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/base-audio-context-constructor-factory.js ***!
  \**************************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=base-audio-context-constructor-factory.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/base-audio-context-constructor.js":
/*!******************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/base-audio-context-constructor.js ***!
  \******************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=base-audio-context-constructor.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/biquad-filter-node-constructor-factory.js":
/*!**************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/biquad-filter-node-constructor-factory.js ***!
  \**************************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=biquad-filter-node-constructor-factory.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/biquad-filter-node-constructor.js":
/*!******************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/biquad-filter-node-constructor.js ***!
  \******************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=biquad-filter-node-constructor.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/biquad-filter-node-renderer-factory-factory.js":
/*!*******************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/biquad-filter-node-renderer-factory-factory.js ***!
  \*******************************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=biquad-filter-node-renderer-factory-factory.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/biquad-filter-node-renderer-factory.js":
/*!***********************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/biquad-filter-node-renderer-factory.js ***!
  \***********************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=biquad-filter-node-renderer-factory.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/biquad-filter-type.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/biquad-filter-type.js ***!
  \******************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=biquad-filter-type.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/cache-test-result-factory.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/cache-test-result-factory.js ***!
  \*************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=cache-test-result-factory.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/cache-test-result-function.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/cache-test-result-function.js ***!
  \**************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=cache-test-result-function.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/channel-count-mode.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/channel-count-mode.js ***!
  \******************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=channel-count-mode.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/channel-interpretation.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/channel-interpretation.js ***!
  \**********************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=channel-interpretation.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/channel-merger-node-constructor-factory.js":
/*!***************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/channel-merger-node-constructor-factory.js ***!
  \***************************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=channel-merger-node-constructor-factory.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/channel-merger-node-constructor.js":
/*!*******************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/channel-merger-node-constructor.js ***!
  \*******************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=channel-merger-node-constructor.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/channel-merger-node-renderer-factory-factory.js":
/*!********************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/channel-merger-node-renderer-factory-factory.js ***!
  \********************************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=channel-merger-node-renderer-factory-factory.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/channel-merger-node-renderer-factory.js":
/*!************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/channel-merger-node-renderer-factory.js ***!
  \************************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=channel-merger-node-renderer-factory.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/channel-splitter-node-constructor-factory.js":
/*!*****************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/channel-splitter-node-constructor-factory.js ***!
  \*****************************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=channel-splitter-node-constructor-factory.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/channel-splitter-node-constructor.js":
/*!*********************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/channel-splitter-node-constructor.js ***!
  \*********************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=channel-splitter-node-constructor.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/channel-splitter-node-renderer-factory-factory.js":
/*!**********************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/channel-splitter-node-renderer-factory-factory.js ***!
  \**********************************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=channel-splitter-node-renderer-factory-factory.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/channel-splitter-node-renderer-factory.js":
/*!**************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/channel-splitter-node-renderer-factory.js ***!
  \**************************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=channel-splitter-node-renderer-factory.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/connect-audio-param-factory.js":
/*!***************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/connect-audio-param-factory.js ***!
  \***************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=connect-audio-param-factory.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/connect-audio-param-function.js":
/*!****************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/connect-audio-param-function.js ***!
  \****************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=connect-audio-param-function.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/connect-multiple-outputs-factory.js":
/*!********************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/connect-multiple-outputs-factory.js ***!
  \********************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=connect-multiple-outputs-factory.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/connect-multiple-outputs-function.js":
/*!*********************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/connect-multiple-outputs-function.js ***!
  \*********************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=connect-multiple-outputs-function.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/connect-native-audio-node-to-native-audio-node-function.js":
/*!*******************************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/connect-native-audio-node-to-native-audio-node-function.js ***!
  \*******************************************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=connect-native-audio-node-to-native-audio-node-function.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/connected-native-audio-buffer-source-node-factory-factory.js":
/*!*********************************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/connected-native-audio-buffer-source-node-factory-factory.js ***!
  \*********************************************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=connected-native-audio-buffer-source-node-factory-factory.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/connected-native-audio-buffer-source-node-factory.js":
/*!*************************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/connected-native-audio-buffer-source-node-factory.js ***!
  \*************************************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=connected-native-audio-buffer-source-node-factory.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/constant-source-node-constructor-factory.js":
/*!****************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/constant-source-node-constructor-factory.js ***!
  \****************************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=constant-source-node-constructor-factory.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/constant-source-node-constructor.js":
/*!********************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/constant-source-node-constructor.js ***!
  \********************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=constant-source-node-constructor.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/constant-source-node-renderer-factory-factory.js":
/*!*********************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/constant-source-node-renderer-factory-factory.js ***!
  \*********************************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=constant-source-node-renderer-factory-factory.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/constant-source-node-renderer-factory.js":
/*!*************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/constant-source-node-renderer-factory.js ***!
  \*************************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=constant-source-node-renderer-factory.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/constant-source-node-renderer.js":
/*!*****************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/constant-source-node-renderer.js ***!
  \*****************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=constant-source-node-renderer.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/constructor.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/constructor.js ***!
  \***********************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=constructor.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/context-store.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/context-store.js ***!
  \*************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=context-store.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/context.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/context.js ***!
  \*******************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=context.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/convert-number-to-unsigned-long-factory.js":
/*!***************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/convert-number-to-unsigned-long-factory.js ***!
  \***************************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=convert-number-to-unsigned-long-factory.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/convert-number-to-unsigned-long-function.js":
/*!****************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/convert-number-to-unsigned-long-function.js ***!
  \****************************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=convert-number-to-unsigned-long-function.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/convolver-node-constructor-factory.js":
/*!**********************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/convolver-node-constructor-factory.js ***!
  \**********************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=convolver-node-constructor-factory.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/convolver-node-constructor.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/convolver-node-constructor.js ***!
  \**************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=convolver-node-constructor.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/convolver-node-renderer-factory-factory.js":
/*!***************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/convolver-node-renderer-factory-factory.js ***!
  \***************************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=convolver-node-renderer-factory-factory.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/convolver-node-renderer-factory.js":
/*!*******************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/convolver-node-renderer-factory.js ***!
  \*******************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=convolver-node-renderer-factory.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/create-native-offline-audio-context-factory.js":
/*!*******************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/create-native-offline-audio-context-factory.js ***!
  \*******************************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=create-native-offline-audio-context-factory.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/create-native-offline-audio-context-function.js":
/*!********************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/create-native-offline-audio-context-function.js ***!
  \********************************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=create-native-offline-audio-context-function.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/cycle-counters.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/cycle-counters.js ***!
  \**************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=cycle-counters.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/data-clone-error-factory.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/data-clone-error-factory.js ***!
  \************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=data-clone-error-factory.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/decode-audio-data-factory.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/decode-audio-data-factory.js ***!
  \*************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=decode-audio-data-factory.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/decode-audio-data-function.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/decode-audio-data-function.js ***!
  \**************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=decode-audio-data-function.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/decode-error-callback.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/decode-error-callback.js ***!
  \*********************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=decode-error-callback.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/decode-success-callback.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/decode-success-callback.js ***!
  \***********************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=decode-success-callback.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/decrement-cycle-counter-factory.js":
/*!*******************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/decrement-cycle-counter-factory.js ***!
  \*******************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=decrement-cycle-counter-factory.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/decrement-cycle-counter-function.js":
/*!********************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/decrement-cycle-counter-function.js ***!
  \********************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=decrement-cycle-counter-function.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/delay-node-constructor-factory.js":
/*!******************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/delay-node-constructor-factory.js ***!
  \******************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=delay-node-constructor-factory.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/delay-node-constructor.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/delay-node-constructor.js ***!
  \**********************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=delay-node-constructor.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/delay-node-renderer-factory-factory.js":
/*!***********************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/delay-node-renderer-factory-factory.js ***!
  \***********************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=delay-node-renderer-factory-factory.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/delay-node-renderer-factory.js":
/*!***************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/delay-node-renderer-factory.js ***!
  \***************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=delay-node-renderer-factory.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/delete-active-input-connection-to-audio-node-factory.js":
/*!****************************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/delete-active-input-connection-to-audio-node-factory.js ***!
  \****************************************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=delete-active-input-connection-to-audio-node-factory.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/delete-active-input-connection-to-audio-node-function.js":
/*!*****************************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/delete-active-input-connection-to-audio-node-function.js ***!
  \*****************************************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=delete-active-input-connection-to-audio-node-function.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/delete-unrendered-audio-worklet-node-factory.js":
/*!********************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/delete-unrendered-audio-worklet-node-factory.js ***!
  \********************************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=delete-unrendered-audio-worklet-node-factory.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/delete-unrendered-audio-worklet-node-function.js":
/*!*********************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/delete-unrendered-audio-worklet-node-function.js ***!
  \*********************************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=delete-unrendered-audio-worklet-node-function.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/detect-cycles-factory.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/detect-cycles-factory.js ***!
  \*********************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=detect-cycles-factory.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/detect-cycles-function.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/detect-cycles-function.js ***!
  \**********************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=detect-cycles-function.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/disconnect-multiple-outputs-factory.js":
/*!***********************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/disconnect-multiple-outputs-factory.js ***!
  \***********************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=disconnect-multiple-outputs-factory.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/disconnect-multiple-outputs-function.js":
/*!************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/disconnect-multiple-outputs-function.js ***!
  \************************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=disconnect-multiple-outputs-function.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/disconnect-native-audio-node-from-native-audio-node-function.js":
/*!************************************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/disconnect-native-audio-node-from-native-audio-node-function.js ***!
  \************************************************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=disconnect-native-audio-node-from-native-audio-node-function.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/distance-model-type.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/distance-model-type.js ***!
  \*******************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=distance-model-type.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/dynamics-compressor-node-constructor-factory.js":
/*!********************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/dynamics-compressor-node-constructor-factory.js ***!
  \********************************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=dynamics-compressor-node-constructor-factory.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/dynamics-compressor-node-constructor.js":
/*!************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/dynamics-compressor-node-constructor.js ***!
  \************************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=dynamics-compressor-node-constructor.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/dynamics-compressor-node-renderer-factory-factory.js":
/*!*************************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/dynamics-compressor-node-renderer-factory-factory.js ***!
  \*************************************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=dynamics-compressor-node-renderer-factory-factory.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/dynamics-compressor-node-renderer-factory.js":
/*!*****************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/dynamics-compressor-node-renderer-factory.js ***!
  \*****************************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=dynamics-compressor-node-renderer-factory.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/encoding-error-factory.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/encoding-error-factory.js ***!
  \**********************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=encoding-error-factory.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/error-event-handler.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/error-event-handler.js ***!
  \*******************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=error-event-handler.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/evaluate-audio-worklet-global-scope-function.js":
/*!********************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/evaluate-audio-worklet-global-scope-function.js ***!
  \********************************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=evaluate-audio-worklet-global-scope-function.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/evaluate-source-factory.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/evaluate-source-factory.js ***!
  \***********************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=evaluate-source-factory.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/evaluate-source-function.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/evaluate-source-function.js ***!
  \************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=evaluate-source-function.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/event-handler.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/event-handler.js ***!
  \*************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=event-handler.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/event-target-constructor-factory.js":
/*!********************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/event-target-constructor-factory.js ***!
  \********************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=event-target-constructor-factory.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/event-target-constructor.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/event-target-constructor.js ***!
  \************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=event-target-constructor.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/expose-current-frame-and-current-time-factory.js":
/*!*********************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/expose-current-frame-and-current-time-factory.js ***!
  \*********************************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=expose-current-frame-and-current-time-factory.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/expose-current-frame-and-current-time-function.js":
/*!**********************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/expose-current-frame-and-current-time-function.js ***!
  \**********************************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=expose-current-frame-and-current-time-function.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/fetch-source-factory.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/fetch-source-factory.js ***!
  \********************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=fetch-source-factory.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/fetch-source-function.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/fetch-source-function.js ***!
  \*********************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=fetch-source-function.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/gain-node-constructor-factory.js":
/*!*****************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/gain-node-constructor-factory.js ***!
  \*****************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=gain-node-constructor-factory.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/gain-node-constructor.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/gain-node-constructor.js ***!
  \*********************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=gain-node-constructor.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/gain-node-renderer-factory-factory.js":
/*!**********************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/gain-node-renderer-factory-factory.js ***!
  \**********************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=gain-node-renderer-factory-factory.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/gain-node-renderer-factory.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/gain-node-renderer-factory.js ***!
  \**************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=gain-node-renderer-factory.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/get-active-audio-worklet-node-inputs-factory.js":
/*!********************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/get-active-audio-worklet-node-inputs-factory.js ***!
  \********************************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=get-active-audio-worklet-node-inputs-factory.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/get-active-audio-worklet-node-inputs-function.js":
/*!*********************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/get-active-audio-worklet-node-inputs-function.js ***!
  \*********************************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=get-active-audio-worklet-node-inputs-function.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/get-audio-node-connections-function.js":
/*!***********************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/get-audio-node-connections-function.js ***!
  \***********************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=get-audio-node-connections-function.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/get-audio-node-renderer-factory.js":
/*!*******************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/get-audio-node-renderer-factory.js ***!
  \*******************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=get-audio-node-renderer-factory.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/get-audio-node-renderer-function.js":
/*!********************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/get-audio-node-renderer-function.js ***!
  \********************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=get-audio-node-renderer-function.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/get-audio-node-tail-time-factory.js":
/*!********************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/get-audio-node-tail-time-factory.js ***!
  \********************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=get-audio-node-tail-time-factory.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/get-audio-node-tail-time-function.js":
/*!*********************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/get-audio-node-tail-time-function.js ***!
  \*********************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=get-audio-node-tail-time-function.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/get-audio-param-connections-function.js":
/*!************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/get-audio-param-connections-function.js ***!
  \************************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=get-audio-param-connections-function.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/get-audio-param-renderer-factory.js":
/*!********************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/get-audio-param-renderer-factory.js ***!
  \********************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=get-audio-param-renderer-factory.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/get-audio-param-renderer-function.js":
/*!*********************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/get-audio-param-renderer-function.js ***!
  \*********************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=get-audio-param-renderer-function.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/get-backup-offline-audio-context-factory.js":
/*!****************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/get-backup-offline-audio-context-factory.js ***!
  \****************************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=get-backup-offline-audio-context-factory.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/get-backup-offline-audio-context-function.js":
/*!*****************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/get-backup-offline-audio-context-function.js ***!
  \*****************************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=get-backup-offline-audio-context-function.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/get-event-listeners-of-audio-node-function.js":
/*!******************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/get-event-listeners-of-audio-node-function.js ***!
  \******************************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=get-event-listeners-of-audio-node-function.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/get-native-audio-node-function.js":
/*!******************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/get-native-audio-node-function.js ***!
  \******************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=get-native-audio-node-function.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/get-native-audio-param-function.js":
/*!*******************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/get-native-audio-param-function.js ***!
  \*******************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=get-native-audio-param-function.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/get-native-context-factory.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/get-native-context-factory.js ***!
  \**************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=get-native-context-factory.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/get-native-context-function.js":
/*!***************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/get-native-context-function.js ***!
  \***************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=get-native-context-function.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/get-or-create-backup-offline-audio-context-factory.js":
/*!**************************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/get-or-create-backup-offline-audio-context-factory.js ***!
  \**************************************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=get-or-create-backup-offline-audio-context-factory.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/get-or-create-backup-offline-audio-context-function.js":
/*!***************************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/get-or-create-backup-offline-audio-context-function.js ***!
  \***************************************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=get-or-create-backup-offline-audio-context-function.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/get-unrendered-audio-worklet-nodes-factory.js":
/*!******************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/get-unrendered-audio-worklet-nodes-factory.js ***!
  \******************************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=get-unrendered-audio-worklet-nodes-factory.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/get-unrendered-audio-worklet-nodes-function.js":
/*!*******************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/get-unrendered-audio-worklet-nodes-function.js ***!
  \*******************************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=get-unrendered-audio-worklet-nodes-function.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/get-value-for-key-function.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/get-value-for-key-function.js ***!
  \**************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=get-value-for-key-function.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/iir-filter-node-constructor-factory.js":
/*!***********************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/iir-filter-node-constructor-factory.js ***!
  \***********************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=iir-filter-node-constructor-factory.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/iir-filter-node-constructor.js":
/*!***************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/iir-filter-node-constructor.js ***!
  \***************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=iir-filter-node-constructor.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/iir-filter-node-renderer-factory-factory.js":
/*!****************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/iir-filter-node-renderer-factory-factory.js ***!
  \****************************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=iir-filter-node-renderer-factory-factory.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/iir-filter-node-renderer-factory.js":
/*!********************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/iir-filter-node-renderer-factory.js ***!
  \********************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=iir-filter-node-renderer-factory.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/increment-cycle-counter-factory-factory.js":
/*!***************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/increment-cycle-counter-factory-factory.js ***!
  \***************************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=increment-cycle-counter-factory-factory.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/increment-cycle-counter-factory.js":
/*!*******************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/increment-cycle-counter-factory.js ***!
  \*******************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=increment-cycle-counter-factory.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/increment-cycle-counter-function.js":
/*!********************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/increment-cycle-counter-function.js ***!
  \********************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=increment-cycle-counter-function.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/index-size-error-factory.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/index-size-error-factory.js ***!
  \************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=index-size-error-factory.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/index.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/index.js ***!
  \*****************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _abort_error_factory__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./abort-error-factory */ "./node_modules/standardized-audio-context/build/es2019/types/abort-error-factory.js");
/* harmony import */ var _active_audio_worklet_node_inputs_store__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./active-audio-worklet-node-inputs-store */ "./node_modules/standardized-audio-context/build/es2019/types/active-audio-worklet-node-inputs-store.js");
/* harmony import */ var _active_input_connection__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./active-input-connection */ "./node_modules/standardized-audio-context/build/es2019/types/active-input-connection.js");
/* harmony import */ var _add_active_input_connection_to_audio_node_factory__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./add-active-input-connection-to-audio-node-factory */ "./node_modules/standardized-audio-context/build/es2019/types/add-active-input-connection-to-audio-node-factory.js");
/* harmony import */ var _add_active_input_connection_to_audio_node_function__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./add-active-input-connection-to-audio-node-function */ "./node_modules/standardized-audio-context/build/es2019/types/add-active-input-connection-to-audio-node-function.js");
/* harmony import */ var _add_audio_node_connections_factory__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./add-audio-node-connections-factory */ "./node_modules/standardized-audio-context/build/es2019/types/add-audio-node-connections-factory.js");
/* harmony import */ var _add_audio_node_connections_function__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./add-audio-node-connections-function */ "./node_modules/standardized-audio-context/build/es2019/types/add-audio-node-connections-function.js");
/* harmony import */ var _add_audio_param_connections_factory__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./add-audio-param-connections-factory */ "./node_modules/standardized-audio-context/build/es2019/types/add-audio-param-connections-factory.js");
/* harmony import */ var _add_audio_param_connections_function__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./add-audio-param-connections-function */ "./node_modules/standardized-audio-context/build/es2019/types/add-audio-param-connections-function.js");
/* harmony import */ var _add_audio_worklet_module_factory__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./add-audio-worklet-module-factory */ "./node_modules/standardized-audio-context/build/es2019/types/add-audio-worklet-module-factory.js");
/* harmony import */ var _add_audio_worklet_module_function__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./add-audio-worklet-module-function */ "./node_modules/standardized-audio-context/build/es2019/types/add-audio-worklet-module-function.js");
/* harmony import */ var _add_connection_to_audio_node_factory__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./add-connection-to-audio-node-factory */ "./node_modules/standardized-audio-context/build/es2019/types/add-connection-to-audio-node-factory.js");
/* harmony import */ var _add_connection_to_audio_node_function__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./add-connection-to-audio-node-function */ "./node_modules/standardized-audio-context/build/es2019/types/add-connection-to-audio-node-function.js");
/* harmony import */ var _add_passive_input_connection_to_audio_node_factory__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./add-passive-input-connection-to-audio-node-factory */ "./node_modules/standardized-audio-context/build/es2019/types/add-passive-input-connection-to-audio-node-factory.js");
/* harmony import */ var _add_passive_input_connection_to_audio_node_function__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./add-passive-input-connection-to-audio-node-function */ "./node_modules/standardized-audio-context/build/es2019/types/add-passive-input-connection-to-audio-node-function.js");
/* harmony import */ var _add_silent_connection_factory__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./add-silent-connection-factory */ "./node_modules/standardized-audio-context/build/es2019/types/add-silent-connection-factory.js");
/* harmony import */ var _add_silent_connection_function__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./add-silent-connection-function */ "./node_modules/standardized-audio-context/build/es2019/types/add-silent-connection-function.js");
/* harmony import */ var _add_unrendered_audio_worklet_node_factory__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./add-unrendered-audio-worklet-node-factory */ "./node_modules/standardized-audio-context/build/es2019/types/add-unrendered-audio-worklet-node-factory.js");
/* harmony import */ var _add_unrendered_audio_worklet_node_function__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./add-unrendered-audio-worklet-node-function */ "./node_modules/standardized-audio-context/build/es2019/types/add-unrendered-audio-worklet-node-function.js");
/* harmony import */ var _analyser_node_constructor__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./analyser-node-constructor */ "./node_modules/standardized-audio-context/build/es2019/types/analyser-node-constructor.js");
/* harmony import */ var _analyser_node_constructor_factory__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./analyser-node-constructor-factory */ "./node_modules/standardized-audio-context/build/es2019/types/analyser-node-constructor-factory.js");
/* harmony import */ var _analyser_node_renderer_factory__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./analyser-node-renderer-factory */ "./node_modules/standardized-audio-context/build/es2019/types/analyser-node-renderer-factory.js");
/* harmony import */ var _analyser_node_renderer_factory_factory__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ./analyser-node-renderer-factory-factory */ "./node_modules/standardized-audio-context/build/es2019/types/analyser-node-renderer-factory-factory.js");
/* harmony import */ var _any_audio_buffer__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ./any-audio-buffer */ "./node_modules/standardized-audio-context/build/es2019/types/any-audio-buffer.js");
/* harmony import */ var _any_context__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ./any-context */ "./node_modules/standardized-audio-context/build/es2019/types/any-context.js");
/* harmony import */ var _audio_buffer_constructor__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ./audio-buffer-constructor */ "./node_modules/standardized-audio-context/build/es2019/types/audio-buffer-constructor.js");
/* harmony import */ var _audio_buffer_constructor_factory__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ./audio-buffer-constructor-factory */ "./node_modules/standardized-audio-context/build/es2019/types/audio-buffer-constructor-factory.js");
/* harmony import */ var _audio_buffer_source_node_constructor__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! ./audio-buffer-source-node-constructor */ "./node_modules/standardized-audio-context/build/es2019/types/audio-buffer-source-node-constructor.js");
/* harmony import */ var _audio_buffer_source_node_constructor_factory__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! ./audio-buffer-source-node-constructor-factory */ "./node_modules/standardized-audio-context/build/es2019/types/audio-buffer-source-node-constructor-factory.js");
/* harmony import */ var _audio_buffer_source_node_renderer__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! ./audio-buffer-source-node-renderer */ "./node_modules/standardized-audio-context/build/es2019/types/audio-buffer-source-node-renderer.js");
/* harmony import */ var _audio_buffer_source_node_renderer_factory__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(/*! ./audio-buffer-source-node-renderer-factory */ "./node_modules/standardized-audio-context/build/es2019/types/audio-buffer-source-node-renderer-factory.js");
/* harmony import */ var _audio_buffer_source_node_renderer_factory_factory__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(/*! ./audio-buffer-source-node-renderer-factory-factory */ "./node_modules/standardized-audio-context/build/es2019/types/audio-buffer-source-node-renderer-factory-factory.js");
/* harmony import */ var _audio_buffer_store__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(/*! ./audio-buffer-store */ "./node_modules/standardized-audio-context/build/es2019/types/audio-buffer-store.js");
/* harmony import */ var _audio_context_constructor__WEBPACK_IMPORTED_MODULE_33__ = __webpack_require__(/*! ./audio-context-constructor */ "./node_modules/standardized-audio-context/build/es2019/types/audio-context-constructor.js");
/* harmony import */ var _audio_context_constructor_factory__WEBPACK_IMPORTED_MODULE_34__ = __webpack_require__(/*! ./audio-context-constructor-factory */ "./node_modules/standardized-audio-context/build/es2019/types/audio-context-constructor-factory.js");
/* harmony import */ var _audio_context_latency_category__WEBPACK_IMPORTED_MODULE_35__ = __webpack_require__(/*! ./audio-context-latency-category */ "./node_modules/standardized-audio-context/build/es2019/types/audio-context-latency-category.js");
/* harmony import */ var _audio_context_state__WEBPACK_IMPORTED_MODULE_36__ = __webpack_require__(/*! ./audio-context-state */ "./node_modules/standardized-audio-context/build/es2019/types/audio-context-state.js");
/* harmony import */ var _audio_destination_node_constructor__WEBPACK_IMPORTED_MODULE_37__ = __webpack_require__(/*! ./audio-destination-node-constructor */ "./node_modules/standardized-audio-context/build/es2019/types/audio-destination-node-constructor.js");
/* harmony import */ var _audio_destination_node_constructor_factory__WEBPACK_IMPORTED_MODULE_38__ = __webpack_require__(/*! ./audio-destination-node-constructor-factory */ "./node_modules/standardized-audio-context/build/es2019/types/audio-destination-node-constructor-factory.js");
/* harmony import */ var _audio_destination_node_renderer_factory__WEBPACK_IMPORTED_MODULE_39__ = __webpack_require__(/*! ./audio-destination-node-renderer-factory */ "./node_modules/standardized-audio-context/build/es2019/types/audio-destination-node-renderer-factory.js");
/* harmony import */ var _audio_listener_factory__WEBPACK_IMPORTED_MODULE_40__ = __webpack_require__(/*! ./audio-listener-factory */ "./node_modules/standardized-audio-context/build/es2019/types/audio-listener-factory.js");
/* harmony import */ var _audio_listener_factory_factory__WEBPACK_IMPORTED_MODULE_41__ = __webpack_require__(/*! ./audio-listener-factory-factory */ "./node_modules/standardized-audio-context/build/es2019/types/audio-listener-factory-factory.js");
/* harmony import */ var _audio_node_connections__WEBPACK_IMPORTED_MODULE_42__ = __webpack_require__(/*! ./audio-node-connections */ "./node_modules/standardized-audio-context/build/es2019/types/audio-node-connections.js");
/* harmony import */ var _audio_node_connections_store__WEBPACK_IMPORTED_MODULE_43__ = __webpack_require__(/*! ./audio-node-connections-store */ "./node_modules/standardized-audio-context/build/es2019/types/audio-node-connections-store.js");
/* harmony import */ var _audio_node_constructor__WEBPACK_IMPORTED_MODULE_44__ = __webpack_require__(/*! ./audio-node-constructor */ "./node_modules/standardized-audio-context/build/es2019/types/audio-node-constructor.js");
/* harmony import */ var _audio_node_constructor_factory__WEBPACK_IMPORTED_MODULE_45__ = __webpack_require__(/*! ./audio-node-constructor-factory */ "./node_modules/standardized-audio-context/build/es2019/types/audio-node-constructor-factory.js");
/* harmony import */ var _audio_node_output_connection__WEBPACK_IMPORTED_MODULE_46__ = __webpack_require__(/*! ./audio-node-output-connection */ "./node_modules/standardized-audio-context/build/es2019/types/audio-node-output-connection.js");
/* harmony import */ var _audio_node_renderer__WEBPACK_IMPORTED_MODULE_47__ = __webpack_require__(/*! ./audio-node-renderer */ "./node_modules/standardized-audio-context/build/es2019/types/audio-node-renderer.js");
/* harmony import */ var _audio_node_store__WEBPACK_IMPORTED_MODULE_48__ = __webpack_require__(/*! ./audio-node-store */ "./node_modules/standardized-audio-context/build/es2019/types/audio-node-store.js");
/* harmony import */ var _audio_node_tail_time_store__WEBPACK_IMPORTED_MODULE_49__ = __webpack_require__(/*! ./audio-node-tail-time-store */ "./node_modules/standardized-audio-context/build/es2019/types/audio-node-tail-time-store.js");
/* harmony import */ var _audio_param_audio_node_store__WEBPACK_IMPORTED_MODULE_50__ = __webpack_require__(/*! ./audio-param-audio-node-store */ "./node_modules/standardized-audio-context/build/es2019/types/audio-param-audio-node-store.js");
/* harmony import */ var _audio_param_connections__WEBPACK_IMPORTED_MODULE_51__ = __webpack_require__(/*! ./audio-param-connections */ "./node_modules/standardized-audio-context/build/es2019/types/audio-param-connections.js");
/* harmony import */ var _audio_param_connections_store__WEBPACK_IMPORTED_MODULE_52__ = __webpack_require__(/*! ./audio-param-connections-store */ "./node_modules/standardized-audio-context/build/es2019/types/audio-param-connections-store.js");
/* harmony import */ var _audio_param_factory__WEBPACK_IMPORTED_MODULE_53__ = __webpack_require__(/*! ./audio-param-factory */ "./node_modules/standardized-audio-context/build/es2019/types/audio-param-factory.js");
/* harmony import */ var _audio_param_factory_factory__WEBPACK_IMPORTED_MODULE_54__ = __webpack_require__(/*! ./audio-param-factory-factory */ "./node_modules/standardized-audio-context/build/es2019/types/audio-param-factory-factory.js");
/* harmony import */ var _audio_param_map__WEBPACK_IMPORTED_MODULE_55__ = __webpack_require__(/*! ./audio-param-map */ "./node_modules/standardized-audio-context/build/es2019/types/audio-param-map.js");
/* harmony import */ var _audio_param_output_connection__WEBPACK_IMPORTED_MODULE_56__ = __webpack_require__(/*! ./audio-param-output-connection */ "./node_modules/standardized-audio-context/build/es2019/types/audio-param-output-connection.js");
/* harmony import */ var _audio_param_renderer_factory__WEBPACK_IMPORTED_MODULE_57__ = __webpack_require__(/*! ./audio-param-renderer-factory */ "./node_modules/standardized-audio-context/build/es2019/types/audio-param-renderer-factory.js");
/* harmony import */ var _audio_param_store__WEBPACK_IMPORTED_MODULE_58__ = __webpack_require__(/*! ./audio-param-store */ "./node_modules/standardized-audio-context/build/es2019/types/audio-param-store.js");
/* harmony import */ var _audio_worklet_node_constructor__WEBPACK_IMPORTED_MODULE_59__ = __webpack_require__(/*! ./audio-worklet-node-constructor */ "./node_modules/standardized-audio-context/build/es2019/types/audio-worklet-node-constructor.js");
/* harmony import */ var _audio_worklet_node_constructor_factory__WEBPACK_IMPORTED_MODULE_60__ = __webpack_require__(/*! ./audio-worklet-node-constructor-factory */ "./node_modules/standardized-audio-context/build/es2019/types/audio-worklet-node-constructor-factory.js");
/* harmony import */ var _audio_worklet_node_renderer_factory__WEBPACK_IMPORTED_MODULE_61__ = __webpack_require__(/*! ./audio-worklet-node-renderer-factory */ "./node_modules/standardized-audio-context/build/es2019/types/audio-worklet-node-renderer-factory.js");
/* harmony import */ var _audio_worklet_node_renderer_factory_factory__WEBPACK_IMPORTED_MODULE_62__ = __webpack_require__(/*! ./audio-worklet-node-renderer-factory-factory */ "./node_modules/standardized-audio-context/build/es2019/types/audio-worklet-node-renderer-factory-factory.js");
/* harmony import */ var _backup_offline_audio_context_store__WEBPACK_IMPORTED_MODULE_63__ = __webpack_require__(/*! ./backup-offline-audio-context-store */ "./node_modules/standardized-audio-context/build/es2019/types/backup-offline-audio-context-store.js");
/* harmony import */ var _base_audio_context_constructor__WEBPACK_IMPORTED_MODULE_64__ = __webpack_require__(/*! ./base-audio-context-constructor */ "./node_modules/standardized-audio-context/build/es2019/types/base-audio-context-constructor.js");
/* harmony import */ var _base_audio_context_constructor_factory__WEBPACK_IMPORTED_MODULE_65__ = __webpack_require__(/*! ./base-audio-context-constructor-factory */ "./node_modules/standardized-audio-context/build/es2019/types/base-audio-context-constructor-factory.js");
/* harmony import */ var _biquad_filter_node_constructor__WEBPACK_IMPORTED_MODULE_66__ = __webpack_require__(/*! ./biquad-filter-node-constructor */ "./node_modules/standardized-audio-context/build/es2019/types/biquad-filter-node-constructor.js");
/* harmony import */ var _biquad_filter_node_constructor_factory__WEBPACK_IMPORTED_MODULE_67__ = __webpack_require__(/*! ./biquad-filter-node-constructor-factory */ "./node_modules/standardized-audio-context/build/es2019/types/biquad-filter-node-constructor-factory.js");
/* harmony import */ var _biquad_filter_node_renderer_factory__WEBPACK_IMPORTED_MODULE_68__ = __webpack_require__(/*! ./biquad-filter-node-renderer-factory */ "./node_modules/standardized-audio-context/build/es2019/types/biquad-filter-node-renderer-factory.js");
/* harmony import */ var _biquad_filter_node_renderer_factory_factory__WEBPACK_IMPORTED_MODULE_69__ = __webpack_require__(/*! ./biquad-filter-node-renderer-factory-factory */ "./node_modules/standardized-audio-context/build/es2019/types/biquad-filter-node-renderer-factory-factory.js");
/* harmony import */ var _biquad_filter_type__WEBPACK_IMPORTED_MODULE_70__ = __webpack_require__(/*! ./biquad-filter-type */ "./node_modules/standardized-audio-context/build/es2019/types/biquad-filter-type.js");
/* harmony import */ var _channel_count_mode__WEBPACK_IMPORTED_MODULE_71__ = __webpack_require__(/*! ./channel-count-mode */ "./node_modules/standardized-audio-context/build/es2019/types/channel-count-mode.js");
/* harmony import */ var _channel_interpretation__WEBPACK_IMPORTED_MODULE_72__ = __webpack_require__(/*! ./channel-interpretation */ "./node_modules/standardized-audio-context/build/es2019/types/channel-interpretation.js");
/* harmony import */ var _channel_merger_node_constructor__WEBPACK_IMPORTED_MODULE_73__ = __webpack_require__(/*! ./channel-merger-node-constructor */ "./node_modules/standardized-audio-context/build/es2019/types/channel-merger-node-constructor.js");
/* harmony import */ var _channel_merger_node_constructor_factory__WEBPACK_IMPORTED_MODULE_74__ = __webpack_require__(/*! ./channel-merger-node-constructor-factory */ "./node_modules/standardized-audio-context/build/es2019/types/channel-merger-node-constructor-factory.js");
/* harmony import */ var _channel_merger_node_renderer_factory__WEBPACK_IMPORTED_MODULE_75__ = __webpack_require__(/*! ./channel-merger-node-renderer-factory */ "./node_modules/standardized-audio-context/build/es2019/types/channel-merger-node-renderer-factory.js");
/* harmony import */ var _channel_merger_node_renderer_factory_factory__WEBPACK_IMPORTED_MODULE_76__ = __webpack_require__(/*! ./channel-merger-node-renderer-factory-factory */ "./node_modules/standardized-audio-context/build/es2019/types/channel-merger-node-renderer-factory-factory.js");
/* harmony import */ var _channel_splitter_node_constructor__WEBPACK_IMPORTED_MODULE_77__ = __webpack_require__(/*! ./channel-splitter-node-constructor */ "./node_modules/standardized-audio-context/build/es2019/types/channel-splitter-node-constructor.js");
/* harmony import */ var _channel_splitter_node_constructor_factory__WEBPACK_IMPORTED_MODULE_78__ = __webpack_require__(/*! ./channel-splitter-node-constructor-factory */ "./node_modules/standardized-audio-context/build/es2019/types/channel-splitter-node-constructor-factory.js");
/* harmony import */ var _channel_splitter_node_renderer_factory__WEBPACK_IMPORTED_MODULE_79__ = __webpack_require__(/*! ./channel-splitter-node-renderer-factory */ "./node_modules/standardized-audio-context/build/es2019/types/channel-splitter-node-renderer-factory.js");
/* harmony import */ var _channel_splitter_node_renderer_factory_factory__WEBPACK_IMPORTED_MODULE_80__ = __webpack_require__(/*! ./channel-splitter-node-renderer-factory-factory */ "./node_modules/standardized-audio-context/build/es2019/types/channel-splitter-node-renderer-factory-factory.js");
/* harmony import */ var _cache_test_result_factory__WEBPACK_IMPORTED_MODULE_81__ = __webpack_require__(/*! ./cache-test-result-factory */ "./node_modules/standardized-audio-context/build/es2019/types/cache-test-result-factory.js");
/* harmony import */ var _cache_test_result_function__WEBPACK_IMPORTED_MODULE_82__ = __webpack_require__(/*! ./cache-test-result-function */ "./node_modules/standardized-audio-context/build/es2019/types/cache-test-result-function.js");
/* harmony import */ var _connect_audio_param_factory__WEBPACK_IMPORTED_MODULE_83__ = __webpack_require__(/*! ./connect-audio-param-factory */ "./node_modules/standardized-audio-context/build/es2019/types/connect-audio-param-factory.js");
/* harmony import */ var _connect_audio_param_function__WEBPACK_IMPORTED_MODULE_84__ = __webpack_require__(/*! ./connect-audio-param-function */ "./node_modules/standardized-audio-context/build/es2019/types/connect-audio-param-function.js");
/* harmony import */ var _connect_multiple_outputs_factory__WEBPACK_IMPORTED_MODULE_85__ = __webpack_require__(/*! ./connect-multiple-outputs-factory */ "./node_modules/standardized-audio-context/build/es2019/types/connect-multiple-outputs-factory.js");
/* harmony import */ var _connect_multiple_outputs_function__WEBPACK_IMPORTED_MODULE_86__ = __webpack_require__(/*! ./connect-multiple-outputs-function */ "./node_modules/standardized-audio-context/build/es2019/types/connect-multiple-outputs-function.js");
/* harmony import */ var _connect_native_audio_node_to_native_audio_node_function__WEBPACK_IMPORTED_MODULE_87__ = __webpack_require__(/*! ./connect-native-audio-node-to-native-audio-node-function */ "./node_modules/standardized-audio-context/build/es2019/types/connect-native-audio-node-to-native-audio-node-function.js");
/* harmony import */ var _connected_native_audio_buffer_source_node_factory__WEBPACK_IMPORTED_MODULE_88__ = __webpack_require__(/*! ./connected-native-audio-buffer-source-node-factory */ "./node_modules/standardized-audio-context/build/es2019/types/connected-native-audio-buffer-source-node-factory.js");
/* harmony import */ var _connected_native_audio_buffer_source_node_factory_factory__WEBPACK_IMPORTED_MODULE_89__ = __webpack_require__(/*! ./connected-native-audio-buffer-source-node-factory-factory */ "./node_modules/standardized-audio-context/build/es2019/types/connected-native-audio-buffer-source-node-factory-factory.js");
/* harmony import */ var _constant_source_node_constructor__WEBPACK_IMPORTED_MODULE_90__ = __webpack_require__(/*! ./constant-source-node-constructor */ "./node_modules/standardized-audio-context/build/es2019/types/constant-source-node-constructor.js");
/* harmony import */ var _constant_source_node_constructor_factory__WEBPACK_IMPORTED_MODULE_91__ = __webpack_require__(/*! ./constant-source-node-constructor-factory */ "./node_modules/standardized-audio-context/build/es2019/types/constant-source-node-constructor-factory.js");
/* harmony import */ var _constant_source_node_renderer__WEBPACK_IMPORTED_MODULE_92__ = __webpack_require__(/*! ./constant-source-node-renderer */ "./node_modules/standardized-audio-context/build/es2019/types/constant-source-node-renderer.js");
/* harmony import */ var _constant_source_node_renderer_factory__WEBPACK_IMPORTED_MODULE_93__ = __webpack_require__(/*! ./constant-source-node-renderer-factory */ "./node_modules/standardized-audio-context/build/es2019/types/constant-source-node-renderer-factory.js");
/* harmony import */ var _constant_source_node_renderer_factory_factory__WEBPACK_IMPORTED_MODULE_94__ = __webpack_require__(/*! ./constant-source-node-renderer-factory-factory */ "./node_modules/standardized-audio-context/build/es2019/types/constant-source-node-renderer-factory-factory.js");
/* harmony import */ var _constructor__WEBPACK_IMPORTED_MODULE_95__ = __webpack_require__(/*! ./constructor */ "./node_modules/standardized-audio-context/build/es2019/types/constructor.js");
/* harmony import */ var _context__WEBPACK_IMPORTED_MODULE_96__ = __webpack_require__(/*! ./context */ "./node_modules/standardized-audio-context/build/es2019/types/context.js");
/* harmony import */ var _context_store__WEBPACK_IMPORTED_MODULE_97__ = __webpack_require__(/*! ./context-store */ "./node_modules/standardized-audio-context/build/es2019/types/context-store.js");
/* harmony import */ var _convert_number_to_unsigned_long_factory__WEBPACK_IMPORTED_MODULE_98__ = __webpack_require__(/*! ./convert-number-to-unsigned-long-factory */ "./node_modules/standardized-audio-context/build/es2019/types/convert-number-to-unsigned-long-factory.js");
/* harmony import */ var _convert_number_to_unsigned_long_function__WEBPACK_IMPORTED_MODULE_99__ = __webpack_require__(/*! ./convert-number-to-unsigned-long-function */ "./node_modules/standardized-audio-context/build/es2019/types/convert-number-to-unsigned-long-function.js");
/* harmony import */ var _convolver_node_constructor__WEBPACK_IMPORTED_MODULE_100__ = __webpack_require__(/*! ./convolver-node-constructor */ "./node_modules/standardized-audio-context/build/es2019/types/convolver-node-constructor.js");
/* harmony import */ var _convolver_node_constructor_factory__WEBPACK_IMPORTED_MODULE_101__ = __webpack_require__(/*! ./convolver-node-constructor-factory */ "./node_modules/standardized-audio-context/build/es2019/types/convolver-node-constructor-factory.js");
/* harmony import */ var _convolver_node_renderer_factory__WEBPACK_IMPORTED_MODULE_102__ = __webpack_require__(/*! ./convolver-node-renderer-factory */ "./node_modules/standardized-audio-context/build/es2019/types/convolver-node-renderer-factory.js");
/* harmony import */ var _convolver_node_renderer_factory_factory__WEBPACK_IMPORTED_MODULE_103__ = __webpack_require__(/*! ./convolver-node-renderer-factory-factory */ "./node_modules/standardized-audio-context/build/es2019/types/convolver-node-renderer-factory-factory.js");
/* harmony import */ var _create_native_offline_audio_context_factory__WEBPACK_IMPORTED_MODULE_104__ = __webpack_require__(/*! ./create-native-offline-audio-context-factory */ "./node_modules/standardized-audio-context/build/es2019/types/create-native-offline-audio-context-factory.js");
/* harmony import */ var _create_native_offline_audio_context_function__WEBPACK_IMPORTED_MODULE_105__ = __webpack_require__(/*! ./create-native-offline-audio-context-function */ "./node_modules/standardized-audio-context/build/es2019/types/create-native-offline-audio-context-function.js");
/* harmony import */ var _cycle_counters__WEBPACK_IMPORTED_MODULE_106__ = __webpack_require__(/*! ./cycle-counters */ "./node_modules/standardized-audio-context/build/es2019/types/cycle-counters.js");
/* harmony import */ var _data_clone_error_factory__WEBPACK_IMPORTED_MODULE_107__ = __webpack_require__(/*! ./data-clone-error-factory */ "./node_modules/standardized-audio-context/build/es2019/types/data-clone-error-factory.js");
/* harmony import */ var _decode_audio_data_factory__WEBPACK_IMPORTED_MODULE_108__ = __webpack_require__(/*! ./decode-audio-data-factory */ "./node_modules/standardized-audio-context/build/es2019/types/decode-audio-data-factory.js");
/* harmony import */ var _decode_audio_data_function__WEBPACK_IMPORTED_MODULE_109__ = __webpack_require__(/*! ./decode-audio-data-function */ "./node_modules/standardized-audio-context/build/es2019/types/decode-audio-data-function.js");
/* harmony import */ var _decode_error_callback__WEBPACK_IMPORTED_MODULE_110__ = __webpack_require__(/*! ./decode-error-callback */ "./node_modules/standardized-audio-context/build/es2019/types/decode-error-callback.js");
/* harmony import */ var _decode_success_callback__WEBPACK_IMPORTED_MODULE_111__ = __webpack_require__(/*! ./decode-success-callback */ "./node_modules/standardized-audio-context/build/es2019/types/decode-success-callback.js");
/* harmony import */ var _decrement_cycle_counter_factory__WEBPACK_IMPORTED_MODULE_112__ = __webpack_require__(/*! ./decrement-cycle-counter-factory */ "./node_modules/standardized-audio-context/build/es2019/types/decrement-cycle-counter-factory.js");
/* harmony import */ var _decrement_cycle_counter_function__WEBPACK_IMPORTED_MODULE_113__ = __webpack_require__(/*! ./decrement-cycle-counter-function */ "./node_modules/standardized-audio-context/build/es2019/types/decrement-cycle-counter-function.js");
/* harmony import */ var _delay_node_constructor__WEBPACK_IMPORTED_MODULE_114__ = __webpack_require__(/*! ./delay-node-constructor */ "./node_modules/standardized-audio-context/build/es2019/types/delay-node-constructor.js");
/* harmony import */ var _delay_node_constructor_factory__WEBPACK_IMPORTED_MODULE_115__ = __webpack_require__(/*! ./delay-node-constructor-factory */ "./node_modules/standardized-audio-context/build/es2019/types/delay-node-constructor-factory.js");
/* harmony import */ var _delay_node_renderer_factory__WEBPACK_IMPORTED_MODULE_116__ = __webpack_require__(/*! ./delay-node-renderer-factory */ "./node_modules/standardized-audio-context/build/es2019/types/delay-node-renderer-factory.js");
/* harmony import */ var _delay_node_renderer_factory_factory__WEBPACK_IMPORTED_MODULE_117__ = __webpack_require__(/*! ./delay-node-renderer-factory-factory */ "./node_modules/standardized-audio-context/build/es2019/types/delay-node-renderer-factory-factory.js");
/* harmony import */ var _delete_active_input_connection_to_audio_node_factory__WEBPACK_IMPORTED_MODULE_118__ = __webpack_require__(/*! ./delete-active-input-connection-to-audio-node-factory */ "./node_modules/standardized-audio-context/build/es2019/types/delete-active-input-connection-to-audio-node-factory.js");
/* harmony import */ var _delete_active_input_connection_to_audio_node_function__WEBPACK_IMPORTED_MODULE_119__ = __webpack_require__(/*! ./delete-active-input-connection-to-audio-node-function */ "./node_modules/standardized-audio-context/build/es2019/types/delete-active-input-connection-to-audio-node-function.js");
/* harmony import */ var _delete_unrendered_audio_worklet_node_factory__WEBPACK_IMPORTED_MODULE_120__ = __webpack_require__(/*! ./delete-unrendered-audio-worklet-node-factory */ "./node_modules/standardized-audio-context/build/es2019/types/delete-unrendered-audio-worklet-node-factory.js");
/* harmony import */ var _delete_unrendered_audio_worklet_node_function__WEBPACK_IMPORTED_MODULE_121__ = __webpack_require__(/*! ./delete-unrendered-audio-worklet-node-function */ "./node_modules/standardized-audio-context/build/es2019/types/delete-unrendered-audio-worklet-node-function.js");
/* harmony import */ var _detect_cycles_factory__WEBPACK_IMPORTED_MODULE_122__ = __webpack_require__(/*! ./detect-cycles-factory */ "./node_modules/standardized-audio-context/build/es2019/types/detect-cycles-factory.js");
/* harmony import */ var _detect_cycles_function__WEBPACK_IMPORTED_MODULE_123__ = __webpack_require__(/*! ./detect-cycles-function */ "./node_modules/standardized-audio-context/build/es2019/types/detect-cycles-function.js");
/* harmony import */ var _disconnect_multiple_outputs_factory__WEBPACK_IMPORTED_MODULE_124__ = __webpack_require__(/*! ./disconnect-multiple-outputs-factory */ "./node_modules/standardized-audio-context/build/es2019/types/disconnect-multiple-outputs-factory.js");
/* harmony import */ var _disconnect_multiple_outputs_function__WEBPACK_IMPORTED_MODULE_125__ = __webpack_require__(/*! ./disconnect-multiple-outputs-function */ "./node_modules/standardized-audio-context/build/es2019/types/disconnect-multiple-outputs-function.js");
/* harmony import */ var _disconnect_native_audio_node_from_native_audio_node_function__WEBPACK_IMPORTED_MODULE_126__ = __webpack_require__(/*! ./disconnect-native-audio-node-from-native-audio-node-function */ "./node_modules/standardized-audio-context/build/es2019/types/disconnect-native-audio-node-from-native-audio-node-function.js");
/* harmony import */ var _distance_model_type__WEBPACK_IMPORTED_MODULE_127__ = __webpack_require__(/*! ./distance-model-type */ "./node_modules/standardized-audio-context/build/es2019/types/distance-model-type.js");
/* harmony import */ var _dynamics_compressor_node_constructor__WEBPACK_IMPORTED_MODULE_128__ = __webpack_require__(/*! ./dynamics-compressor-node-constructor */ "./node_modules/standardized-audio-context/build/es2019/types/dynamics-compressor-node-constructor.js");
/* harmony import */ var _dynamics_compressor_node_constructor_factory__WEBPACK_IMPORTED_MODULE_129__ = __webpack_require__(/*! ./dynamics-compressor-node-constructor-factory */ "./node_modules/standardized-audio-context/build/es2019/types/dynamics-compressor-node-constructor-factory.js");
/* harmony import */ var _dynamics_compressor_node_renderer_factory__WEBPACK_IMPORTED_MODULE_130__ = __webpack_require__(/*! ./dynamics-compressor-node-renderer-factory */ "./node_modules/standardized-audio-context/build/es2019/types/dynamics-compressor-node-renderer-factory.js");
/* harmony import */ var _dynamics_compressor_node_renderer_factory_factory__WEBPACK_IMPORTED_MODULE_131__ = __webpack_require__(/*! ./dynamics-compressor-node-renderer-factory-factory */ "./node_modules/standardized-audio-context/build/es2019/types/dynamics-compressor-node-renderer-factory-factory.js");
/* harmony import */ var _encoding_error_factory__WEBPACK_IMPORTED_MODULE_132__ = __webpack_require__(/*! ./encoding-error-factory */ "./node_modules/standardized-audio-context/build/es2019/types/encoding-error-factory.js");
/* harmony import */ var _error_event_handler__WEBPACK_IMPORTED_MODULE_133__ = __webpack_require__(/*! ./error-event-handler */ "./node_modules/standardized-audio-context/build/es2019/types/error-event-handler.js");
/* harmony import */ var _evaluate_audio_worklet_global_scope_function__WEBPACK_IMPORTED_MODULE_134__ = __webpack_require__(/*! ./evaluate-audio-worklet-global-scope-function */ "./node_modules/standardized-audio-context/build/es2019/types/evaluate-audio-worklet-global-scope-function.js");
/* harmony import */ var _evaluate_source_factory__WEBPACK_IMPORTED_MODULE_135__ = __webpack_require__(/*! ./evaluate-source-factory */ "./node_modules/standardized-audio-context/build/es2019/types/evaluate-source-factory.js");
/* harmony import */ var _evaluate_source_function__WEBPACK_IMPORTED_MODULE_136__ = __webpack_require__(/*! ./evaluate-source-function */ "./node_modules/standardized-audio-context/build/es2019/types/evaluate-source-function.js");
/* harmony import */ var _event_handler__WEBPACK_IMPORTED_MODULE_137__ = __webpack_require__(/*! ./event-handler */ "./node_modules/standardized-audio-context/build/es2019/types/event-handler.js");
/* harmony import */ var _event_target_constructor__WEBPACK_IMPORTED_MODULE_138__ = __webpack_require__(/*! ./event-target-constructor */ "./node_modules/standardized-audio-context/build/es2019/types/event-target-constructor.js");
/* harmony import */ var _event_target_constructor_factory__WEBPACK_IMPORTED_MODULE_139__ = __webpack_require__(/*! ./event-target-constructor-factory */ "./node_modules/standardized-audio-context/build/es2019/types/event-target-constructor-factory.js");
/* harmony import */ var _expose_current_frame_and_current_time_factory__WEBPACK_IMPORTED_MODULE_140__ = __webpack_require__(/*! ./expose-current-frame-and-current-time-factory */ "./node_modules/standardized-audio-context/build/es2019/types/expose-current-frame-and-current-time-factory.js");
/* harmony import */ var _expose_current_frame_and_current_time_function__WEBPACK_IMPORTED_MODULE_141__ = __webpack_require__(/*! ./expose-current-frame-and-current-time-function */ "./node_modules/standardized-audio-context/build/es2019/types/expose-current-frame-and-current-time-function.js");
/* harmony import */ var _fetch_source_factory__WEBPACK_IMPORTED_MODULE_142__ = __webpack_require__(/*! ./fetch-source-factory */ "./node_modules/standardized-audio-context/build/es2019/types/fetch-source-factory.js");
/* harmony import */ var _fetch_source_function__WEBPACK_IMPORTED_MODULE_143__ = __webpack_require__(/*! ./fetch-source-function */ "./node_modules/standardized-audio-context/build/es2019/types/fetch-source-function.js");
/* harmony import */ var _gain_node_constructor__WEBPACK_IMPORTED_MODULE_144__ = __webpack_require__(/*! ./gain-node-constructor */ "./node_modules/standardized-audio-context/build/es2019/types/gain-node-constructor.js");
/* harmony import */ var _gain_node_constructor_factory__WEBPACK_IMPORTED_MODULE_145__ = __webpack_require__(/*! ./gain-node-constructor-factory */ "./node_modules/standardized-audio-context/build/es2019/types/gain-node-constructor-factory.js");
/* harmony import */ var _gain_node_renderer_factory__WEBPACK_IMPORTED_MODULE_146__ = __webpack_require__(/*! ./gain-node-renderer-factory */ "./node_modules/standardized-audio-context/build/es2019/types/gain-node-renderer-factory.js");
/* harmony import */ var _gain_node_renderer_factory_factory__WEBPACK_IMPORTED_MODULE_147__ = __webpack_require__(/*! ./gain-node-renderer-factory-factory */ "./node_modules/standardized-audio-context/build/es2019/types/gain-node-renderer-factory-factory.js");
/* harmony import */ var _get_active_audio_worklet_node_inputs_factory__WEBPACK_IMPORTED_MODULE_148__ = __webpack_require__(/*! ./get-active-audio-worklet-node-inputs-factory */ "./node_modules/standardized-audio-context/build/es2019/types/get-active-audio-worklet-node-inputs-factory.js");
/* harmony import */ var _get_active_audio_worklet_node_inputs_function__WEBPACK_IMPORTED_MODULE_149__ = __webpack_require__(/*! ./get-active-audio-worklet-node-inputs-function */ "./node_modules/standardized-audio-context/build/es2019/types/get-active-audio-worklet-node-inputs-function.js");
/* harmony import */ var _get_audio_node_connections_function__WEBPACK_IMPORTED_MODULE_150__ = __webpack_require__(/*! ./get-audio-node-connections-function */ "./node_modules/standardized-audio-context/build/es2019/types/get-audio-node-connections-function.js");
/* harmony import */ var _get_audio_node_renderer_factory__WEBPACK_IMPORTED_MODULE_151__ = __webpack_require__(/*! ./get-audio-node-renderer-factory */ "./node_modules/standardized-audio-context/build/es2019/types/get-audio-node-renderer-factory.js");
/* harmony import */ var _get_audio_node_renderer_function__WEBPACK_IMPORTED_MODULE_152__ = __webpack_require__(/*! ./get-audio-node-renderer-function */ "./node_modules/standardized-audio-context/build/es2019/types/get-audio-node-renderer-function.js");
/* harmony import */ var _get_audio_node_tail_time_factory__WEBPACK_IMPORTED_MODULE_153__ = __webpack_require__(/*! ./get-audio-node-tail-time-factory */ "./node_modules/standardized-audio-context/build/es2019/types/get-audio-node-tail-time-factory.js");
/* harmony import */ var _get_audio_node_tail_time_function__WEBPACK_IMPORTED_MODULE_154__ = __webpack_require__(/*! ./get-audio-node-tail-time-function */ "./node_modules/standardized-audio-context/build/es2019/types/get-audio-node-tail-time-function.js");
/* harmony import */ var _get_audio_param_connections_function__WEBPACK_IMPORTED_MODULE_155__ = __webpack_require__(/*! ./get-audio-param-connections-function */ "./node_modules/standardized-audio-context/build/es2019/types/get-audio-param-connections-function.js");
/* harmony import */ var _get_audio_param_renderer_factory__WEBPACK_IMPORTED_MODULE_156__ = __webpack_require__(/*! ./get-audio-param-renderer-factory */ "./node_modules/standardized-audio-context/build/es2019/types/get-audio-param-renderer-factory.js");
/* harmony import */ var _get_audio_param_renderer_function__WEBPACK_IMPORTED_MODULE_157__ = __webpack_require__(/*! ./get-audio-param-renderer-function */ "./node_modules/standardized-audio-context/build/es2019/types/get-audio-param-renderer-function.js");
/* harmony import */ var _get_backup_offline_audio_context_factory__WEBPACK_IMPORTED_MODULE_158__ = __webpack_require__(/*! ./get-backup-offline-audio-context-factory */ "./node_modules/standardized-audio-context/build/es2019/types/get-backup-offline-audio-context-factory.js");
/* harmony import */ var _get_backup_offline_audio_context_function__WEBPACK_IMPORTED_MODULE_159__ = __webpack_require__(/*! ./get-backup-offline-audio-context-function */ "./node_modules/standardized-audio-context/build/es2019/types/get-backup-offline-audio-context-function.js");
/* harmony import */ var _get_event_listeners_of_audio_node_function__WEBPACK_IMPORTED_MODULE_160__ = __webpack_require__(/*! ./get-event-listeners-of-audio-node-function */ "./node_modules/standardized-audio-context/build/es2019/types/get-event-listeners-of-audio-node-function.js");
/* harmony import */ var _get_native_audio_node_function__WEBPACK_IMPORTED_MODULE_161__ = __webpack_require__(/*! ./get-native-audio-node-function */ "./node_modules/standardized-audio-context/build/es2019/types/get-native-audio-node-function.js");
/* harmony import */ var _get_native_audio_param_function__WEBPACK_IMPORTED_MODULE_162__ = __webpack_require__(/*! ./get-native-audio-param-function */ "./node_modules/standardized-audio-context/build/es2019/types/get-native-audio-param-function.js");
/* harmony import */ var _get_native_context_factory__WEBPACK_IMPORTED_MODULE_163__ = __webpack_require__(/*! ./get-native-context-factory */ "./node_modules/standardized-audio-context/build/es2019/types/get-native-context-factory.js");
/* harmony import */ var _get_native_context_function__WEBPACK_IMPORTED_MODULE_164__ = __webpack_require__(/*! ./get-native-context-function */ "./node_modules/standardized-audio-context/build/es2019/types/get-native-context-function.js");
/* harmony import */ var _get_or_create_backup_offline_audio_context_factory__WEBPACK_IMPORTED_MODULE_165__ = __webpack_require__(/*! ./get-or-create-backup-offline-audio-context-factory */ "./node_modules/standardized-audio-context/build/es2019/types/get-or-create-backup-offline-audio-context-factory.js");
/* harmony import */ var _get_or_create_backup_offline_audio_context_function__WEBPACK_IMPORTED_MODULE_166__ = __webpack_require__(/*! ./get-or-create-backup-offline-audio-context-function */ "./node_modules/standardized-audio-context/build/es2019/types/get-or-create-backup-offline-audio-context-function.js");
/* harmony import */ var _get_unrendered_audio_worklet_nodes_factory__WEBPACK_IMPORTED_MODULE_167__ = __webpack_require__(/*! ./get-unrendered-audio-worklet-nodes-factory */ "./node_modules/standardized-audio-context/build/es2019/types/get-unrendered-audio-worklet-nodes-factory.js");
/* harmony import */ var _get_unrendered_audio_worklet_nodes_function__WEBPACK_IMPORTED_MODULE_168__ = __webpack_require__(/*! ./get-unrendered-audio-worklet-nodes-function */ "./node_modules/standardized-audio-context/build/es2019/types/get-unrendered-audio-worklet-nodes-function.js");
/* harmony import */ var _get_value_for_key_function__WEBPACK_IMPORTED_MODULE_169__ = __webpack_require__(/*! ./get-value-for-key-function */ "./node_modules/standardized-audio-context/build/es2019/types/get-value-for-key-function.js");
/* harmony import */ var _iir_filter_node_constructor__WEBPACK_IMPORTED_MODULE_170__ = __webpack_require__(/*! ./iir-filter-node-constructor */ "./node_modules/standardized-audio-context/build/es2019/types/iir-filter-node-constructor.js");
/* harmony import */ var _iir_filter_node_constructor_factory__WEBPACK_IMPORTED_MODULE_171__ = __webpack_require__(/*! ./iir-filter-node-constructor-factory */ "./node_modules/standardized-audio-context/build/es2019/types/iir-filter-node-constructor-factory.js");
/* harmony import */ var _iir_filter_node_renderer_factory__WEBPACK_IMPORTED_MODULE_172__ = __webpack_require__(/*! ./iir-filter-node-renderer-factory */ "./node_modules/standardized-audio-context/build/es2019/types/iir-filter-node-renderer-factory.js");
/* harmony import */ var _iir_filter_node_renderer_factory_factory__WEBPACK_IMPORTED_MODULE_173__ = __webpack_require__(/*! ./iir-filter-node-renderer-factory-factory */ "./node_modules/standardized-audio-context/build/es2019/types/iir-filter-node-renderer-factory-factory.js");
/* harmony import */ var _increment_cycle_counter_factory__WEBPACK_IMPORTED_MODULE_174__ = __webpack_require__(/*! ./increment-cycle-counter-factory */ "./node_modules/standardized-audio-context/build/es2019/types/increment-cycle-counter-factory.js");
/* harmony import */ var _increment_cycle_counter_factory_factory__WEBPACK_IMPORTED_MODULE_175__ = __webpack_require__(/*! ./increment-cycle-counter-factory-factory */ "./node_modules/standardized-audio-context/build/es2019/types/increment-cycle-counter-factory-factory.js");
/* harmony import */ var _increment_cycle_counter_function__WEBPACK_IMPORTED_MODULE_176__ = __webpack_require__(/*! ./increment-cycle-counter-function */ "./node_modules/standardized-audio-context/build/es2019/types/increment-cycle-counter-function.js");
/* harmony import */ var _index_size_error_factory__WEBPACK_IMPORTED_MODULE_177__ = __webpack_require__(/*! ./index-size-error-factory */ "./node_modules/standardized-audio-context/build/es2019/types/index-size-error-factory.js");
/* harmony import */ var _insert_element_in_set_function__WEBPACK_IMPORTED_MODULE_178__ = __webpack_require__(/*! ./insert-element-in-set-function */ "./node_modules/standardized-audio-context/build/es2019/types/insert-element-in-set-function.js");
/* harmony import */ var _internal_state_event_listener__WEBPACK_IMPORTED_MODULE_179__ = __webpack_require__(/*! ./internal-state-event-listener */ "./node_modules/standardized-audio-context/build/es2019/types/internal-state-event-listener.js");
/* harmony import */ var _invalid_access_error_factory__WEBPACK_IMPORTED_MODULE_180__ = __webpack_require__(/*! ./invalid-access-error-factory */ "./node_modules/standardized-audio-context/build/es2019/types/invalid-access-error-factory.js");
/* harmony import */ var _invalid_state_error_factory__WEBPACK_IMPORTED_MODULE_181__ = __webpack_require__(/*! ./invalid-state-error-factory */ "./node_modules/standardized-audio-context/build/es2019/types/invalid-state-error-factory.js");
/* harmony import */ var _is_active_audio_node_function__WEBPACK_IMPORTED_MODULE_182__ = __webpack_require__(/*! ./is-active-audio-node-function */ "./node_modules/standardized-audio-context/build/es2019/types/is-active-audio-node-function.js");
/* harmony import */ var _is_any_audio_context_factory__WEBPACK_IMPORTED_MODULE_183__ = __webpack_require__(/*! ./is-any-audio-context-factory */ "./node_modules/standardized-audio-context/build/es2019/types/is-any-audio-context-factory.js");
/* harmony import */ var _is_any_audio_context_function__WEBPACK_IMPORTED_MODULE_184__ = __webpack_require__(/*! ./is-any-audio-context-function */ "./node_modules/standardized-audio-context/build/es2019/types/is-any-audio-context-function.js");
/* harmony import */ var _is_any_audio_node_factory__WEBPACK_IMPORTED_MODULE_185__ = __webpack_require__(/*! ./is-any-audio-node-factory */ "./node_modules/standardized-audio-context/build/es2019/types/is-any-audio-node-factory.js");
/* harmony import */ var _is_any_audio_node_function__WEBPACK_IMPORTED_MODULE_186__ = __webpack_require__(/*! ./is-any-audio-node-function */ "./node_modules/standardized-audio-context/build/es2019/types/is-any-audio-node-function.js");
/* harmony import */ var _is_any_audio_param_factory__WEBPACK_IMPORTED_MODULE_187__ = __webpack_require__(/*! ./is-any-audio-param-factory */ "./node_modules/standardized-audio-context/build/es2019/types/is-any-audio-param-factory.js");
/* harmony import */ var _is_any_audio_param_function__WEBPACK_IMPORTED_MODULE_188__ = __webpack_require__(/*! ./is-any-audio-param-function */ "./node_modules/standardized-audio-context/build/es2019/types/is-any-audio-param-function.js");
/* harmony import */ var _is_any_offline_audio_context_factory__WEBPACK_IMPORTED_MODULE_189__ = __webpack_require__(/*! ./is-any-offline-audio-context-factory */ "./node_modules/standardized-audio-context/build/es2019/types/is-any-offline-audio-context-factory.js");
/* harmony import */ var _is_any_offline_audio_context_function__WEBPACK_IMPORTED_MODULE_190__ = __webpack_require__(/*! ./is-any-offline-audio-context-function */ "./node_modules/standardized-audio-context/build/es2019/types/is-any-offline-audio-context-function.js");
/* harmony import */ var _is_dc_curve_function__WEBPACK_IMPORTED_MODULE_191__ = __webpack_require__(/*! ./is-dc-curve-function */ "./node_modules/standardized-audio-context/build/es2019/types/is-dc-curve-function.js");
/* harmony import */ var _is_native_audio_context_factory__WEBPACK_IMPORTED_MODULE_192__ = __webpack_require__(/*! ./is-native-audio-context-factory */ "./node_modules/standardized-audio-context/build/es2019/types/is-native-audio-context-factory.js");
/* harmony import */ var _is_native_audio_context_function__WEBPACK_IMPORTED_MODULE_193__ = __webpack_require__(/*! ./is-native-audio-context-function */ "./node_modules/standardized-audio-context/build/es2019/types/is-native-audio-context-function.js");
/* harmony import */ var _is_native_audio_node_factory__WEBPACK_IMPORTED_MODULE_194__ = __webpack_require__(/*! ./is-native-audio-node-factory */ "./node_modules/standardized-audio-context/build/es2019/types/is-native-audio-node-factory.js");
/* harmony import */ var _is_native_audio_node_function__WEBPACK_IMPORTED_MODULE_195__ = __webpack_require__(/*! ./is-native-audio-node-function */ "./node_modules/standardized-audio-context/build/es2019/types/is-native-audio-node-function.js");
/* harmony import */ var _is_native_audio_param_factory__WEBPACK_IMPORTED_MODULE_196__ = __webpack_require__(/*! ./is-native-audio-param-factory */ "./node_modules/standardized-audio-context/build/es2019/types/is-native-audio-param-factory.js");
/* harmony import */ var _is_native_audio_param_function__WEBPACK_IMPORTED_MODULE_197__ = __webpack_require__(/*! ./is-native-audio-param-function */ "./node_modules/standardized-audio-context/build/es2019/types/is-native-audio-param-function.js");
/* harmony import */ var _is_native_context_factory__WEBPACK_IMPORTED_MODULE_198__ = __webpack_require__(/*! ./is-native-context-factory */ "./node_modules/standardized-audio-context/build/es2019/types/is-native-context-factory.js");
/* harmony import */ var _is_native_context_function__WEBPACK_IMPORTED_MODULE_199__ = __webpack_require__(/*! ./is-native-context-function */ "./node_modules/standardized-audio-context/build/es2019/types/is-native-context-function.js");
/* harmony import */ var _is_native_offline_audio_context_factory__WEBPACK_IMPORTED_MODULE_200__ = __webpack_require__(/*! ./is-native-offline-audio-context-factory */ "./node_modules/standardized-audio-context/build/es2019/types/is-native-offline-audio-context-factory.js");
/* harmony import */ var _is_native_offline_audio_context_function__WEBPACK_IMPORTED_MODULE_201__ = __webpack_require__(/*! ./is-native-offline-audio-context-function */ "./node_modules/standardized-audio-context/build/es2019/types/is-native-offline-audio-context-function.js");
/* harmony import */ var _is_part_of_a_cycle_function__WEBPACK_IMPORTED_MODULE_202__ = __webpack_require__(/*! ./is-part-of-a-cycle-function */ "./node_modules/standardized-audio-context/build/es2019/types/is-part-of-a-cycle-function.js");
/* harmony import */ var _is_passive_audio_node_function__WEBPACK_IMPORTED_MODULE_203__ = __webpack_require__(/*! ./is-passive-audio-node-function */ "./node_modules/standardized-audio-context/build/es2019/types/is-passive-audio-node-function.js");
/* harmony import */ var _is_secure_context_factory__WEBPACK_IMPORTED_MODULE_204__ = __webpack_require__(/*! ./is-secure-context-factory */ "./node_modules/standardized-audio-context/build/es2019/types/is-secure-context-factory.js");
/* harmony import */ var _is_supported_promise_factory__WEBPACK_IMPORTED_MODULE_205__ = __webpack_require__(/*! ./is-supported-promise-factory */ "./node_modules/standardized-audio-context/build/es2019/types/is-supported-promise-factory.js");
/* harmony import */ var _media_element_audio_source_node_constructor__WEBPACK_IMPORTED_MODULE_206__ = __webpack_require__(/*! ./media-element-audio-source-node-constructor */ "./node_modules/standardized-audio-context/build/es2019/types/media-element-audio-source-node-constructor.js");
/* harmony import */ var _media_element_audio_source_node_constructor_factory__WEBPACK_IMPORTED_MODULE_207__ = __webpack_require__(/*! ./media-element-audio-source-node-constructor-factory */ "./node_modules/standardized-audio-context/build/es2019/types/media-element-audio-source-node-constructor-factory.js");
/* harmony import */ var _media_stream_audio_destination_node_constructor__WEBPACK_IMPORTED_MODULE_208__ = __webpack_require__(/*! ./media-stream-audio-destination-node-constructor */ "./node_modules/standardized-audio-context/build/es2019/types/media-stream-audio-destination-node-constructor.js");
/* harmony import */ var _media_stream_audio_destination_node_constructor_factory__WEBPACK_IMPORTED_MODULE_209__ = __webpack_require__(/*! ./media-stream-audio-destination-node-constructor-factory */ "./node_modules/standardized-audio-context/build/es2019/types/media-stream-audio-destination-node-constructor-factory.js");
/* harmony import */ var _media_stream_audio_source_node_constructor__WEBPACK_IMPORTED_MODULE_210__ = __webpack_require__(/*! ./media-stream-audio-source-node-constructor */ "./node_modules/standardized-audio-context/build/es2019/types/media-stream-audio-source-node-constructor.js");
/* harmony import */ var _media_stream_audio_source_node_constructor_factory__WEBPACK_IMPORTED_MODULE_211__ = __webpack_require__(/*! ./media-stream-audio-source-node-constructor-factory */ "./node_modules/standardized-audio-context/build/es2019/types/media-stream-audio-source-node-constructor-factory.js");
/* harmony import */ var _media_stream_track_audio_source_node_constructor__WEBPACK_IMPORTED_MODULE_212__ = __webpack_require__(/*! ./media-stream-track-audio-source-node-constructor */ "./node_modules/standardized-audio-context/build/es2019/types/media-stream-track-audio-source-node-constructor.js");
/* harmony import */ var _media_stream_track_audio_source_node_constructor_factory__WEBPACK_IMPORTED_MODULE_213__ = __webpack_require__(/*! ./media-stream-track-audio-source-node-constructor-factory */ "./node_modules/standardized-audio-context/build/es2019/types/media-stream-track-audio-source-node-constructor-factory.js");
/* harmony import */ var _minimal_audio_context_constructor__WEBPACK_IMPORTED_MODULE_214__ = __webpack_require__(/*! ./minimal-audio-context-constructor */ "./node_modules/standardized-audio-context/build/es2019/types/minimal-audio-context-constructor.js");
/* harmony import */ var _minimal_audio_context_constructor_factory__WEBPACK_IMPORTED_MODULE_215__ = __webpack_require__(/*! ./minimal-audio-context-constructor-factory */ "./node_modules/standardized-audio-context/build/es2019/types/minimal-audio-context-constructor-factory.js");
/* harmony import */ var _minimal_base_audio_context_constructor__WEBPACK_IMPORTED_MODULE_216__ = __webpack_require__(/*! ./minimal-base-audio-context-constructor */ "./node_modules/standardized-audio-context/build/es2019/types/minimal-base-audio-context-constructor.js");
/* harmony import */ var _minimal_base_audio_context_constructor_factory__WEBPACK_IMPORTED_MODULE_217__ = __webpack_require__(/*! ./minimal-base-audio-context-constructor-factory */ "./node_modules/standardized-audio-context/build/es2019/types/minimal-base-audio-context-constructor-factory.js");
/* harmony import */ var _minimal_offline_audio_context_constructor__WEBPACK_IMPORTED_MODULE_218__ = __webpack_require__(/*! ./minimal-offline-audio-context-constructor */ "./node_modules/standardized-audio-context/build/es2019/types/minimal-offline-audio-context-constructor.js");
/* harmony import */ var _minimal_offline_audio_context_constructor_factory__WEBPACK_IMPORTED_MODULE_219__ = __webpack_require__(/*! ./minimal-offline-audio-context-constructor-factory */ "./node_modules/standardized-audio-context/build/es2019/types/minimal-offline-audio-context-constructor-factory.js");
/* harmony import */ var _monitor_connections_factory__WEBPACK_IMPORTED_MODULE_220__ = __webpack_require__(/*! ./monitor-connections-factory */ "./node_modules/standardized-audio-context/build/es2019/types/monitor-connections-factory.js");
/* harmony import */ var _monitor_connections_function__WEBPACK_IMPORTED_MODULE_221__ = __webpack_require__(/*! ./monitor-connections-function */ "./node_modules/standardized-audio-context/build/es2019/types/monitor-connections-function.js");
/* harmony import */ var _native_analyser_node__WEBPACK_IMPORTED_MODULE_222__ = __webpack_require__(/*! ./native-analyser-node */ "./node_modules/standardized-audio-context/build/es2019/types/native-analyser-node.js");
/* harmony import */ var _native_analyser_node_factory__WEBPACK_IMPORTED_MODULE_223__ = __webpack_require__(/*! ./native-analyser-node-factory */ "./node_modules/standardized-audio-context/build/es2019/types/native-analyser-node-factory.js");
/* harmony import */ var _native_analyser_node_factory_factory__WEBPACK_IMPORTED_MODULE_224__ = __webpack_require__(/*! ./native-analyser-node-factory-factory */ "./node_modules/standardized-audio-context/build/es2019/types/native-analyser-node-factory-factory.js");
/* harmony import */ var _native_audio_buffer__WEBPACK_IMPORTED_MODULE_225__ = __webpack_require__(/*! ./native-audio-buffer */ "./node_modules/standardized-audio-context/build/es2019/types/native-audio-buffer.js");
/* harmony import */ var _native_audio_buffer_constructor__WEBPACK_IMPORTED_MODULE_226__ = __webpack_require__(/*! ./native-audio-buffer-constructor */ "./node_modules/standardized-audio-context/build/es2019/types/native-audio-buffer-constructor.js");
/* harmony import */ var _native_audio_buffer_constructor_factory__WEBPACK_IMPORTED_MODULE_227__ = __webpack_require__(/*! ./native-audio-buffer-constructor-factory */ "./node_modules/standardized-audio-context/build/es2019/types/native-audio-buffer-constructor-factory.js");
/* harmony import */ var _native_audio_buffer_source_node__WEBPACK_IMPORTED_MODULE_228__ = __webpack_require__(/*! ./native-audio-buffer-source-node */ "./node_modules/standardized-audio-context/build/es2019/types/native-audio-buffer-source-node.js");
/* harmony import */ var _native_audio_buffer_source_node_factory__WEBPACK_IMPORTED_MODULE_229__ = __webpack_require__(/*! ./native-audio-buffer-source-node-factory */ "./node_modules/standardized-audio-context/build/es2019/types/native-audio-buffer-source-node-factory.js");
/* harmony import */ var _native_audio_buffer_source_node_factory_factory__WEBPACK_IMPORTED_MODULE_230__ = __webpack_require__(/*! ./native-audio-buffer-source-node-factory-factory */ "./node_modules/standardized-audio-context/build/es2019/types/native-audio-buffer-source-node-factory-factory.js");
/* harmony import */ var _native_audio_context__WEBPACK_IMPORTED_MODULE_231__ = __webpack_require__(/*! ./native-audio-context */ "./node_modules/standardized-audio-context/build/es2019/types/native-audio-context.js");
/* harmony import */ var _native_audio_context_constructor__WEBPACK_IMPORTED_MODULE_232__ = __webpack_require__(/*! ./native-audio-context-constructor */ "./node_modules/standardized-audio-context/build/es2019/types/native-audio-context-constructor.js");
/* harmony import */ var _native_audio_context_constructor_factory__WEBPACK_IMPORTED_MODULE_233__ = __webpack_require__(/*! ./native-audio-context-constructor-factory */ "./node_modules/standardized-audio-context/build/es2019/types/native-audio-context-constructor-factory.js");
/* harmony import */ var _native_audio_destination_node__WEBPACK_IMPORTED_MODULE_234__ = __webpack_require__(/*! ./native-audio-destination-node */ "./node_modules/standardized-audio-context/build/es2019/types/native-audio-destination-node.js");
/* harmony import */ var _native_audio_destination_node_factory__WEBPACK_IMPORTED_MODULE_235__ = __webpack_require__(/*! ./native-audio-destination-node-factory */ "./node_modules/standardized-audio-context/build/es2019/types/native-audio-destination-node-factory.js");
/* harmony import */ var _native_audio_destination_node_factory_factory__WEBPACK_IMPORTED_MODULE_236__ = __webpack_require__(/*! ./native-audio-destination-node-factory-factory */ "./node_modules/standardized-audio-context/build/es2019/types/native-audio-destination-node-factory-factory.js");
/* harmony import */ var _native_audio_listener__WEBPACK_IMPORTED_MODULE_237__ = __webpack_require__(/*! ./native-audio-listener */ "./node_modules/standardized-audio-context/build/es2019/types/native-audio-listener.js");
/* harmony import */ var _native_audio_node__WEBPACK_IMPORTED_MODULE_238__ = __webpack_require__(/*! ./native-audio-node */ "./node_modules/standardized-audio-context/build/es2019/types/native-audio-node.js");
/* harmony import */ var _native_audio_param__WEBPACK_IMPORTED_MODULE_239__ = __webpack_require__(/*! ./native-audio-param */ "./node_modules/standardized-audio-context/build/es2019/types/native-audio-param.js");
/* harmony import */ var _native_audio_param_map__WEBPACK_IMPORTED_MODULE_240__ = __webpack_require__(/*! ./native-audio-param-map */ "./node_modules/standardized-audio-context/build/es2019/types/native-audio-param-map.js");
/* harmony import */ var _native_audio_worklet__WEBPACK_IMPORTED_MODULE_241__ = __webpack_require__(/*! ./native-audio-worklet */ "./node_modules/standardized-audio-context/build/es2019/types/native-audio-worklet.js");
/* harmony import */ var _native_audio_worklet_node__WEBPACK_IMPORTED_MODULE_242__ = __webpack_require__(/*! ./native-audio-worklet-node */ "./node_modules/standardized-audio-context/build/es2019/types/native-audio-worklet-node.js");
/* harmony import */ var _native_audio_worklet_node_constructor__WEBPACK_IMPORTED_MODULE_243__ = __webpack_require__(/*! ./native-audio-worklet-node-constructor */ "./node_modules/standardized-audio-context/build/es2019/types/native-audio-worklet-node-constructor.js");
/* harmony import */ var _native_audio_worklet_node_constructor_factory__WEBPACK_IMPORTED_MODULE_244__ = __webpack_require__(/*! ./native-audio-worklet-node-constructor-factory */ "./node_modules/standardized-audio-context/build/es2019/types/native-audio-worklet-node-constructor-factory.js");
/* harmony import */ var _native_audio_worklet_node_factory__WEBPACK_IMPORTED_MODULE_245__ = __webpack_require__(/*! ./native-audio-worklet-node-factory */ "./node_modules/standardized-audio-context/build/es2019/types/native-audio-worklet-node-factory.js");
/* harmony import */ var _native_audio_worklet_node_factory_factory__WEBPACK_IMPORTED_MODULE_246__ = __webpack_require__(/*! ./native-audio-worklet-node-factory-factory */ "./node_modules/standardized-audio-context/build/es2019/types/native-audio-worklet-node-factory-factory.js");
/* harmony import */ var _native_audio_worklet_node_faker_factory__WEBPACK_IMPORTED_MODULE_247__ = __webpack_require__(/*! ./native-audio-worklet-node-faker-factory */ "./node_modules/standardized-audio-context/build/es2019/types/native-audio-worklet-node-faker-factory.js");
/* harmony import */ var _native_audio_worklet_node_faker_factory_factory__WEBPACK_IMPORTED_MODULE_248__ = __webpack_require__(/*! ./native-audio-worklet-node-faker-factory-factory */ "./node_modules/standardized-audio-context/build/es2019/types/native-audio-worklet-node-faker-factory-factory.js");
/* harmony import */ var _native_audio_worklet_node_options__WEBPACK_IMPORTED_MODULE_249__ = __webpack_require__(/*! ./native-audio-worklet-node-options */ "./node_modules/standardized-audio-context/build/es2019/types/native-audio-worklet-node-options.js");
/* harmony import */ var _native_biquad_filter_node__WEBPACK_IMPORTED_MODULE_250__ = __webpack_require__(/*! ./native-biquad-filter-node */ "./node_modules/standardized-audio-context/build/es2019/types/native-biquad-filter-node.js");
/* harmony import */ var _native_biquad_filter_node_factory__WEBPACK_IMPORTED_MODULE_251__ = __webpack_require__(/*! ./native-biquad-filter-node-factory */ "./node_modules/standardized-audio-context/build/es2019/types/native-biquad-filter-node-factory.js");
/* harmony import */ var _native_channel_merger_node__WEBPACK_IMPORTED_MODULE_252__ = __webpack_require__(/*! ./native-channel-merger-node */ "./node_modules/standardized-audio-context/build/es2019/types/native-channel-merger-node.js");
/* harmony import */ var _native_channel_merger_node_factory__WEBPACK_IMPORTED_MODULE_253__ = __webpack_require__(/*! ./native-channel-merger-node-factory */ "./node_modules/standardized-audio-context/build/es2019/types/native-channel-merger-node-factory.js");
/* harmony import */ var _native_channel_merger_node_factory_factory__WEBPACK_IMPORTED_MODULE_254__ = __webpack_require__(/*! ./native-channel-merger-node-factory-factory */ "./node_modules/standardized-audio-context/build/es2019/types/native-channel-merger-node-factory-factory.js");
/* harmony import */ var _native_channel_splitter_node__WEBPACK_IMPORTED_MODULE_255__ = __webpack_require__(/*! ./native-channel-splitter-node */ "./node_modules/standardized-audio-context/build/es2019/types/native-channel-splitter-node.js");
/* harmony import */ var _native_channel_splitter_node_factory__WEBPACK_IMPORTED_MODULE_256__ = __webpack_require__(/*! ./native-channel-splitter-node-factory */ "./node_modules/standardized-audio-context/build/es2019/types/native-channel-splitter-node-factory.js");
/* harmony import */ var _native_constant_source_node__WEBPACK_IMPORTED_MODULE_257__ = __webpack_require__(/*! ./native-constant-source-node */ "./node_modules/standardized-audio-context/build/es2019/types/native-constant-source-node.js");
/* harmony import */ var _native_constant_source_node_factory__WEBPACK_IMPORTED_MODULE_258__ = __webpack_require__(/*! ./native-constant-source-node-factory */ "./node_modules/standardized-audio-context/build/es2019/types/native-constant-source-node-factory.js");
/* harmony import */ var _native_constant_source_node_factory_factory__WEBPACK_IMPORTED_MODULE_259__ = __webpack_require__(/*! ./native-constant-source-node-factory-factory */ "./node_modules/standardized-audio-context/build/es2019/types/native-constant-source-node-factory-factory.js");
/* harmony import */ var _native_constant_source_node_faker_factory__WEBPACK_IMPORTED_MODULE_260__ = __webpack_require__(/*! ./native-constant-source-node-faker-factory */ "./node_modules/standardized-audio-context/build/es2019/types/native-constant-source-node-faker-factory.js");
/* harmony import */ var _native_constant_source_node_faker_factory_factory__WEBPACK_IMPORTED_MODULE_261__ = __webpack_require__(/*! ./native-constant-source-node-faker-factory-factory */ "./node_modules/standardized-audio-context/build/es2019/types/native-constant-source-node-faker-factory-factory.js");
/* harmony import */ var _native_context__WEBPACK_IMPORTED_MODULE_262__ = __webpack_require__(/*! ./native-context */ "./node_modules/standardized-audio-context/build/es2019/types/native-context.js");
/* harmony import */ var _native_convolver_node__WEBPACK_IMPORTED_MODULE_263__ = __webpack_require__(/*! ./native-convolver-node */ "./node_modules/standardized-audio-context/build/es2019/types/native-convolver-node.js");
/* harmony import */ var _native_convolver_node_factory__WEBPACK_IMPORTED_MODULE_264__ = __webpack_require__(/*! ./native-convolver-node-factory */ "./node_modules/standardized-audio-context/build/es2019/types/native-convolver-node-factory.js");
/* harmony import */ var _native_convolver_node_factory_factory__WEBPACK_IMPORTED_MODULE_265__ = __webpack_require__(/*! ./native-convolver-node-factory-factory */ "./node_modules/standardized-audio-context/build/es2019/types/native-convolver-node-factory-factory.js");
/* harmony import */ var _native_delay_node_factory__WEBPACK_IMPORTED_MODULE_266__ = __webpack_require__(/*! ./native-delay-node-factory */ "./node_modules/standardized-audio-context/build/es2019/types/native-delay-node-factory.js");
/* harmony import */ var _native_delay_node__WEBPACK_IMPORTED_MODULE_267__ = __webpack_require__(/*! ./native-delay-node */ "./node_modules/standardized-audio-context/build/es2019/types/native-delay-node.js");
/* harmony import */ var _native_dynamics_compressor_node__WEBPACK_IMPORTED_MODULE_268__ = __webpack_require__(/*! ./native-dynamics-compressor-node */ "./node_modules/standardized-audio-context/build/es2019/types/native-dynamics-compressor-node.js");
/* harmony import */ var _native_dynamics_compressor_node_factory__WEBPACK_IMPORTED_MODULE_269__ = __webpack_require__(/*! ./native-dynamics-compressor-node-factory */ "./node_modules/standardized-audio-context/build/es2019/types/native-dynamics-compressor-node-factory.js");
/* harmony import */ var _native_dynamics_compressor_node_factory_factory__WEBPACK_IMPORTED_MODULE_270__ = __webpack_require__(/*! ./native-dynamics-compressor-node-factory-factory */ "./node_modules/standardized-audio-context/build/es2019/types/native-dynamics-compressor-node-factory-factory.js");
/* harmony import */ var _native_event_target__WEBPACK_IMPORTED_MODULE_271__ = __webpack_require__(/*! ./native-event-target */ "./node_modules/standardized-audio-context/build/es2019/types/native-event-target.js");
/* harmony import */ var _native_gain_node__WEBPACK_IMPORTED_MODULE_272__ = __webpack_require__(/*! ./native-gain-node */ "./node_modules/standardized-audio-context/build/es2019/types/native-gain-node.js");
/* harmony import */ var _native_gain_node_factory__WEBPACK_IMPORTED_MODULE_273__ = __webpack_require__(/*! ./native-gain-node-factory */ "./node_modules/standardized-audio-context/build/es2019/types/native-gain-node-factory.js");
/* harmony import */ var _native_iir_filter_node__WEBPACK_IMPORTED_MODULE_274__ = __webpack_require__(/*! ./native-iir-filter-node */ "./node_modules/standardized-audio-context/build/es2019/types/native-iir-filter-node.js");
/* harmony import */ var _native_iir_filter_node_factory__WEBPACK_IMPORTED_MODULE_275__ = __webpack_require__(/*! ./native-iir-filter-node-factory */ "./node_modules/standardized-audio-context/build/es2019/types/native-iir-filter-node-factory.js");
/* harmony import */ var _native_iir_filter_node_factory_factory__WEBPACK_IMPORTED_MODULE_276__ = __webpack_require__(/*! ./native-iir-filter-node-factory-factory */ "./node_modules/standardized-audio-context/build/es2019/types/native-iir-filter-node-factory-factory.js");
/* harmony import */ var _native_iir_filter_node_faker_factory__WEBPACK_IMPORTED_MODULE_277__ = __webpack_require__(/*! ./native-iir-filter-node-faker-factory */ "./node_modules/standardized-audio-context/build/es2019/types/native-iir-filter-node-faker-factory.js");
/* harmony import */ var _native_iir_filter_node_faker_factory_factory__WEBPACK_IMPORTED_MODULE_278__ = __webpack_require__(/*! ./native-iir-filter-node-faker-factory-factory */ "./node_modules/standardized-audio-context/build/es2019/types/native-iir-filter-node-faker-factory-factory.js");
/* harmony import */ var _native_media_element_audio_source_node__WEBPACK_IMPORTED_MODULE_279__ = __webpack_require__(/*! ./native-media-element-audio-source-node */ "./node_modules/standardized-audio-context/build/es2019/types/native-media-element-audio-source-node.js");
/* harmony import */ var _native_media_element_audio_source_node_factory__WEBPACK_IMPORTED_MODULE_280__ = __webpack_require__(/*! ./native-media-element-audio-source-node-factory */ "./node_modules/standardized-audio-context/build/es2019/types/native-media-element-audio-source-node-factory.js");
/* harmony import */ var _native_media_stream_audio_destination_node__WEBPACK_IMPORTED_MODULE_281__ = __webpack_require__(/*! ./native-media-stream-audio-destination-node */ "./node_modules/standardized-audio-context/build/es2019/types/native-media-stream-audio-destination-node.js");
/* harmony import */ var _native_media_stream_audio_destination_node_factory__WEBPACK_IMPORTED_MODULE_282__ = __webpack_require__(/*! ./native-media-stream-audio-destination-node-factory */ "./node_modules/standardized-audio-context/build/es2019/types/native-media-stream-audio-destination-node-factory.js");
/* harmony import */ var _native_media_stream_audio_source_node__WEBPACK_IMPORTED_MODULE_283__ = __webpack_require__(/*! ./native-media-stream-audio-source-node */ "./node_modules/standardized-audio-context/build/es2019/types/native-media-stream-audio-source-node.js");
/* harmony import */ var _native_media_stream_audio_source_node_factory__WEBPACK_IMPORTED_MODULE_284__ = __webpack_require__(/*! ./native-media-stream-audio-source-node-factory */ "./node_modules/standardized-audio-context/build/es2019/types/native-media-stream-audio-source-node-factory.js");
/* harmony import */ var _native_media_stream_track_audio_source_node__WEBPACK_IMPORTED_MODULE_285__ = __webpack_require__(/*! ./native-media-stream-track-audio-source-node */ "./node_modules/standardized-audio-context/build/es2019/types/native-media-stream-track-audio-source-node.js");
/* harmony import */ var _native_media_stream_track_audio_source_node_factory__WEBPACK_IMPORTED_MODULE_286__ = __webpack_require__(/*! ./native-media-stream-track-audio-source-node-factory */ "./node_modules/standardized-audio-context/build/es2019/types/native-media-stream-track-audio-source-node-factory.js");
/* harmony import */ var _native_media_stream_track_audio_source_node_factory_factory__WEBPACK_IMPORTED_MODULE_287__ = __webpack_require__(/*! ./native-media-stream-track-audio-source-node-factory-factory */ "./node_modules/standardized-audio-context/build/es2019/types/native-media-stream-track-audio-source-node-factory-factory.js");
/* harmony import */ var _native_offline_audio_context__WEBPACK_IMPORTED_MODULE_288__ = __webpack_require__(/*! ./native-offline-audio-context */ "./node_modules/standardized-audio-context/build/es2019/types/native-offline-audio-context.js");
/* harmony import */ var _native_offline_audio_context_constructor__WEBPACK_IMPORTED_MODULE_289__ = __webpack_require__(/*! ./native-offline-audio-context-constructor */ "./node_modules/standardized-audio-context/build/es2019/types/native-offline-audio-context-constructor.js");
/* harmony import */ var _native_offline_audio_context_constructor_factory__WEBPACK_IMPORTED_MODULE_290__ = __webpack_require__(/*! ./native-offline-audio-context-constructor-factory */ "./node_modules/standardized-audio-context/build/es2019/types/native-offline-audio-context-constructor-factory.js");
/* harmony import */ var _native_oscillator_node__WEBPACK_IMPORTED_MODULE_291__ = __webpack_require__(/*! ./native-oscillator-node */ "./node_modules/standardized-audio-context/build/es2019/types/native-oscillator-node.js");
/* harmony import */ var _native_oscillator_node_factory__WEBPACK_IMPORTED_MODULE_292__ = __webpack_require__(/*! ./native-oscillator-node-factory */ "./node_modules/standardized-audio-context/build/es2019/types/native-oscillator-node-factory.js");
/* harmony import */ var _native_oscillator_node_factory_factory__WEBPACK_IMPORTED_MODULE_293__ = __webpack_require__(/*! ./native-oscillator-node-factory-factory */ "./node_modules/standardized-audio-context/build/es2019/types/native-oscillator-node-factory-factory.js");
/* harmony import */ var _native_panner_node__WEBPACK_IMPORTED_MODULE_294__ = __webpack_require__(/*! ./native-panner-node */ "./node_modules/standardized-audio-context/build/es2019/types/native-panner-node.js");
/* harmony import */ var _native_panner_node_factory__WEBPACK_IMPORTED_MODULE_295__ = __webpack_require__(/*! ./native-panner-node-factory */ "./node_modules/standardized-audio-context/build/es2019/types/native-panner-node-factory.js");
/* harmony import */ var _native_panner_node_factory_factory__WEBPACK_IMPORTED_MODULE_296__ = __webpack_require__(/*! ./native-panner-node-factory-factory */ "./node_modules/standardized-audio-context/build/es2019/types/native-panner-node-factory-factory.js");
/* harmony import */ var _native_panner_node_faker_factory__WEBPACK_IMPORTED_MODULE_297__ = __webpack_require__(/*! ./native-panner-node-faker-factory */ "./node_modules/standardized-audio-context/build/es2019/types/native-panner-node-faker-factory.js");
/* harmony import */ var _native_panner_node_faker_factory_factory__WEBPACK_IMPORTED_MODULE_298__ = __webpack_require__(/*! ./native-panner-node-faker-factory-factory */ "./node_modules/standardized-audio-context/build/es2019/types/native-panner-node-faker-factory-factory.js");
/* harmony import */ var _native_periodic_wave__WEBPACK_IMPORTED_MODULE_299__ = __webpack_require__(/*! ./native-periodic-wave */ "./node_modules/standardized-audio-context/build/es2019/types/native-periodic-wave.js");
/* harmony import */ var _native_periodic_wave_factory__WEBPACK_IMPORTED_MODULE_300__ = __webpack_require__(/*! ./native-periodic-wave-factory */ "./node_modules/standardized-audio-context/build/es2019/types/native-periodic-wave-factory.js");
/* harmony import */ var _native_periodic_wave_factory_factory__WEBPACK_IMPORTED_MODULE_301__ = __webpack_require__(/*! ./native-periodic-wave-factory-factory */ "./node_modules/standardized-audio-context/build/es2019/types/native-periodic-wave-factory-factory.js");
/* harmony import */ var _native_script_processor_node__WEBPACK_IMPORTED_MODULE_302__ = __webpack_require__(/*! ./native-script-processor-node */ "./node_modules/standardized-audio-context/build/es2019/types/native-script-processor-node.js");
/* harmony import */ var _native_script_processor_node_factory__WEBPACK_IMPORTED_MODULE_303__ = __webpack_require__(/*! ./native-script-processor-node-factory */ "./node_modules/standardized-audio-context/build/es2019/types/native-script-processor-node-factory.js");
/* harmony import */ var _native_stereo_panner_node__WEBPACK_IMPORTED_MODULE_304__ = __webpack_require__(/*! ./native-stereo-panner-node */ "./node_modules/standardized-audio-context/build/es2019/types/native-stereo-panner-node.js");
/* harmony import */ var _native_stereo_panner_node_factory__WEBPACK_IMPORTED_MODULE_305__ = __webpack_require__(/*! ./native-stereo-panner-node-factory */ "./node_modules/standardized-audio-context/build/es2019/types/native-stereo-panner-node-factory.js");
/* harmony import */ var _native_stereo_panner_node_factory_factory__WEBPACK_IMPORTED_MODULE_306__ = __webpack_require__(/*! ./native-stereo-panner-node-factory-factory */ "./node_modules/standardized-audio-context/build/es2019/types/native-stereo-panner-node-factory-factory.js");
/* harmony import */ var _native_stereo_panner_node_faker_factory__WEBPACK_IMPORTED_MODULE_307__ = __webpack_require__(/*! ./native-stereo-panner-node-faker-factory */ "./node_modules/standardized-audio-context/build/es2019/types/native-stereo-panner-node-faker-factory.js");
/* harmony import */ var _native_stereo_panner_node_faker_factory_factory__WEBPACK_IMPORTED_MODULE_308__ = __webpack_require__(/*! ./native-stereo-panner-node-faker-factory-factory */ "./node_modules/standardized-audio-context/build/es2019/types/native-stereo-panner-node-faker-factory-factory.js");
/* harmony import */ var _native_wave_shaper_node__WEBPACK_IMPORTED_MODULE_309__ = __webpack_require__(/*! ./native-wave-shaper-node */ "./node_modules/standardized-audio-context/build/es2019/types/native-wave-shaper-node.js");
/* harmony import */ var _native_wave_shaper_node_factory__WEBPACK_IMPORTED_MODULE_310__ = __webpack_require__(/*! ./native-wave-shaper-node-factory */ "./node_modules/standardized-audio-context/build/es2019/types/native-wave-shaper-node-factory.js");
/* harmony import */ var _native_wave_shaper_node_factory_factory__WEBPACK_IMPORTED_MODULE_311__ = __webpack_require__(/*! ./native-wave-shaper-node-factory-factory */ "./node_modules/standardized-audio-context/build/es2019/types/native-wave-shaper-node-factory-factory.js");
/* harmony import */ var _native_wave_shaper_node_faker_factory__WEBPACK_IMPORTED_MODULE_312__ = __webpack_require__(/*! ./native-wave-shaper-node-faker-factory */ "./node_modules/standardized-audio-context/build/es2019/types/native-wave-shaper-node-faker-factory.js");
/* harmony import */ var _native_wave_shaper_node_faker_factory_factory__WEBPACK_IMPORTED_MODULE_313__ = __webpack_require__(/*! ./native-wave-shaper-node-faker-factory-factory */ "./node_modules/standardized-audio-context/build/es2019/types/native-wave-shaper-node-faker-factory-factory.js");
/* harmony import */ var _not_supported_error_factory__WEBPACK_IMPORTED_MODULE_314__ = __webpack_require__(/*! ./not-supported-error-factory */ "./node_modules/standardized-audio-context/build/es2019/types/not-supported-error-factory.js");
/* harmony import */ var _offline_audio_context_constructor_factory__WEBPACK_IMPORTED_MODULE_315__ = __webpack_require__(/*! ./offline-audio-context-constructor-factory */ "./node_modules/standardized-audio-context/build/es2019/types/offline-audio-context-constructor-factory.js");
/* harmony import */ var _oscillator_node_constructor__WEBPACK_IMPORTED_MODULE_316__ = __webpack_require__(/*! ./oscillator-node-constructor */ "./node_modules/standardized-audio-context/build/es2019/types/oscillator-node-constructor.js");
/* harmony import */ var _oscillator_node_constructor_factory__WEBPACK_IMPORTED_MODULE_317__ = __webpack_require__(/*! ./oscillator-node-constructor-factory */ "./node_modules/standardized-audio-context/build/es2019/types/oscillator-node-constructor-factory.js");
/* harmony import */ var _oscillator_node_renderer__WEBPACK_IMPORTED_MODULE_318__ = __webpack_require__(/*! ./oscillator-node-renderer */ "./node_modules/standardized-audio-context/build/es2019/types/oscillator-node-renderer.js");
/* harmony import */ var _oscillator_node_renderer_factory__WEBPACK_IMPORTED_MODULE_319__ = __webpack_require__(/*! ./oscillator-node-renderer-factory */ "./node_modules/standardized-audio-context/build/es2019/types/oscillator-node-renderer-factory.js");
/* harmony import */ var _oscillator_node_renderer_factory_factory__WEBPACK_IMPORTED_MODULE_320__ = __webpack_require__(/*! ./oscillator-node-renderer-factory-factory */ "./node_modules/standardized-audio-context/build/es2019/types/oscillator-node-renderer-factory-factory.js");
/* harmony import */ var _oscillator_type__WEBPACK_IMPORTED_MODULE_321__ = __webpack_require__(/*! ./oscillator-type */ "./node_modules/standardized-audio-context/build/es2019/types/oscillator-type.js");
/* harmony import */ var _output_connection__WEBPACK_IMPORTED_MODULE_322__ = __webpack_require__(/*! ./output-connection */ "./node_modules/standardized-audio-context/build/es2019/types/output-connection.js");
/* harmony import */ var _over_sample_type__WEBPACK_IMPORTED_MODULE_323__ = __webpack_require__(/*! ./over-sample-type */ "./node_modules/standardized-audio-context/build/es2019/types/over-sample-type.js");
/* harmony import */ var _overwrite_accessors_function__WEBPACK_IMPORTED_MODULE_324__ = __webpack_require__(/*! ./overwrite-accessors-function */ "./node_modules/standardized-audio-context/build/es2019/types/overwrite-accessors-function.js");
/* harmony import */ var _panner_node_constructor__WEBPACK_IMPORTED_MODULE_325__ = __webpack_require__(/*! ./panner-node-constructor */ "./node_modules/standardized-audio-context/build/es2019/types/panner-node-constructor.js");
/* harmony import */ var _panner_node_constructor_factory__WEBPACK_IMPORTED_MODULE_326__ = __webpack_require__(/*! ./panner-node-constructor-factory */ "./node_modules/standardized-audio-context/build/es2019/types/panner-node-constructor-factory.js");
/* harmony import */ var _panner_node_renderer_factory__WEBPACK_IMPORTED_MODULE_327__ = __webpack_require__(/*! ./panner-node-renderer-factory */ "./node_modules/standardized-audio-context/build/es2019/types/panner-node-renderer-factory.js");
/* harmony import */ var _panner_node_renderer_factory_factory__WEBPACK_IMPORTED_MODULE_328__ = __webpack_require__(/*! ./panner-node-renderer-factory-factory */ "./node_modules/standardized-audio-context/build/es2019/types/panner-node-renderer-factory-factory.js");
/* harmony import */ var _panning_model_type__WEBPACK_IMPORTED_MODULE_329__ = __webpack_require__(/*! ./panning-model-type */ "./node_modules/standardized-audio-context/build/es2019/types/panning-model-type.js");
/* harmony import */ var _passive_audio_node_input_connection__WEBPACK_IMPORTED_MODULE_330__ = __webpack_require__(/*! ./passive-audio-node-input-connection */ "./node_modules/standardized-audio-context/build/es2019/types/passive-audio-node-input-connection.js");
/* harmony import */ var _passive_audio_param_input_connection__WEBPACK_IMPORTED_MODULE_331__ = __webpack_require__(/*! ./passive-audio-param-input-connection */ "./node_modules/standardized-audio-context/build/es2019/types/passive-audio-param-input-connection.js");
/* harmony import */ var _periodic_wave_constructor__WEBPACK_IMPORTED_MODULE_332__ = __webpack_require__(/*! ./periodic-wave-constructor */ "./node_modules/standardized-audio-context/build/es2019/types/periodic-wave-constructor.js");
/* harmony import */ var _periodic_wave_constructor_factory__WEBPACK_IMPORTED_MODULE_333__ = __webpack_require__(/*! ./periodic-wave-constructor-factory */ "./node_modules/standardized-audio-context/build/es2019/types/periodic-wave-constructor-factory.js");
/* harmony import */ var _pick_element_from_set_function__WEBPACK_IMPORTED_MODULE_334__ = __webpack_require__(/*! ./pick-element-from-set-function */ "./node_modules/standardized-audio-context/build/es2019/types/pick-element-from-set-function.js");
/* harmony import */ var _render_automation_factory__WEBPACK_IMPORTED_MODULE_335__ = __webpack_require__(/*! ./render-automation-factory */ "./node_modules/standardized-audio-context/build/es2019/types/render-automation-factory.js");
/* harmony import */ var _render_automation_function__WEBPACK_IMPORTED_MODULE_336__ = __webpack_require__(/*! ./render-automation-function */ "./node_modules/standardized-audio-context/build/es2019/types/render-automation-function.js");
/* harmony import */ var _render_inputs_of_audio_node_factory__WEBPACK_IMPORTED_MODULE_337__ = __webpack_require__(/*! ./render-inputs-of-audio-node-factory */ "./node_modules/standardized-audio-context/build/es2019/types/render-inputs-of-audio-node-factory.js");
/* harmony import */ var _render_inputs_of_audio_node_function__WEBPACK_IMPORTED_MODULE_338__ = __webpack_require__(/*! ./render-inputs-of-audio-node-function */ "./node_modules/standardized-audio-context/build/es2019/types/render-inputs-of-audio-node-function.js");
/* harmony import */ var _render_inputs_of_audio_param_factory__WEBPACK_IMPORTED_MODULE_339__ = __webpack_require__(/*! ./render-inputs-of-audio-param-factory */ "./node_modules/standardized-audio-context/build/es2019/types/render-inputs-of-audio-param-factory.js");
/* harmony import */ var _render_inputs_of_audio_param_function__WEBPACK_IMPORTED_MODULE_340__ = __webpack_require__(/*! ./render-inputs-of-audio-param-function */ "./node_modules/standardized-audio-context/build/es2019/types/render-inputs-of-audio-param-function.js");
/* harmony import */ var _render_native_offline_audio_context_factory__WEBPACK_IMPORTED_MODULE_341__ = __webpack_require__(/*! ./render-native-offline-audio-context-factory */ "./node_modules/standardized-audio-context/build/es2019/types/render-native-offline-audio-context-factory.js");
/* harmony import */ var _render_native_offline_audio_context_function__WEBPACK_IMPORTED_MODULE_342__ = __webpack_require__(/*! ./render-native-offline-audio-context-function */ "./node_modules/standardized-audio-context/build/es2019/types/render-native-offline-audio-context-function.js");
/* harmony import */ var _sanitize_audio_worklet_node_options_function__WEBPACK_IMPORTED_MODULE_343__ = __webpack_require__(/*! ./sanitize-audio-worklet-node-options-function */ "./node_modules/standardized-audio-context/build/es2019/types/sanitize-audio-worklet-node-options-function.js");
/* harmony import */ var _sanitize_channel_splitter_options_function__WEBPACK_IMPORTED_MODULE_344__ = __webpack_require__(/*! ./sanitize-channel-splitter-options-function */ "./node_modules/standardized-audio-context/build/es2019/types/sanitize-channel-splitter-options-function.js");
/* harmony import */ var _sanitize_periodic_wave_options_function__WEBPACK_IMPORTED_MODULE_345__ = __webpack_require__(/*! ./sanitize-periodic-wave-options-function */ "./node_modules/standardized-audio-context/build/es2019/types/sanitize-periodic-wave-options-function.js");
/* harmony import */ var _set_active_audio_worklet_node_inputs_factory__WEBPACK_IMPORTED_MODULE_346__ = __webpack_require__(/*! ./set-active-audio-worklet-node-inputs-factory */ "./node_modules/standardized-audio-context/build/es2019/types/set-active-audio-worklet-node-inputs-factory.js");
/* harmony import */ var _set_active_audio_worklet_node_inputs_function__WEBPACK_IMPORTED_MODULE_347__ = __webpack_require__(/*! ./set-active-audio-worklet-node-inputs-function */ "./node_modules/standardized-audio-context/build/es2019/types/set-active-audio-worklet-node-inputs-function.js");
/* harmony import */ var _set_audio_node_tail_time_factory__WEBPACK_IMPORTED_MODULE_348__ = __webpack_require__(/*! ./set-audio-node-tail-time-factory */ "./node_modules/standardized-audio-context/build/es2019/types/set-audio-node-tail-time-factory.js");
/* harmony import */ var _set_audio_node_tail_time_function__WEBPACK_IMPORTED_MODULE_349__ = __webpack_require__(/*! ./set-audio-node-tail-time-function */ "./node_modules/standardized-audio-context/build/es2019/types/set-audio-node-tail-time-function.js");
/* harmony import */ var _start_rendering_factory__WEBPACK_IMPORTED_MODULE_350__ = __webpack_require__(/*! ./start-rendering-factory */ "./node_modules/standardized-audio-context/build/es2019/types/start-rendering-factory.js");
/* harmony import */ var _start_rendering_function__WEBPACK_IMPORTED_MODULE_351__ = __webpack_require__(/*! ./start-rendering-function */ "./node_modules/standardized-audio-context/build/es2019/types/start-rendering-function.js");
/* harmony import */ var _stereo_panner_node_constructor__WEBPACK_IMPORTED_MODULE_352__ = __webpack_require__(/*! ./stereo-panner-node-constructor */ "./node_modules/standardized-audio-context/build/es2019/types/stereo-panner-node-constructor.js");
/* harmony import */ var _stereo_panner_node_constructor_factory__WEBPACK_IMPORTED_MODULE_353__ = __webpack_require__(/*! ./stereo-panner-node-constructor-factory */ "./node_modules/standardized-audio-context/build/es2019/types/stereo-panner-node-constructor-factory.js");
/* harmony import */ var _stereo_panner_node_renderer_factory_factory__WEBPACK_IMPORTED_MODULE_354__ = __webpack_require__(/*! ./stereo-panner-node-renderer-factory-factory */ "./node_modules/standardized-audio-context/build/es2019/types/stereo-panner-node-renderer-factory-factory.js");
/* harmony import */ var _stereo_panner_node_renderer_factory__WEBPACK_IMPORTED_MODULE_355__ = __webpack_require__(/*! ./stereo-panner-node-renderer-factory */ "./node_modules/standardized-audio-context/build/es2019/types/stereo-panner-node-renderer-factory.js");
/* harmony import */ var _test_audio_buffer_copy_channel_methods_subarray_support_factory__WEBPACK_IMPORTED_MODULE_356__ = __webpack_require__(/*! ./test-audio-buffer-copy-channel-methods-subarray-support-factory */ "./node_modules/standardized-audio-context/build/es2019/types/test-audio-buffer-copy-channel-methods-subarray-support-factory.js");
/* harmony import */ var _test_audio_buffer_constructor_support_factory__WEBPACK_IMPORTED_MODULE_357__ = __webpack_require__(/*! ./test-audio-buffer-constructor-support-factory */ "./node_modules/standardized-audio-context/build/es2019/types/test-audio-buffer-constructor-support-factory.js");
/* harmony import */ var _test_audio_context_close_method_support_factory__WEBPACK_IMPORTED_MODULE_358__ = __webpack_require__(/*! ./test-audio-context-close-method-support-factory */ "./node_modules/standardized-audio-context/build/es2019/types/test-audio-context-close-method-support-factory.js");
/* harmony import */ var _test_audio_context_decode_audio_data_method_type_error_support_factory__WEBPACK_IMPORTED_MODULE_359__ = __webpack_require__(/*! ./test-audio-context-decode-audio-data-method-type-error-support-factory */ "./node_modules/standardized-audio-context/build/es2019/types/test-audio-context-decode-audio-data-method-type-error-support-factory.js");
/* harmony import */ var _test_audio_context_options_support_factory__WEBPACK_IMPORTED_MODULE_360__ = __webpack_require__(/*! ./test-audio-context-options-support-factory */ "./node_modules/standardized-audio-context/build/es2019/types/test-audio-context-options-support-factory.js");
/* harmony import */ var _test_audio_node_connect_method_support_factory__WEBPACK_IMPORTED_MODULE_361__ = __webpack_require__(/*! ./test-audio-node-connect-method-support-factory */ "./node_modules/standardized-audio-context/build/es2019/types/test-audio-node-connect-method-support-factory.js");
/* harmony import */ var _test_audio_worklet_processor_no_outputs_support_factory__WEBPACK_IMPORTED_MODULE_362__ = __webpack_require__(/*! ./test-audio-worklet-processor-no-outputs-support-factory */ "./node_modules/standardized-audio-context/build/es2019/types/test-audio-worklet-processor-no-outputs-support-factory.js");
/* harmony import */ var _test_audio_worklet_processor_post_message_support_factory__WEBPACK_IMPORTED_MODULE_363__ = __webpack_require__(/*! ./test-audio-worklet-processor-post-message-support-factory */ "./node_modules/standardized-audio-context/build/es2019/types/test-audio-worklet-processor-post-message-support-factory.js");
/* harmony import */ var _test_channel_merger_node_channel_count_support_factory__WEBPACK_IMPORTED_MODULE_364__ = __webpack_require__(/*! ./test-channel-merger-node-channel-count-support-factory */ "./node_modules/standardized-audio-context/build/es2019/types/test-channel-merger-node-channel-count-support-factory.js");
/* harmony import */ var _test_constant_source_node_accurate_scheduling_support_factory__WEBPACK_IMPORTED_MODULE_365__ = __webpack_require__(/*! ./test-constant-source-node-accurate-scheduling-support-factory */ "./node_modules/standardized-audio-context/build/es2019/types/test-constant-source-node-accurate-scheduling-support-factory.js");
/* harmony import */ var _test_convolver_node_buffer_reassignability_support_factory__WEBPACK_IMPORTED_MODULE_366__ = __webpack_require__(/*! ./test-convolver-node-buffer-reassignability-support-factory */ "./node_modules/standardized-audio-context/build/es2019/types/test-convolver-node-buffer-reassignability-support-factory.js");
/* harmony import */ var _test_convolver_node_channel_count_support_factory__WEBPACK_IMPORTED_MODULE_367__ = __webpack_require__(/*! ./test-convolver-node-channel-count-support-factory */ "./node_modules/standardized-audio-context/build/es2019/types/test-convolver-node-channel-count-support-factory.js");
/* harmony import */ var _test_is_secure_context_support_factory__WEBPACK_IMPORTED_MODULE_368__ = __webpack_require__(/*! ./test-is-secure-context-support-factory */ "./node_modules/standardized-audio-context/build/es2019/types/test-is-secure-context-support-factory.js");
/* harmony import */ var _test_media_stream_audio_source_node_media_stream_without_audio_track_support__WEBPACK_IMPORTED_MODULE_369__ = __webpack_require__(/*! ./test-media-stream-audio-source-node-media-stream-without-audio-track-support */ "./node_modules/standardized-audio-context/build/es2019/types/test-media-stream-audio-source-node-media-stream-without-audio-track-support.js");
/* harmony import */ var _test_offline_audio_context_current_time_support_factory__WEBPACK_IMPORTED_MODULE_370__ = __webpack_require__(/*! ./test-offline-audio-context-current-time-support-factory */ "./node_modules/standardized-audio-context/build/es2019/types/test-offline-audio-context-current-time-support-factory.js");
/* harmony import */ var _test_stereo_panner_node_default_value_support_factory__WEBPACK_IMPORTED_MODULE_371__ = __webpack_require__(/*! ./test-stereo-panner-node-default-value-support-factory */ "./node_modules/standardized-audio-context/build/es2019/types/test-stereo-panner-node-default-value-support-factory.js");
/* harmony import */ var _unknown_error_factory__WEBPACK_IMPORTED_MODULE_372__ = __webpack_require__(/*! ./unknown-error-factory */ "./node_modules/standardized-audio-context/build/es2019/types/unknown-error-factory.js");
/* harmony import */ var _unrendered_audio_worklet_node_store__WEBPACK_IMPORTED_MODULE_373__ = __webpack_require__(/*! ./unrendered-audio-worklet-node-store */ "./node_modules/standardized-audio-context/build/es2019/types/unrendered-audio-worklet-node-store.js");
/* harmony import */ var _unrendered_audio_worklet_nodes__WEBPACK_IMPORTED_MODULE_374__ = __webpack_require__(/*! ./unrendered-audio-worklet-nodes */ "./node_modules/standardized-audio-context/build/es2019/types/unrendered-audio-worklet-nodes.js");
/* harmony import */ var _wave_shaper_node_constructor__WEBPACK_IMPORTED_MODULE_375__ = __webpack_require__(/*! ./wave-shaper-node-constructor */ "./node_modules/standardized-audio-context/build/es2019/types/wave-shaper-node-constructor.js");
/* harmony import */ var _wave_shaper_node_constructor_factory__WEBPACK_IMPORTED_MODULE_376__ = __webpack_require__(/*! ./wave-shaper-node-constructor-factory */ "./node_modules/standardized-audio-context/build/es2019/types/wave-shaper-node-constructor-factory.js");
/* harmony import */ var _wave_shaper_node_renderer_factory_factory__WEBPACK_IMPORTED_MODULE_377__ = __webpack_require__(/*! ./wave-shaper-node-renderer-factory-factory */ "./node_modules/standardized-audio-context/build/es2019/types/wave-shaper-node-renderer-factory-factory.js");
/* harmony import */ var _wave_shaper_node_renderer_factory__WEBPACK_IMPORTED_MODULE_378__ = __webpack_require__(/*! ./wave-shaper-node-renderer-factory */ "./node_modules/standardized-audio-context/build/es2019/types/wave-shaper-node-renderer-factory.js");
/* harmony import */ var _window__WEBPACK_IMPORTED_MODULE_379__ = __webpack_require__(/*! ./window */ "./node_modules/standardized-audio-context/build/es2019/types/window.js");
/* harmony import */ var _window_factory__WEBPACK_IMPORTED_MODULE_380__ = __webpack_require__(/*! ./window-factory */ "./node_modules/standardized-audio-context/build/es2019/types/window-factory.js");
/* harmony import */ var _wrap_audio_buffer_copy_channel_methods_factory__WEBPACK_IMPORTED_MODULE_381__ = __webpack_require__(/*! ./wrap-audio-buffer-copy-channel-methods-factory */ "./node_modules/standardized-audio-context/build/es2019/types/wrap-audio-buffer-copy-channel-methods-factory.js");
/* harmony import */ var _wrap_audio_buffer_copy_channel_methods_function__WEBPACK_IMPORTED_MODULE_382__ = __webpack_require__(/*! ./wrap-audio-buffer-copy-channel-methods-function */ "./node_modules/standardized-audio-context/build/es2019/types/wrap-audio-buffer-copy-channel-methods-function.js");
/* harmony import */ var _wrap_audio_buffer_copy_channel_methods_out_of_bounds_factory__WEBPACK_IMPORTED_MODULE_383__ = __webpack_require__(/*! ./wrap-audio-buffer-copy-channel-methods-out-of-bounds-factory */ "./node_modules/standardized-audio-context/build/es2019/types/wrap-audio-buffer-copy-channel-methods-out-of-bounds-factory.js");
/* harmony import */ var _wrap_audio_buffer_copy_channel_methods_out_of_bounds_function__WEBPACK_IMPORTED_MODULE_384__ = __webpack_require__(/*! ./wrap-audio-buffer-copy-channel-methods-out-of-bounds-function */ "./node_modules/standardized-audio-context/build/es2019/types/wrap-audio-buffer-copy-channel-methods-out-of-bounds-function.js");
/* harmony import */ var _wrap_audio_buffer_source_node_start_method_offset_clamping_function__WEBPACK_IMPORTED_MODULE_385__ = __webpack_require__(/*! ./wrap-audio-buffer-source-node-start-method-offset-clamping-function */ "./node_modules/standardized-audio-context/build/es2019/types/wrap-audio-buffer-source-node-start-method-offset-clamping-function.js");
/* harmony import */ var _wrap_audio_buffer_source_node_stop_method_nullified_buffer_factory__WEBPACK_IMPORTED_MODULE_386__ = __webpack_require__(/*! ./wrap-audio-buffer-source-node-stop-method-nullified-buffer-factory */ "./node_modules/standardized-audio-context/build/es2019/types/wrap-audio-buffer-source-node-stop-method-nullified-buffer-factory.js");
/* harmony import */ var _wrap_audio_buffer_source_node_stop_method_nullified_buffer_function__WEBPACK_IMPORTED_MODULE_387__ = __webpack_require__(/*! ./wrap-audio-buffer-source-node-stop-method-nullified-buffer-function */ "./node_modules/standardized-audio-context/build/es2019/types/wrap-audio-buffer-source-node-stop-method-nullified-buffer-function.js");
/* harmony import */ var _wrap_audio_scheduled_source_node_stop_method_consecutive_calls_function__WEBPACK_IMPORTED_MODULE_388__ = __webpack_require__(/*! ./wrap-audio-scheduled-source-node-stop-method-consecutive-calls-function */ "./node_modules/standardized-audio-context/build/es2019/types/wrap-audio-scheduled-source-node-stop-method-consecutive-calls-function.js");
/* harmony import */ var _wrap_channel_merger_node_factory__WEBPACK_IMPORTED_MODULE_389__ = __webpack_require__(/*! ./wrap-channel-merger-node-factory */ "./node_modules/standardized-audio-context/build/es2019/types/wrap-channel-merger-node-factory.js");
/* harmony import */ var _wrap_channel_merger_node_function__WEBPACK_IMPORTED_MODULE_390__ = __webpack_require__(/*! ./wrap-channel-merger-node-function */ "./node_modules/standardized-audio-context/build/es2019/types/wrap-channel-merger-node-function.js");
/* harmony import */ var _wrap_event_listener_function__WEBPACK_IMPORTED_MODULE_391__ = __webpack_require__(/*! ./wrap-event-listener-function */ "./node_modules/standardized-audio-context/build/es2019/types/wrap-event-listener-function.js");








































































































































































































































































































































































































//# sourceMappingURL=index.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/insert-element-in-set-function.js":
/*!******************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/insert-element-in-set-function.js ***!
  \******************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=insert-element-in-set-function.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/internal-state-event-listener.js":
/*!*****************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/internal-state-event-listener.js ***!
  \*****************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=internal-state-event-listener.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/invalid-access-error-factory.js":
/*!****************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/invalid-access-error-factory.js ***!
  \****************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=invalid-access-error-factory.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/invalid-state-error-factory.js":
/*!***************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/invalid-state-error-factory.js ***!
  \***************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=invalid-state-error-factory.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/is-active-audio-node-function.js":
/*!*****************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/is-active-audio-node-function.js ***!
  \*****************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=is-active-audio-node-function.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/is-any-audio-context-factory.js":
/*!****************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/is-any-audio-context-factory.js ***!
  \****************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=is-any-audio-context-factory.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/is-any-audio-context-function.js":
/*!*****************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/is-any-audio-context-function.js ***!
  \*****************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=is-any-audio-context-function.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/is-any-audio-node-factory.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/is-any-audio-node-factory.js ***!
  \*************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=is-any-audio-node-factory.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/is-any-audio-node-function.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/is-any-audio-node-function.js ***!
  \**************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=is-any-audio-node-function.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/is-any-audio-param-factory.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/is-any-audio-param-factory.js ***!
  \**************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=is-any-audio-param-factory.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/is-any-audio-param-function.js":
/*!***************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/is-any-audio-param-function.js ***!
  \***************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=is-any-audio-param-function.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/is-any-offline-audio-context-factory.js":
/*!************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/is-any-offline-audio-context-factory.js ***!
  \************************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=is-any-offline-audio-context-factory.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/is-any-offline-audio-context-function.js":
/*!*************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/is-any-offline-audio-context-function.js ***!
  \*************************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=is-any-offline-audio-context-function.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/is-dc-curve-function.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/is-dc-curve-function.js ***!
  \********************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=is-dc-curve-function.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/is-native-audio-context-factory.js":
/*!*******************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/is-native-audio-context-factory.js ***!
  \*******************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=is-native-audio-context-factory.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/is-native-audio-context-function.js":
/*!********************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/is-native-audio-context-function.js ***!
  \********************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=is-native-audio-context-function.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/is-native-audio-node-factory.js":
/*!****************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/is-native-audio-node-factory.js ***!
  \****************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=is-native-audio-node-factory.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/is-native-audio-node-function.js":
/*!*****************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/is-native-audio-node-function.js ***!
  \*****************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=is-native-audio-node-function.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/is-native-audio-param-factory.js":
/*!*****************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/is-native-audio-param-factory.js ***!
  \*****************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=is-native-audio-param-factory.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/is-native-audio-param-function.js":
/*!******************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/is-native-audio-param-function.js ***!
  \******************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=is-native-audio-param-function.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/is-native-context-factory.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/is-native-context-factory.js ***!
  \*************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=is-native-context-factory.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/is-native-context-function.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/is-native-context-function.js ***!
  \**************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=is-native-context-function.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/is-native-offline-audio-context-factory.js":
/*!***************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/is-native-offline-audio-context-factory.js ***!
  \***************************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=is-native-offline-audio-context-factory.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/is-native-offline-audio-context-function.js":
/*!****************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/is-native-offline-audio-context-function.js ***!
  \****************************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=is-native-offline-audio-context-function.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/is-part-of-a-cycle-function.js":
/*!***************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/is-part-of-a-cycle-function.js ***!
  \***************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=is-part-of-a-cycle-function.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/is-passive-audio-node-function.js":
/*!******************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/is-passive-audio-node-function.js ***!
  \******************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=is-passive-audio-node-function.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/is-secure-context-factory.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/is-secure-context-factory.js ***!
  \*************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=is-secure-context-factory.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/is-supported-promise-factory.js":
/*!****************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/is-supported-promise-factory.js ***!
  \****************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=is-supported-promise-factory.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/media-element-audio-source-node-constructor-factory.js":
/*!***************************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/media-element-audio-source-node-constructor-factory.js ***!
  \***************************************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=media-element-audio-source-node-constructor-factory.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/media-element-audio-source-node-constructor.js":
/*!*******************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/media-element-audio-source-node-constructor.js ***!
  \*******************************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=media-element-audio-source-node-constructor.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/media-stream-audio-destination-node-constructor-factory.js":
/*!*******************************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/media-stream-audio-destination-node-constructor-factory.js ***!
  \*******************************************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=media-stream-audio-destination-node-constructor-factory.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/media-stream-audio-destination-node-constructor.js":
/*!***********************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/media-stream-audio-destination-node-constructor.js ***!
  \***********************************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=media-stream-audio-destination-node-constructor.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/media-stream-audio-source-node-constructor-factory.js":
/*!**************************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/media-stream-audio-source-node-constructor-factory.js ***!
  \**************************************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=media-stream-audio-source-node-constructor-factory.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/media-stream-audio-source-node-constructor.js":
/*!******************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/media-stream-audio-source-node-constructor.js ***!
  \******************************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=media-stream-audio-source-node-constructor.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/media-stream-track-audio-source-node-constructor-factory.js":
/*!********************************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/media-stream-track-audio-source-node-constructor-factory.js ***!
  \********************************************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=media-stream-track-audio-source-node-constructor-factory.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/media-stream-track-audio-source-node-constructor.js":
/*!************************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/media-stream-track-audio-source-node-constructor.js ***!
  \************************************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=media-stream-track-audio-source-node-constructor.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/minimal-audio-context-constructor-factory.js":
/*!*****************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/minimal-audio-context-constructor-factory.js ***!
  \*****************************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=minimal-audio-context-constructor-factory.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/minimal-audio-context-constructor.js":
/*!*********************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/minimal-audio-context-constructor.js ***!
  \*********************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=minimal-audio-context-constructor.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/minimal-base-audio-context-constructor-factory.js":
/*!**********************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/minimal-base-audio-context-constructor-factory.js ***!
  \**********************************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=minimal-base-audio-context-constructor-factory.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/minimal-base-audio-context-constructor.js":
/*!**************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/minimal-base-audio-context-constructor.js ***!
  \**************************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=minimal-base-audio-context-constructor.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/minimal-offline-audio-context-constructor-factory.js":
/*!*************************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/minimal-offline-audio-context-constructor-factory.js ***!
  \*************************************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=minimal-offline-audio-context-constructor-factory.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/minimal-offline-audio-context-constructor.js":
/*!*****************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/minimal-offline-audio-context-constructor.js ***!
  \*****************************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=minimal-offline-audio-context-constructor.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/monitor-connections-factory.js":
/*!***************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/monitor-connections-factory.js ***!
  \***************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=monitor-connections-factory.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/monitor-connections-function.js":
/*!****************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/monitor-connections-function.js ***!
  \****************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=monitor-connections-function.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/native-analyser-node-factory-factory.js":
/*!************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/native-analyser-node-factory-factory.js ***!
  \************************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=native-analyser-node-factory-factory.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/native-analyser-node-factory.js":
/*!****************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/native-analyser-node-factory.js ***!
  \****************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=native-analyser-node-factory.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/native-analyser-node.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/native-analyser-node.js ***!
  \********************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=native-analyser-node.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/native-audio-buffer-constructor-factory.js":
/*!***************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/native-audio-buffer-constructor-factory.js ***!
  \***************************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=native-audio-buffer-constructor-factory.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/native-audio-buffer-constructor.js":
/*!*******************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/native-audio-buffer-constructor.js ***!
  \*******************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=native-audio-buffer-constructor.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/native-audio-buffer-source-node-factory-factory.js":
/*!***********************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/native-audio-buffer-source-node-factory-factory.js ***!
  \***********************************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=native-audio-buffer-source-node-factory-factory.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/native-audio-buffer-source-node-factory.js":
/*!***************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/native-audio-buffer-source-node-factory.js ***!
  \***************************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=native-audio-buffer-source-node-factory.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/native-audio-buffer-source-node.js":
/*!*******************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/native-audio-buffer-source-node.js ***!
  \*******************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=native-audio-buffer-source-node.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/native-audio-buffer.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/native-audio-buffer.js ***!
  \*******************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=native-audio-buffer.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/native-audio-context-constructor-factory.js":
/*!****************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/native-audio-context-constructor-factory.js ***!
  \****************************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=native-audio-context-constructor-factory.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/native-audio-context-constructor.js":
/*!********************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/native-audio-context-constructor.js ***!
  \********************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=native-audio-context-constructor.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/native-audio-context.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/native-audio-context.js ***!
  \********************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=native-audio-context.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/native-audio-destination-node-factory-factory.js":
/*!*********************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/native-audio-destination-node-factory-factory.js ***!
  \*********************************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=native-audio-destination-node-factory-factory.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/native-audio-destination-node-factory.js":
/*!*************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/native-audio-destination-node-factory.js ***!
  \*************************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=native-audio-destination-node-factory.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/native-audio-destination-node.js":
/*!*****************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/native-audio-destination-node.js ***!
  \*****************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=native-audio-destination-node.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/native-audio-listener.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/native-audio-listener.js ***!
  \*********************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=native-audio-listener.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/native-audio-node.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/native-audio-node.js ***!
  \*****************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=native-audio-node.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/native-audio-param-map.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/native-audio-param-map.js ***!
  \**********************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=native-audio-param-map.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/native-audio-param.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/native-audio-param.js ***!
  \******************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=native-audio-param.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/native-audio-worklet-node-constructor-factory.js":
/*!*********************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/native-audio-worklet-node-constructor-factory.js ***!
  \*********************************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=native-audio-worklet-node-constructor-factory.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/native-audio-worklet-node-constructor.js":
/*!*************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/native-audio-worklet-node-constructor.js ***!
  \*************************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=native-audio-worklet-node-constructor.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/native-audio-worklet-node-factory-factory.js":
/*!*****************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/native-audio-worklet-node-factory-factory.js ***!
  \*****************************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=native-audio-worklet-node-factory-factory.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/native-audio-worklet-node-factory.js":
/*!*********************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/native-audio-worklet-node-factory.js ***!
  \*********************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=native-audio-worklet-node-factory.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/native-audio-worklet-node-faker-factory-factory.js":
/*!***********************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/native-audio-worklet-node-faker-factory-factory.js ***!
  \***********************************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=native-audio-worklet-node-faker-factory-factory.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/native-audio-worklet-node-faker-factory.js":
/*!***************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/native-audio-worklet-node-faker-factory.js ***!
  \***************************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=native-audio-worklet-node-faker-factory.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/native-audio-worklet-node-options.js":
/*!*********************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/native-audio-worklet-node-options.js ***!
  \*********************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=native-audio-worklet-node-options.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/native-audio-worklet-node.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/native-audio-worklet-node.js ***!
  \*************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=native-audio-worklet-node.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/native-audio-worklet.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/native-audio-worklet.js ***!
  \********************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=native-audio-worklet.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/native-biquad-filter-node-factory.js":
/*!*********************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/native-biquad-filter-node-factory.js ***!
  \*********************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=native-biquad-filter-node-factory.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/native-biquad-filter-node.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/native-biquad-filter-node.js ***!
  \*************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=native-biquad-filter-node.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/native-channel-merger-node-factory-factory.js":
/*!******************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/native-channel-merger-node-factory-factory.js ***!
  \******************************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=native-channel-merger-node-factory-factory.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/native-channel-merger-node-factory.js":
/*!**********************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/native-channel-merger-node-factory.js ***!
  \**********************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=native-channel-merger-node-factory.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/native-channel-merger-node.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/native-channel-merger-node.js ***!
  \**************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=native-channel-merger-node.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/native-channel-splitter-node-factory.js":
/*!************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/native-channel-splitter-node-factory.js ***!
  \************************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=native-channel-splitter-node-factory.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/native-channel-splitter-node.js":
/*!****************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/native-channel-splitter-node.js ***!
  \****************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=native-channel-splitter-node.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/native-constant-source-node-factory-factory.js":
/*!*******************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/native-constant-source-node-factory-factory.js ***!
  \*******************************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=native-constant-source-node-factory-factory.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/native-constant-source-node-factory.js":
/*!***********************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/native-constant-source-node-factory.js ***!
  \***********************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=native-constant-source-node-factory.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/native-constant-source-node-faker-factory-factory.js":
/*!*************************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/native-constant-source-node-faker-factory-factory.js ***!
  \*************************************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=native-constant-source-node-faker-factory-factory.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/native-constant-source-node-faker-factory.js":
/*!*****************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/native-constant-source-node-faker-factory.js ***!
  \*****************************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=native-constant-source-node-faker-factory.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/native-constant-source-node.js":
/*!***************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/native-constant-source-node.js ***!
  \***************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=native-constant-source-node.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/native-context.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/native-context.js ***!
  \**************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=native-context.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/native-convolver-node-factory-factory.js":
/*!*************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/native-convolver-node-factory-factory.js ***!
  \*************************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=native-convolver-node-factory-factory.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/native-convolver-node-factory.js":
/*!*****************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/native-convolver-node-factory.js ***!
  \*****************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=native-convolver-node-factory.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/native-convolver-node.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/native-convolver-node.js ***!
  \*********************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=native-convolver-node.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/native-delay-node-factory.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/native-delay-node-factory.js ***!
  \*************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=native-delay-node-factory.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/native-delay-node.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/native-delay-node.js ***!
  \*****************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=native-delay-node.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/native-dynamics-compressor-node-factory-factory.js":
/*!***********************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/native-dynamics-compressor-node-factory-factory.js ***!
  \***********************************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=native-dynamics-compressor-node-factory-factory.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/native-dynamics-compressor-node-factory.js":
/*!***************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/native-dynamics-compressor-node-factory.js ***!
  \***************************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=native-dynamics-compressor-node-factory.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/native-dynamics-compressor-node.js":
/*!*******************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/native-dynamics-compressor-node.js ***!
  \*******************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=native-dynamics-compressor-node.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/native-event-target.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/native-event-target.js ***!
  \*******************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=native-event-target.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/native-gain-node-factory.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/native-gain-node-factory.js ***!
  \************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=native-gain-node-factory.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/native-gain-node.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/native-gain-node.js ***!
  \****************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=native-gain-node.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/native-iir-filter-node-factory-factory.js":
/*!**************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/native-iir-filter-node-factory-factory.js ***!
  \**************************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=native-iir-filter-node-factory-factory.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/native-iir-filter-node-factory.js":
/*!******************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/native-iir-filter-node-factory.js ***!
  \******************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=native-iir-filter-node-factory.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/native-iir-filter-node-faker-factory-factory.js":
/*!********************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/native-iir-filter-node-faker-factory-factory.js ***!
  \********************************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=native-iir-filter-node-faker-factory-factory.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/native-iir-filter-node-faker-factory.js":
/*!************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/native-iir-filter-node-faker-factory.js ***!
  \************************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=native-iir-filter-node-faker-factory.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/native-iir-filter-node.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/native-iir-filter-node.js ***!
  \**********************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=native-iir-filter-node.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/native-media-element-audio-source-node-factory.js":
/*!**********************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/native-media-element-audio-source-node-factory.js ***!
  \**********************************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=native-media-element-audio-source-node-factory.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/native-media-element-audio-source-node.js":
/*!**************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/native-media-element-audio-source-node.js ***!
  \**************************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=native-media-element-audio-source-node.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/native-media-stream-audio-destination-node-factory.js":
/*!**************************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/native-media-stream-audio-destination-node-factory.js ***!
  \**************************************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=native-media-stream-audio-destination-node-factory.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/native-media-stream-audio-destination-node.js":
/*!******************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/native-media-stream-audio-destination-node.js ***!
  \******************************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=native-media-stream-audio-destination-node.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/native-media-stream-audio-source-node-factory.js":
/*!*********************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/native-media-stream-audio-source-node-factory.js ***!
  \*********************************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=native-media-stream-audio-source-node-factory.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/native-media-stream-audio-source-node.js":
/*!*************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/native-media-stream-audio-source-node.js ***!
  \*************************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=native-media-stream-audio-source-node.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/native-media-stream-track-audio-source-node-factory-factory.js":
/*!***********************************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/native-media-stream-track-audio-source-node-factory-factory.js ***!
  \***********************************************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=native-media-stream-track-audio-source-node-factory-factory.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/native-media-stream-track-audio-source-node-factory.js":
/*!***************************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/native-media-stream-track-audio-source-node-factory.js ***!
  \***************************************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=native-media-stream-track-audio-source-node-factory.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/native-media-stream-track-audio-source-node.js":
/*!*******************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/native-media-stream-track-audio-source-node.js ***!
  \*******************************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=native-media-stream-track-audio-source-node.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/native-offline-audio-context-constructor-factory.js":
/*!************************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/native-offline-audio-context-constructor-factory.js ***!
  \************************************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=native-offline-audio-context-constructor-factory.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/native-offline-audio-context-constructor.js":
/*!****************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/native-offline-audio-context-constructor.js ***!
  \****************************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=native-offline-audio-context-constructor.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/native-offline-audio-context.js":
/*!****************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/native-offline-audio-context.js ***!
  \****************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=native-offline-audio-context.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/native-oscillator-node-factory-factory.js":
/*!**************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/native-oscillator-node-factory-factory.js ***!
  \**************************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=native-oscillator-node-factory-factory.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/native-oscillator-node-factory.js":
/*!******************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/native-oscillator-node-factory.js ***!
  \******************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=native-oscillator-node-factory.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/native-oscillator-node.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/native-oscillator-node.js ***!
  \**********************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=native-oscillator-node.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/native-panner-node-factory-factory.js":
/*!**********************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/native-panner-node-factory-factory.js ***!
  \**********************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=native-panner-node-factory-factory.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/native-panner-node-factory.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/native-panner-node-factory.js ***!
  \**************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=native-panner-node-factory.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/native-panner-node-faker-factory-factory.js":
/*!****************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/native-panner-node-faker-factory-factory.js ***!
  \****************************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=native-panner-node-faker-factory-factory.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/native-panner-node-faker-factory.js":
/*!********************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/native-panner-node-faker-factory.js ***!
  \********************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=native-panner-node-faker-factory.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/native-panner-node.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/native-panner-node.js ***!
  \******************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=native-panner-node.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/native-periodic-wave-factory-factory.js":
/*!************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/native-periodic-wave-factory-factory.js ***!
  \************************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=native-periodic-wave-factory-factory.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/native-periodic-wave-factory.js":
/*!****************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/native-periodic-wave-factory.js ***!
  \****************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=native-periodic-wave-factory.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/native-periodic-wave.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/native-periodic-wave.js ***!
  \********************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=native-periodic-wave.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/native-script-processor-node-factory.js":
/*!************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/native-script-processor-node-factory.js ***!
  \************************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=native-script-processor-node-factory.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/native-script-processor-node.js":
/*!****************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/native-script-processor-node.js ***!
  \****************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=native-script-processor-node.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/native-stereo-panner-node-factory-factory.js":
/*!*****************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/native-stereo-panner-node-factory-factory.js ***!
  \*****************************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=native-stereo-panner-node-factory-factory.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/native-stereo-panner-node-factory.js":
/*!*********************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/native-stereo-panner-node-factory.js ***!
  \*********************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=native-stereo-panner-node-factory.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/native-stereo-panner-node-faker-factory-factory.js":
/*!***********************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/native-stereo-panner-node-faker-factory-factory.js ***!
  \***********************************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=native-stereo-panner-node-faker-factory-factory.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/native-stereo-panner-node-faker-factory.js":
/*!***************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/native-stereo-panner-node-faker-factory.js ***!
  \***************************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=native-stereo-panner-node-faker-factory.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/native-stereo-panner-node.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/native-stereo-panner-node.js ***!
  \*************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=native-stereo-panner-node.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/native-wave-shaper-node-factory-factory.js":
/*!***************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/native-wave-shaper-node-factory-factory.js ***!
  \***************************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=native-wave-shaper-node-factory-factory.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/native-wave-shaper-node-factory.js":
/*!*******************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/native-wave-shaper-node-factory.js ***!
  \*******************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=native-wave-shaper-node-factory.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/native-wave-shaper-node-faker-factory-factory.js":
/*!*********************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/native-wave-shaper-node-faker-factory-factory.js ***!
  \*********************************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=native-wave-shaper-node-faker-factory-factory.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/native-wave-shaper-node-faker-factory.js":
/*!*************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/native-wave-shaper-node-faker-factory.js ***!
  \*************************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=native-wave-shaper-node-faker-factory.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/native-wave-shaper-node.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/native-wave-shaper-node.js ***!
  \***********************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=native-wave-shaper-node.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/not-supported-error-factory.js":
/*!***************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/not-supported-error-factory.js ***!
  \***************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=not-supported-error-factory.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/offline-audio-context-constructor-factory.js":
/*!*****************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/offline-audio-context-constructor-factory.js ***!
  \*****************************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=offline-audio-context-constructor-factory.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/oscillator-node-constructor-factory.js":
/*!***********************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/oscillator-node-constructor-factory.js ***!
  \***********************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=oscillator-node-constructor-factory.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/oscillator-node-constructor.js":
/*!***************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/oscillator-node-constructor.js ***!
  \***************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=oscillator-node-constructor.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/oscillator-node-renderer-factory-factory.js":
/*!****************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/oscillator-node-renderer-factory-factory.js ***!
  \****************************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=oscillator-node-renderer-factory-factory.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/oscillator-node-renderer-factory.js":
/*!********************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/oscillator-node-renderer-factory.js ***!
  \********************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=oscillator-node-renderer-factory.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/oscillator-node-renderer.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/oscillator-node-renderer.js ***!
  \************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=oscillator-node-renderer.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/oscillator-type.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/oscillator-type.js ***!
  \***************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=oscillator-type.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/output-connection.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/output-connection.js ***!
  \*****************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=output-connection.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/over-sample-type.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/over-sample-type.js ***!
  \****************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=over-sample-type.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/overwrite-accessors-function.js":
/*!****************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/overwrite-accessors-function.js ***!
  \****************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=overwrite-accessors-function.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/panner-node-constructor-factory.js":
/*!*******************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/panner-node-constructor-factory.js ***!
  \*******************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=panner-node-constructor-factory.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/panner-node-constructor.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/panner-node-constructor.js ***!
  \***********************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=panner-node-constructor.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/panner-node-renderer-factory-factory.js":
/*!************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/panner-node-renderer-factory-factory.js ***!
  \************************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=panner-node-renderer-factory-factory.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/panner-node-renderer-factory.js":
/*!****************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/panner-node-renderer-factory.js ***!
  \****************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=panner-node-renderer-factory.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/panning-model-type.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/panning-model-type.js ***!
  \******************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=panning-model-type.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/passive-audio-node-input-connection.js":
/*!***********************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/passive-audio-node-input-connection.js ***!
  \***********************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=passive-audio-node-input-connection.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/passive-audio-param-input-connection.js":
/*!************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/passive-audio-param-input-connection.js ***!
  \************************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=passive-audio-param-input-connection.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/periodic-wave-constructor-factory.js":
/*!*********************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/periodic-wave-constructor-factory.js ***!
  \*********************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=periodic-wave-constructor-factory.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/periodic-wave-constructor.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/periodic-wave-constructor.js ***!
  \*************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=periodic-wave-constructor.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/pick-element-from-set-function.js":
/*!******************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/pick-element-from-set-function.js ***!
  \******************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=pick-element-from-set-function.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/render-automation-factory.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/render-automation-factory.js ***!
  \*************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=render-automation-factory.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/render-automation-function.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/render-automation-function.js ***!
  \**************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=render-automation-function.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/render-inputs-of-audio-node-factory.js":
/*!***********************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/render-inputs-of-audio-node-factory.js ***!
  \***********************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=render-inputs-of-audio-node-factory.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/render-inputs-of-audio-node-function.js":
/*!************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/render-inputs-of-audio-node-function.js ***!
  \************************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=render-inputs-of-audio-node-function.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/render-inputs-of-audio-param-factory.js":
/*!************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/render-inputs-of-audio-param-factory.js ***!
  \************************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=render-inputs-of-audio-param-factory.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/render-inputs-of-audio-param-function.js":
/*!*************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/render-inputs-of-audio-param-function.js ***!
  \*************************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=render-inputs-of-audio-param-function.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/render-native-offline-audio-context-factory.js":
/*!*******************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/render-native-offline-audio-context-factory.js ***!
  \*******************************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=render-native-offline-audio-context-factory.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/render-native-offline-audio-context-function.js":
/*!********************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/render-native-offline-audio-context-function.js ***!
  \********************************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=render-native-offline-audio-context-function.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/sanitize-audio-worklet-node-options-function.js":
/*!********************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/sanitize-audio-worklet-node-options-function.js ***!
  \********************************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=sanitize-audio-worklet-node-options-function.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/sanitize-channel-splitter-options-function.js":
/*!******************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/sanitize-channel-splitter-options-function.js ***!
  \******************************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=sanitize-channel-splitter-options-function.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/sanitize-periodic-wave-options-function.js":
/*!***************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/sanitize-periodic-wave-options-function.js ***!
  \***************************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=sanitize-periodic-wave-options-function.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/set-active-audio-worklet-node-inputs-factory.js":
/*!********************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/set-active-audio-worklet-node-inputs-factory.js ***!
  \********************************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=set-active-audio-worklet-node-inputs-factory.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/set-active-audio-worklet-node-inputs-function.js":
/*!*********************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/set-active-audio-worklet-node-inputs-function.js ***!
  \*********************************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=set-active-audio-worklet-node-inputs-function.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/set-audio-node-tail-time-factory.js":
/*!********************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/set-audio-node-tail-time-factory.js ***!
  \********************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=set-audio-node-tail-time-factory.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/set-audio-node-tail-time-function.js":
/*!*********************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/set-audio-node-tail-time-function.js ***!
  \*********************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=set-audio-node-tail-time-function.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/start-rendering-factory.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/start-rendering-factory.js ***!
  \***********************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=start-rendering-factory.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/start-rendering-function.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/start-rendering-function.js ***!
  \************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=start-rendering-function.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/stereo-panner-node-constructor-factory.js":
/*!**************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/stereo-panner-node-constructor-factory.js ***!
  \**************************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=stereo-panner-node-constructor-factory.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/stereo-panner-node-constructor.js":
/*!******************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/stereo-panner-node-constructor.js ***!
  \******************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=stereo-panner-node-constructor.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/stereo-panner-node-renderer-factory-factory.js":
/*!*******************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/stereo-panner-node-renderer-factory-factory.js ***!
  \*******************************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=stereo-panner-node-renderer-factory-factory.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/stereo-panner-node-renderer-factory.js":
/*!***********************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/stereo-panner-node-renderer-factory.js ***!
  \***********************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=stereo-panner-node-renderer-factory.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/test-audio-buffer-constructor-support-factory.js":
/*!*********************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/test-audio-buffer-constructor-support-factory.js ***!
  \*********************************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=test-audio-buffer-constructor-support-factory.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/test-audio-buffer-copy-channel-methods-subarray-support-factory.js":
/*!***************************************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/test-audio-buffer-copy-channel-methods-subarray-support-factory.js ***!
  \***************************************************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=test-audio-buffer-copy-channel-methods-subarray-support-factory.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/test-audio-context-close-method-support-factory.js":
/*!***********************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/test-audio-context-close-method-support-factory.js ***!
  \***********************************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=test-audio-context-close-method-support-factory.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/test-audio-context-decode-audio-data-method-type-error-support-factory.js":
/*!**********************************************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/test-audio-context-decode-audio-data-method-type-error-support-factory.js ***!
  \**********************************************************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=test-audio-context-decode-audio-data-method-type-error-support-factory.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/test-audio-context-options-support-factory.js":
/*!******************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/test-audio-context-options-support-factory.js ***!
  \******************************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=test-audio-context-options-support-factory.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/test-audio-node-connect-method-support-factory.js":
/*!**********************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/test-audio-node-connect-method-support-factory.js ***!
  \**********************************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=test-audio-node-connect-method-support-factory.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/test-audio-worklet-processor-no-outputs-support-factory.js":
/*!*******************************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/test-audio-worklet-processor-no-outputs-support-factory.js ***!
  \*******************************************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=test-audio-worklet-processor-no-outputs-support-factory.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/test-audio-worklet-processor-post-message-support-factory.js":
/*!*********************************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/test-audio-worklet-processor-post-message-support-factory.js ***!
  \*********************************************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=test-audio-worklet-processor-post-message-support-factory.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/test-channel-merger-node-channel-count-support-factory.js":
/*!******************************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/test-channel-merger-node-channel-count-support-factory.js ***!
  \******************************************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=test-channel-merger-node-channel-count-support-factory.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/test-constant-source-node-accurate-scheduling-support-factory.js":
/*!*************************************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/test-constant-source-node-accurate-scheduling-support-factory.js ***!
  \*************************************************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=test-constant-source-node-accurate-scheduling-support-factory.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/test-convolver-node-buffer-reassignability-support-factory.js":
/*!**********************************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/test-convolver-node-buffer-reassignability-support-factory.js ***!
  \**********************************************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=test-convolver-node-buffer-reassignability-support-factory.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/test-convolver-node-channel-count-support-factory.js":
/*!*************************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/test-convolver-node-channel-count-support-factory.js ***!
  \*************************************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=test-convolver-node-channel-count-support-factory.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/test-is-secure-context-support-factory.js":
/*!**************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/test-is-secure-context-support-factory.js ***!
  \**************************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=test-is-secure-context-support-factory.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/test-media-stream-audio-source-node-media-stream-without-audio-track-support.js":
/*!****************************************************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/test-media-stream-audio-source-node-media-stream-without-audio-track-support.js ***!
  \****************************************************************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=test-media-stream-audio-source-node-media-stream-without-audio-track-support.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/test-offline-audio-context-current-time-support-factory.js":
/*!*******************************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/test-offline-audio-context-current-time-support-factory.js ***!
  \*******************************************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=test-offline-audio-context-current-time-support-factory.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/test-stereo-panner-node-default-value-support-factory.js":
/*!*****************************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/test-stereo-panner-node-default-value-support-factory.js ***!
  \*****************************************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=test-stereo-panner-node-default-value-support-factory.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/unknown-error-factory.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/unknown-error-factory.js ***!
  \*********************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=unknown-error-factory.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/unrendered-audio-worklet-node-store.js":
/*!***********************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/unrendered-audio-worklet-node-store.js ***!
  \***********************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=unrendered-audio-worklet-node-store.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/unrendered-audio-worklet-nodes.js":
/*!******************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/unrendered-audio-worklet-nodes.js ***!
  \******************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=unrendered-audio-worklet-nodes.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/wave-shaper-node-constructor-factory.js":
/*!************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/wave-shaper-node-constructor-factory.js ***!
  \************************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=wave-shaper-node-constructor-factory.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/wave-shaper-node-constructor.js":
/*!****************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/wave-shaper-node-constructor.js ***!
  \****************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=wave-shaper-node-constructor.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/wave-shaper-node-renderer-factory-factory.js":
/*!*****************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/wave-shaper-node-renderer-factory-factory.js ***!
  \*****************************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=wave-shaper-node-renderer-factory-factory.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/wave-shaper-node-renderer-factory.js":
/*!*********************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/wave-shaper-node-renderer-factory.js ***!
  \*********************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=wave-shaper-node-renderer-factory.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/window-factory.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/window-factory.js ***!
  \**************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=window-factory.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/window.js":
/*!******************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/window.js ***!
  \******************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=window.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/wrap-audio-buffer-copy-channel-methods-factory.js":
/*!**********************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/wrap-audio-buffer-copy-channel-methods-factory.js ***!
  \**********************************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=wrap-audio-buffer-copy-channel-methods-factory.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/wrap-audio-buffer-copy-channel-methods-function.js":
/*!***********************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/wrap-audio-buffer-copy-channel-methods-function.js ***!
  \***********************************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=wrap-audio-buffer-copy-channel-methods-function.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/wrap-audio-buffer-copy-channel-methods-out-of-bounds-factory.js":
/*!************************************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/wrap-audio-buffer-copy-channel-methods-out-of-bounds-factory.js ***!
  \************************************************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=wrap-audio-buffer-copy-channel-methods-out-of-bounds-factory.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/wrap-audio-buffer-copy-channel-methods-out-of-bounds-function.js":
/*!*************************************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/wrap-audio-buffer-copy-channel-methods-out-of-bounds-function.js ***!
  \*************************************************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=wrap-audio-buffer-copy-channel-methods-out-of-bounds-function.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/wrap-audio-buffer-source-node-start-method-offset-clamping-function.js":
/*!*******************************************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/wrap-audio-buffer-source-node-start-method-offset-clamping-function.js ***!
  \*******************************************************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=wrap-audio-buffer-source-node-start-method-offset-clamping-function.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/wrap-audio-buffer-source-node-stop-method-nullified-buffer-factory.js":
/*!******************************************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/wrap-audio-buffer-source-node-stop-method-nullified-buffer-factory.js ***!
  \******************************************************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=wrap-audio-buffer-source-node-stop-method-nullified-buffer-factory.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/wrap-audio-buffer-source-node-stop-method-nullified-buffer-function.js":
/*!*******************************************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/wrap-audio-buffer-source-node-stop-method-nullified-buffer-function.js ***!
  \*******************************************************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=wrap-audio-buffer-source-node-stop-method-nullified-buffer-function.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/wrap-audio-scheduled-source-node-stop-method-consecutive-calls-function.js":
/*!***********************************************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/wrap-audio-scheduled-source-node-stop-method-consecutive-calls-function.js ***!
  \***********************************************************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=wrap-audio-scheduled-source-node-stop-method-consecutive-calls-function.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/wrap-channel-merger-node-factory.js":
/*!********************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/wrap-channel-merger-node-factory.js ***!
  \********************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=wrap-channel-merger-node-factory.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/wrap-channel-merger-node-function.js":
/*!*********************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/wrap-channel-merger-node-function.js ***!
  \*********************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=wrap-channel-merger-node-function.js.map

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/wrap-event-listener-function.js":
/*!****************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/wrap-event-listener-function.js ***!
  \****************************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=wrap-event-listener-function.js.map

/***/ }),

/***/ "./node_modules/tone/build/esm/classes.js":
/*!************************************************!*\
  !*** ./node_modules/tone/build/esm/classes.js ***!
  \************************************************/
/*! namespace exports */
/*! export AMOscillator [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/source/oscillator/AMOscillator.js .AMOscillator */
/*! export AMSynth [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/instrument/AMSynth.js .AMSynth */
/*! export Abs [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/signal/Abs.js .Abs */
/*! export Add [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/signal/Add.js .Add */
/*! export AmplitudeEnvelope [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/component/envelope/AmplitudeEnvelope.js .AmplitudeEnvelope */
/*! export Analyser [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/component/analysis/Analyser.js .Analyser */
/*! export AudioToGain [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/signal/AudioToGain.js .AudioToGain */
/*! export AutoFilter [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/effect/AutoFilter.js .AutoFilter */
/*! export AutoPanner [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/effect/AutoPanner.js .AutoPanner */
/*! export AutoWah [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/effect/AutoWah.js .AutoWah */
/*! export BaseContext [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/core/context/BaseContext.js .BaseContext */
/*! export BiquadFilter [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/component/filter/BiquadFilter.js .BiquadFilter */
/*! export BitCrusher [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/effect/BitCrusher.js .BitCrusher */
/*! export Channel [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/component/channel/Channel.js .Channel */
/*! export Chebyshev [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/effect/Chebyshev.js .Chebyshev */
/*! export Chorus [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/effect/Chorus.js .Chorus */
/*! export Clock [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/core/clock/Clock.js .Clock */
/*! export Compressor [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/component/dynamics/Compressor.js .Compressor */
/*! export Context [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/core/context/Context.js .Context */
/*! export Convolver [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/component/filter/Convolver.js .Convolver */
/*! export CrossFade [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/component/channel/CrossFade.js .CrossFade */
/*! export DCMeter [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/component/analysis/DCMeter.js .DCMeter */
/*! export Delay [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/core/context/Delay.js .Delay */
/*! export Distortion [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/effect/Distortion.js .Distortion */
/*! export DuoSynth [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/instrument/DuoSynth.js .DuoSynth */
/*! export EQ3 [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/component/filter/EQ3.js .EQ3 */
/*! export Emitter [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/core/util/Emitter.js .Emitter */
/*! export Envelope [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/component/envelope/Envelope.js .Envelope */
/*! export FFT [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/component/analysis/FFT.js .FFT */
/*! export FMOscillator [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/source/oscillator/FMOscillator.js .FMOscillator */
/*! export FMSynth [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/instrument/FMSynth.js .FMSynth */
/*! export FatOscillator [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/source/oscillator/FatOscillator.js .FatOscillator */
/*! export FeedbackCombFilter [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/component/filter/FeedbackCombFilter.js .FeedbackCombFilter */
/*! export FeedbackDelay [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/effect/FeedbackDelay.js .FeedbackDelay */
/*! export Filter [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/component/filter/Filter.js .Filter */
/*! export Follower [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/component/analysis/Follower.js .Follower */
/*! export Freeverb [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/effect/Freeverb.js .Freeverb */
/*! export Frequency [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/core/type/Frequency.js .Frequency */
/*! export FrequencyClass [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/core/type/Frequency.js .FrequencyClass */
/*! export FrequencyEnvelope [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/component/envelope/FrequencyEnvelope.js .FrequencyEnvelope */
/*! export FrequencyShifter [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/effect/FrequencyShifter.js .FrequencyShifter */
/*! export Gain [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/core/context/Gain.js .Gain */
/*! export GainToAudio [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/signal/GainToAudio.js .GainToAudio */
/*! export Gate [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/component/dynamics/Gate.js .Gate */
/*! export GrainPlayer [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/source/buffer/GrainPlayer.js .GrainPlayer */
/*! export GreaterThan [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/signal/GreaterThan.js .GreaterThan */
/*! export GreaterThanZero [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/signal/GreaterThanZero.js .GreaterThanZero */
/*! export IntervalTimeline [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/core/util/IntervalTimeline.js .IntervalTimeline */
/*! export JCReverb [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/effect/JCReverb.js .JCReverb */
/*! export LFO [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/source/oscillator/LFO.js .LFO */
/*! export Limiter [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/component/dynamics/Limiter.js .Limiter */
/*! export Loop [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/event/Loop.js .Loop */
/*! export LowpassCombFilter [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/component/filter/LowpassCombFilter.js .LowpassCombFilter */
/*! export MembraneSynth [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/instrument/MembraneSynth.js .MembraneSynth */
/*! export Merge [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/component/channel/Merge.js .Merge */
/*! export MetalSynth [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/instrument/MetalSynth.js .MetalSynth */
/*! export Meter [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/component/analysis/Meter.js .Meter */
/*! export MidSideCompressor [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/component/dynamics/MidSideCompressor.js .MidSideCompressor */
/*! export MidSideMerge [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/component/channel/MidSideMerge.js .MidSideMerge */
/*! export MidSideSplit [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/component/channel/MidSideSplit.js .MidSideSplit */
/*! export Midi [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/core/type/Midi.js .Midi */
/*! export MidiClass [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/core/type/Midi.js .MidiClass */
/*! export MonoSynth [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/instrument/MonoSynth.js .MonoSynth */
/*! export MultibandCompressor [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/component/dynamics/MultibandCompressor.js .MultibandCompressor */
/*! export MultibandSplit [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/component/channel/MultibandSplit.js .MultibandSplit */
/*! export Multiply [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/signal/Multiply.js .Multiply */
/*! export Negate [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/signal/Negate.js .Negate */
/*! export Noise [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/source/Noise.js .Noise */
/*! export NoiseSynth [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/instrument/NoiseSynth.js .NoiseSynth */
/*! export Offline [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/core/context/Offline.js .Offline */
/*! export OfflineContext [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/core/context/OfflineContext.js .OfflineContext */
/*! export OmniOscillator [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/source/oscillator/OmniOscillator.js .OmniOscillator */
/*! export OnePoleFilter [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/component/filter/OnePoleFilter.js .OnePoleFilter */
/*! export Oscillator [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/source/oscillator/Oscillator.js .Oscillator */
/*! export PWMOscillator [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/source/oscillator/PWMOscillator.js .PWMOscillator */
/*! export PanVol [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/component/channel/PanVol.js .PanVol */
/*! export Panner [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/component/channel/Panner.js .Panner */
/*! export Panner3D [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/component/channel/Panner3D.js .Panner3D */
/*! export Param [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/core/context/Param.js .Param */
/*! export Part [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/event/Part.js .Part */
/*! export Pattern [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/event/Pattern.js .Pattern */
/*! export Phaser [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/effect/Phaser.js .Phaser */
/*! export PingPongDelay [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/effect/PingPongDelay.js .PingPongDelay */
/*! export PitchShift [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/effect/PitchShift.js .PitchShift */
/*! export Player [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/source/buffer/Player.js .Player */
/*! export Players [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/source/buffer/Players.js .Players */
/*! export PluckSynth [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/instrument/PluckSynth.js .PluckSynth */
/*! export PolySynth [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/instrument/PolySynth.js .PolySynth */
/*! export Pow [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/signal/Pow.js .Pow */
/*! export PulseOscillator [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/source/oscillator/PulseOscillator.js .PulseOscillator */
/*! export Recorder [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/component/channel/Recorder.js .Recorder */
/*! export Reverb [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/effect/Reverb.js .Reverb */
/*! export Sampler [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/instrument/Sampler.js .Sampler */
/*! export Scale [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/signal/Scale.js .Scale */
/*! export ScaleExp [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/signal/ScaleExp.js .ScaleExp */
/*! export Sequence [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/event/Sequence.js .Sequence */
/*! export Signal [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/signal/Signal.js .Signal */
/*! export Solo [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/component/channel/Solo.js .Solo */
/*! export Split [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/component/channel/Split.js .Split */
/*! export StateTimeline [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/core/util/StateTimeline.js .StateTimeline */
/*! export StereoWidener [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/effect/StereoWidener.js .StereoWidener */
/*! export Subtract [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/signal/Subtract.js .Subtract */
/*! export SyncedSignal [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/signal/SyncedSignal.js .SyncedSignal */
/*! export Synth [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/instrument/Synth.js .Synth */
/*! export Ticks [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/core/type/Ticks.js .Ticks */
/*! export TicksClass [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/core/type/Ticks.js .TicksClass */
/*! export Time [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/core/type/Time.js .Time */
/*! export TimeClass [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/core/type/Time.js .TimeClass */
/*! export Timeline [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/core/util/Timeline.js .Timeline */
/*! export ToneAudioBuffer [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/core/context/ToneAudioBuffer.js .ToneAudioBuffer */
/*! export ToneAudioBuffers [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/core/context/ToneAudioBuffers.js .ToneAudioBuffers */
/*! export ToneAudioNode [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/core/context/ToneAudioNode.js .ToneAudioNode */
/*! export ToneBufferSource [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/source/buffer/ToneBufferSource.js .ToneBufferSource */
/*! export ToneEvent [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/event/ToneEvent.js .ToneEvent */
/*! export ToneOscillatorNode [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/source/oscillator/ToneOscillatorNode.js .ToneOscillatorNode */
/*! export TransportTime [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/core/type/TransportTime.js .TransportTime */
/*! export TransportTimeClass [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/core/type/TransportTime.js .TransportTimeClass */
/*! export Tremolo [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/effect/Tremolo.js .Tremolo */
/*! export Unit [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/core/type/Units.js */
/*!   exports [not provided] [no usage info] */
/*! export UserMedia [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/source/UserMedia.js .UserMedia */
/*! export Vibrato [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/effect/Vibrato.js .Vibrato */
/*! export Volume [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/component/channel/Volume.js .Volume */
/*! export WaveShaper [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/signal/WaveShaper.js .WaveShaper */
/*! export Waveform [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/component/analysis/Waveform.js .Waveform */
/*! export Zero [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/signal/Zero.js .Zero */
/*! export connect [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/core/context/ToneAudioNode.js .connect */
/*! export connectSeries [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/core/context/ToneAudioNode.js .connectSeries */
/*! export connectSignal [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/signal/Signal.js .connectSignal */
/*! export dbToGain [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/core/type/Conversions.js .dbToGain */
/*! export debug [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/core/util/Debug.js */
/*!   export assert [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export assertContextRunning [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export assertRange [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export log [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export setLogger [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export warn [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export defaultArg [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/core/util/Defaults.js .defaultArg */
/*! export disconnect [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/core/context/ToneAudioNode.js .disconnect */
/*! export ftom [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/core/type/Conversions.js .ftom */
/*! export gainToDb [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/core/type/Conversions.js .gainToDb */
/*! export intervalToFrequencyRatio [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/core/type/Conversions.js .intervalToFrequencyRatio */
/*! export isArray [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/core/util/TypeCheck.js .isArray */
/*! export isBoolean [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/core/util/TypeCheck.js .isBoolean */
/*! export isDefined [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/core/util/TypeCheck.js .isDefined */
/*! export isFunction [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/core/util/TypeCheck.js .isFunction */
/*! export isNote [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/core/util/TypeCheck.js .isNote */
/*! export isNumber [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/core/util/TypeCheck.js .isNumber */
/*! export isObject [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/core/util/TypeCheck.js .isObject */
/*! export isString [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/core/util/TypeCheck.js .isString */
/*! export isUndef [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/core/util/TypeCheck.js .isUndef */
/*! export mtof [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/core/type/Conversions.js .mtof */
/*! export optionsFromArguments [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/core/util/Defaults.js .optionsFromArguments */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_exports__, __webpack_require__.d, __webpack_require__.r, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "BaseContext": () => /* reexport safe */ _core_index__WEBPACK_IMPORTED_MODULE_0__.BaseContext,
/* harmony export */   "Clock": () => /* reexport safe */ _core_index__WEBPACK_IMPORTED_MODULE_0__.Clock,
/* harmony export */   "Context": () => /* reexport safe */ _core_index__WEBPACK_IMPORTED_MODULE_0__.Context,
/* harmony export */   "Delay": () => /* reexport safe */ _core_index__WEBPACK_IMPORTED_MODULE_0__.Delay,
/* harmony export */   "Emitter": () => /* reexport safe */ _core_index__WEBPACK_IMPORTED_MODULE_0__.Emitter,
/* harmony export */   "Frequency": () => /* reexport safe */ _core_index__WEBPACK_IMPORTED_MODULE_0__.Frequency,
/* harmony export */   "FrequencyClass": () => /* reexport safe */ _core_index__WEBPACK_IMPORTED_MODULE_0__.FrequencyClass,
/* harmony export */   "Gain": () => /* reexport safe */ _core_index__WEBPACK_IMPORTED_MODULE_0__.Gain,
/* harmony export */   "IntervalTimeline": () => /* reexport safe */ _core_index__WEBPACK_IMPORTED_MODULE_0__.IntervalTimeline,
/* harmony export */   "Midi": () => /* reexport safe */ _core_index__WEBPACK_IMPORTED_MODULE_0__.Midi,
/* harmony export */   "MidiClass": () => /* reexport safe */ _core_index__WEBPACK_IMPORTED_MODULE_0__.MidiClass,
/* harmony export */   "Offline": () => /* reexport safe */ _core_index__WEBPACK_IMPORTED_MODULE_0__.Offline,
/* harmony export */   "OfflineContext": () => /* reexport safe */ _core_index__WEBPACK_IMPORTED_MODULE_0__.OfflineContext,
/* harmony export */   "Param": () => /* reexport safe */ _core_index__WEBPACK_IMPORTED_MODULE_0__.Param,
/* harmony export */   "StateTimeline": () => /* reexport safe */ _core_index__WEBPACK_IMPORTED_MODULE_0__.StateTimeline,
/* harmony export */   "Ticks": () => /* reexport safe */ _core_index__WEBPACK_IMPORTED_MODULE_0__.Ticks,
/* harmony export */   "TicksClass": () => /* reexport safe */ _core_index__WEBPACK_IMPORTED_MODULE_0__.TicksClass,
/* harmony export */   "Time": () => /* reexport safe */ _core_index__WEBPACK_IMPORTED_MODULE_0__.Time,
/* harmony export */   "TimeClass": () => /* reexport safe */ _core_index__WEBPACK_IMPORTED_MODULE_0__.TimeClass,
/* harmony export */   "Timeline": () => /* reexport safe */ _core_index__WEBPACK_IMPORTED_MODULE_0__.Timeline,
/* harmony export */   "ToneAudioBuffer": () => /* reexport safe */ _core_index__WEBPACK_IMPORTED_MODULE_0__.ToneAudioBuffer,
/* harmony export */   "ToneAudioBuffers": () => /* reexport safe */ _core_index__WEBPACK_IMPORTED_MODULE_0__.ToneAudioBuffers,
/* harmony export */   "ToneAudioNode": () => /* reexport safe */ _core_index__WEBPACK_IMPORTED_MODULE_0__.ToneAudioNode,
/* harmony export */   "TransportTime": () => /* reexport safe */ _core_index__WEBPACK_IMPORTED_MODULE_0__.TransportTime,
/* harmony export */   "TransportTimeClass": () => /* reexport safe */ _core_index__WEBPACK_IMPORTED_MODULE_0__.TransportTimeClass,
/* harmony export */   "Unit": () => /* reexport safe */ _core_index__WEBPACK_IMPORTED_MODULE_0__.Unit,
/* harmony export */   "connect": () => /* reexport safe */ _core_index__WEBPACK_IMPORTED_MODULE_0__.connect,
/* harmony export */   "connectSeries": () => /* reexport safe */ _core_index__WEBPACK_IMPORTED_MODULE_0__.connectSeries,
/* harmony export */   "dbToGain": () => /* reexport safe */ _core_index__WEBPACK_IMPORTED_MODULE_0__.dbToGain,
/* harmony export */   "debug": () => /* reexport safe */ _core_index__WEBPACK_IMPORTED_MODULE_0__.debug,
/* harmony export */   "defaultArg": () => /* reexport safe */ _core_index__WEBPACK_IMPORTED_MODULE_0__.defaultArg,
/* harmony export */   "disconnect": () => /* reexport safe */ _core_index__WEBPACK_IMPORTED_MODULE_0__.disconnect,
/* harmony export */   "ftom": () => /* reexport safe */ _core_index__WEBPACK_IMPORTED_MODULE_0__.ftom,
/* harmony export */   "gainToDb": () => /* reexport safe */ _core_index__WEBPACK_IMPORTED_MODULE_0__.gainToDb,
/* harmony export */   "intervalToFrequencyRatio": () => /* reexport safe */ _core_index__WEBPACK_IMPORTED_MODULE_0__.intervalToFrequencyRatio,
/* harmony export */   "isArray": () => /* reexport safe */ _core_index__WEBPACK_IMPORTED_MODULE_0__.isArray,
/* harmony export */   "isBoolean": () => /* reexport safe */ _core_index__WEBPACK_IMPORTED_MODULE_0__.isBoolean,
/* harmony export */   "isDefined": () => /* reexport safe */ _core_index__WEBPACK_IMPORTED_MODULE_0__.isDefined,
/* harmony export */   "isFunction": () => /* reexport safe */ _core_index__WEBPACK_IMPORTED_MODULE_0__.isFunction,
/* harmony export */   "isNote": () => /* reexport safe */ _core_index__WEBPACK_IMPORTED_MODULE_0__.isNote,
/* harmony export */   "isNumber": () => /* reexport safe */ _core_index__WEBPACK_IMPORTED_MODULE_0__.isNumber,
/* harmony export */   "isObject": () => /* reexport safe */ _core_index__WEBPACK_IMPORTED_MODULE_0__.isObject,
/* harmony export */   "isString": () => /* reexport safe */ _core_index__WEBPACK_IMPORTED_MODULE_0__.isString,
/* harmony export */   "isUndef": () => /* reexport safe */ _core_index__WEBPACK_IMPORTED_MODULE_0__.isUndef,
/* harmony export */   "mtof": () => /* reexport safe */ _core_index__WEBPACK_IMPORTED_MODULE_0__.mtof,
/* harmony export */   "optionsFromArguments": () => /* reexport safe */ _core_index__WEBPACK_IMPORTED_MODULE_0__.optionsFromArguments,
/* harmony export */   "AMOscillator": () => /* reexport safe */ _source_index__WEBPACK_IMPORTED_MODULE_1__.AMOscillator,
/* harmony export */   "FMOscillator": () => /* reexport safe */ _source_index__WEBPACK_IMPORTED_MODULE_1__.FMOscillator,
/* harmony export */   "FatOscillator": () => /* reexport safe */ _source_index__WEBPACK_IMPORTED_MODULE_1__.FatOscillator,
/* harmony export */   "GrainPlayer": () => /* reexport safe */ _source_index__WEBPACK_IMPORTED_MODULE_1__.GrainPlayer,
/* harmony export */   "LFO": () => /* reexport safe */ _source_index__WEBPACK_IMPORTED_MODULE_1__.LFO,
/* harmony export */   "Noise": () => /* reexport safe */ _source_index__WEBPACK_IMPORTED_MODULE_1__.Noise,
/* harmony export */   "OmniOscillator": () => /* reexport safe */ _source_index__WEBPACK_IMPORTED_MODULE_1__.OmniOscillator,
/* harmony export */   "Oscillator": () => /* reexport safe */ _source_index__WEBPACK_IMPORTED_MODULE_1__.Oscillator,
/* harmony export */   "PWMOscillator": () => /* reexport safe */ _source_index__WEBPACK_IMPORTED_MODULE_1__.PWMOscillator,
/* harmony export */   "Player": () => /* reexport safe */ _source_index__WEBPACK_IMPORTED_MODULE_1__.Player,
/* harmony export */   "Players": () => /* reexport safe */ _source_index__WEBPACK_IMPORTED_MODULE_1__.Players,
/* harmony export */   "PulseOscillator": () => /* reexport safe */ _source_index__WEBPACK_IMPORTED_MODULE_1__.PulseOscillator,
/* harmony export */   "ToneBufferSource": () => /* reexport safe */ _source_index__WEBPACK_IMPORTED_MODULE_1__.ToneBufferSource,
/* harmony export */   "ToneOscillatorNode": () => /* reexport safe */ _source_index__WEBPACK_IMPORTED_MODULE_1__.ToneOscillatorNode,
/* harmony export */   "UserMedia": () => /* reexport safe */ _source_index__WEBPACK_IMPORTED_MODULE_1__.UserMedia,
/* harmony export */   "Abs": () => /* reexport safe */ _signal_index__WEBPACK_IMPORTED_MODULE_2__.Abs,
/* harmony export */   "Add": () => /* reexport safe */ _signal_index__WEBPACK_IMPORTED_MODULE_2__.Add,
/* harmony export */   "AudioToGain": () => /* reexport safe */ _signal_index__WEBPACK_IMPORTED_MODULE_2__.AudioToGain,
/* harmony export */   "GainToAudio": () => /* reexport safe */ _signal_index__WEBPACK_IMPORTED_MODULE_2__.GainToAudio,
/* harmony export */   "GreaterThan": () => /* reexport safe */ _signal_index__WEBPACK_IMPORTED_MODULE_2__.GreaterThan,
/* harmony export */   "GreaterThanZero": () => /* reexport safe */ _signal_index__WEBPACK_IMPORTED_MODULE_2__.GreaterThanZero,
/* harmony export */   "Multiply": () => /* reexport safe */ _signal_index__WEBPACK_IMPORTED_MODULE_2__.Multiply,
/* harmony export */   "Negate": () => /* reexport safe */ _signal_index__WEBPACK_IMPORTED_MODULE_2__.Negate,
/* harmony export */   "Pow": () => /* reexport safe */ _signal_index__WEBPACK_IMPORTED_MODULE_2__.Pow,
/* harmony export */   "Scale": () => /* reexport safe */ _signal_index__WEBPACK_IMPORTED_MODULE_2__.Scale,
/* harmony export */   "ScaleExp": () => /* reexport safe */ _signal_index__WEBPACK_IMPORTED_MODULE_2__.ScaleExp,
/* harmony export */   "Signal": () => /* reexport safe */ _signal_index__WEBPACK_IMPORTED_MODULE_2__.Signal,
/* harmony export */   "Subtract": () => /* reexport safe */ _signal_index__WEBPACK_IMPORTED_MODULE_2__.Subtract,
/* harmony export */   "SyncedSignal": () => /* reexport safe */ _signal_index__WEBPACK_IMPORTED_MODULE_2__.SyncedSignal,
/* harmony export */   "WaveShaper": () => /* reexport safe */ _signal_index__WEBPACK_IMPORTED_MODULE_2__.WaveShaper,
/* harmony export */   "Zero": () => /* reexport safe */ _signal_index__WEBPACK_IMPORTED_MODULE_2__.Zero,
/* harmony export */   "connectSignal": () => /* reexport safe */ _signal_index__WEBPACK_IMPORTED_MODULE_2__.connectSignal,
/* harmony export */   "AMSynth": () => /* reexport safe */ _instrument_index__WEBPACK_IMPORTED_MODULE_3__.AMSynth,
/* harmony export */   "DuoSynth": () => /* reexport safe */ _instrument_index__WEBPACK_IMPORTED_MODULE_3__.DuoSynth,
/* harmony export */   "FMSynth": () => /* reexport safe */ _instrument_index__WEBPACK_IMPORTED_MODULE_3__.FMSynth,
/* harmony export */   "MembraneSynth": () => /* reexport safe */ _instrument_index__WEBPACK_IMPORTED_MODULE_3__.MembraneSynth,
/* harmony export */   "MetalSynth": () => /* reexport safe */ _instrument_index__WEBPACK_IMPORTED_MODULE_3__.MetalSynth,
/* harmony export */   "MonoSynth": () => /* reexport safe */ _instrument_index__WEBPACK_IMPORTED_MODULE_3__.MonoSynth,
/* harmony export */   "NoiseSynth": () => /* reexport safe */ _instrument_index__WEBPACK_IMPORTED_MODULE_3__.NoiseSynth,
/* harmony export */   "PluckSynth": () => /* reexport safe */ _instrument_index__WEBPACK_IMPORTED_MODULE_3__.PluckSynth,
/* harmony export */   "PolySynth": () => /* reexport safe */ _instrument_index__WEBPACK_IMPORTED_MODULE_3__.PolySynth,
/* harmony export */   "Sampler": () => /* reexport safe */ _instrument_index__WEBPACK_IMPORTED_MODULE_3__.Sampler,
/* harmony export */   "Synth": () => /* reexport safe */ _instrument_index__WEBPACK_IMPORTED_MODULE_3__.Synth,
/* harmony export */   "Loop": () => /* reexport safe */ _event_index__WEBPACK_IMPORTED_MODULE_4__.Loop,
/* harmony export */   "Part": () => /* reexport safe */ _event_index__WEBPACK_IMPORTED_MODULE_4__.Part,
/* harmony export */   "Pattern": () => /* reexport safe */ _event_index__WEBPACK_IMPORTED_MODULE_4__.Pattern,
/* harmony export */   "Sequence": () => /* reexport safe */ _event_index__WEBPACK_IMPORTED_MODULE_4__.Sequence,
/* harmony export */   "ToneEvent": () => /* reexport safe */ _event_index__WEBPACK_IMPORTED_MODULE_4__.ToneEvent,
/* harmony export */   "AutoFilter": () => /* reexport safe */ _effect_index__WEBPACK_IMPORTED_MODULE_5__.AutoFilter,
/* harmony export */   "AutoPanner": () => /* reexport safe */ _effect_index__WEBPACK_IMPORTED_MODULE_5__.AutoPanner,
/* harmony export */   "AutoWah": () => /* reexport safe */ _effect_index__WEBPACK_IMPORTED_MODULE_5__.AutoWah,
/* harmony export */   "BitCrusher": () => /* reexport safe */ _effect_index__WEBPACK_IMPORTED_MODULE_5__.BitCrusher,
/* harmony export */   "Chebyshev": () => /* reexport safe */ _effect_index__WEBPACK_IMPORTED_MODULE_5__.Chebyshev,
/* harmony export */   "Chorus": () => /* reexport safe */ _effect_index__WEBPACK_IMPORTED_MODULE_5__.Chorus,
/* harmony export */   "Distortion": () => /* reexport safe */ _effect_index__WEBPACK_IMPORTED_MODULE_5__.Distortion,
/* harmony export */   "FeedbackDelay": () => /* reexport safe */ _effect_index__WEBPACK_IMPORTED_MODULE_5__.FeedbackDelay,
/* harmony export */   "Freeverb": () => /* reexport safe */ _effect_index__WEBPACK_IMPORTED_MODULE_5__.Freeverb,
/* harmony export */   "FrequencyShifter": () => /* reexport safe */ _effect_index__WEBPACK_IMPORTED_MODULE_5__.FrequencyShifter,
/* harmony export */   "JCReverb": () => /* reexport safe */ _effect_index__WEBPACK_IMPORTED_MODULE_5__.JCReverb,
/* harmony export */   "Phaser": () => /* reexport safe */ _effect_index__WEBPACK_IMPORTED_MODULE_5__.Phaser,
/* harmony export */   "PingPongDelay": () => /* reexport safe */ _effect_index__WEBPACK_IMPORTED_MODULE_5__.PingPongDelay,
/* harmony export */   "PitchShift": () => /* reexport safe */ _effect_index__WEBPACK_IMPORTED_MODULE_5__.PitchShift,
/* harmony export */   "Reverb": () => /* reexport safe */ _effect_index__WEBPACK_IMPORTED_MODULE_5__.Reverb,
/* harmony export */   "StereoWidener": () => /* reexport safe */ _effect_index__WEBPACK_IMPORTED_MODULE_5__.StereoWidener,
/* harmony export */   "Tremolo": () => /* reexport safe */ _effect_index__WEBPACK_IMPORTED_MODULE_5__.Tremolo,
/* harmony export */   "Vibrato": () => /* reexport safe */ _effect_index__WEBPACK_IMPORTED_MODULE_5__.Vibrato,
/* harmony export */   "AmplitudeEnvelope": () => /* reexport safe */ _component_index__WEBPACK_IMPORTED_MODULE_6__.AmplitudeEnvelope,
/* harmony export */   "Analyser": () => /* reexport safe */ _component_index__WEBPACK_IMPORTED_MODULE_6__.Analyser,
/* harmony export */   "BiquadFilter": () => /* reexport safe */ _component_index__WEBPACK_IMPORTED_MODULE_6__.BiquadFilter,
/* harmony export */   "Channel": () => /* reexport safe */ _component_index__WEBPACK_IMPORTED_MODULE_6__.Channel,
/* harmony export */   "Compressor": () => /* reexport safe */ _component_index__WEBPACK_IMPORTED_MODULE_6__.Compressor,
/* harmony export */   "Convolver": () => /* reexport safe */ _component_index__WEBPACK_IMPORTED_MODULE_6__.Convolver,
/* harmony export */   "CrossFade": () => /* reexport safe */ _component_index__WEBPACK_IMPORTED_MODULE_6__.CrossFade,
/* harmony export */   "DCMeter": () => /* reexport safe */ _component_index__WEBPACK_IMPORTED_MODULE_6__.DCMeter,
/* harmony export */   "EQ3": () => /* reexport safe */ _component_index__WEBPACK_IMPORTED_MODULE_6__.EQ3,
/* harmony export */   "Envelope": () => /* reexport safe */ _component_index__WEBPACK_IMPORTED_MODULE_6__.Envelope,
/* harmony export */   "FFT": () => /* reexport safe */ _component_index__WEBPACK_IMPORTED_MODULE_6__.FFT,
/* harmony export */   "FeedbackCombFilter": () => /* reexport safe */ _component_index__WEBPACK_IMPORTED_MODULE_6__.FeedbackCombFilter,
/* harmony export */   "Filter": () => /* reexport safe */ _component_index__WEBPACK_IMPORTED_MODULE_6__.Filter,
/* harmony export */   "Follower": () => /* reexport safe */ _component_index__WEBPACK_IMPORTED_MODULE_6__.Follower,
/* harmony export */   "FrequencyEnvelope": () => /* reexport safe */ _component_index__WEBPACK_IMPORTED_MODULE_6__.FrequencyEnvelope,
/* harmony export */   "Gate": () => /* reexport safe */ _component_index__WEBPACK_IMPORTED_MODULE_6__.Gate,
/* harmony export */   "Limiter": () => /* reexport safe */ _component_index__WEBPACK_IMPORTED_MODULE_6__.Limiter,
/* harmony export */   "LowpassCombFilter": () => /* reexport safe */ _component_index__WEBPACK_IMPORTED_MODULE_6__.LowpassCombFilter,
/* harmony export */   "Merge": () => /* reexport safe */ _component_index__WEBPACK_IMPORTED_MODULE_6__.Merge,
/* harmony export */   "Meter": () => /* reexport safe */ _component_index__WEBPACK_IMPORTED_MODULE_6__.Meter,
/* harmony export */   "MidSideCompressor": () => /* reexport safe */ _component_index__WEBPACK_IMPORTED_MODULE_6__.MidSideCompressor,
/* harmony export */   "MidSideMerge": () => /* reexport safe */ _component_index__WEBPACK_IMPORTED_MODULE_6__.MidSideMerge,
/* harmony export */   "MidSideSplit": () => /* reexport safe */ _component_index__WEBPACK_IMPORTED_MODULE_6__.MidSideSplit,
/* harmony export */   "MultibandCompressor": () => /* reexport safe */ _component_index__WEBPACK_IMPORTED_MODULE_6__.MultibandCompressor,
/* harmony export */   "MultibandSplit": () => /* reexport safe */ _component_index__WEBPACK_IMPORTED_MODULE_6__.MultibandSplit,
/* harmony export */   "OnePoleFilter": () => /* reexport safe */ _component_index__WEBPACK_IMPORTED_MODULE_6__.OnePoleFilter,
/* harmony export */   "PanVol": () => /* reexport safe */ _component_index__WEBPACK_IMPORTED_MODULE_6__.PanVol,
/* harmony export */   "Panner": () => /* reexport safe */ _component_index__WEBPACK_IMPORTED_MODULE_6__.Panner,
/* harmony export */   "Panner3D": () => /* reexport safe */ _component_index__WEBPACK_IMPORTED_MODULE_6__.Panner3D,
/* harmony export */   "Recorder": () => /* reexport safe */ _component_index__WEBPACK_IMPORTED_MODULE_6__.Recorder,
/* harmony export */   "Solo": () => /* reexport safe */ _component_index__WEBPACK_IMPORTED_MODULE_6__.Solo,
/* harmony export */   "Split": () => /* reexport safe */ _component_index__WEBPACK_IMPORTED_MODULE_6__.Split,
/* harmony export */   "Volume": () => /* reexport safe */ _component_index__WEBPACK_IMPORTED_MODULE_6__.Volume,
/* harmony export */   "Waveform": () => /* reexport safe */ _component_index__WEBPACK_IMPORTED_MODULE_6__.Waveform
/* harmony export */ });
/* harmony import */ var _core_index__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./core/index */ "./node_modules/tone/build/esm/core/index.js");
/* harmony import */ var _source_index__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./source/index */ "./node_modules/tone/build/esm/source/index.js");
/* harmony import */ var _signal_index__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./signal/index */ "./node_modules/tone/build/esm/signal/index.js");
/* harmony import */ var _instrument_index__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./instrument/index */ "./node_modules/tone/build/esm/instrument/index.js");
/* harmony import */ var _event_index__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./event/index */ "./node_modules/tone/build/esm/event/index.js");
/* harmony import */ var _effect_index__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./effect/index */ "./node_modules/tone/build/esm/effect/index.js");
/* harmony import */ var _component_index__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./component/index */ "./node_modules/tone/build/esm/component/index.js");







//# sourceMappingURL=classes.js.map

/***/ }),

/***/ "./node_modules/tone/build/esm/component/analysis/Analyser.js":
/*!********************************************************************!*\
  !*** ./node_modules/tone/build/esm/component/analysis/Analyser.js ***!
  \********************************************************************/
/*! namespace exports */
/*! export Analyser [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Analyser": () => /* binding */ Analyser
/* harmony export */ });
/* harmony import */ var _core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/context/ToneAudioNode */ "./node_modules/tone/build/esm/core/context/ToneAudioNode.js");
/* harmony import */ var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core/util/Defaults */ "./node_modules/tone/build/esm/core/util/Defaults.js");
/* harmony import */ var _channel_Split__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../channel/Split */ "./node_modules/tone/build/esm/component/channel/Split.js");
/* harmony import */ var _core_context_Gain__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/context/Gain */ "./node_modules/tone/build/esm/core/context/Gain.js");
/* harmony import */ var _core_util_Debug__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../core/util/Debug */ "./node_modules/tone/build/esm/core/util/Debug.js");
;




/**
 * Wrapper around the native Web Audio's [AnalyserNode](http://webaudio.github.io/web-audio-api/#idl-def-AnalyserNode).
 * Extracts FFT or Waveform data from the incoming signal.
 * @category Component
 */
class Analyser extends _core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_0__.ToneAudioNode {
    constructor() {
        super((0,_core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__.optionsFromArguments)(Analyser.getDefaults(), arguments, ["type", "size"]));
        this.name = "Analyser";
        /**
         * The analyser node.
         */
        this._analysers = [];
        /**
         * The buffer that the FFT data is written to
         */
        this._buffers = [];
        const options = (0,_core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__.optionsFromArguments)(Analyser.getDefaults(), arguments, ["type", "size"]);
        this.input = this.output = this._gain = new _core_context_Gain__WEBPACK_IMPORTED_MODULE_3__.Gain({ context: this.context });
        this._split = new _channel_Split__WEBPACK_IMPORTED_MODULE_2__.Split({
            context: this.context,
            channels: options.channels,
        });
        this.input.connect(this._split);
        (0,_core_util_Debug__WEBPACK_IMPORTED_MODULE_4__.assertRange)(options.channels, 1);
        // create the analysers
        for (let channel = 0; channel < options.channels; channel++) {
            this._analysers[channel] = this.context.createAnalyser();
            this._split.connect(this._analysers[channel], channel, 0);
        }
        // set the values initially
        this.size = options.size;
        this.type = options.type;
    }
    static getDefaults() {
        return Object.assign(_core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_0__.ToneAudioNode.getDefaults(), {
            size: 1024,
            smoothing: 0.8,
            type: "fft",
            channels: 1,
        });
    }
    /**
     * Run the analysis given the current settings. If [[channels]] = 1,
     * it will return a Float32Array. If [[channels]] > 1, it will
     * return an array of Float32Arrays where each index in the array
     * represents the analysis done on a channel.
     */
    getValue() {
        this._analysers.forEach((analyser, index) => {
            const buffer = this._buffers[index];
            if (this._type === "fft") {
                analyser.getFloatFrequencyData(buffer);
            }
            else if (this._type === "waveform") {
                analyser.getFloatTimeDomainData(buffer);
            }
        });
        if (this.channels === 1) {
            return this._buffers[0];
        }
        else {
            return this._buffers;
        }
    }
    /**
     * The size of analysis. This must be a power of two in the range 16 to 16384.
     */
    get size() {
        return this._analysers[0].frequencyBinCount;
    }
    set size(size) {
        this._analysers.forEach((analyser, index) => {
            analyser.fftSize = size * 2;
            this._buffers[index] = new Float32Array(size);
        });
    }
    /**
     * The number of channels the analyser does the analysis on. Channel
     * separation is done using [[Split]]
     */
    get channels() {
        return this._analysers.length;
    }
    /**
     * The analysis function returned by analyser.getValue(), either "fft" or "waveform".
     */
    get type() {
        return this._type;
    }
    set type(type) {
        (0,_core_util_Debug__WEBPACK_IMPORTED_MODULE_4__.assert)(type === "waveform" || type === "fft", `Analyser: invalid type: ${type}`);
        this._type = type;
    }
    /**
     * 0 represents no time averaging with the last analysis frame.
     */
    get smoothing() {
        return this._analysers[0].smoothingTimeConstant;
    }
    set smoothing(val) {
        this._analysers.forEach(a => a.smoothingTimeConstant = val);
    }
    /**
     * Clean up.
     */
    dispose() {
        super.dispose();
        this._analysers.forEach(a => a.disconnect());
        this._split.dispose();
        this._gain.dispose();
        return this;
    }
}
//# sourceMappingURL=Analyser.js.map

/***/ }),

/***/ "./node_modules/tone/build/esm/component/analysis/DCMeter.js":
/*!*******************************************************************!*\
  !*** ./node_modules/tone/build/esm/component/analysis/DCMeter.js ***!
  \*******************************************************************/
/*! namespace exports */
/*! export DCMeter [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "DCMeter": () => /* binding */ DCMeter
/* harmony export */ });
/* harmony import */ var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/util/Defaults */ "./node_modules/tone/build/esm/core/util/Defaults.js");
/* harmony import */ var _MeterBase__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./MeterBase */ "./node_modules/tone/build/esm/component/analysis/MeterBase.js");
;

/**
 * DCMeter gets the raw value of the input signal at the current time.
 *
 * @example
 * const meter = new Tone.DCMeter();
 * const mic = new Tone.UserMedia();
 * mic.open();
 * // connect mic to the meter
 * mic.connect(meter);
 * // the current level of the mic
 * const level = meter.getValue();
 * @category Component
 */
class DCMeter extends _MeterBase__WEBPACK_IMPORTED_MODULE_1__.MeterBase {
    constructor() {
        super((0,_core_util_Defaults__WEBPACK_IMPORTED_MODULE_0__.optionsFromArguments)(DCMeter.getDefaults(), arguments));
        this.name = "DCMeter";
        this._analyser.type = "waveform";
        this._analyser.size = 256;
    }
    /**
     * Get the signal value of the incoming signal
     */
    getValue() {
        const value = this._analyser.getValue();
        return value[0];
    }
}
//# sourceMappingURL=DCMeter.js.map

/***/ }),

/***/ "./node_modules/tone/build/esm/component/analysis/FFT.js":
/*!***************************************************************!*\
  !*** ./node_modules/tone/build/esm/component/analysis/FFT.js ***!
  \***************************************************************/
/*! namespace exports */
/*! export FFT [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "FFT": () => /* binding */ FFT
/* harmony export */ });
/* harmony import */ var _core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/context/ToneAudioNode */ "./node_modules/tone/build/esm/core/context/ToneAudioNode.js");
/* harmony import */ var _core_type_Conversions__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core/type/Conversions */ "./node_modules/tone/build/esm/core/type/Conversions.js");
/* harmony import */ var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/util/Defaults */ "./node_modules/tone/build/esm/core/util/Defaults.js");
/* harmony import */ var _MeterBase__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./MeterBase */ "./node_modules/tone/build/esm/component/analysis/MeterBase.js");
/* harmony import */ var _core_util_Debug__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../core/util/Debug */ "./node_modules/tone/build/esm/core/util/Debug.js");
;




/**
 * Get the current frequency data of the connected audio source using a fast Fourier transform.
 * @category Component
 */
class FFT extends _MeterBase__WEBPACK_IMPORTED_MODULE_3__.MeterBase {
    constructor() {
        super((0,_core_util_Defaults__WEBPACK_IMPORTED_MODULE_2__.optionsFromArguments)(FFT.getDefaults(), arguments, ["size"]));
        this.name = "FFT";
        const options = (0,_core_util_Defaults__WEBPACK_IMPORTED_MODULE_2__.optionsFromArguments)(FFT.getDefaults(), arguments, ["size"]);
        this.normalRange = options.normalRange;
        this._analyser.type = "fft";
        this.size = options.size;
    }
    static getDefaults() {
        return Object.assign(_core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_0__.ToneAudioNode.getDefaults(), {
            normalRange: false,
            size: 1024,
            smoothing: 0.8,
        });
    }
    /**
     * Gets the current frequency data from the connected audio source.
     * Returns the frequency data of length [[size]] as a Float32Array of decibel values.
     */
    getValue() {
        const values = this._analyser.getValue();
        return values.map(v => this.normalRange ? (0,_core_type_Conversions__WEBPACK_IMPORTED_MODULE_1__.dbToGain)(v) : v);
    }
    /**
     * The size of analysis. This must be a power of two in the range 16 to 16384.
     * Determines the size of the array returned by [[getValue]] (i.e. the number of
     * frequency bins). Large FFT sizes may be costly to compute.
     */
    get size() {
        return this._analyser.size;
    }
    set size(size) {
        this._analyser.size = size;
    }
    /**
     * 0 represents no time averaging with the last analysis frame.
     */
    get smoothing() {
        return this._analyser.smoothing;
    }
    set smoothing(val) {
        this._analyser.smoothing = val;
    }
    /**
     * Returns the frequency value in hertz of each of the indices of the FFT's [[getValue]] response.
     * @example
     * const fft = new Tone.FFT(32);
     * console.log([0, 1, 2, 3, 4].map(index => fft.getFrequencyOfIndex(index)));
     */
    getFrequencyOfIndex(index) {
        (0,_core_util_Debug__WEBPACK_IMPORTED_MODULE_4__.assert)(0 <= index && index < this.size, `index must be greater than or equal to 0 and less than ${this.size}`);
        return index * this.context.sampleRate / (this.size * 2);
    }
}
//# sourceMappingURL=FFT.js.map

/***/ }),

/***/ "./node_modules/tone/build/esm/component/analysis/Follower.js":
/*!********************************************************************!*\
  !*** ./node_modules/tone/build/esm/component/analysis/Follower.js ***!
  \********************************************************************/
/*! namespace exports */
/*! export Follower [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Follower": () => /* binding */ Follower
/* harmony export */ });
/* harmony import */ var _core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/context/ToneAudioNode */ "./node_modules/tone/build/esm/core/context/ToneAudioNode.js");
/* harmony import */ var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core/util/Defaults */ "./node_modules/tone/build/esm/core/util/Defaults.js");
/* harmony import */ var _filter_OnePoleFilter__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../filter/OnePoleFilter */ "./node_modules/tone/build/esm/component/filter/OnePoleFilter.js");
/* harmony import */ var _signal_Abs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../signal/Abs */ "./node_modules/tone/build/esm/signal/Abs.js");
;



/**
 * Follower is a simple envelope follower.
 * It's implemented by applying a lowpass filter to the absolute value of the incoming signal.
 * ```
 *          +-----+    +---------------+
 * Input +--> Abs +----> OnePoleFilter +--> Output
 *          +-----+    +---------------+
 * ```
 * @category Component
 */
class Follower extends _core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_0__.ToneAudioNode {
    constructor() {
        super((0,_core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__.optionsFromArguments)(Follower.getDefaults(), arguments, ["smoothing"]));
        this.name = "Follower";
        const options = (0,_core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__.optionsFromArguments)(Follower.getDefaults(), arguments, ["smoothing"]);
        this._abs = this.input = new _signal_Abs__WEBPACK_IMPORTED_MODULE_3__.Abs({ context: this.context });
        this._lowpass = this.output = new _filter_OnePoleFilter__WEBPACK_IMPORTED_MODULE_2__.OnePoleFilter({
            context: this.context,
            frequency: 1 / this.toSeconds(options.smoothing),
            type: "lowpass"
        });
        this._abs.connect(this._lowpass);
        this._smoothing = options.smoothing;
    }
    static getDefaults() {
        return Object.assign(_core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_0__.ToneAudioNode.getDefaults(), {
            smoothing: 0.05
        });
    }
    /**
     * The amount of time it takes a value change to arrive at the updated value.
     */
    get smoothing() {
        return this._smoothing;
    }
    set smoothing(smoothing) {
        this._smoothing = smoothing;
        this._lowpass.frequency = 1 / this.toSeconds(this.smoothing);
    }
    dispose() {
        super.dispose();
        this._abs.dispose();
        this._lowpass.dispose();
        return this;
    }
}
//# sourceMappingURL=Follower.js.map

/***/ }),

/***/ "./node_modules/tone/build/esm/component/analysis/Meter.js":
/*!*****************************************************************!*\
  !*** ./node_modules/tone/build/esm/component/analysis/Meter.js ***!
  \*****************************************************************/
/*! namespace exports */
/*! export Meter [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Meter": () => /* binding */ Meter
/* harmony export */ });
/* harmony import */ var _core_type_Conversions__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/type/Conversions */ "./node_modules/tone/build/esm/core/type/Conversions.js");
/* harmony import */ var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core/util/Defaults */ "./node_modules/tone/build/esm/core/util/Defaults.js");
/* harmony import */ var _MeterBase__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./MeterBase */ "./node_modules/tone/build/esm/component/analysis/MeterBase.js");
/* harmony import */ var _core_util_Debug__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/util/Debug */ "./node_modules/tone/build/esm/core/util/Debug.js");
/* harmony import */ var _Analyser__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./Analyser */ "./node_modules/tone/build/esm/component/analysis/Analyser.js");
;




/**
 * Meter gets the [RMS](https://en.wikipedia.org/wiki/Root_mean_square)
 * of an input signal. It can also get the raw value of the input signal.
 *
 * @example
 * const meter = new Tone.Meter();
 * const mic = new Tone.UserMedia();
 * mic.open();
 * // connect mic to the meter
 * mic.connect(meter);
 * // the current level of the mic
 * setInterval(() => console.log(meter.getValue()), 100);
 * @category Component
 */
class Meter extends _MeterBase__WEBPACK_IMPORTED_MODULE_2__.MeterBase {
    constructor() {
        super((0,_core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__.optionsFromArguments)(Meter.getDefaults(), arguments, ["smoothing"]));
        this.name = "Meter";
        /**
         * The previous frame's value
         */
        this._rms = 0;
        const options = (0,_core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__.optionsFromArguments)(Meter.getDefaults(), arguments, ["smoothing"]);
        this.input = this.output = this._analyser = new _Analyser__WEBPACK_IMPORTED_MODULE_4__.Analyser({
            context: this.context,
            size: 256,
            type: "waveform",
            channels: options.channels,
        });
        this.smoothing = options.smoothing,
            this.normalRange = options.normalRange;
    }
    static getDefaults() {
        return Object.assign(_MeterBase__WEBPACK_IMPORTED_MODULE_2__.MeterBase.getDefaults(), {
            smoothing: 0.8,
            normalRange: false,
            channels: 1,
        });
    }
    /**
     * Use [[getValue]] instead. For the previous getValue behavior, use DCMeter.
     * @deprecated
     */
    getLevel() {
        (0,_core_util_Debug__WEBPACK_IMPORTED_MODULE_3__.warn)("'getLevel' has been changed to 'getValue'");
        return this.getValue();
    }
    /**
     * Get the current value of the incoming signal.
     * Output is in decibels when [[normalRange]] is `false`.
     * If [[channels]] = 1, then the output is a single number
     * representing the value of the input signal. When [[channels]] > 1,
     * then each channel is returned as a value in a number array.
     */
    getValue() {
        const aValues = this._analyser.getValue();
        const channelValues = this.channels === 1 ? [aValues] : aValues;
        const vals = channelValues.map(values => {
            const totalSquared = values.reduce((total, current) => total + current * current, 0);
            const rms = Math.sqrt(totalSquared / values.length);
            // the rms can only fall at the rate of the smoothing
            // but can jump up instantly
            this._rms = Math.max(rms, this._rms * this.smoothing);
            return this.normalRange ? this._rms : (0,_core_type_Conversions__WEBPACK_IMPORTED_MODULE_0__.gainToDb)(this._rms);
        });
        if (this.channels === 1) {
            return vals[0];
        }
        else {
            return vals;
        }
    }
    /**
     * The number of channels of analysis.
     */
    get channels() {
        return this._analyser.channels;
    }
    dispose() {
        super.dispose();
        this._analyser.dispose();
        return this;
    }
}
//# sourceMappingURL=Meter.js.map

/***/ }),

/***/ "./node_modules/tone/build/esm/component/analysis/MeterBase.js":
/*!*********************************************************************!*\
  !*** ./node_modules/tone/build/esm/component/analysis/MeterBase.js ***!
  \*********************************************************************/
/*! namespace exports */
/*! export MeterBase [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "MeterBase": () => /* binding */ MeterBase
/* harmony export */ });
/* harmony import */ var _core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/context/ToneAudioNode */ "./node_modules/tone/build/esm/core/context/ToneAudioNode.js");
/* harmony import */ var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core/util/Defaults */ "./node_modules/tone/build/esm/core/util/Defaults.js");
/* harmony import */ var _Analyser__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Analyser */ "./node_modules/tone/build/esm/component/analysis/Analyser.js");
;


/**
 * The base class for Metering classes.
 */
class MeterBase extends _core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_0__.ToneAudioNode {
    constructor() {
        super((0,_core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__.optionsFromArguments)(MeterBase.getDefaults(), arguments));
        this.name = "MeterBase";
        this.input = this.output = this._analyser = new _Analyser__WEBPACK_IMPORTED_MODULE_2__.Analyser({
            context: this.context,
            size: 256,
            type: "waveform",
        });
    }
    dispose() {
        super.dispose();
        this._analyser.dispose();
        return this;
    }
}
//# sourceMappingURL=MeterBase.js.map

/***/ }),

/***/ "./node_modules/tone/build/esm/component/analysis/Waveform.js":
/*!********************************************************************!*\
  !*** ./node_modules/tone/build/esm/component/analysis/Waveform.js ***!
  \********************************************************************/
/*! namespace exports */
/*! export Waveform [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Waveform": () => /* binding */ Waveform
/* harmony export */ });
/* harmony import */ var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/util/Defaults */ "./node_modules/tone/build/esm/core/util/Defaults.js");
/* harmony import */ var _MeterBase__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./MeterBase */ "./node_modules/tone/build/esm/component/analysis/MeterBase.js");
;

/**
 * Get the current waveform data of the connected audio source.
 * @category Component
 */
class Waveform extends _MeterBase__WEBPACK_IMPORTED_MODULE_1__.MeterBase {
    constructor() {
        super((0,_core_util_Defaults__WEBPACK_IMPORTED_MODULE_0__.optionsFromArguments)(Waveform.getDefaults(), arguments, ["size"]));
        this.name = "Waveform";
        const options = (0,_core_util_Defaults__WEBPACK_IMPORTED_MODULE_0__.optionsFromArguments)(Waveform.getDefaults(), arguments, ["size"]);
        this._analyser.type = "waveform";
        this.size = options.size;
    }
    static getDefaults() {
        return Object.assign(_MeterBase__WEBPACK_IMPORTED_MODULE_1__.MeterBase.getDefaults(), {
            size: 1024,
        });
    }
    /**
     * Return the waveform for the current time as a Float32Array where each value in the array
     * represents a sample in the waveform.
     */
    getValue() {
        return this._analyser.getValue();
    }
    /**
     * The size of analysis. This must be a power of two in the range 16 to 16384.
     * Determines the size of the array returned by [[getValue]].
     */
    get size() {
        return this._analyser.size;
    }
    set size(size) {
        this._analyser.size = size;
    }
}
//# sourceMappingURL=Waveform.js.map

/***/ }),

/***/ "./node_modules/tone/build/esm/component/channel/Channel.js":
/*!******************************************************************!*\
  !*** ./node_modules/tone/build/esm/component/channel/Channel.js ***!
  \******************************************************************/
/*! namespace exports */
/*! export Channel [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Channel": () => /* binding */ Channel
/* harmony export */ });
/* harmony import */ var _core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/context/ToneAudioNode */ "./node_modules/tone/build/esm/core/context/ToneAudioNode.js");
/* harmony import */ var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core/util/Defaults */ "./node_modules/tone/build/esm/core/util/Defaults.js");
/* harmony import */ var _Solo__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Solo */ "./node_modules/tone/build/esm/component/channel/Solo.js");
/* harmony import */ var _PanVol__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./PanVol */ "./node_modules/tone/build/esm/component/channel/PanVol.js");
/* harmony import */ var _core_util_Interface__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../core/util/Interface */ "./node_modules/tone/build/esm/core/util/Interface.js");
/* harmony import */ var _core_context_Gain__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../core/context/Gain */ "./node_modules/tone/build/esm/core/context/Gain.js");
;





/**
 * Channel provides a channel strip interface with volume, pan, solo and mute controls.
 * See [[PanVol]] and [[Solo]]
 * @example
 * // pan the incoming signal left and drop the volume 12db
 * const channel = new Tone.Channel(-0.25, -12);
 * @category Component
 */
class Channel extends _core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_0__.ToneAudioNode {
    constructor() {
        super((0,_core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__.optionsFromArguments)(Channel.getDefaults(), arguments, ["volume", "pan"]));
        this.name = "Channel";
        const options = (0,_core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__.optionsFromArguments)(Channel.getDefaults(), arguments, ["volume", "pan"]);
        this._solo = this.input = new _Solo__WEBPACK_IMPORTED_MODULE_2__.Solo({
            solo: options.solo,
            context: this.context,
        });
        this._panVol = this.output = new _PanVol__WEBPACK_IMPORTED_MODULE_3__.PanVol({
            context: this.context,
            pan: options.pan,
            volume: options.volume,
            mute: options.mute,
            channelCount: options.channelCount
        });
        this.pan = this._panVol.pan;
        this.volume = this._panVol.volume;
        this._solo.connect(this._panVol);
        (0,_core_util_Interface__WEBPACK_IMPORTED_MODULE_4__.readOnly)(this, ["pan", "volume"]);
    }
    static getDefaults() {
        return Object.assign(_core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_0__.ToneAudioNode.getDefaults(), {
            pan: 0,
            volume: 0,
            mute: false,
            solo: false,
            channelCount: 1,
        });
    }
    /**
     * Solo/unsolo the channel. Soloing is only relative to other [[Channels]] and [[Solo]] instances
     */
    get solo() {
        return this._solo.solo;
    }
    set solo(solo) {
        this._solo.solo = solo;
    }
    /**
     * If the current instance is muted, i.e. another instance is soloed,
     * or the channel is muted
     */
    get muted() {
        return this._solo.muted || this.mute;
    }
    /**
     * Mute/unmute the volume
     */
    get mute() {
        return this._panVol.mute;
    }
    set mute(mute) {
        this._panVol.mute = mute;
    }
    /**
     * Get the gain node belonging to the bus name. Create it if
     * it doesn't exist
     * @param name The bus name
     */
    _getBus(name) {
        if (!Channel.buses.has(name)) {
            Channel.buses.set(name, new _core_context_Gain__WEBPACK_IMPORTED_MODULE_5__.Gain({ context: this.context }));
        }
        return Channel.buses.get(name);
    }
    /**
     * Send audio to another channel using a string. `send` is a lot like
     * [[connect]], except it uses a string instead of an object. This can
     * be useful in large applications to decouple sections since [[send]]
     * and [[receive]] can be invoked separately in order to connect an object
     * @param name The channel name to send the audio
     * @param volume The amount of the signal to send.
     * 	Defaults to 0db, i.e. send the entire signal
     * @returns Returns the gain node of this connection.
     */
    send(name, volume = 0) {
        const bus = this._getBus(name);
        const sendKnob = new _core_context_Gain__WEBPACK_IMPORTED_MODULE_5__.Gain({
            context: this.context,
            units: "decibels",
            gain: volume,
        });
        this.connect(sendKnob);
        sendKnob.connect(bus);
        return sendKnob;
    }
    /**
     * Receive audio from a channel which was connected with [[send]].
     * @param name The channel name to receive audio from.
     */
    receive(name) {
        const bus = this._getBus(name);
        bus.connect(this);
        return this;
    }
    dispose() {
        super.dispose();
        this._panVol.dispose();
        this.pan.dispose();
        this.volume.dispose();
        this._solo.dispose();
        return this;
    }
}
/**
 * Store the send/receive channels by name.
 */
Channel.buses = new Map();
//# sourceMappingURL=Channel.js.map

/***/ }),

/***/ "./node_modules/tone/build/esm/component/channel/CrossFade.js":
/*!********************************************************************!*\
  !*** ./node_modules/tone/build/esm/component/channel/CrossFade.js ***!
  \********************************************************************/
/*! namespace exports */
/*! export CrossFade [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "CrossFade": () => /* binding */ CrossFade
/* harmony export */ });
/* harmony import */ var _core_context_Gain__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/context/Gain */ "./node_modules/tone/build/esm/core/context/Gain.js");
/* harmony import */ var _core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core/context/ToneAudioNode */ "./node_modules/tone/build/esm/core/context/ToneAudioNode.js");
/* harmony import */ var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/util/Defaults */ "./node_modules/tone/build/esm/core/util/Defaults.js");
/* harmony import */ var _core_util_Interface__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/util/Interface */ "./node_modules/tone/build/esm/core/util/Interface.js");
/* harmony import */ var _signal_GainToAudio__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../signal/GainToAudio */ "./node_modules/tone/build/esm/signal/GainToAudio.js");
/* harmony import */ var _signal_Signal__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../signal/Signal */ "./node_modules/tone/build/esm/signal/Signal.js");
;





/**
 * Tone.Crossfade provides equal power fading between two inputs.
 * More on crossfading technique [here](https://en.wikipedia.org/wiki/Fade_(audio_engineering)#Crossfading).
 * ```
 *                                             +---------+
 *                                            +> input a +>--+
 * +-----------+   +---------------------+     |         |   |
 * | 1s signal +>--> stereoPannerNode  L +>----> gain    |   |
 * +-----------+   |                     |     +---------+   |
 *               +-> pan               R +>-+                |   +--------+
 *               | +---------------------+  |                +---> output +>
 *  +------+     |                          |  +---------+   |   +--------+
 *  | fade +>----+                          | +> input b +>--+
 *  +------+                                |  |         |
 *                                          +--> gain    |
 *                                             +---------+
 * ```
 * @example
 * const crossFade = new Tone.CrossFade().toDestination();
 * // connect two inputs Tone.to a/b
 * const inputA = new Tone.Oscillator(440, "square").connect(crossFade.a).start();
 * const inputB = new Tone.Oscillator(440, "sine").connect(crossFade.b).start();
 * // use the fade to control the mix between the two
 * crossFade.fade.value = 0.5;
 * @category Component
 */
class CrossFade extends _core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_1__.ToneAudioNode {
    constructor() {
        super(Object.assign((0,_core_util_Defaults__WEBPACK_IMPORTED_MODULE_2__.optionsFromArguments)(CrossFade.getDefaults(), arguments, ["fade"])));
        this.name = "CrossFade";
        /**
         * The crossfading is done by a StereoPannerNode
         */
        this._panner = this.context.createStereoPanner();
        /**
         * Split the output of the panner node into two values used to control the gains.
         */
        this._split = this.context.createChannelSplitter(2);
        /**
         * Convert the fade value into an audio range value so it can be connected
         * to the panner.pan AudioParam
         */
        this._g2a = new _signal_GainToAudio__WEBPACK_IMPORTED_MODULE_4__.GainToAudio({ context: this.context });
        /**
         * The input which is at full level when fade = 0
         */
        this.a = new _core_context_Gain__WEBPACK_IMPORTED_MODULE_0__.Gain({
            context: this.context,
            gain: 0,
        });
        /**
         * The input which is at full level when fade = 1
         */
        this.b = new _core_context_Gain__WEBPACK_IMPORTED_MODULE_0__.Gain({
            context: this.context,
            gain: 0,
        });
        /**
         * The output is a mix between `a` and `b` at the ratio of `fade`
         */
        this.output = new _core_context_Gain__WEBPACK_IMPORTED_MODULE_0__.Gain({ context: this.context });
        this._internalChannels = [this.a, this.b];
        const options = (0,_core_util_Defaults__WEBPACK_IMPORTED_MODULE_2__.optionsFromArguments)(CrossFade.getDefaults(), arguments, ["fade"]);
        this.fade = new _signal_Signal__WEBPACK_IMPORTED_MODULE_5__.Signal({
            context: this.context,
            units: "normalRange",
            value: options.fade,
        });
        (0,_core_util_Interface__WEBPACK_IMPORTED_MODULE_3__.readOnly)(this, "fade");
        this.context.getConstant(1).connect(this._panner);
        this._panner.connect(this._split);
        // this is necessary for standardized-audio-context
        // doesn't make any difference for the native AudioContext
        // https://github.com/chrisguttandin/standardized-audio-context/issues/647
        this._panner.channelCount = 1;
        this._panner.channelCountMode = "explicit";
        (0,_core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_1__.connect)(this._split, this.a.gain, 0);
        (0,_core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_1__.connect)(this._split, this.b.gain, 1);
        this.fade.chain(this._g2a, this._panner.pan);
        this.a.connect(this.output);
        this.b.connect(this.output);
    }
    static getDefaults() {
        return Object.assign(_core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_1__.ToneAudioNode.getDefaults(), {
            fade: 0.5,
        });
    }
    dispose() {
        super.dispose();
        this.a.dispose();
        this.b.dispose();
        this.output.dispose();
        this.fade.dispose();
        this._g2a.dispose();
        this._panner.disconnect();
        this._split.disconnect();
        return this;
    }
}
//# sourceMappingURL=CrossFade.js.map

/***/ }),

/***/ "./node_modules/tone/build/esm/component/channel/Merge.js":
/*!****************************************************************!*\
  !*** ./node_modules/tone/build/esm/component/channel/Merge.js ***!
  \****************************************************************/
/*! namespace exports */
/*! export Merge [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Merge": () => /* binding */ Merge
/* harmony export */ });
/* harmony import */ var _core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/context/ToneAudioNode */ "./node_modules/tone/build/esm/core/context/ToneAudioNode.js");
/* harmony import */ var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core/util/Defaults */ "./node_modules/tone/build/esm/core/util/Defaults.js");
;

/**
 * Merge brings multiple mono input channels into a single multichannel output channel.
 *
 * @example
 * const merge = new Tone.Merge().toDestination();
 * // routing a sine tone in the left channel
 * const osc = new Tone.Oscillator().connect(merge, 0, 0).start();
 * // and noise in the right channel
 * const noise = new Tone.Noise().connect(merge, 0, 1).start();;
 * @category Component
 */
class Merge extends _core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_0__.ToneAudioNode {
    constructor() {
        super((0,_core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__.optionsFromArguments)(Merge.getDefaults(), arguments, ["channels"]));
        this.name = "Merge";
        const options = (0,_core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__.optionsFromArguments)(Merge.getDefaults(), arguments, ["channels"]);
        this._merger = this.output = this.input = this.context.createChannelMerger(options.channels);
    }
    static getDefaults() {
        return Object.assign(_core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_0__.ToneAudioNode.getDefaults(), {
            channels: 2,
        });
    }
    dispose() {
        super.dispose();
        this._merger.disconnect();
        return this;
    }
}
//# sourceMappingURL=Merge.js.map

/***/ }),

/***/ "./node_modules/tone/build/esm/component/channel/MidSideMerge.js":
/*!***********************************************************************!*\
  !*** ./node_modules/tone/build/esm/component/channel/MidSideMerge.js ***!
  \***********************************************************************/
/*! namespace exports */
/*! export MidSideMerge [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "MidSideMerge": () => /* binding */ MidSideMerge
/* harmony export */ });
/* harmony import */ var _core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/context/ToneAudioNode */ "./node_modules/tone/build/esm/core/context/ToneAudioNode.js");
/* harmony import */ var _Merge__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Merge */ "./node_modules/tone/build/esm/component/channel/Merge.js");
/* harmony import */ var _signal_Add__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../signal/Add */ "./node_modules/tone/build/esm/signal/Add.js");
/* harmony import */ var _signal_Multiply__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../signal/Multiply */ "./node_modules/tone/build/esm/signal/Multiply.js");
/* harmony import */ var _signal_Subtract__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../signal/Subtract */ "./node_modules/tone/build/esm/signal/Subtract.js");
/* harmony import */ var _core_context_Gain__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../core/context/Gain */ "./node_modules/tone/build/esm/core/context/Gain.js");
/* harmony import */ var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../core/util/Defaults */ "./node_modules/tone/build/esm/core/util/Defaults.js");
;






/**
 * MidSideMerge merges the mid and side signal after they've been separated by [[MidSideSplit]]
 * ```
 * Mid = (Left+Right)/sqrt(2);   // obtain mid-signal from left and right
 * Side = (Left-Right)/sqrt(2);   // obtain side-signal from left and right
 * ```
 * @category Component
 */
class MidSideMerge extends _core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_0__.ToneAudioNode {
    constructor() {
        super((0,_core_util_Defaults__WEBPACK_IMPORTED_MODULE_6__.optionsFromArguments)(MidSideMerge.getDefaults(), arguments));
        this.name = "MidSideMerge";
        this.mid = new _core_context_Gain__WEBPACK_IMPORTED_MODULE_5__.Gain({ context: this.context });
        this.side = new _core_context_Gain__WEBPACK_IMPORTED_MODULE_5__.Gain({ context: this.context });
        this._left = new _signal_Add__WEBPACK_IMPORTED_MODULE_2__.Add({ context: this.context });
        this._leftMult = new _signal_Multiply__WEBPACK_IMPORTED_MODULE_3__.Multiply({
            context: this.context,
            value: Math.SQRT1_2
        });
        this._right = new _signal_Subtract__WEBPACK_IMPORTED_MODULE_4__.Subtract({ context: this.context });
        this._rightMult = new _signal_Multiply__WEBPACK_IMPORTED_MODULE_3__.Multiply({
            context: this.context,
            value: Math.SQRT1_2
        });
        this._merge = this.output = new _Merge__WEBPACK_IMPORTED_MODULE_1__.Merge({ context: this.context });
        this.mid.fan(this._left);
        this.side.connect(this._left.addend);
        this.mid.connect(this._right);
        this.side.connect(this._right.subtrahend);
        this._left.connect(this._leftMult);
        this._right.connect(this._rightMult);
        this._leftMult.connect(this._merge, 0, 0);
        this._rightMult.connect(this._merge, 0, 1);
    }
    dispose() {
        super.dispose();
        this.mid.dispose();
        this.side.dispose();
        this._leftMult.dispose();
        this._rightMult.dispose();
        this._left.dispose();
        this._right.dispose();
        return this;
    }
}
//# sourceMappingURL=MidSideMerge.js.map

/***/ }),

/***/ "./node_modules/tone/build/esm/component/channel/MidSideSplit.js":
/*!***********************************************************************!*\
  !*** ./node_modules/tone/build/esm/component/channel/MidSideSplit.js ***!
  \***********************************************************************/
/*! namespace exports */
/*! export MidSideSplit [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "MidSideSplit": () => /* binding */ MidSideSplit
/* harmony export */ });
/* harmony import */ var _core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/context/ToneAudioNode */ "./node_modules/tone/build/esm/core/context/ToneAudioNode.js");
/* harmony import */ var _Split__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Split */ "./node_modules/tone/build/esm/component/channel/Split.js");
/* harmony import */ var _signal_Add__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../signal/Add */ "./node_modules/tone/build/esm/signal/Add.js");
/* harmony import */ var _signal_Multiply__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../signal/Multiply */ "./node_modules/tone/build/esm/signal/Multiply.js");
/* harmony import */ var _signal_Subtract__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../signal/Subtract */ "./node_modules/tone/build/esm/signal/Subtract.js");
/* harmony import */ var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../core/util/Defaults */ "./node_modules/tone/build/esm/core/util/Defaults.js");
;





/**
 * Mid/Side processing separates the the 'mid' signal (which comes out of both the left and the right channel)
 * and the 'side' (which only comes out of the the side channels).
 * ```
 * Mid = (Left+Right)/sqrt(2);   // obtain mid-signal from left and right
 * Side = (Left-Right)/sqrt(2);   // obtain side-signal from left and right
 * ```
 * @category Component
 */
class MidSideSplit extends _core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_0__.ToneAudioNode {
    constructor() {
        super((0,_core_util_Defaults__WEBPACK_IMPORTED_MODULE_5__.optionsFromArguments)(MidSideSplit.getDefaults(), arguments));
        this.name = "MidSideSplit";
        this._split = this.input = new _Split__WEBPACK_IMPORTED_MODULE_1__.Split({
            channels: 2,
            context: this.context
        });
        this._midAdd = new _signal_Add__WEBPACK_IMPORTED_MODULE_2__.Add({ context: this.context });
        this.mid = new _signal_Multiply__WEBPACK_IMPORTED_MODULE_3__.Multiply({
            context: this.context,
            value: Math.SQRT1_2,
        });
        this._sideSubtract = new _signal_Subtract__WEBPACK_IMPORTED_MODULE_4__.Subtract({ context: this.context });
        this.side = new _signal_Multiply__WEBPACK_IMPORTED_MODULE_3__.Multiply({
            context: this.context,
            value: Math.SQRT1_2,
        });
        this._split.connect(this._midAdd, 0);
        this._split.connect(this._midAdd.addend, 1);
        this._split.connect(this._sideSubtract, 0);
        this._split.connect(this._sideSubtract.subtrahend, 1);
        this._midAdd.connect(this.mid);
        this._sideSubtract.connect(this.side);
    }
    dispose() {
        super.dispose();
        this.mid.dispose();
        this.side.dispose();
        this._midAdd.dispose();
        this._sideSubtract.dispose();
        this._split.dispose();
        return this;
    }
}
//# sourceMappingURL=MidSideSplit.js.map

/***/ }),

/***/ "./node_modules/tone/build/esm/component/channel/MultibandSplit.js":
/*!*************************************************************************!*\
  !*** ./node_modules/tone/build/esm/component/channel/MultibandSplit.js ***!
  \*************************************************************************/
/*! namespace exports */
/*! export MultibandSplit [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "MultibandSplit": () => /* binding */ MultibandSplit
/* harmony export */ });
/* harmony import */ var _core_context_Gain__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/context/Gain */ "./node_modules/tone/build/esm/core/context/Gain.js");
/* harmony import */ var _core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core/context/ToneAudioNode */ "./node_modules/tone/build/esm/core/context/ToneAudioNode.js");
/* harmony import */ var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/util/Defaults */ "./node_modules/tone/build/esm/core/util/Defaults.js");
/* harmony import */ var _core_util_Interface__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/util/Interface */ "./node_modules/tone/build/esm/core/util/Interface.js");
/* harmony import */ var _signal_Signal__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../signal/Signal */ "./node_modules/tone/build/esm/signal/Signal.js");
/* harmony import */ var _filter_Filter__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../filter/Filter */ "./node_modules/tone/build/esm/component/filter/Filter.js");
;





/**
 * Split the incoming signal into three bands (low, mid, high)
 * with two crossover frequency controls.
 * ```
 *            +----------------------+
 *          +-> input < lowFrequency +------------------> low
 *          | +----------------------+
 *          |
 *          | +--------------------------------------+
 * input ---+-> lowFrequency < input < highFrequency +--> mid
 *          | +--------------------------------------+
 *          |
 *          | +-----------------------+
 *          +-> highFrequency < input +-----------------> high
 *            +-----------------------+
 * ```
 * @category Component
 */
class MultibandSplit extends _core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_1__.ToneAudioNode {
    constructor() {
        super((0,_core_util_Defaults__WEBPACK_IMPORTED_MODULE_2__.optionsFromArguments)(MultibandSplit.getDefaults(), arguments, ["lowFrequency", "highFrequency"]));
        this.name = "MultibandSplit";
        /**
         * the input
         */
        this.input = new _core_context_Gain__WEBPACK_IMPORTED_MODULE_0__.Gain({ context: this.context });
        /**
         * no output node, use either low, mid or high outputs
         */
        this.output = undefined;
        /**
         * The low band.
         */
        this.low = new _filter_Filter__WEBPACK_IMPORTED_MODULE_5__.Filter({
            context: this.context,
            frequency: 0,
            type: "lowpass",
        });
        /**
         * the lower filter of the mid band
         */
        this._lowMidFilter = new _filter_Filter__WEBPACK_IMPORTED_MODULE_5__.Filter({
            context: this.context,
            frequency: 0,
            type: "highpass",
        });
        /**
         * The mid band output.
         */
        this.mid = new _filter_Filter__WEBPACK_IMPORTED_MODULE_5__.Filter({
            context: this.context,
            frequency: 0,
            type: "lowpass",
        });
        /**
         * The high band output.
         */
        this.high = new _filter_Filter__WEBPACK_IMPORTED_MODULE_5__.Filter({
            context: this.context,
            frequency: 0,
            type: "highpass",
        });
        this._internalChannels = [this.low, this.mid, this.high];
        const options = (0,_core_util_Defaults__WEBPACK_IMPORTED_MODULE_2__.optionsFromArguments)(MultibandSplit.getDefaults(), arguments, ["lowFrequency", "highFrequency"]);
        this.lowFrequency = new _signal_Signal__WEBPACK_IMPORTED_MODULE_4__.Signal({
            context: this.context,
            units: "frequency",
            value: options.lowFrequency,
        });
        this.highFrequency = new _signal_Signal__WEBPACK_IMPORTED_MODULE_4__.Signal({
            context: this.context,
            units: "frequency",
            value: options.highFrequency,
        });
        this.Q = new _signal_Signal__WEBPACK_IMPORTED_MODULE_4__.Signal({
            context: this.context,
            units: "positive",
            value: options.Q,
        });
        this.input.fan(this.low, this.high);
        this.input.chain(this._lowMidFilter, this.mid);
        // the frequency control signal
        this.lowFrequency.fan(this.low.frequency, this._lowMidFilter.frequency);
        this.highFrequency.fan(this.mid.frequency, this.high.frequency);
        // the Q value
        this.Q.connect(this.low.Q);
        this.Q.connect(this._lowMidFilter.Q);
        this.Q.connect(this.mid.Q);
        this.Q.connect(this.high.Q);
        (0,_core_util_Interface__WEBPACK_IMPORTED_MODULE_3__.readOnly)(this, ["high", "mid", "low", "highFrequency", "lowFrequency"]);
    }
    static getDefaults() {
        return Object.assign(_core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_1__.ToneAudioNode.getDefaults(), {
            Q: 1,
            highFrequency: 2500,
            lowFrequency: 400,
        });
    }
    /**
     * Clean up.
     */
    dispose() {
        super.dispose();
        (0,_core_util_Interface__WEBPACK_IMPORTED_MODULE_3__.writable)(this, ["high", "mid", "low", "highFrequency", "lowFrequency"]);
        this.low.dispose();
        this._lowMidFilter.dispose();
        this.mid.dispose();
        this.high.dispose();
        this.lowFrequency.dispose();
        this.highFrequency.dispose();
        this.Q.dispose();
        return this;
    }
}
//# sourceMappingURL=MultibandSplit.js.map

/***/ }),

/***/ "./node_modules/tone/build/esm/component/channel/PanVol.js":
/*!*****************************************************************!*\
  !*** ./node_modules/tone/build/esm/component/channel/PanVol.js ***!
  \*****************************************************************/
/*! namespace exports */
/*! export PanVol [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "PanVol": () => /* binding */ PanVol
/* harmony export */ });
/* harmony import */ var _core_util_Interface__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/util/Interface */ "./node_modules/tone/build/esm/core/util/Interface.js");
/* harmony import */ var _core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core/context/ToneAudioNode */ "./node_modules/tone/build/esm/core/context/ToneAudioNode.js");
/* harmony import */ var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/util/Defaults */ "./node_modules/tone/build/esm/core/util/Defaults.js");
/* harmony import */ var _Panner__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Panner */ "./node_modules/tone/build/esm/component/channel/Panner.js");
/* harmony import */ var _Volume__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./Volume */ "./node_modules/tone/build/esm/component/channel/Volume.js");
;




/**
 * PanVol is a Tone.Panner and Tone.Volume in one.
 * @example
 * // pan the incoming signal left and drop the volume
 * const panVol = new Tone.PanVol(-0.25, -12).toDestination();
 * const osc = new Tone.Oscillator().connect(panVol).start();
 * @category Component
 */
class PanVol extends _core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_1__.ToneAudioNode {
    constructor() {
        super((0,_core_util_Defaults__WEBPACK_IMPORTED_MODULE_2__.optionsFromArguments)(PanVol.getDefaults(), arguments, ["pan", "volume"]));
        this.name = "PanVol";
        const options = (0,_core_util_Defaults__WEBPACK_IMPORTED_MODULE_2__.optionsFromArguments)(PanVol.getDefaults(), arguments, ["pan", "volume"]);
        this._panner = this.input = new _Panner__WEBPACK_IMPORTED_MODULE_3__.Panner({
            context: this.context,
            pan: options.pan,
            channelCount: options.channelCount,
        });
        this.pan = this._panner.pan;
        this._volume = this.output = new _Volume__WEBPACK_IMPORTED_MODULE_4__.Volume({
            context: this.context,
            volume: options.volume,
        });
        this.volume = this._volume.volume;
        // connections
        this._panner.connect(this._volume);
        this.mute = options.mute;
        (0,_core_util_Interface__WEBPACK_IMPORTED_MODULE_0__.readOnly)(this, ["pan", "volume"]);
    }
    static getDefaults() {
        return Object.assign(_core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_1__.ToneAudioNode.getDefaults(), {
            mute: false,
            pan: 0,
            volume: 0,
            channelCount: 1,
        });
    }
    /**
     * Mute/unmute the volume
     */
    get mute() {
        return this._volume.mute;
    }
    set mute(mute) {
        this._volume.mute = mute;
    }
    dispose() {
        super.dispose();
        this._panner.dispose();
        this.pan.dispose();
        this._volume.dispose();
        this.volume.dispose();
        return this;
    }
}
//# sourceMappingURL=PanVol.js.map

/***/ }),

/***/ "./node_modules/tone/build/esm/component/channel/Panner.js":
/*!*****************************************************************!*\
  !*** ./node_modules/tone/build/esm/component/channel/Panner.js ***!
  \*****************************************************************/
/*! namespace exports */
/*! export Panner [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Panner": () => /* binding */ Panner
/* harmony export */ });
/* harmony import */ var _core_context_Param__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/context/Param */ "./node_modules/tone/build/esm/core/context/Param.js");
/* harmony import */ var _core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core/context/ToneAudioNode */ "./node_modules/tone/build/esm/core/context/ToneAudioNode.js");
/* harmony import */ var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/util/Defaults */ "./node_modules/tone/build/esm/core/util/Defaults.js");
/* harmony import */ var _core_util_Interface__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/util/Interface */ "./node_modules/tone/build/esm/core/util/Interface.js");
;



/**
 * Panner is an equal power Left/Right Panner. It is a wrapper around the StereoPannerNode.
 * @example
 * return Tone.Offline(() => {
 * // move the input signal from right to left
 * 	const panner = new Tone.Panner(1).toDestination();
 * 	panner.pan.rampTo(-1, 0.5);
 * 	const osc = new Tone.Oscillator(100).connect(panner).start();
 * }, 0.5, 2);
 * @category Component
 */
class Panner extends _core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_1__.ToneAudioNode {
    constructor() {
        super(Object.assign((0,_core_util_Defaults__WEBPACK_IMPORTED_MODULE_2__.optionsFromArguments)(Panner.getDefaults(), arguments, ["pan"])));
        this.name = "Panner";
        /**
         * the panner node
         */
        this._panner = this.context.createStereoPanner();
        this.input = this._panner;
        this.output = this._panner;
        const options = (0,_core_util_Defaults__WEBPACK_IMPORTED_MODULE_2__.optionsFromArguments)(Panner.getDefaults(), arguments, ["pan"]);
        this.pan = new _core_context_Param__WEBPACK_IMPORTED_MODULE_0__.Param({
            context: this.context,
            param: this._panner.pan,
            value: options.pan,
            minValue: -1,
            maxValue: 1,
        });
        // this is necessary for standardized-audio-context
        // doesn't make any difference for the native AudioContext
        // https://github.com/chrisguttandin/standardized-audio-context/issues/647
        this._panner.channelCount = options.channelCount;
        this._panner.channelCountMode = "explicit";
        // initial value
        (0,_core_util_Interface__WEBPACK_IMPORTED_MODULE_3__.readOnly)(this, "pan");
    }
    static getDefaults() {
        return Object.assign(_core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_1__.ToneAudioNode.getDefaults(), {
            pan: 0,
            channelCount: 1,
        });
    }
    dispose() {
        super.dispose();
        this._panner.disconnect();
        this.pan.dispose();
        return this;
    }
}
//# sourceMappingURL=Panner.js.map

/***/ }),

/***/ "./node_modules/tone/build/esm/component/channel/Panner3D.js":
/*!*******************************************************************!*\
  !*** ./node_modules/tone/build/esm/component/channel/Panner3D.js ***!
  \*******************************************************************/
/*! namespace exports */
/*! export Panner3D [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Panner3D": () => /* binding */ Panner3D
/* harmony export */ });
/* harmony import */ var _core_context_Param__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/context/Param */ "./node_modules/tone/build/esm/core/context/Param.js");
/* harmony import */ var _core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core/context/ToneAudioNode */ "./node_modules/tone/build/esm/core/context/ToneAudioNode.js");
/* harmony import */ var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/util/Defaults */ "./node_modules/tone/build/esm/core/util/Defaults.js");
/* harmony import */ var _core_context_Listener__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/context/Listener */ "./node_modules/tone/build/esm/core/context/Listener.js");
;



/**
 * A spatialized panner node which supports equalpower or HRTF panning.
 * @category Component
 */
class Panner3D extends _core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_1__.ToneAudioNode {
    constructor() {
        super((0,_core_util_Defaults__WEBPACK_IMPORTED_MODULE_2__.optionsFromArguments)(Panner3D.getDefaults(), arguments, ["positionX", "positionY", "positionZ"]));
        this.name = "Panner3D";
        const options = (0,_core_util_Defaults__WEBPACK_IMPORTED_MODULE_2__.optionsFromArguments)(Panner3D.getDefaults(), arguments, ["positionX", "positionY", "positionZ"]);
        this._panner = this.input = this.output = this.context.createPanner();
        // set some values
        this.panningModel = options.panningModel;
        this.maxDistance = options.maxDistance;
        this.distanceModel = options.distanceModel;
        this.coneOuterGain = options.coneOuterGain;
        this.coneOuterAngle = options.coneOuterAngle;
        this.coneInnerAngle = options.coneInnerAngle;
        this.refDistance = options.refDistance;
        this.rolloffFactor = options.rolloffFactor;
        this.positionX = new _core_context_Param__WEBPACK_IMPORTED_MODULE_0__.Param({
            context: this.context,
            param: this._panner.positionX,
            value: options.positionX,
        });
        this.positionY = new _core_context_Param__WEBPACK_IMPORTED_MODULE_0__.Param({
            context: this.context,
            param: this._panner.positionY,
            value: options.positionY,
        });
        this.positionZ = new _core_context_Param__WEBPACK_IMPORTED_MODULE_0__.Param({
            context: this.context,
            param: this._panner.positionZ,
            value: options.positionZ,
        });
        this.orientationX = new _core_context_Param__WEBPACK_IMPORTED_MODULE_0__.Param({
            context: this.context,
            param: this._panner.orientationX,
            value: options.orientationX,
        });
        this.orientationY = new _core_context_Param__WEBPACK_IMPORTED_MODULE_0__.Param({
            context: this.context,
            param: this._panner.orientationY,
            value: options.orientationY,
        });
        this.orientationZ = new _core_context_Param__WEBPACK_IMPORTED_MODULE_0__.Param({
            context: this.context,
            param: this._panner.orientationZ,
            value: options.orientationZ,
        });
    }
    static getDefaults() {
        return Object.assign(_core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_1__.ToneAudioNode.getDefaults(), {
            coneInnerAngle: 360,
            coneOuterAngle: 360,
            coneOuterGain: 0,
            distanceModel: "inverse",
            maxDistance: 10000,
            orientationX: 0,
            orientationY: 0,
            orientationZ: 0,
            panningModel: "equalpower",
            positionX: 0,
            positionY: 0,
            positionZ: 0,
            refDistance: 1,
            rolloffFactor: 1,
        });
    }
    /**
     * Sets the position of the source in 3d space.
     */
    setPosition(x, y, z) {
        this.positionX.value = x;
        this.positionY.value = y;
        this.positionZ.value = z;
        return this;
    }
    /**
     * Sets the orientation of the source in 3d space.
     */
    setOrientation(x, y, z) {
        this.orientationX.value = x;
        this.orientationY.value = y;
        this.orientationZ.value = z;
        return this;
    }
    /**
     * The panning model. Either "equalpower" or "HRTF".
     */
    get panningModel() {
        return this._panner.panningModel;
    }
    set panningModel(val) {
        this._panner.panningModel = val;
    }
    /**
     * A reference distance for reducing volume as source move further from the listener
     */
    get refDistance() {
        return this._panner.refDistance;
    }
    set refDistance(val) {
        this._panner.refDistance = val;
    }
    /**
     * Describes how quickly the volume is reduced as source moves away from listener.
     */
    get rolloffFactor() {
        return this._panner.rolloffFactor;
    }
    set rolloffFactor(val) {
        this._panner.rolloffFactor = val;
    }
    /**
     * The distance model used by,  "linear", "inverse", or "exponential".
     */
    get distanceModel() {
        return this._panner.distanceModel;
    }
    set distanceModel(val) {
        this._panner.distanceModel = val;
    }
    /**
     * The angle, in degrees, inside of which there will be no volume reduction
     */
    get coneInnerAngle() {
        return this._panner.coneInnerAngle;
    }
    set coneInnerAngle(val) {
        this._panner.coneInnerAngle = val;
    }
    /**
     * The angle, in degrees, outside of which the volume will be reduced
     * to a constant value of coneOuterGain
     */
    get coneOuterAngle() {
        return this._panner.coneOuterAngle;
    }
    set coneOuterAngle(val) {
        this._panner.coneOuterAngle = val;
    }
    /**
     * The gain outside of the coneOuterAngle
     */
    get coneOuterGain() {
        return this._panner.coneOuterGain;
    }
    set coneOuterGain(val) {
        this._panner.coneOuterGain = val;
    }
    /**
     * The maximum distance between source and listener,
     * after which the volume will not be reduced any further.
     */
    get maxDistance() {
        return this._panner.maxDistance;
    }
    set maxDistance(val) {
        this._panner.maxDistance = val;
    }
    dispose() {
        super.dispose();
        this._panner.disconnect();
        this.orientationX.dispose();
        this.orientationY.dispose();
        this.orientationZ.dispose();
        this.positionX.dispose();
        this.positionY.dispose();
        this.positionZ.dispose();
        return this;
    }
}
//# sourceMappingURL=Panner3D.js.map

/***/ }),

/***/ "./node_modules/tone/build/esm/component/channel/Recorder.js":
/*!*******************************************************************!*\
  !*** ./node_modules/tone/build/esm/component/channel/Recorder.js ***!
  \*******************************************************************/
/*! namespace exports */
/*! export Recorder [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Recorder": () => /* binding */ Recorder
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! tslib */ "./node_modules/tone/node_modules/tslib/tslib.es6.js");
/* harmony import */ var _core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/context/ToneAudioNode */ "./node_modules/tone/build/esm/core/context/ToneAudioNode.js");
/* harmony import */ var _core_context_Gain__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core/context/Gain */ "./node_modules/tone/build/esm/core/context/Gain.js");
/* harmony import */ var _core_util_Debug__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/util/Debug */ "./node_modules/tone/build/esm/core/util/Debug.js");
/* harmony import */ var _core_context_AudioContext__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/context/AudioContext */ "./node_modules/tone/build/esm/core/context/AudioContext.js");
/* harmony import */ var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../core/util/Defaults */ "./node_modules/tone/build/esm/core/util/Defaults.js");
;





/**
 * A wrapper around the MediaRecorder API. Unlike the rest of Tone.js, this module does not offer
 * any sample-accurate scheduling because it is not a feature of the MediaRecorder API.
 * This is only natively supported in Chrome and Firefox.
 * For a cross-browser shim, install (audio-recorder-polyfill)[https://www.npmjs.com/package/audio-recorder-polyfill].
 * @example
 * const recorder = new Tone.Recorder();
 * const synth = new Tone.Synth().connect(recorder);
 * // start recording
 * recorder.start();
 * // generate a few notes
 * synth.triggerAttackRelease("C3", 0.5);
 * synth.triggerAttackRelease("C4", 0.5, "+1");
 * synth.triggerAttackRelease("C5", 0.5, "+2");
 * // wait for the notes to end and stop the recording
 * setTimeout(async () => {
 * 	// the recorded audio is returned as a blob
 * 	const recording = await recorder.stop();
 * 	// download the recording by creating an anchor element and blob url
 * 	const url = URL.createObjectURL(recording);
 * 	const anchor = document.createElement("a");
 * 	anchor.download = "recording.webm";
 * 	anchor.href = url;
 * 	anchor.click();
 * }, 4000);
 * @category Component
 */
class Recorder extends _core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_0__.ToneAudioNode {
    constructor() {
        super((0,_core_util_Defaults__WEBPACK_IMPORTED_MODULE_4__.optionsFromArguments)(Recorder.getDefaults(), arguments));
        this.name = "Recorder";
        const options = (0,_core_util_Defaults__WEBPACK_IMPORTED_MODULE_4__.optionsFromArguments)(Recorder.getDefaults(), arguments);
        this.input = new _core_context_Gain__WEBPACK_IMPORTED_MODULE_1__.Gain({
            context: this.context
        });
        (0,_core_util_Debug__WEBPACK_IMPORTED_MODULE_2__.assert)(Recorder.supported, "Media Recorder API is not available");
        this._stream = this.context.createMediaStreamDestination();
        this.input.connect(this._stream);
        this._recorder = new MediaRecorder(this._stream.stream, {
            mimeType: options.mimeType
        });
    }
    static getDefaults() {
        return _core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_0__.ToneAudioNode.getDefaults();
    }
    /**
     * The mime type is the format that the audio is encoded in. For Chrome
     * that is typically webm encoded as "vorbis".
     */
    get mimeType() {
        return this._recorder.mimeType;
    }
    /**
     * Test if your platform supports the Media Recorder API. If it's not available,
     * try installing this (polyfill)[https://www.npmjs.com/package/audio-recorder-polyfill].
     */
    static get supported() {
        return _core_context_AudioContext__WEBPACK_IMPORTED_MODULE_3__.theWindow !== null && Reflect.has(_core_context_AudioContext__WEBPACK_IMPORTED_MODULE_3__.theWindow, "MediaRecorder");
    }
    /**
     * Get the playback state of the Recorder, either "started", "stopped" or "paused"
     */
    get state() {
        if (this._recorder.state === "inactive") {
            return "stopped";
        }
        else if (this._recorder.state === "paused") {
            return "paused";
        }
        else {
            return "started";
        }
    }
    /**
     * Start the Recorder. Returns a promise which resolves
     * when the recorder has started.
     */
    start() {
        return (0,tslib__WEBPACK_IMPORTED_MODULE_5__.__awaiter)(this, void 0, void 0, function* () {
            (0,_core_util_Debug__WEBPACK_IMPORTED_MODULE_2__.assert)(this.state !== "started", "Recorder is already started");
            const startPromise = new Promise(done => {
                const handleStart = () => {
                    this._recorder.removeEventListener("start", handleStart, false);
                    done();
                };
                this._recorder.addEventListener("start", handleStart, false);
            });
            this._recorder.start();
            return yield startPromise;
        });
    }
    /**
     * Stop the recorder. Returns a promise with the recorded content until this point
     * encoded as [[mimeType]]
     */
    stop() {
        return (0,tslib__WEBPACK_IMPORTED_MODULE_5__.__awaiter)(this, void 0, void 0, function* () {
            (0,_core_util_Debug__WEBPACK_IMPORTED_MODULE_2__.assert)(this.state !== "stopped", "Recorder is not started");
            const dataPromise = new Promise(done => {
                const handleData = (e) => {
                    this._recorder.removeEventListener("dataavailable", handleData, false);
                    done(e.data);
                };
                this._recorder.addEventListener("dataavailable", handleData, false);
            });
            this._recorder.stop();
            return yield dataPromise;
        });
    }
    /**
     * Pause the recorder
     */
    pause() {
        (0,_core_util_Debug__WEBPACK_IMPORTED_MODULE_2__.assert)(this.state === "started", "Recorder must be started");
        this._recorder.pause();
        return this;
    }
    dispose() {
        super.dispose();
        this.input.dispose();
        this._stream.disconnect();
        return this;
    }
}
//# sourceMappingURL=Recorder.js.map

/***/ }),

/***/ "./node_modules/tone/build/esm/component/channel/Solo.js":
/*!***************************************************************!*\
  !*** ./node_modules/tone/build/esm/component/channel/Solo.js ***!
  \***************************************************************/
/*! namespace exports */
/*! export Solo [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Solo": () => /* binding */ Solo
/* harmony export */ });
/* harmony import */ var _core_context_Gain__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/context/Gain */ "./node_modules/tone/build/esm/core/context/Gain.js");
/* harmony import */ var _core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core/context/ToneAudioNode */ "./node_modules/tone/build/esm/core/context/ToneAudioNode.js");
/* harmony import */ var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/util/Defaults */ "./node_modules/tone/build/esm/core/util/Defaults.js");
;


/**
 * Solo lets you isolate a specific audio stream. When an instance is set to `solo=true`,
 * it will mute all other instances of Solo.
 * @example
 * const soloA = new Tone.Solo().toDestination();
 * const oscA = new Tone.Oscillator("C4", "sawtooth").connect(soloA);
 * const soloB = new Tone.Solo().toDestination();
 * const oscB = new Tone.Oscillator("E4", "square").connect(soloB);
 * soloA.solo = true;
 * // no audio will pass through soloB
 * @category Component
 */
class Solo extends _core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_1__.ToneAudioNode {
    constructor() {
        super((0,_core_util_Defaults__WEBPACK_IMPORTED_MODULE_2__.optionsFromArguments)(Solo.getDefaults(), arguments, ["solo"]));
        this.name = "Solo";
        const options = (0,_core_util_Defaults__WEBPACK_IMPORTED_MODULE_2__.optionsFromArguments)(Solo.getDefaults(), arguments, ["solo"]);
        this.input = this.output = new _core_context_Gain__WEBPACK_IMPORTED_MODULE_0__.Gain({
            context: this.context,
        });
        if (!Solo._allSolos.has(this.context)) {
            Solo._allSolos.set(this.context, new Set());
        }
        Solo._allSolos.get(this.context).add(this);
        // set initially
        this.solo = options.solo;
    }
    static getDefaults() {
        return Object.assign(_core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_1__.ToneAudioNode.getDefaults(), {
            solo: false,
        });
    }
    /**
     * Isolates this instance and mutes all other instances of Solo.
     * Only one instance can be soloed at a time. A soloed
     * instance will report `solo=false` when another instance is soloed.
     */
    get solo() {
        return this._isSoloed();
    }
    set solo(solo) {
        if (solo) {
            this._addSolo();
        }
        else {
            this._removeSolo();
        }
        Solo._allSolos.get(this.context).forEach(instance => instance._updateSolo());
    }
    /**
     * If the current instance is muted, i.e. another instance is soloed
     */
    get muted() {
        return this.input.gain.value === 0;
    }
    /**
     * Add this to the soloed array
     */
    _addSolo() {
        if (!Solo._soloed.has(this.context)) {
            Solo._soloed.set(this.context, new Set());
        }
        Solo._soloed.get(this.context).add(this);
    }
    /**
     * Remove this from the soloed array
     */
    _removeSolo() {
        if (Solo._soloed.has(this.context)) {
            Solo._soloed.get(this.context).delete(this);
        }
    }
    /**
     * Is this on the soloed array
     */
    _isSoloed() {
        return Solo._soloed.has(this.context) && Solo._soloed.get(this.context).has(this);
    }
    /**
     * Returns true if no one is soloed
     */
    _noSolos() {
        // either does not have any soloed added
        return !Solo._soloed.has(this.context) ||
            // or has a solo set but doesn't include any items
            (Solo._soloed.has(this.context) && Solo._soloed.get(this.context).size === 0);
    }
    /**
     * Solo the current instance and unsolo all other instances.
     */
    _updateSolo() {
        if (this._isSoloed()) {
            this.input.gain.value = 1;
        }
        else if (this._noSolos()) {
            // no one is soloed
            this.input.gain.value = 1;
        }
        else {
            this.input.gain.value = 0;
        }
    }
    dispose() {
        super.dispose();
        Solo._allSolos.get(this.context).delete(this);
        this._removeSolo();
        return this;
    }
}
/**
 * Hold all of the solo'ed tracks belonging to a specific context
 */
Solo._allSolos = new Map();
/**
 * Hold the currently solo'ed instance(s)
 */
Solo._soloed = new Map();
//# sourceMappingURL=Solo.js.map

/***/ }),

/***/ "./node_modules/tone/build/esm/component/channel/Split.js":
/*!****************************************************************!*\
  !*** ./node_modules/tone/build/esm/component/channel/Split.js ***!
  \****************************************************************/
/*! namespace exports */
/*! export Split [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Split": () => /* binding */ Split
/* harmony export */ });
/* harmony import */ var _core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/context/ToneAudioNode */ "./node_modules/tone/build/esm/core/context/ToneAudioNode.js");
/* harmony import */ var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core/util/Defaults */ "./node_modules/tone/build/esm/core/util/Defaults.js");
;

/**
 * Split splits an incoming signal into the number of given channels.
 *
 * @example
 * const split = new Tone.Split();
 * // stereoSignal.connect(split);
 * @category Component
 */
class Split extends _core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_0__.ToneAudioNode {
    constructor() {
        super((0,_core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__.optionsFromArguments)(Split.getDefaults(), arguments, ["channels"]));
        this.name = "Split";
        const options = (0,_core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__.optionsFromArguments)(Split.getDefaults(), arguments, ["channels"]);
        this._splitter = this.input = this.output = this.context.createChannelSplitter(options.channels);
        this._internalChannels = [this._splitter];
    }
    static getDefaults() {
        return Object.assign(_core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_0__.ToneAudioNode.getDefaults(), {
            channels: 2,
        });
    }
    dispose() {
        super.dispose();
        this._splitter.disconnect();
        return this;
    }
}
//# sourceMappingURL=Split.js.map

/***/ }),

/***/ "./node_modules/tone/build/esm/component/channel/Volume.js":
/*!*****************************************************************!*\
  !*** ./node_modules/tone/build/esm/component/channel/Volume.js ***!
  \*****************************************************************/
/*! namespace exports */
/*! export Volume [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Volume": () => /* binding */ Volume
/* harmony export */ });
/* harmony import */ var _core_context_Gain__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/context/Gain */ "./node_modules/tone/build/esm/core/context/Gain.js");
/* harmony import */ var _core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core/context/ToneAudioNode */ "./node_modules/tone/build/esm/core/context/ToneAudioNode.js");
/* harmony import */ var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/util/Defaults */ "./node_modules/tone/build/esm/core/util/Defaults.js");
/* harmony import */ var _core_util_Interface__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/util/Interface */ "./node_modules/tone/build/esm/core/util/Interface.js");
;



/**
 * Volume is a simple volume node, useful for creating a volume fader.
 *
 * @example
 * const vol = new Tone.Volume(-12).toDestination();
 * const osc = new Tone.Oscillator().connect(vol).start();
 * @category Component
 */
class Volume extends _core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_1__.ToneAudioNode {
    constructor() {
        super((0,_core_util_Defaults__WEBPACK_IMPORTED_MODULE_2__.optionsFromArguments)(Volume.getDefaults(), arguments, ["volume"]));
        this.name = "Volume";
        const options = (0,_core_util_Defaults__WEBPACK_IMPORTED_MODULE_2__.optionsFromArguments)(Volume.getDefaults(), arguments, ["volume"]);
        this.input = this.output = new _core_context_Gain__WEBPACK_IMPORTED_MODULE_0__.Gain({
            context: this.context,
            gain: options.volume,
            units: "decibels",
        });
        this.volume = this.output.gain;
        (0,_core_util_Interface__WEBPACK_IMPORTED_MODULE_3__.readOnly)(this, "volume");
        this._unmutedVolume = options.volume;
        // set the mute initially
        this.mute = options.mute;
    }
    static getDefaults() {
        return Object.assign(_core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_1__.ToneAudioNode.getDefaults(), {
            mute: false,
            volume: 0,
        });
    }
    /**
     * Mute the output.
     * @example
     * const vol = new Tone.Volume(-12).toDestination();
     * const osc = new Tone.Oscillator().connect(vol).start();
     * // mute the output
     * vol.mute = true;
     */
    get mute() {
        return this.volume.value === -Infinity;
    }
    set mute(mute) {
        if (!this.mute && mute) {
            this._unmutedVolume = this.volume.value;
            // maybe it should ramp here?
            this.volume.value = -Infinity;
        }
        else if (this.mute && !mute) {
            this.volume.value = this._unmutedVolume;
        }
    }
    /**
     * clean up
     */
    dispose() {
        super.dispose();
        this.input.dispose();
        this.volume.dispose();
        return this;
    }
}
//# sourceMappingURL=Volume.js.map

/***/ }),

/***/ "./node_modules/tone/build/esm/component/dynamics/Compressor.js":
/*!**********************************************************************!*\
  !*** ./node_modules/tone/build/esm/component/dynamics/Compressor.js ***!
  \**********************************************************************/
/*! namespace exports */
/*! export Compressor [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Compressor": () => /* binding */ Compressor
/* harmony export */ });
/* harmony import */ var _core_context_Param__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/context/Param */ "./node_modules/tone/build/esm/core/context/Param.js");
/* harmony import */ var _core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core/context/ToneAudioNode */ "./node_modules/tone/build/esm/core/context/ToneAudioNode.js");
/* harmony import */ var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/util/Defaults */ "./node_modules/tone/build/esm/core/util/Defaults.js");
/* harmony import */ var _core_util_Interface__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/util/Interface */ "./node_modules/tone/build/esm/core/util/Interface.js");
;



/**
 * Compressor is a thin wrapper around the Web Audio
 * [DynamicsCompressorNode](http://webaudio.github.io/web-audio-api/#the-dynamicscompressornode-interface).
 * Compression reduces the volume of loud sounds or amplifies quiet sounds
 * by narrowing or "compressing" an audio signal's dynamic range.
 * Read more on [Wikipedia](https://en.wikipedia.org/wiki/Dynamic_range_compression).
 * @example
 * const comp = new Tone.Compressor(-30, 3);
 * @category Component
 */
class Compressor extends _core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_1__.ToneAudioNode {
    constructor() {
        super((0,_core_util_Defaults__WEBPACK_IMPORTED_MODULE_2__.optionsFromArguments)(Compressor.getDefaults(), arguments, ["threshold", "ratio"]));
        this.name = "Compressor";
        /**
         * the compressor node
         */
        this._compressor = this.context.createDynamicsCompressor();
        this.input = this._compressor;
        this.output = this._compressor;
        const options = (0,_core_util_Defaults__WEBPACK_IMPORTED_MODULE_2__.optionsFromArguments)(Compressor.getDefaults(), arguments, ["threshold", "ratio"]);
        this.threshold = new _core_context_Param__WEBPACK_IMPORTED_MODULE_0__.Param({
            minValue: this._compressor.threshold.minValue,
            maxValue: this._compressor.threshold.maxValue,
            context: this.context,
            convert: false,
            param: this._compressor.threshold,
            units: "decibels",
            value: options.threshold,
        });
        this.attack = new _core_context_Param__WEBPACK_IMPORTED_MODULE_0__.Param({
            minValue: this._compressor.attack.minValue,
            maxValue: this._compressor.attack.maxValue,
            context: this.context,
            param: this._compressor.attack,
            units: "time",
            value: options.attack,
        });
        this.release = new _core_context_Param__WEBPACK_IMPORTED_MODULE_0__.Param({
            minValue: this._compressor.release.minValue,
            maxValue: this._compressor.release.maxValue,
            context: this.context,
            param: this._compressor.release,
            units: "time",
            value: options.release,
        });
        this.knee = new _core_context_Param__WEBPACK_IMPORTED_MODULE_0__.Param({
            minValue: this._compressor.knee.minValue,
            maxValue: this._compressor.knee.maxValue,
            context: this.context,
            convert: false,
            param: this._compressor.knee,
            units: "decibels",
            value: options.knee,
        });
        this.ratio = new _core_context_Param__WEBPACK_IMPORTED_MODULE_0__.Param({
            minValue: this._compressor.ratio.minValue,
            maxValue: this._compressor.ratio.maxValue,
            context: this.context,
            convert: false,
            param: this._compressor.ratio,
            units: "positive",
            value: options.ratio,
        });
        // set the defaults
        (0,_core_util_Interface__WEBPACK_IMPORTED_MODULE_3__.readOnly)(this, ["knee", "release", "attack", "ratio", "threshold"]);
    }
    static getDefaults() {
        return Object.assign(_core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_1__.ToneAudioNode.getDefaults(), {
            attack: 0.003,
            knee: 30,
            ratio: 12,
            release: 0.25,
            threshold: -24,
        });
    }
    /**
     * A read-only decibel value for metering purposes, representing the current amount of gain
     * reduction that the compressor is applying to the signal. If fed no signal the value will be 0 (no gain reduction).
     */
    get reduction() {
        return this._compressor.reduction;
    }
    dispose() {
        super.dispose();
        this._compressor.disconnect();
        this.attack.dispose();
        this.release.dispose();
        this.threshold.dispose();
        this.ratio.dispose();
        this.knee.dispose();
        return this;
    }
}
//# sourceMappingURL=Compressor.js.map

/***/ }),

/***/ "./node_modules/tone/build/esm/component/dynamics/Gate.js":
/*!****************************************************************!*\
  !*** ./node_modules/tone/build/esm/component/dynamics/Gate.js ***!
  \****************************************************************/
/*! namespace exports */
/*! export Gate [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Gate": () => /* binding */ Gate
/* harmony export */ });
/* harmony import */ var _core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/context/ToneAudioNode */ "./node_modules/tone/build/esm/core/context/ToneAudioNode.js");
/* harmony import */ var _signal_GreaterThan__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../signal/GreaterThan */ "./node_modules/tone/build/esm/signal/GreaterThan.js");
/* harmony import */ var _core_context_Gain__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/context/Gain */ "./node_modules/tone/build/esm/core/context/Gain.js");
/* harmony import */ var _analysis_Follower__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../analysis/Follower */ "./node_modules/tone/build/esm/component/analysis/Follower.js");
/* harmony import */ var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../core/util/Defaults */ "./node_modules/tone/build/esm/core/util/Defaults.js");
/* harmony import */ var _core_type_Conversions__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../core/type/Conversions */ "./node_modules/tone/build/esm/core/type/Conversions.js");
;





/**
 * Gate only passes a signal through when the incoming
 * signal exceeds a specified threshold. It uses [[Follower]] to follow the ampltiude
 * of the incoming signal and compares it to the [[threshold]] value using [[GreaterThan]].
 *
 * @example
 * const gate = new Tone.Gate(-30, 0.2).toDestination();
 * const mic = new Tone.UserMedia().connect(gate);
 * // the gate will only pass through the incoming
 * // signal when it's louder than -30db
 * @category Component
 */
class Gate extends _core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_0__.ToneAudioNode {
    constructor() {
        super(Object.assign((0,_core_util_Defaults__WEBPACK_IMPORTED_MODULE_4__.optionsFromArguments)(Gate.getDefaults(), arguments, ["threshold", "smoothing"])));
        this.name = "Gate";
        const options = (0,_core_util_Defaults__WEBPACK_IMPORTED_MODULE_4__.optionsFromArguments)(Gate.getDefaults(), arguments, ["threshold", "smoothing"]);
        this._follower = new _analysis_Follower__WEBPACK_IMPORTED_MODULE_3__.Follower({
            context: this.context,
            smoothing: options.smoothing,
        });
        this._gt = new _signal_GreaterThan__WEBPACK_IMPORTED_MODULE_1__.GreaterThan({
            context: this.context,
            value: (0,_core_type_Conversions__WEBPACK_IMPORTED_MODULE_5__.dbToGain)(options.threshold),
        });
        this.input = new _core_context_Gain__WEBPACK_IMPORTED_MODULE_2__.Gain({ context: this.context });
        this._gate = this.output = new _core_context_Gain__WEBPACK_IMPORTED_MODULE_2__.Gain({ context: this.context });
        // connections
        this.input.connect(this._gate);
        // the control signal
        this.input.chain(this._follower, this._gt, this._gate.gain);
    }
    static getDefaults() {
        return Object.assign(_core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_0__.ToneAudioNode.getDefaults(), {
            smoothing: 0.1,
            threshold: -40
        });
    }
    /**
     * The threshold of the gate in decibels
     */
    get threshold() {
        return (0,_core_type_Conversions__WEBPACK_IMPORTED_MODULE_5__.gainToDb)(this._gt.value);
    }
    set threshold(thresh) {
        this._gt.value = (0,_core_type_Conversions__WEBPACK_IMPORTED_MODULE_5__.dbToGain)(thresh);
    }
    /**
     * The attack/decay speed of the gate. See [[Follower.smoothing]]
     */
    get smoothing() {
        return this._follower.smoothing;
    }
    set smoothing(smoothingTime) {
        this._follower.smoothing = smoothingTime;
    }
    dispose() {
        super.dispose();
        this.input.dispose();
        this._follower.dispose();
        this._gt.dispose();
        this._gate.dispose();
        return this;
    }
}
//# sourceMappingURL=Gate.js.map

/***/ }),

/***/ "./node_modules/tone/build/esm/component/dynamics/Limiter.js":
/*!*******************************************************************!*\
  !*** ./node_modules/tone/build/esm/component/dynamics/Limiter.js ***!
  \*******************************************************************/
/*! namespace exports */
/*! export Limiter [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Limiter": () => /* binding */ Limiter
/* harmony export */ });
/* harmony import */ var _core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/context/ToneAudioNode */ "./node_modules/tone/build/esm/core/context/ToneAudioNode.js");
/* harmony import */ var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core/util/Defaults */ "./node_modules/tone/build/esm/core/util/Defaults.js");
/* harmony import */ var _Compressor__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Compressor */ "./node_modules/tone/build/esm/component/dynamics/Compressor.js");
/* harmony import */ var _core_util_Interface__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/util/Interface */ "./node_modules/tone/build/esm/core/util/Interface.js");
;



;
/**
 * Limiter will limit the loudness of an incoming signal.
 * It is composed of a [[Compressor]] with a fast attack
 * and release and max ratio. Limiters are commonly used to safeguard against
 * signal clipping. Unlike a compressor, limiters do not provide
 * smooth gain reduction and almost completely prevent
 * additional gain above the threshold.
 *
 * @example
 * const limiter = new Tone.Limiter(-20).toDestination();
 * const oscillator = new Tone.Oscillator().connect(limiter);
 * oscillator.start();
 * @category Component
 */
class Limiter extends _core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_0__.ToneAudioNode {
    constructor() {
        super(Object.assign((0,_core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__.optionsFromArguments)(Limiter.getDefaults(), arguments, ["threshold"])));
        this.name = "Limiter";
        const options = (0,_core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__.optionsFromArguments)(Limiter.getDefaults(), arguments, ["threshold"]);
        this._compressor = this.input = this.output = new _Compressor__WEBPACK_IMPORTED_MODULE_2__.Compressor({
            context: this.context,
            ratio: 20,
            attack: 0,
            release: 0,
            threshold: options.threshold
        });
        this.threshold = this._compressor.threshold;
        (0,_core_util_Interface__WEBPACK_IMPORTED_MODULE_3__.readOnly)(this, "threshold");
    }
    static getDefaults() {
        return Object.assign(_core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_0__.ToneAudioNode.getDefaults(), {
            threshold: -12
        });
    }
    /**
     * A read-only decibel value for metering purposes, representing the current amount of gain
     * reduction that the compressor is applying to the signal.
     */
    get reduction() {
        return this._compressor.reduction;
    }
    dispose() {
        super.dispose();
        this._compressor.dispose();
        this.threshold.dispose();
        return this;
    }
}
//# sourceMappingURL=Limiter.js.map

/***/ }),

/***/ "./node_modules/tone/build/esm/component/dynamics/MidSideCompressor.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/tone/build/esm/component/dynamics/MidSideCompressor.js ***!
  \*****************************************************************************/
/*! namespace exports */
/*! export MidSideCompressor [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "MidSideCompressor": () => /* binding */ MidSideCompressor
/* harmony export */ });
/* harmony import */ var _core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/context/ToneAudioNode */ "./node_modules/tone/build/esm/core/context/ToneAudioNode.js");
/* harmony import */ var _Compressor__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Compressor */ "./node_modules/tone/build/esm/component/dynamics/Compressor.js");
/* harmony import */ var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/util/Defaults */ "./node_modules/tone/build/esm/core/util/Defaults.js");
/* harmony import */ var _channel_MidSideSplit__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../channel/MidSideSplit */ "./node_modules/tone/build/esm/component/channel/MidSideSplit.js");
/* harmony import */ var _channel_MidSideMerge__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../channel/MidSideMerge */ "./node_modules/tone/build/esm/component/channel/MidSideMerge.js");
/* harmony import */ var _core_util_Interface__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../core/util/Interface */ "./node_modules/tone/build/esm/core/util/Interface.js");
;





/**
 * MidSideCompressor applies two different compressors to the [[mid]]
 * and [[side]] signal components of the input. See [[MidSideSplit]] and [[MidSideMerge]].
 * @category Component
 */
class MidSideCompressor extends _core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_0__.ToneAudioNode {
    constructor() {
        super(Object.assign((0,_core_util_Defaults__WEBPACK_IMPORTED_MODULE_2__.optionsFromArguments)(MidSideCompressor.getDefaults(), arguments)));
        this.name = "MidSideCompressor";
        const options = (0,_core_util_Defaults__WEBPACK_IMPORTED_MODULE_2__.optionsFromArguments)(MidSideCompressor.getDefaults(), arguments);
        this._midSideSplit = this.input = new _channel_MidSideSplit__WEBPACK_IMPORTED_MODULE_3__.MidSideSplit({ context: this.context });
        this._midSideMerge = this.output = new _channel_MidSideMerge__WEBPACK_IMPORTED_MODULE_4__.MidSideMerge({ context: this.context });
        this.mid = new _Compressor__WEBPACK_IMPORTED_MODULE_1__.Compressor(Object.assign(options.mid, { context: this.context }));
        this.side = new _Compressor__WEBPACK_IMPORTED_MODULE_1__.Compressor(Object.assign(options.side, { context: this.context }));
        this._midSideSplit.mid.chain(this.mid, this._midSideMerge.mid);
        this._midSideSplit.side.chain(this.side, this._midSideMerge.side);
        (0,_core_util_Interface__WEBPACK_IMPORTED_MODULE_5__.readOnly)(this, ["mid", "side"]);
    }
    static getDefaults() {
        return Object.assign(_core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_0__.ToneAudioNode.getDefaults(), {
            mid: {
                ratio: 3,
                threshold: -24,
                release: 0.03,
                attack: 0.02,
                knee: 16
            },
            side: {
                ratio: 6,
                threshold: -30,
                release: 0.25,
                attack: 0.03,
                knee: 10
            }
        });
    }
    dispose() {
        super.dispose();
        this.mid.dispose();
        this.side.dispose();
        this._midSideSplit.dispose();
        this._midSideMerge.dispose();
        return this;
    }
}
//# sourceMappingURL=MidSideCompressor.js.map

/***/ }),

/***/ "./node_modules/tone/build/esm/component/dynamics/MultibandCompressor.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/tone/build/esm/component/dynamics/MultibandCompressor.js ***!
  \*******************************************************************************/
/*! namespace exports */
/*! export MultibandCompressor [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "MultibandCompressor": () => /* binding */ MultibandCompressor
/* harmony export */ });
/* harmony import */ var _core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/context/ToneAudioNode */ "./node_modules/tone/build/esm/core/context/ToneAudioNode.js");
/* harmony import */ var _Compressor__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Compressor */ "./node_modules/tone/build/esm/component/dynamics/Compressor.js");
/* harmony import */ var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/util/Defaults */ "./node_modules/tone/build/esm/core/util/Defaults.js");
/* harmony import */ var _core_util_Interface__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/util/Interface */ "./node_modules/tone/build/esm/core/util/Interface.js");
/* harmony import */ var _channel_MultibandSplit__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../channel/MultibandSplit */ "./node_modules/tone/build/esm/component/channel/MultibandSplit.js");
/* harmony import */ var _core_context_Gain__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../core/context/Gain */ "./node_modules/tone/build/esm/core/context/Gain.js");
;





/**
 * A compressor with separate controls over low/mid/high dynamics. See [[Compressor]] and [[MultibandSplit]]
 *
 * @example
 * const multiband = new Tone.MultibandCompressor({
 * 	lowFrequency: 200,
 * 	highFrequency: 1300,
 * 	low: {
 * 		threshold: -12
 * 	}
 * });
 * @category Component
 */
class MultibandCompressor extends _core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_0__.ToneAudioNode {
    constructor() {
        super(Object.assign((0,_core_util_Defaults__WEBPACK_IMPORTED_MODULE_2__.optionsFromArguments)(MultibandCompressor.getDefaults(), arguments)));
        this.name = "MultibandCompressor";
        const options = (0,_core_util_Defaults__WEBPACK_IMPORTED_MODULE_2__.optionsFromArguments)(MultibandCompressor.getDefaults(), arguments);
        this._splitter = this.input = new _channel_MultibandSplit__WEBPACK_IMPORTED_MODULE_4__.MultibandSplit({
            context: this.context,
            lowFrequency: options.lowFrequency,
            highFrequency: options.highFrequency
        });
        this.lowFrequency = this._splitter.lowFrequency;
        this.highFrequency = this._splitter.highFrequency;
        this.output = new _core_context_Gain__WEBPACK_IMPORTED_MODULE_5__.Gain({ context: this.context });
        this.low = new _Compressor__WEBPACK_IMPORTED_MODULE_1__.Compressor(Object.assign(options.low, { context: this.context }));
        this.mid = new _Compressor__WEBPACK_IMPORTED_MODULE_1__.Compressor(Object.assign(options.mid, { context: this.context }));
        this.high = new _Compressor__WEBPACK_IMPORTED_MODULE_1__.Compressor(Object.assign(options.high, { context: this.context }));
        // connect the compressor
        this._splitter.low.chain(this.low, this.output);
        this._splitter.mid.chain(this.mid, this.output);
        this._splitter.high.chain(this.high, this.output);
        (0,_core_util_Interface__WEBPACK_IMPORTED_MODULE_3__.readOnly)(this, ["high", "mid", "low", "highFrequency", "lowFrequency"]);
    }
    static getDefaults() {
        return Object.assign(_core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_0__.ToneAudioNode.getDefaults(), {
            lowFrequency: 250,
            highFrequency: 2000,
            low: {
                ratio: 6,
                threshold: -30,
                release: 0.25,
                attack: 0.03,
                knee: 10
            },
            mid: {
                ratio: 3,
                threshold: -24,
                release: 0.03,
                attack: 0.02,
                knee: 16
            },
            high: {
                ratio: 3,
                threshold: -24,
                release: 0.03,
                attack: 0.02,
                knee: 16
            },
        });
    }
    dispose() {
        super.dispose();
        this._splitter.dispose();
        this.low.dispose();
        this.mid.dispose();
        this.high.dispose();
        this.output.dispose();
        return this;
    }
}
//# sourceMappingURL=MultibandCompressor.js.map

/***/ }),

/***/ "./node_modules/tone/build/esm/component/envelope/AmplitudeEnvelope.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/tone/build/esm/component/envelope/AmplitudeEnvelope.js ***!
  \*****************************************************************************/
/*! namespace exports */
/*! export AmplitudeEnvelope [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "AmplitudeEnvelope": () => /* binding */ AmplitudeEnvelope
/* harmony export */ });
/* harmony import */ var _core_context_Gain__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/context/Gain */ "./node_modules/tone/build/esm/core/context/Gain.js");
/* harmony import */ var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core/util/Defaults */ "./node_modules/tone/build/esm/core/util/Defaults.js");
/* harmony import */ var _Envelope__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Envelope */ "./node_modules/tone/build/esm/component/envelope/Envelope.js");
;


/**
 * AmplitudeEnvelope is a Tone.Envelope connected to a gain node.
 * Unlike Tone.Envelope, which outputs the envelope's value, AmplitudeEnvelope accepts
 * an audio signal as the input and will apply the envelope to the amplitude
 * of the signal.
 * Read more about ADSR Envelopes on [Wikipedia](https://en.wikipedia.org/wiki/Synthesizer#ADSR_envelope).
 *
 * @example
 * return Tone.Offline(() => {
 * 	const ampEnv = new Tone.AmplitudeEnvelope({
 * 		attack: 0.1,
 * 		decay: 0.2,
 * 		sustain: 1.0,
 * 		release: 0.8
 * 	}).toDestination();
 * 	// create an oscillator and connect it
 * 	const osc = new Tone.Oscillator().connect(ampEnv).start();
 * 	// trigger the envelopes attack and release "8t" apart
 * 	ampEnv.triggerAttackRelease("8t");
 * }, 1.5, 1);
 * @category Component
 */
class AmplitudeEnvelope extends _Envelope__WEBPACK_IMPORTED_MODULE_2__.Envelope {
    constructor() {
        super((0,_core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__.optionsFromArguments)(AmplitudeEnvelope.getDefaults(), arguments, ["attack", "decay", "sustain", "release"]));
        this.name = "AmplitudeEnvelope";
        this._gainNode = new _core_context_Gain__WEBPACK_IMPORTED_MODULE_0__.Gain({
            context: this.context,
            gain: 0,
        });
        this.output = this._gainNode;
        this.input = this._gainNode;
        this._sig.connect(this._gainNode.gain);
        this.output = this._gainNode;
        this.input = this._gainNode;
    }
    /**
     * Clean up
     */
    dispose() {
        super.dispose();
        this._gainNode.dispose();
        return this;
    }
}
//# sourceMappingURL=AmplitudeEnvelope.js.map

/***/ }),

/***/ "./node_modules/tone/build/esm/component/envelope/Envelope.js":
/*!********************************************************************!*\
  !*** ./node_modules/tone/build/esm/component/envelope/Envelope.js ***!
  \********************************************************************/
/*! namespace exports */
/*! export Envelope [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Envelope": () => /* binding */ Envelope
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! tslib */ "./node_modules/tone/node_modules/tslib/tslib.es6.js");
/* harmony import */ var _core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/context/ToneAudioNode */ "./node_modules/tone/build/esm/core/context/ToneAudioNode.js");
/* harmony import */ var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core/util/Defaults */ "./node_modules/tone/build/esm/core/util/Defaults.js");
/* harmony import */ var _core_util_TypeCheck__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/util/TypeCheck */ "./node_modules/tone/build/esm/core/util/TypeCheck.js");
/* harmony import */ var _signal_Signal__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../signal/Signal */ "./node_modules/tone/build/esm/signal/Signal.js");
/* harmony import */ var _core_context_OfflineContext__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../core/context/OfflineContext */ "./node_modules/tone/build/esm/core/context/OfflineContext.js");
/* harmony import */ var _core_util_Debug__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../core/util/Debug */ "./node_modules/tone/build/esm/core/util/Debug.js");
/* harmony import */ var _core_util_Decorator__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../core/util/Decorator */ "./node_modules/tone/build/esm/core/util/Decorator.js");
;







/**
 * Envelope is an [ADSR](https://en.wikipedia.org/wiki/Synthesizer#ADSR_envelope)
 * envelope generator. Envelope outputs a signal which
 * can be connected to an AudioParam or Tone.Signal.
 * ```
 *           /\
 *          /  \
 *         /    \
 *        /      \
 *       /        \___________
 *      /                     \
 *     /                       \
 *    /                         \
 *   /                           \
 * ```
 * @example
 * return Tone.Offline(() => {
 * 	const env = new Tone.Envelope({
 * 		attack: 0.1,
 * 		decay: 0.2,
 * 		sustain: 0.5,
 * 		release: 0.8,
 * 	}).toDestination();
 * 	env.triggerAttackRelease(0.5);
 * }, 1.5, 1);
 * @category Component
 */
class Envelope extends _core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_0__.ToneAudioNode {
    constructor() {
        super((0,_core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__.optionsFromArguments)(Envelope.getDefaults(), arguments, ["attack", "decay", "sustain", "release"]));
        this.name = "Envelope";
        /**
         * the signal which is output.
         */
        this._sig = new _signal_Signal__WEBPACK_IMPORTED_MODULE_3__.Signal({
            context: this.context,
            value: 0,
        });
        /**
         * The output signal of the envelope
         */
        this.output = this._sig;
        /**
         * Envelope has no input
         */
        this.input = undefined;
        const options = (0,_core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__.optionsFromArguments)(Envelope.getDefaults(), arguments, ["attack", "decay", "sustain", "release"]);
        this.attack = options.attack;
        this.decay = options.decay;
        this.sustain = options.sustain;
        this.release = options.release;
        this.attackCurve = options.attackCurve;
        this.releaseCurve = options.releaseCurve;
        this.decayCurve = options.decayCurve;
    }
    static getDefaults() {
        return Object.assign(_core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_0__.ToneAudioNode.getDefaults(), {
            attack: 0.01,
            attackCurve: "linear",
            decay: 0.1,
            decayCurve: "exponential",
            release: 1,
            releaseCurve: "exponential",
            sustain: 0.5,
        });
    }
    /**
     * Read the current value of the envelope. Useful for
     * synchronizing visual output to the envelope.
     */
    get value() {
        return this.getValueAtTime(this.now());
    }
    /**
     * Get the curve
     * @param  curve
     * @param  direction  In/Out
     * @return The curve name
     */
    _getCurve(curve, direction) {
        if ((0,_core_util_TypeCheck__WEBPACK_IMPORTED_MODULE_2__.isString)(curve)) {
            return curve;
        }
        else {
            // look up the name in the curves array
            let curveName;
            for (curveName in EnvelopeCurves) {
                if (EnvelopeCurves[curveName][direction] === curve) {
                    return curveName;
                }
            }
            // return the custom curve
            return curve;
        }
    }
    /**
     * Assign a the curve to the given name using the direction
     * @param  name
     * @param  direction In/Out
     * @param  curve
     */
    _setCurve(name, direction, curve) {
        // check if it's a valid type
        if ((0,_core_util_TypeCheck__WEBPACK_IMPORTED_MODULE_2__.isString)(curve) && Reflect.has(EnvelopeCurves, curve)) {
            const curveDef = EnvelopeCurves[curve];
            if ((0,_core_util_TypeCheck__WEBPACK_IMPORTED_MODULE_2__.isObject)(curveDef)) {
                if (name !== "_decayCurve") {
                    this[name] = curveDef[direction];
                }
            }
            else {
                this[name] = curveDef;
            }
        }
        else if ((0,_core_util_TypeCheck__WEBPACK_IMPORTED_MODULE_2__.isArray)(curve) && name !== "_decayCurve") {
            this[name] = curve;
        }
        else {
            throw new Error("Envelope: invalid curve: " + curve);
        }
    }
    /**
     * The shape of the attack.
     * Can be any of these strings:
     * * "linear"
     * * "exponential"
     * * "sine"
     * * "cosine"
     * * "bounce"
     * * "ripple"
     * * "step"
     *
     * Can also be an array which describes the curve. Values
     * in the array are evenly subdivided and linearly
     * interpolated over the duration of the attack.
     * @example
     * return Tone.Offline(() => {
     * 	const env = new Tone.Envelope(0.4).toDestination();
     * 	env.attackCurve = "linear";
     * 	env.triggerAttack();
     * }, 1, 1);
     */
    get attackCurve() {
        return this._getCurve(this._attackCurve, "In");
    }
    set attackCurve(curve) {
        this._setCurve("_attackCurve", "In", curve);
    }
    /**
     * The shape of the release. See the attack curve types.
     * @example
     * return Tone.Offline(() => {
     * 	const env = new Tone.Envelope({
     * 		release: 0.8
     * 	}).toDestination();
     * 	env.triggerAttack();
     * 	// release curve could also be defined by an array
     * 	env.releaseCurve = [1, 0.3, 0.4, 0.2, 0.7, 0];
     * 	env.triggerRelease(0.2);
     * }, 1, 1);
     */
    get releaseCurve() {
        return this._getCurve(this._releaseCurve, "Out");
    }
    set releaseCurve(curve) {
        this._setCurve("_releaseCurve", "Out", curve);
    }
    /**
     * The shape of the decay either "linear" or "exponential"
     * @example
     * return Tone.Offline(() => {
     * 	const env = new Tone.Envelope({
     * 		sustain: 0.1,
     * 		decay: 0.5
     * 	}).toDestination();
     * 	env.decayCurve = "linear";
     * 	env.triggerAttack();
     * }, 1, 1);
     */
    get decayCurve() {
        return this._decayCurve;
    }
    set decayCurve(curve) {
        (0,_core_util_Debug__WEBPACK_IMPORTED_MODULE_5__.assert)(["linear", "exponential"].some(c => c === curve), `Invalid envelope curve: ${curve}`);
        this._decayCurve = curve;
    }
    /**
     * Trigger the attack/decay portion of the ADSR envelope.
     * @param  time When the attack should start.
     * @param velocity The velocity of the envelope scales the vales.
     *                             number between 0-1
     * @example
     * const env = new Tone.AmplitudeEnvelope().toDestination();
     * const osc = new Tone.Oscillator().connect(env).start();
     * // trigger the attack 0.5 seconds from now with a velocity of 0.2
     * env.triggerAttack("+0.5", 0.2);
     */
    triggerAttack(time, velocity = 1) {
        this.log("triggerAttack", time, velocity);
        time = this.toSeconds(time);
        const originalAttack = this.toSeconds(this.attack);
        let attack = originalAttack;
        const decay = this.toSeconds(this.decay);
        // check if it's not a complete attack
        const currentValue = this.getValueAtTime(time);
        if (currentValue > 0) {
            // subtract the current value from the attack time
            const attackRate = 1 / attack;
            const remainingDistance = 1 - currentValue;
            // the attack is now the remaining time
            attack = remainingDistance / attackRate;
        }
        // attack
        if (attack < this.sampleTime) {
            this._sig.cancelScheduledValues(time);
            // case where the attack time is 0 should set instantly
            this._sig.setValueAtTime(velocity, time);
        }
        else if (this._attackCurve === "linear") {
            this._sig.linearRampTo(velocity, attack, time);
        }
        else if (this._attackCurve === "exponential") {
            this._sig.targetRampTo(velocity, attack, time);
        }
        else {
            this._sig.cancelAndHoldAtTime(time);
            let curve = this._attackCurve;
            // find the starting position in the curve
            for (let i = 1; i < curve.length; i++) {
                // the starting index is between the two values
                if (curve[i - 1] <= currentValue && currentValue <= curve[i]) {
                    curve = this._attackCurve.slice(i);
                    // the first index is the current value
                    curve[0] = currentValue;
                    break;
                }
            }
            this._sig.setValueCurveAtTime(curve, time, attack, velocity);
        }
        // decay
        if (decay && this.sustain < 1) {
            const decayValue = velocity * this.sustain;
            const decayStart = time + attack;
            this.log("decay", decayStart);
            if (this._decayCurve === "linear") {
                this._sig.linearRampToValueAtTime(decayValue, decay + decayStart);
            }
            else {
                this._sig.exponentialApproachValueAtTime(decayValue, decayStart, decay);
            }
        }
        return this;
    }
    /**
     * Triggers the release of the envelope.
     * @param  time When the release portion of the envelope should start.
     * @example
     * const env = new Tone.AmplitudeEnvelope().toDestination();
     * const osc = new Tone.Oscillator({
     * 	type: "sawtooth"
     * }).connect(env).start();
     * env.triggerAttack();
     * // trigger the release half a second after the attack
     * env.triggerRelease("+0.5");
     */
    triggerRelease(time) {
        this.log("triggerRelease", time);
        time = this.toSeconds(time);
        const currentValue = this.getValueAtTime(time);
        if (currentValue > 0) {
            const release = this.toSeconds(this.release);
            if (release < this.sampleTime) {
                this._sig.setValueAtTime(0, time);
            }
            else if (this._releaseCurve === "linear") {
                this._sig.linearRampTo(0, release, time);
            }
            else if (this._releaseCurve === "exponential") {
                this._sig.targetRampTo(0, release, time);
            }
            else {
                (0,_core_util_Debug__WEBPACK_IMPORTED_MODULE_5__.assert)((0,_core_util_TypeCheck__WEBPACK_IMPORTED_MODULE_2__.isArray)(this._releaseCurve), "releaseCurve must be either 'linear', 'exponential' or an array");
                this._sig.cancelAndHoldAtTime(time);
                this._sig.setValueCurveAtTime(this._releaseCurve, time, release, currentValue);
            }
        }
        return this;
    }
    /**
     * Get the scheduled value at the given time. This will
     * return the unconverted (raw) value.
     * @example
     * const env = new Tone.Envelope(0.5, 1, 0.4, 2);
     * env.triggerAttackRelease(2);
     * setInterval(() => console.log(env.getValueAtTime(Tone.now())), 100);
     */
    getValueAtTime(time) {
        return this._sig.getValueAtTime(time);
    }
    /**
     * triggerAttackRelease is shorthand for triggerAttack, then waiting
     * some duration, then triggerRelease.
     * @param duration The duration of the sustain.
     * @param time When the attack should be triggered.
     * @param velocity The velocity of the envelope.
     * @example
     * const env = new Tone.AmplitudeEnvelope().toDestination();
     * const osc = new Tone.Oscillator().connect(env).start();
     * // trigger the release 0.5 seconds after the attack
     * env.triggerAttackRelease(0.5);
     */
    triggerAttackRelease(duration, time, velocity = 1) {
        time = this.toSeconds(time);
        this.triggerAttack(time, velocity);
        this.triggerRelease(time + this.toSeconds(duration));
        return this;
    }
    /**
     * Cancels all scheduled envelope changes after the given time.
     */
    cancel(after) {
        this._sig.cancelScheduledValues(this.toSeconds(after));
        return this;
    }
    /**
     * Connect the envelope to a destination node.
     */
    connect(destination, outputNumber = 0, inputNumber = 0) {
        (0,_signal_Signal__WEBPACK_IMPORTED_MODULE_3__.connectSignal)(this, destination, outputNumber, inputNumber);
        return this;
    }
    /**
     * Render the envelope curve to an array of the given length.
     * Good for visualizing the envelope curve. Rescales the duration of the
     * envelope to fit the length.
     */
    asArray(length = 1024) {
        return (0,tslib__WEBPACK_IMPORTED_MODULE_7__.__awaiter)(this, void 0, void 0, function* () {
            const duration = length / this.context.sampleRate;
            const context = new _core_context_OfflineContext__WEBPACK_IMPORTED_MODULE_4__.OfflineContext(1, duration, this.context.sampleRate);
            // normalize the ADSR for the given duration with 20% sustain time
            const attackPortion = this.toSeconds(this.attack) + this.toSeconds(this.decay);
            const envelopeDuration = attackPortion + this.toSeconds(this.release);
            const sustainTime = envelopeDuration * 0.1;
            const totalDuration = envelopeDuration + sustainTime;
            // @ts-ignore
            const clone = new this.constructor(Object.assign(this.get(), {
                attack: duration * this.toSeconds(this.attack) / totalDuration,
                decay: duration * this.toSeconds(this.decay) / totalDuration,
                release: duration * this.toSeconds(this.release) / totalDuration,
                context
            }));
            clone._sig.toDestination();
            clone.triggerAttackRelease(duration * (attackPortion + sustainTime) / totalDuration, 0);
            const buffer = yield context.render();
            return buffer.getChannelData(0);
        });
    }
    dispose() {
        super.dispose();
        this._sig.dispose();
        return this;
    }
}
(0,tslib__WEBPACK_IMPORTED_MODULE_7__.__decorate)([
    (0,_core_util_Decorator__WEBPACK_IMPORTED_MODULE_6__.timeRange)(0)
], Envelope.prototype, "attack", void 0);
(0,tslib__WEBPACK_IMPORTED_MODULE_7__.__decorate)([
    (0,_core_util_Decorator__WEBPACK_IMPORTED_MODULE_6__.timeRange)(0)
], Envelope.prototype, "decay", void 0);
(0,tslib__WEBPACK_IMPORTED_MODULE_7__.__decorate)([
    (0,_core_util_Decorator__WEBPACK_IMPORTED_MODULE_6__.range)(0, 1)
], Envelope.prototype, "sustain", void 0);
(0,tslib__WEBPACK_IMPORTED_MODULE_7__.__decorate)([
    (0,_core_util_Decorator__WEBPACK_IMPORTED_MODULE_6__.timeRange)(0)
], Envelope.prototype, "release", void 0);
/**
 * Generate some complex envelope curves.
 */
const EnvelopeCurves = (() => {
    const curveLen = 128;
    let i;
    let k;
    // cosine curve
    const cosineCurve = [];
    for (i = 0; i < curveLen; i++) {
        cosineCurve[i] = Math.sin((i / (curveLen - 1)) * (Math.PI / 2));
    }
    // ripple curve
    const rippleCurve = [];
    const rippleCurveFreq = 6.4;
    for (i = 0; i < curveLen - 1; i++) {
        k = (i / (curveLen - 1));
        const sineWave = Math.sin(k * (Math.PI * 2) * rippleCurveFreq - Math.PI / 2) + 1;
        rippleCurve[i] = sineWave / 10 + k * 0.83;
    }
    rippleCurve[curveLen - 1] = 1;
    // stairs curve
    const stairsCurve = [];
    const steps = 5;
    for (i = 0; i < curveLen; i++) {
        stairsCurve[i] = Math.ceil((i / (curveLen - 1)) * steps) / steps;
    }
    // in-out easing curve
    const sineCurve = [];
    for (i = 0; i < curveLen; i++) {
        k = i / (curveLen - 1);
        sineCurve[i] = 0.5 * (1 - Math.cos(Math.PI * k));
    }
    // a bounce curve
    const bounceCurve = [];
    for (i = 0; i < curveLen; i++) {
        k = i / (curveLen - 1);
        const freq = Math.pow(k, 3) * 4 + 0.2;
        const val = Math.cos(freq * Math.PI * 2 * k);
        bounceCurve[i] = Math.abs(val * (1 - k));
    }
    /**
     * Invert a value curve to make it work for the release
     */
    function invertCurve(curve) {
        const out = new Array(curve.length);
        for (let j = 0; j < curve.length; j++) {
            out[j] = 1 - curve[j];
        }
        return out;
    }
    /**
     * reverse the curve
     */
    function reverseCurve(curve) {
        return curve.slice(0).reverse();
    }
    /**
     * attack and release curve arrays
     */
    return {
        bounce: {
            In: invertCurve(bounceCurve),
            Out: bounceCurve,
        },
        cosine: {
            In: cosineCurve,
            Out: reverseCurve(cosineCurve),
        },
        exponential: "exponential",
        linear: "linear",
        ripple: {
            In: rippleCurve,
            Out: invertCurve(rippleCurve),
        },
        sine: {
            In: sineCurve,
            Out: invertCurve(sineCurve),
        },
        step: {
            In: stairsCurve,
            Out: invertCurve(stairsCurve),
        },
    };
})();
//# sourceMappingURL=Envelope.js.map

/***/ }),

/***/ "./node_modules/tone/build/esm/component/envelope/FrequencyEnvelope.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/tone/build/esm/component/envelope/FrequencyEnvelope.js ***!
  \*****************************************************************************/
/*! namespace exports */
/*! export FrequencyEnvelope [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "FrequencyEnvelope": () => /* binding */ FrequencyEnvelope
/* harmony export */ });
/* harmony import */ var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/util/Defaults */ "./node_modules/tone/build/esm/core/util/Defaults.js");
/* harmony import */ var _Envelope__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Envelope */ "./node_modules/tone/build/esm/component/envelope/Envelope.js");
/* harmony import */ var _signal_Scale__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../signal/Scale */ "./node_modules/tone/build/esm/signal/Scale.js");
/* harmony import */ var _signal_Pow__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../signal/Pow */ "./node_modules/tone/build/esm/signal/Pow.js");
/* harmony import */ var _core_util_Debug__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../core/util/Debug */ "./node_modules/tone/build/esm/core/util/Debug.js");
;




/**
 * FrequencyEnvelope is an [[Envelope]] which ramps between [[baseFrequency]]
 * and [[octaves]]. It can also have an optional [[exponent]] to adjust the curve
 * which it ramps.
 * @example
 * const oscillator = new Tone.Oscillator().toDestination().start();
 * const freqEnv = new Tone.FrequencyEnvelope({
 * 	attack: 0.2,
 * 	baseFrequency: "C2",
 * 	octaves: 4
 * });
 * freqEnv.connect(oscillator.frequency);
 * freqEnv.triggerAttack();
 * @category Component
 */
class FrequencyEnvelope extends _Envelope__WEBPACK_IMPORTED_MODULE_1__.Envelope {
    constructor() {
        super((0,_core_util_Defaults__WEBPACK_IMPORTED_MODULE_0__.optionsFromArguments)(FrequencyEnvelope.getDefaults(), arguments, ["attack", "decay", "sustain", "release"]));
        this.name = "FrequencyEnvelope";
        const options = (0,_core_util_Defaults__WEBPACK_IMPORTED_MODULE_0__.optionsFromArguments)(FrequencyEnvelope.getDefaults(), arguments, ["attack", "decay", "sustain", "release"]);
        this._octaves = options.octaves;
        this._baseFrequency = this.toFrequency(options.baseFrequency);
        this._exponent = this.input = new _signal_Pow__WEBPACK_IMPORTED_MODULE_3__.Pow({
            context: this.context,
            value: options.exponent
        });
        this._scale = this.output = new _signal_Scale__WEBPACK_IMPORTED_MODULE_2__.Scale({
            context: this.context,
            min: this._baseFrequency,
            max: this._baseFrequency * Math.pow(2, this._octaves),
        });
        this._sig.chain(this._exponent, this._scale);
    }
    static getDefaults() {
        return Object.assign(_Envelope__WEBPACK_IMPORTED_MODULE_1__.Envelope.getDefaults(), {
            baseFrequency: 200,
            exponent: 1,
            octaves: 4,
        });
    }
    /**
     * The envelope's minimum output value. This is the value which it
     * starts at.
     */
    get baseFrequency() {
        return this._baseFrequency;
    }
    set baseFrequency(min) {
        const freq = this.toFrequency(min);
        (0,_core_util_Debug__WEBPACK_IMPORTED_MODULE_4__.assertRange)(freq, 0);
        this._baseFrequency = freq;
        this._scale.min = this._baseFrequency;
        // update the max value when the min changes
        this.octaves = this._octaves;
    }
    /**
     * The number of octaves above the baseFrequency that the
     * envelope will scale to.
     */
    get octaves() {
        return this._octaves;
    }
    set octaves(octaves) {
        (0,_core_util_Debug__WEBPACK_IMPORTED_MODULE_4__.assertRange)(octaves, 0);
        this._octaves = octaves;
        this._scale.max = this._baseFrequency * Math.pow(2, octaves);
    }
    /**
     * The envelope's exponent value.
     */
    get exponent() {
        return this._exponent.value;
    }
    set exponent(exponent) {
        this._exponent.value = exponent;
    }
    /**
     * Clean up
     */
    dispose() {
        super.dispose();
        this._exponent.dispose();
        this._scale.dispose();
        return this;
    }
}
//# sourceMappingURL=FrequencyEnvelope.js.map

/***/ }),

/***/ "./node_modules/tone/build/esm/component/filter/BiquadFilter.js":
/*!**********************************************************************!*\
  !*** ./node_modules/tone/build/esm/component/filter/BiquadFilter.js ***!
  \**********************************************************************/
/*! namespace exports */
/*! export BiquadFilter [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "BiquadFilter": () => /* binding */ BiquadFilter
/* harmony export */ });
/* harmony import */ var _core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/context/ToneAudioNode */ "./node_modules/tone/build/esm/core/context/ToneAudioNode.js");
/* harmony import */ var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core/util/Defaults */ "./node_modules/tone/build/esm/core/util/Defaults.js");
/* harmony import */ var _core_context_Param__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/context/Param */ "./node_modules/tone/build/esm/core/context/Param.js");
/* harmony import */ var _core_util_Debug__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/util/Debug */ "./node_modules/tone/build/esm/core/util/Debug.js");
;



/**
 * Thin wrapper around the native Web Audio [BiquadFilterNode](https://webaudio.github.io/web-audio-api/#biquadfilternode).
 * BiquadFilter is similar to [[Filter]] but doesn't have the option to set the "rolloff" value.
 * @category Component
 */
class BiquadFilter extends _core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_0__.ToneAudioNode {
    constructor() {
        super((0,_core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__.optionsFromArguments)(BiquadFilter.getDefaults(), arguments, ["frequency", "type"]));
        this.name = "BiquadFilter";
        const options = (0,_core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__.optionsFromArguments)(BiquadFilter.getDefaults(), arguments, ["frequency", "type"]);
        this._filter = this.context.createBiquadFilter();
        this.input = this.output = this._filter;
        this.Q = new _core_context_Param__WEBPACK_IMPORTED_MODULE_2__.Param({
            context: this.context,
            units: "number",
            value: options.Q,
            param: this._filter.Q,
        });
        this.frequency = new _core_context_Param__WEBPACK_IMPORTED_MODULE_2__.Param({
            context: this.context,
            units: "frequency",
            value: options.frequency,
            param: this._filter.frequency,
        });
        this.detune = new _core_context_Param__WEBPACK_IMPORTED_MODULE_2__.Param({
            context: this.context,
            units: "cents",
            value: options.detune,
            param: this._filter.detune,
        });
        this.gain = new _core_context_Param__WEBPACK_IMPORTED_MODULE_2__.Param({
            context: this.context,
            units: "gain",
            value: options.gain,
            param: this._filter.gain,
        });
        this.type = options.type;
    }
    static getDefaults() {
        return Object.assign(_core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_0__.ToneAudioNode.getDefaults(), {
            Q: 1,
            type: "lowpass",
            frequency: 350,
            detune: 0,
            gain: 0,
        });
    }
    /**
     * The type of this BiquadFilterNode. For a complete list of types and their attributes, see the
     * [Web Audio API](https://webaudio.github.io/web-audio-api/#dom-biquadfiltertype-lowpass)
     */
    get type() {
        return this._filter.type;
    }
    set type(type) {
        const types = ["lowpass", "highpass", "bandpass",
            "lowshelf", "highshelf", "notch", "allpass", "peaking"];
        (0,_core_util_Debug__WEBPACK_IMPORTED_MODULE_3__.assert)(types.indexOf(type) !== -1, `Invalid filter type: ${type}`);
        this._filter.type = type;
    }
    /**
     * Get the frequency response curve. This curve represents how the filter
     * responses to frequencies between 20hz-20khz.
     * @param  len The number of values to return
     * @return The frequency response curve between 20-20kHz
     */
    getFrequencyResponse(len = 128) {
        // start with all 1s
        const freqValues = new Float32Array(len);
        for (let i = 0; i < len; i++) {
            const norm = Math.pow(i / len, 2);
            const freq = norm * (20000 - 20) + 20;
            freqValues[i] = freq;
        }
        const magValues = new Float32Array(len);
        const phaseValues = new Float32Array(len);
        // clone the filter to remove any connections which may be changing the value
        const filterClone = this.context.createBiquadFilter();
        filterClone.type = this.type;
        filterClone.Q.value = this.Q.value;
        filterClone.frequency.value = this.frequency.value;
        filterClone.gain.value = this.gain.value;
        filterClone.getFrequencyResponse(freqValues, magValues, phaseValues);
        return magValues;
    }
    dispose() {
        super.dispose();
        this._filter.disconnect();
        this.Q.dispose();
        this.frequency.dispose();
        this.gain.dispose();
        this.detune.dispose();
        return this;
    }
}
//# sourceMappingURL=BiquadFilter.js.map

/***/ }),

/***/ "./node_modules/tone/build/esm/component/filter/Convolver.js":
/*!*******************************************************************!*\
  !*** ./node_modules/tone/build/esm/component/filter/Convolver.js ***!
  \*******************************************************************/
/*! namespace exports */
/*! export Convolver [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Convolver": () => /* binding */ Convolver
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! tslib */ "./node_modules/tone/node_modules/tslib/tslib.es6.js");
/* harmony import */ var _core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/context/ToneAudioNode */ "./node_modules/tone/build/esm/core/context/ToneAudioNode.js");
/* harmony import */ var _core_context_ToneAudioBuffer__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core/context/ToneAudioBuffer */ "./node_modules/tone/build/esm/core/context/ToneAudioBuffer.js");
/* harmony import */ var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/util/Defaults */ "./node_modules/tone/build/esm/core/util/Defaults.js");
/* harmony import */ var _core_context_Gain__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/context/Gain */ "./node_modules/tone/build/esm/core/context/Gain.js");
/* harmony import */ var _core_util_Interface__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../core/util/Interface */ "./node_modules/tone/build/esm/core/util/Interface.js");
;





/**
 * Convolver is a wrapper around the Native Web Audio
 * [ConvolverNode](http://webaudio.github.io/web-audio-api/#the-convolvernode-interface).
 * Convolution is useful for reverb and filter emulation. Read more about convolution reverb on
 * [Wikipedia](https://en.wikipedia.org/wiki/Convolution_reverb).
 *
 * @example
 * // initializing the convolver with an impulse response
 * const convolver = new Tone.Convolver("./path/to/ir.wav").toDestination();
 * @category Component
 */
class Convolver extends _core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_0__.ToneAudioNode {
    constructor() {
        super((0,_core_util_Defaults__WEBPACK_IMPORTED_MODULE_2__.optionsFromArguments)(Convolver.getDefaults(), arguments, ["url", "onload"]));
        this.name = "Convolver";
        /**
         * The native ConvolverNode
         */
        this._convolver = this.context.createConvolver();
        const options = (0,_core_util_Defaults__WEBPACK_IMPORTED_MODULE_2__.optionsFromArguments)(Convolver.getDefaults(), arguments, ["url", "onload"]);
        this._buffer = new _core_context_ToneAudioBuffer__WEBPACK_IMPORTED_MODULE_1__.ToneAudioBuffer(options.url, buffer => {
            this.buffer = buffer;
            options.onload();
        });
        this.input = new _core_context_Gain__WEBPACK_IMPORTED_MODULE_3__.Gain({ context: this.context });
        this.output = new _core_context_Gain__WEBPACK_IMPORTED_MODULE_3__.Gain({ context: this.context });
        // set if it's already loaded, set it immediately
        if (this._buffer.loaded) {
            this.buffer = this._buffer;
        }
        // initially set normalization
        this.normalize = options.normalize;
        // connect it up
        this.input.chain(this._convolver, this.output);
    }
    static getDefaults() {
        return Object.assign(_core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_0__.ToneAudioNode.getDefaults(), {
            normalize: true,
            onload: _core_util_Interface__WEBPACK_IMPORTED_MODULE_4__.noOp,
        });
    }
    /**
     * Load an impulse response url as an audio buffer.
     * Decodes the audio asynchronously and invokes
     * the callback once the audio buffer loads.
     * @param url The url of the buffer to load. filetype support depends on the browser.
     */
    load(url) {
        return (0,tslib__WEBPACK_IMPORTED_MODULE_5__.__awaiter)(this, void 0, void 0, function* () {
            this.buffer = yield this._buffer.load(url);
        });
    }
    /**
     * The convolver's buffer
     */
    get buffer() {
        if (this._buffer.length) {
            return this._buffer;
        }
        else {
            return null;
        }
    }
    set buffer(buffer) {
        if (buffer) {
            this._buffer.set(buffer);
        }
        // if it's already got a buffer, create a new one
        if (this._convolver.buffer) {
            // disconnect the old one
            this.input.disconnect();
            this._convolver.disconnect();
            // create and connect a new one
            this._convolver = this.context.createConvolver();
            this.input.chain(this._convolver, this.output);
        }
        const buff = this._buffer.get();
        this._convolver.buffer = buff ? buff : null;
    }
    /**
     * The normalize property of the ConvolverNode interface is a boolean that
     * controls whether the impulse response from the buffer will be scaled by
     * an equal-power normalization when the buffer attribute is set, or not.
     */
    get normalize() {
        return this._convolver.normalize;
    }
    set normalize(norm) {
        this._convolver.normalize = norm;
    }
    dispose() {
        super.dispose();
        this._buffer.dispose();
        this._convolver.disconnect();
        return this;
    }
}
//# sourceMappingURL=Convolver.js.map

/***/ }),

/***/ "./node_modules/tone/build/esm/component/filter/EQ3.js":
/*!*************************************************************!*\
  !*** ./node_modules/tone/build/esm/component/filter/EQ3.js ***!
  \*************************************************************/
/*! namespace exports */
/*! export EQ3 [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "EQ3": () => /* binding */ EQ3
/* harmony export */ });
/* harmony import */ var _core_context_Gain__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/context/Gain */ "./node_modules/tone/build/esm/core/context/Gain.js");
/* harmony import */ var _core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core/context/ToneAudioNode */ "./node_modules/tone/build/esm/core/context/ToneAudioNode.js");
/* harmony import */ var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/util/Defaults */ "./node_modules/tone/build/esm/core/util/Defaults.js");
/* harmony import */ var _core_util_Interface__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/util/Interface */ "./node_modules/tone/build/esm/core/util/Interface.js");
/* harmony import */ var _channel_MultibandSplit__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../channel/MultibandSplit */ "./node_modules/tone/build/esm/component/channel/MultibandSplit.js");
;




/**
 * EQ3 provides 3 equalizer bins: Low/Mid/High.
 * @category Component
 */
class EQ3 extends _core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_1__.ToneAudioNode {
    constructor() {
        super((0,_core_util_Defaults__WEBPACK_IMPORTED_MODULE_2__.optionsFromArguments)(EQ3.getDefaults(), arguments, ["low", "mid", "high"]));
        this.name = "EQ3";
        /**
         * the output
         */
        this.output = new _core_context_Gain__WEBPACK_IMPORTED_MODULE_0__.Gain({ context: this.context });
        this._internalChannels = [];
        const options = (0,_core_util_Defaults__WEBPACK_IMPORTED_MODULE_2__.optionsFromArguments)(EQ3.getDefaults(), arguments, ["low", "mid", "high"]);
        this.input = this._multibandSplit = new _channel_MultibandSplit__WEBPACK_IMPORTED_MODULE_4__.MultibandSplit({
            context: this.context,
            highFrequency: options.highFrequency,
            lowFrequency: options.lowFrequency,
        });
        this._lowGain = new _core_context_Gain__WEBPACK_IMPORTED_MODULE_0__.Gain({
            context: this.context,
            gain: options.low,
            units: "decibels",
        });
        this._midGain = new _core_context_Gain__WEBPACK_IMPORTED_MODULE_0__.Gain({
            context: this.context,
            gain: options.mid,
            units: "decibels",
        });
        this._highGain = new _core_context_Gain__WEBPACK_IMPORTED_MODULE_0__.Gain({
            context: this.context,
            gain: options.high,
            units: "decibels",
        });
        this.low = this._lowGain.gain;
        this.mid = this._midGain.gain;
        this.high = this._highGain.gain;
        this.Q = this._multibandSplit.Q;
        this.lowFrequency = this._multibandSplit.lowFrequency;
        this.highFrequency = this._multibandSplit.highFrequency;
        // the frequency bands
        this._multibandSplit.low.chain(this._lowGain, this.output);
        this._multibandSplit.mid.chain(this._midGain, this.output);
        this._multibandSplit.high.chain(this._highGain, this.output);
        (0,_core_util_Interface__WEBPACK_IMPORTED_MODULE_3__.readOnly)(this, ["low", "mid", "high", "lowFrequency", "highFrequency"]);
        this._internalChannels = [this._multibandSplit];
    }
    static getDefaults() {
        return Object.assign(_core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_1__.ToneAudioNode.getDefaults(), {
            high: 0,
            highFrequency: 2500,
            low: 0,
            lowFrequency: 400,
            mid: 0,
        });
    }
    /**
     * Clean up.
     */
    dispose() {
        super.dispose();
        (0,_core_util_Interface__WEBPACK_IMPORTED_MODULE_3__.writable)(this, ["low", "mid", "high", "lowFrequency", "highFrequency"]);
        this._multibandSplit.dispose();
        this.lowFrequency.dispose();
        this.highFrequency.dispose();
        this._lowGain.dispose();
        this._midGain.dispose();
        this._highGain.dispose();
        this.low.dispose();
        this.mid.dispose();
        this.high.dispose();
        this.Q.dispose();
        return this;
    }
}
//# sourceMappingURL=EQ3.js.map

/***/ }),

/***/ "./node_modules/tone/build/esm/component/filter/FeedbackCombFilter.js":
/*!****************************************************************************!*\
  !*** ./node_modules/tone/build/esm/component/filter/FeedbackCombFilter.js ***!
  \****************************************************************************/
/*! namespace exports */
/*! export FeedbackCombFilter [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "FeedbackCombFilter": () => /* binding */ FeedbackCombFilter
/* harmony export */ });
/* harmony import */ var _core_context_Gain__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/context/Gain */ "./node_modules/tone/build/esm/core/context/Gain.js");
/* harmony import */ var _core_context_Param__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core/context/Param */ "./node_modules/tone/build/esm/core/context/Param.js");
/* harmony import */ var _core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/context/ToneAudioNode */ "./node_modules/tone/build/esm/core/context/ToneAudioNode.js");
/* harmony import */ var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/util/Defaults */ "./node_modules/tone/build/esm/core/util/Defaults.js");
/* harmony import */ var _core_util_Interface__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../core/util/Interface */ "./node_modules/tone/build/esm/core/util/Interface.js");
/* harmony import */ var _core_worklet_ToneAudioWorklet__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../core/worklet/ToneAudioWorklet */ "./node_modules/tone/build/esm/core/worklet/ToneAudioWorklet.js");
/* harmony import */ var _FeedbackCombFilter_worklet__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./FeedbackCombFilter.worklet */ "./node_modules/tone/build/esm/component/filter/FeedbackCombFilter.worklet.js");
;






/**
 * Comb filters are basic building blocks for physical modeling. Read more
 * about comb filters on [CCRMA's website](https://ccrma.stanford.edu/~jos/pasp/Feedback_Comb_Filters.html).
 *
 * This comb filter is implemented with the AudioWorkletNode which allows it to have feedback delays less than the
 * Web Audio processing block of 128 samples. There is a polyfill for browsers that don't yet support the
 * AudioWorkletNode, but it will add some latency and have slower performance than the AudioWorkletNode.
 * @category Component
 */
class FeedbackCombFilter extends _core_worklet_ToneAudioWorklet__WEBPACK_IMPORTED_MODULE_5__.ToneAudioWorklet {
    constructor() {
        super((0,_core_util_Defaults__WEBPACK_IMPORTED_MODULE_3__.optionsFromArguments)(FeedbackCombFilter.getDefaults(), arguments, ["delayTime", "resonance"]));
        this.name = "FeedbackCombFilter";
        const options = (0,_core_util_Defaults__WEBPACK_IMPORTED_MODULE_3__.optionsFromArguments)(FeedbackCombFilter.getDefaults(), arguments, ["delayTime", "resonance"]);
        this.input = new _core_context_Gain__WEBPACK_IMPORTED_MODULE_0__.Gain({ context: this.context });
        this.output = new _core_context_Gain__WEBPACK_IMPORTED_MODULE_0__.Gain({ context: this.context });
        this.delayTime = new _core_context_Param__WEBPACK_IMPORTED_MODULE_1__.Param({
            context: this.context,
            value: options.delayTime,
            units: "time",
            minValue: 0,
            maxValue: 1,
            param: this._dummyParam,
            swappable: true,
        });
        this.resonance = new _core_context_Param__WEBPACK_IMPORTED_MODULE_1__.Param({
            context: this.context,
            value: options.resonance,
            units: "normalRange",
            param: this._dummyParam,
            swappable: true,
        });
        (0,_core_util_Interface__WEBPACK_IMPORTED_MODULE_4__.readOnly)(this, ["resonance", "delayTime"]);
    }
    _audioWorkletName() {
        return _FeedbackCombFilter_worklet__WEBPACK_IMPORTED_MODULE_6__.workletName;
    }
    /**
     * The default parameters
     */
    static getDefaults() {
        return Object.assign(_core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_2__.ToneAudioNode.getDefaults(), {
            delayTime: 0.1,
            resonance: 0.5,
        });
    }
    onReady(node) {
        (0,_core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_2__.connectSeries)(this.input, node, this.output);
        const delayTime = node.parameters.get("delayTime");
        ;
        this.delayTime.setParam(delayTime);
        const feedback = node.parameters.get("feedback");
        ;
        this.resonance.setParam(feedback);
    }
    dispose() {
        super.dispose();
        this.input.dispose();
        this.output.dispose();
        this.delayTime.dispose();
        this.resonance.dispose();
        return this;
    }
}
//# sourceMappingURL=FeedbackCombFilter.js.map

/***/ }),

/***/ "./node_modules/tone/build/esm/component/filter/FeedbackCombFilter.worklet.js":
/*!************************************************************************************!*\
  !*** ./node_modules/tone/build/esm/component/filter/FeedbackCombFilter.worklet.js ***!
  \************************************************************************************/
/*! namespace exports */
/*! export workletName [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "workletName": () => /* binding */ workletName
/* harmony export */ });
/* harmony import */ var _core_worklet_SingleIOProcessor_worklet__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/worklet/SingleIOProcessor.worklet */ "./node_modules/tone/build/esm/core/worklet/SingleIOProcessor.worklet.js");
/* harmony import */ var _core_worklet_DelayLine_worklet__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core/worklet/DelayLine.worklet */ "./node_modules/tone/build/esm/core/worklet/DelayLine.worklet.js");
/* harmony import */ var _core_worklet_WorkletGlobalScope__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/worklet/WorkletGlobalScope */ "./node_modules/tone/build/esm/core/worklet/WorkletGlobalScope.js");
;


const workletName = "feedback-comb-filter";
const feedbackCombFilter = /* javascript */ `
	class FeedbackCombFilterWorklet extends SingleIOProcessor {

		constructor(options) {
			super(options);
			this.delayLine = new DelayLine(this.sampleRate, options.channelCount || 2);
		}

		static get parameterDescriptors() {
			return [{
				name: "delayTime",
				defaultValue: 0.1,
				minValue: 0,
				maxValue: 1,
				automationRate: "k-rate"
			}, {
				name: "feedback",
				defaultValue: 0.5,
				minValue: 0,
				maxValue: 0.9999,
				automationRate: "k-rate"
			}];
		}

		generate(input, channel, parameters) {
			const delayedSample = this.delayLine.get(channel, parameters.delayTime * this.sampleRate);
			this.delayLine.push(channel, input + delayedSample * parameters.feedback);
			return delayedSample;
		}
	}
`;
(0,_core_worklet_WorkletGlobalScope__WEBPACK_IMPORTED_MODULE_2__.registerProcessor)(workletName, feedbackCombFilter);
//# sourceMappingURL=FeedbackCombFilter.worklet.js.map

/***/ }),

/***/ "./node_modules/tone/build/esm/component/filter/Filter.js":
/*!****************************************************************!*\
  !*** ./node_modules/tone/build/esm/component/filter/Filter.js ***!
  \****************************************************************/
/*! namespace exports */
/*! export Filter [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Filter": () => /* binding */ Filter
/* harmony export */ });
/* harmony import */ var _core_context_Gain__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/context/Gain */ "./node_modules/tone/build/esm/core/context/Gain.js");
/* harmony import */ var _core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core/context/ToneAudioNode */ "./node_modules/tone/build/esm/core/context/ToneAudioNode.js");
/* harmony import */ var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/util/Defaults */ "./node_modules/tone/build/esm/core/util/Defaults.js");
/* harmony import */ var _core_util_Interface__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/util/Interface */ "./node_modules/tone/build/esm/core/util/Interface.js");
/* harmony import */ var _core_util_TypeCheck__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../core/util/TypeCheck */ "./node_modules/tone/build/esm/core/util/TypeCheck.js");
/* harmony import */ var _signal_Signal__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../signal/Signal */ "./node_modules/tone/build/esm/signal/Signal.js");
/* harmony import */ var _core_util_Debug__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../core/util/Debug */ "./node_modules/tone/build/esm/core/util/Debug.js");
/* harmony import */ var _BiquadFilter__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./BiquadFilter */ "./node_modules/tone/build/esm/component/filter/BiquadFilter.js");
;







/**
 * Tone.Filter is a filter which allows for all of the same native methods
 * as the [BiquadFilterNode](http://webaudio.github.io/web-audio-api/#the-biquadfilternode-interface).
 * Tone.Filter has the added ability to set the filter rolloff at -12
 * (default), -24 and -48.
 * @example
 * const filter = new Tone.Filter(1500, "highpass").toDestination();
 * filter.frequency.rampTo(20000, 10);
 * const noise = new Tone.Noise().connect(filter).start();
 * @category Component
 */
class Filter extends _core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_1__.ToneAudioNode {
    constructor() {
        super((0,_core_util_Defaults__WEBPACK_IMPORTED_MODULE_2__.optionsFromArguments)(Filter.getDefaults(), arguments, ["frequency", "type", "rolloff"]));
        this.name = "Filter";
        this.input = new _core_context_Gain__WEBPACK_IMPORTED_MODULE_0__.Gain({ context: this.context });
        this.output = new _core_context_Gain__WEBPACK_IMPORTED_MODULE_0__.Gain({ context: this.context });
        this._filters = [];
        const options = (0,_core_util_Defaults__WEBPACK_IMPORTED_MODULE_2__.optionsFromArguments)(Filter.getDefaults(), arguments, ["frequency", "type", "rolloff"]);
        this._filters = [];
        this.Q = new _signal_Signal__WEBPACK_IMPORTED_MODULE_5__.Signal({
            context: this.context,
            units: "positive",
            value: options.Q,
        });
        this.frequency = new _signal_Signal__WEBPACK_IMPORTED_MODULE_5__.Signal({
            context: this.context,
            units: "frequency",
            value: options.frequency,
        });
        this.detune = new _signal_Signal__WEBPACK_IMPORTED_MODULE_5__.Signal({
            context: this.context,
            units: "cents",
            value: options.detune,
        });
        this.gain = new _signal_Signal__WEBPACK_IMPORTED_MODULE_5__.Signal({
            context: this.context,
            units: "decibels",
            value: options.gain,
        });
        this._type = options.type;
        this.rolloff = options.rolloff;
        (0,_core_util_Interface__WEBPACK_IMPORTED_MODULE_3__.readOnly)(this, ["detune", "frequency", "gain", "Q"]);
    }
    static getDefaults() {
        return Object.assign(_core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_1__.ToneAudioNode.getDefaults(), {
            Q: 1,
            detune: 0,
            frequency: 350,
            gain: 0,
            rolloff: -12,
            type: "lowpass",
        });
    }
    /**
     * The type of the filter. Types: "lowpass", "highpass",
     * "bandpass", "lowshelf", "highshelf", "notch", "allpass", or "peaking".
     */
    get type() {
        return this._type;
    }
    set type(type) {
        const types = ["lowpass", "highpass", "bandpass",
            "lowshelf", "highshelf", "notch", "allpass", "peaking"];
        (0,_core_util_Debug__WEBPACK_IMPORTED_MODULE_6__.assert)(types.indexOf(type) !== -1, `Invalid filter type: ${type}`);
        this._type = type;
        this._filters.forEach(filter => filter.type = type);
    }
    /**
     * The rolloff of the filter which is the drop in db
     * per octave. Implemented internally by cascading filters.
     * Only accepts the values -12, -24, -48 and -96.
     */
    get rolloff() {
        return this._rolloff;
    }
    set rolloff(rolloff) {
        const rolloffNum = (0,_core_util_TypeCheck__WEBPACK_IMPORTED_MODULE_4__.isNumber)(rolloff) ? rolloff : parseInt(rolloff, 10);
        const possibilities = [-12, -24, -48, -96];
        let cascadingCount = possibilities.indexOf(rolloffNum);
        // check the rolloff is valid
        (0,_core_util_Debug__WEBPACK_IMPORTED_MODULE_6__.assert)(cascadingCount !== -1, `rolloff can only be ${possibilities.join(", ")}`);
        cascadingCount += 1;
        this._rolloff = rolloffNum;
        this.input.disconnect();
        this._filters.forEach(filter => filter.disconnect());
        this._filters = new Array(cascadingCount);
        for (let count = 0; count < cascadingCount; count++) {
            const filter = new _BiquadFilter__WEBPACK_IMPORTED_MODULE_7__.BiquadFilter({
                context: this.context,
            });
            filter.type = this._type;
            this.frequency.connect(filter.frequency);
            this.detune.connect(filter.detune);
            this.Q.connect(filter.Q);
            this.gain.connect(filter.gain);
            this._filters[count] = filter;
        }
        this._internalChannels = this._filters;
        (0,_core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_1__.connectSeries)(this.input, ...this._internalChannels, this.output);
    }
    /**
     * Get the frequency response curve. This curve represents how the filter
     * responses to frequencies between 20hz-20khz.
     * @param  len The number of values to return
     * @return The frequency response curve between 20-20kHz
     */
    getFrequencyResponse(len = 128) {
        const filterClone = new _BiquadFilter__WEBPACK_IMPORTED_MODULE_7__.BiquadFilter({
            frequency: this.frequency.value,
            gain: this.gain.value,
            Q: this.Q.value,
            type: this._type,
            detune: this.detune.value,
        });
        // start with all 1s
        const totalResponse = new Float32Array(len).map(() => 1);
        this._filters.forEach(() => {
            const response = filterClone.getFrequencyResponse(len);
            response.forEach((val, i) => totalResponse[i] *= val);
        });
        filterClone.dispose();
        return totalResponse;
    }
    /**
     * Clean up.
     */
    dispose() {
        super.dispose();
        this._filters.forEach(filter => {
            filter.dispose();
        });
        (0,_core_util_Interface__WEBPACK_IMPORTED_MODULE_3__.writable)(this, ["detune", "frequency", "gain", "Q"]);
        this.frequency.dispose();
        this.Q.dispose();
        this.detune.dispose();
        this.gain.dispose();
        return this;
    }
}
//# sourceMappingURL=Filter.js.map

/***/ }),

/***/ "./node_modules/tone/build/esm/component/filter/LowpassCombFilter.js":
/*!***************************************************************************!*\
  !*** ./node_modules/tone/build/esm/component/filter/LowpassCombFilter.js ***!
  \***************************************************************************/
/*! namespace exports */
/*! export LowpassCombFilter [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "LowpassCombFilter": () => /* binding */ LowpassCombFilter
/* harmony export */ });
/* harmony import */ var _core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/context/ToneAudioNode */ "./node_modules/tone/build/esm/core/context/ToneAudioNode.js");
/* harmony import */ var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core/util/Defaults */ "./node_modules/tone/build/esm/core/util/Defaults.js");
/* harmony import */ var _FeedbackCombFilter__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./FeedbackCombFilter */ "./node_modules/tone/build/esm/component/filter/FeedbackCombFilter.js");
/* harmony import */ var _OnePoleFilter__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./OnePoleFilter */ "./node_modules/tone/build/esm/component/filter/OnePoleFilter.js");
;



/**
 * A lowpass feedback comb filter. It is similar to
 * [[FeedbackCombFilter]], but includes a lowpass filter.
 * @category Component
 */
class LowpassCombFilter extends _core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_0__.ToneAudioNode {
    constructor() {
        super((0,_core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__.optionsFromArguments)(LowpassCombFilter.getDefaults(), arguments, ["delayTime", "resonance", "dampening"]));
        this.name = "LowpassCombFilter";
        const options = (0,_core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__.optionsFromArguments)(LowpassCombFilter.getDefaults(), arguments, ["delayTime", "resonance", "dampening"]);
        this._combFilter = this.output = new _FeedbackCombFilter__WEBPACK_IMPORTED_MODULE_2__.FeedbackCombFilter({
            context: this.context,
            delayTime: options.delayTime,
            resonance: options.resonance,
        });
        this.delayTime = this._combFilter.delayTime;
        this.resonance = this._combFilter.resonance;
        this._lowpass = this.input = new _OnePoleFilter__WEBPACK_IMPORTED_MODULE_3__.OnePoleFilter({
            context: this.context,
            frequency: options.dampening,
            type: "lowpass",
        });
        // connections
        this._lowpass.connect(this._combFilter);
    }
    static getDefaults() {
        return Object.assign(_core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_0__.ToneAudioNode.getDefaults(), {
            dampening: 3000,
            delayTime: 0.1,
            resonance: 0.5,
        });
    }
    /**
     * The dampening control of the feedback
     */
    get dampening() {
        return this._lowpass.frequency;
    }
    set dampening(fq) {
        this._lowpass.frequency = fq;
    }
    dispose() {
        super.dispose();
        this._combFilter.dispose();
        this._lowpass.dispose();
        return this;
    }
}
//# sourceMappingURL=LowpassCombFilter.js.map

/***/ }),

/***/ "./node_modules/tone/build/esm/component/filter/OnePoleFilter.js":
/*!***********************************************************************!*\
  !*** ./node_modules/tone/build/esm/component/filter/OnePoleFilter.js ***!
  \***********************************************************************/
/*! namespace exports */
/*! export OnePoleFilter [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "OnePoleFilter": () => /* binding */ OnePoleFilter
/* harmony export */ });
/* harmony import */ var _core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/context/ToneAudioNode */ "./node_modules/tone/build/esm/core/context/ToneAudioNode.js");
/* harmony import */ var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core/util/Defaults */ "./node_modules/tone/build/esm/core/util/Defaults.js");
/* harmony import */ var _core_context_Gain__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/context/Gain */ "./node_modules/tone/build/esm/core/context/Gain.js");
;


/**
 * A one pole filter with 6db-per-octave rolloff. Either "highpass" or "lowpass".
 * Note that changing the type or frequency may result in a discontinuity which
 * can sound like a click or pop.
 * References:
 * * http://www.earlevel.com/main/2012/12/15/a-one-pole-filter/
 * * http://www.dspguide.com/ch19/2.htm
 * * https://github.com/vitaliy-bobrov/js-rocks/blob/master/src/app/audio/effects/one-pole-filters.ts
 * @category Component
 */
class OnePoleFilter extends _core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_0__.ToneAudioNode {
    constructor() {
        super((0,_core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__.optionsFromArguments)(OnePoleFilter.getDefaults(), arguments, ["frequency", "type"]));
        this.name = "OnePoleFilter";
        const options = (0,_core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__.optionsFromArguments)(OnePoleFilter.getDefaults(), arguments, ["frequency", "type"]);
        this._frequency = options.frequency;
        this._type = options.type;
        this.input = new _core_context_Gain__WEBPACK_IMPORTED_MODULE_2__.Gain({ context: this.context });
        this.output = new _core_context_Gain__WEBPACK_IMPORTED_MODULE_2__.Gain({ context: this.context });
        this._createFilter();
    }
    static getDefaults() {
        return Object.assign(_core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_0__.ToneAudioNode.getDefaults(), {
            frequency: 880,
            type: "lowpass"
        });
    }
    /**
     * Create a filter and dispose the old one
     */
    _createFilter() {
        const oldFilter = this._filter;
        const freq = this.toFrequency(this._frequency);
        const t = 1 / (2 * Math.PI * freq);
        if (this._type === "lowpass") {
            const a0 = 1 / (t * this.context.sampleRate);
            const b1 = a0 - 1;
            this._filter = this.context.createIIRFilter([a0, 0], [1, b1]);
        }
        else {
            const b1 = 1 / (t * this.context.sampleRate) - 1;
            this._filter = this.context.createIIRFilter([1, -1], [1, b1]);
        }
        this.input.chain(this._filter, this.output);
        if (oldFilter) {
            // dispose it on the next block
            this.context.setTimeout(() => {
                if (!this.disposed) {
                    this.input.disconnect(oldFilter);
                    oldFilter.disconnect();
                }
            }, this.blockTime);
        }
    }
    /**
     * The frequency value.
     */
    get frequency() {
        return this._frequency;
    }
    set frequency(fq) {
        this._frequency = fq;
        this._createFilter();
    }
    /**
     * The OnePole Filter type, either "highpass" or "lowpass"
     */
    get type() {
        return this._type;
    }
    set type(t) {
        this._type = t;
        this._createFilter();
    }
    /**
     * Get the frequency response curve. This curve represents how the filter
     * responses to frequencies between 20hz-20khz.
     * @param  len The number of values to return
     * @return The frequency response curve between 20-20kHz
     */
    getFrequencyResponse(len = 128) {
        const freqValues = new Float32Array(len);
        for (let i = 0; i < len; i++) {
            const norm = Math.pow(i / len, 2);
            const freq = norm * (20000 - 20) + 20;
            freqValues[i] = freq;
        }
        const magValues = new Float32Array(len);
        const phaseValues = new Float32Array(len);
        this._filter.getFrequencyResponse(freqValues, magValues, phaseValues);
        return magValues;
    }
    dispose() {
        super.dispose();
        this.input.dispose();
        this.output.dispose();
        this._filter.disconnect();
        return this;
    }
}
//# sourceMappingURL=OnePoleFilter.js.map

/***/ }),

/***/ "./node_modules/tone/build/esm/component/filter/PhaseShiftAllpass.js":
/*!***************************************************************************!*\
  !*** ./node_modules/tone/build/esm/component/filter/PhaseShiftAllpass.js ***!
  \***************************************************************************/
/*! namespace exports */
/*! export PhaseShiftAllpass [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "PhaseShiftAllpass": () => /* binding */ PhaseShiftAllpass
/* harmony export */ });
/* harmony import */ var _core_context_Gain__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/context/Gain */ "./node_modules/tone/build/esm/core/context/Gain.js");
/* harmony import */ var _core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core/context/ToneAudioNode */ "./node_modules/tone/build/esm/core/context/ToneAudioNode.js");
;

/**
 * PhaseShiftAllpass is an very efficient implementation of a Hilbert Transform
 * using two Allpass filter banks whose outputs have a phase difference of 90°.
 * Here the `offset90` phase is offset by +90° in relation to `output`.
 * Coefficients and structure was developed by Olli Niemitalo.
 * For more details see: http://yehar.com/blog/?p=368
 * @category Component
 */
class PhaseShiftAllpass extends _core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_1__.ToneAudioNode {
    constructor(options) {
        super(options);
        this.name = "PhaseShiftAllpass";
        this.input = new _core_context_Gain__WEBPACK_IMPORTED_MODULE_0__.Gain({ context: this.context });
        /**
         * The phase shifted output
         */
        this.output = new _core_context_Gain__WEBPACK_IMPORTED_MODULE_0__.Gain({ context: this.context });
        /**
         * The PhaseShifted allpass output
         */
        this.offset90 = new _core_context_Gain__WEBPACK_IMPORTED_MODULE_0__.Gain({ context: this.context });
        const allpassBank1Values = [0.6923878, 0.9360654322959, 0.9882295226860, 0.9987488452737];
        const allpassBank2Values = [0.4021921162426, 0.8561710882420, 0.9722909545651, 0.9952884791278];
        this._bank0 = this._createAllPassFilterBank(allpassBank1Values);
        this._bank1 = this._createAllPassFilterBank(allpassBank2Values);
        this._oneSampleDelay = this.context.createIIRFilter([0.0, 1.0], [1.0, 0.0]);
        // connect Allpass filter banks
        (0,_core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_1__.connectSeries)(this.input, ...this._bank0, this._oneSampleDelay, this.output);
        (0,_core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_1__.connectSeries)(this.input, ...this._bank1, this.offset90);
    }
    /**
     * Create all of the IIR filters from an array of values using the coefficient calculation.
     */
    _createAllPassFilterBank(bankValues) {
        const nodes = bankValues.map(value => {
            const coefficients = [[value * value, 0, -1], [1, 0, -(value * value)]];
            return this.context.createIIRFilter(coefficients[0], coefficients[1]);
        });
        return nodes;
    }
    dispose() {
        super.dispose();
        this.input.dispose();
        this.output.dispose();
        this.offset90.dispose();
        this._bank0.forEach(f => f.disconnect());
        this._bank1.forEach(f => f.disconnect());
        this._oneSampleDelay.disconnect();
        return this;
    }
}
//# sourceMappingURL=PhaseShiftAllpass.js.map

/***/ }),

/***/ "./node_modules/tone/build/esm/component/index.js":
/*!********************************************************!*\
  !*** ./node_modules/tone/build/esm/component/index.js ***!
  \********************************************************/
/*! namespace exports */
/*! export AmplitudeEnvelope [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/component/envelope/AmplitudeEnvelope.js .AmplitudeEnvelope */
/*! export Analyser [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/component/analysis/Analyser.js .Analyser */
/*! export BiquadFilter [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/component/filter/BiquadFilter.js .BiquadFilter */
/*! export Channel [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/component/channel/Channel.js .Channel */
/*! export Compressor [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/component/dynamics/Compressor.js .Compressor */
/*! export Convolver [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/component/filter/Convolver.js .Convolver */
/*! export CrossFade [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/component/channel/CrossFade.js .CrossFade */
/*! export DCMeter [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/component/analysis/DCMeter.js .DCMeter */
/*! export EQ3 [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/component/filter/EQ3.js .EQ3 */
/*! export Envelope [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/component/envelope/Envelope.js .Envelope */
/*! export FFT [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/component/analysis/FFT.js .FFT */
/*! export FeedbackCombFilter [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/component/filter/FeedbackCombFilter.js .FeedbackCombFilter */
/*! export Filter [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/component/filter/Filter.js .Filter */
/*! export Follower [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/component/analysis/Follower.js .Follower */
/*! export FrequencyEnvelope [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/component/envelope/FrequencyEnvelope.js .FrequencyEnvelope */
/*! export Gate [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/component/dynamics/Gate.js .Gate */
/*! export Limiter [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/component/dynamics/Limiter.js .Limiter */
/*! export LowpassCombFilter [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/component/filter/LowpassCombFilter.js .LowpassCombFilter */
/*! export Merge [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/component/channel/Merge.js .Merge */
/*! export Meter [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/component/analysis/Meter.js .Meter */
/*! export MidSideCompressor [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/component/dynamics/MidSideCompressor.js .MidSideCompressor */
/*! export MidSideMerge [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/component/channel/MidSideMerge.js .MidSideMerge */
/*! export MidSideSplit [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/component/channel/MidSideSplit.js .MidSideSplit */
/*! export MultibandCompressor [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/component/dynamics/MultibandCompressor.js .MultibandCompressor */
/*! export MultibandSplit [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/component/channel/MultibandSplit.js .MultibandSplit */
/*! export OnePoleFilter [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/component/filter/OnePoleFilter.js .OnePoleFilter */
/*! export PanVol [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/component/channel/PanVol.js .PanVol */
/*! export Panner [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/component/channel/Panner.js .Panner */
/*! export Panner3D [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/component/channel/Panner3D.js .Panner3D */
/*! export Recorder [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/component/channel/Recorder.js .Recorder */
/*! export Solo [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/component/channel/Solo.js .Solo */
/*! export Split [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/component/channel/Split.js .Split */
/*! export Volume [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/component/channel/Volume.js .Volume */
/*! export Waveform [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/component/analysis/Waveform.js .Waveform */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_exports__, __webpack_require__.d, __webpack_require__.r, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Analyser": () => /* reexport safe */ _analysis_Analyser__WEBPACK_IMPORTED_MODULE_0__.Analyser,
/* harmony export */   "Meter": () => /* reexport safe */ _analysis_Meter__WEBPACK_IMPORTED_MODULE_1__.Meter,
/* harmony export */   "FFT": () => /* reexport safe */ _analysis_FFT__WEBPACK_IMPORTED_MODULE_2__.FFT,
/* harmony export */   "DCMeter": () => /* reexport safe */ _analysis_DCMeter__WEBPACK_IMPORTED_MODULE_3__.DCMeter,
/* harmony export */   "Waveform": () => /* reexport safe */ _analysis_Waveform__WEBPACK_IMPORTED_MODULE_4__.Waveform,
/* harmony export */   "Follower": () => /* reexport safe */ _analysis_Follower__WEBPACK_IMPORTED_MODULE_5__.Follower,
/* harmony export */   "Channel": () => /* reexport safe */ _channel_Channel__WEBPACK_IMPORTED_MODULE_6__.Channel,
/* harmony export */   "CrossFade": () => /* reexport safe */ _channel_CrossFade__WEBPACK_IMPORTED_MODULE_7__.CrossFade,
/* harmony export */   "Merge": () => /* reexport safe */ _channel_Merge__WEBPACK_IMPORTED_MODULE_8__.Merge,
/* harmony export */   "MidSideMerge": () => /* reexport safe */ _channel_MidSideMerge__WEBPACK_IMPORTED_MODULE_9__.MidSideMerge,
/* harmony export */   "MidSideSplit": () => /* reexport safe */ _channel_MidSideSplit__WEBPACK_IMPORTED_MODULE_10__.MidSideSplit,
/* harmony export */   "MultibandSplit": () => /* reexport safe */ _channel_MultibandSplit__WEBPACK_IMPORTED_MODULE_11__.MultibandSplit,
/* harmony export */   "Panner": () => /* reexport safe */ _channel_Panner__WEBPACK_IMPORTED_MODULE_12__.Panner,
/* harmony export */   "Panner3D": () => /* reexport safe */ _channel_Panner3D__WEBPACK_IMPORTED_MODULE_13__.Panner3D,
/* harmony export */   "PanVol": () => /* reexport safe */ _channel_PanVol__WEBPACK_IMPORTED_MODULE_14__.PanVol,
/* harmony export */   "Recorder": () => /* reexport safe */ _channel_Recorder__WEBPACK_IMPORTED_MODULE_15__.Recorder,
/* harmony export */   "Solo": () => /* reexport safe */ _channel_Solo__WEBPACK_IMPORTED_MODULE_16__.Solo,
/* harmony export */   "Split": () => /* reexport safe */ _channel_Split__WEBPACK_IMPORTED_MODULE_17__.Split,
/* harmony export */   "Volume": () => /* reexport safe */ _channel_Volume__WEBPACK_IMPORTED_MODULE_18__.Volume,
/* harmony export */   "Compressor": () => /* reexport safe */ _dynamics_Compressor__WEBPACK_IMPORTED_MODULE_19__.Compressor,
/* harmony export */   "Gate": () => /* reexport safe */ _dynamics_Gate__WEBPACK_IMPORTED_MODULE_20__.Gate,
/* harmony export */   "Limiter": () => /* reexport safe */ _dynamics_Limiter__WEBPACK_IMPORTED_MODULE_21__.Limiter,
/* harmony export */   "MidSideCompressor": () => /* reexport safe */ _dynamics_MidSideCompressor__WEBPACK_IMPORTED_MODULE_22__.MidSideCompressor,
/* harmony export */   "MultibandCompressor": () => /* reexport safe */ _dynamics_MultibandCompressor__WEBPACK_IMPORTED_MODULE_23__.MultibandCompressor,
/* harmony export */   "AmplitudeEnvelope": () => /* reexport safe */ _envelope_AmplitudeEnvelope__WEBPACK_IMPORTED_MODULE_24__.AmplitudeEnvelope,
/* harmony export */   "Envelope": () => /* reexport safe */ _envelope_Envelope__WEBPACK_IMPORTED_MODULE_25__.Envelope,
/* harmony export */   "FrequencyEnvelope": () => /* reexport safe */ _envelope_FrequencyEnvelope__WEBPACK_IMPORTED_MODULE_26__.FrequencyEnvelope,
/* harmony export */   "EQ3": () => /* reexport safe */ _filter_EQ3__WEBPACK_IMPORTED_MODULE_27__.EQ3,
/* harmony export */   "Filter": () => /* reexport safe */ _filter_Filter__WEBPACK_IMPORTED_MODULE_28__.Filter,
/* harmony export */   "OnePoleFilter": () => /* reexport safe */ _filter_OnePoleFilter__WEBPACK_IMPORTED_MODULE_29__.OnePoleFilter,
/* harmony export */   "FeedbackCombFilter": () => /* reexport safe */ _filter_FeedbackCombFilter__WEBPACK_IMPORTED_MODULE_30__.FeedbackCombFilter,
/* harmony export */   "LowpassCombFilter": () => /* reexport safe */ _filter_LowpassCombFilter__WEBPACK_IMPORTED_MODULE_31__.LowpassCombFilter,
/* harmony export */   "Convolver": () => /* reexport safe */ _filter_Convolver__WEBPACK_IMPORTED_MODULE_32__.Convolver,
/* harmony export */   "BiquadFilter": () => /* reexport safe */ _filter_BiquadFilter__WEBPACK_IMPORTED_MODULE_33__.BiquadFilter
/* harmony export */ });
/* harmony import */ var _analysis_Analyser__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./analysis/Analyser */ "./node_modules/tone/build/esm/component/analysis/Analyser.js");
/* harmony import */ var _analysis_Meter__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./analysis/Meter */ "./node_modules/tone/build/esm/component/analysis/Meter.js");
/* harmony import */ var _analysis_FFT__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./analysis/FFT */ "./node_modules/tone/build/esm/component/analysis/FFT.js");
/* harmony import */ var _analysis_DCMeter__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./analysis/DCMeter */ "./node_modules/tone/build/esm/component/analysis/DCMeter.js");
/* harmony import */ var _analysis_Waveform__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./analysis/Waveform */ "./node_modules/tone/build/esm/component/analysis/Waveform.js");
/* harmony import */ var _analysis_Follower__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./analysis/Follower */ "./node_modules/tone/build/esm/component/analysis/Follower.js");
/* harmony import */ var _channel_Channel__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./channel/Channel */ "./node_modules/tone/build/esm/component/channel/Channel.js");
/* harmony import */ var _channel_CrossFade__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./channel/CrossFade */ "./node_modules/tone/build/esm/component/channel/CrossFade.js");
/* harmony import */ var _channel_Merge__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./channel/Merge */ "./node_modules/tone/build/esm/component/channel/Merge.js");
/* harmony import */ var _channel_MidSideMerge__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./channel/MidSideMerge */ "./node_modules/tone/build/esm/component/channel/MidSideMerge.js");
/* harmony import */ var _channel_MidSideSplit__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./channel/MidSideSplit */ "./node_modules/tone/build/esm/component/channel/MidSideSplit.js");
/* harmony import */ var _channel_MultibandSplit__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./channel/MultibandSplit */ "./node_modules/tone/build/esm/component/channel/MultibandSplit.js");
/* harmony import */ var _channel_Panner__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./channel/Panner */ "./node_modules/tone/build/esm/component/channel/Panner.js");
/* harmony import */ var _channel_Panner3D__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./channel/Panner3D */ "./node_modules/tone/build/esm/component/channel/Panner3D.js");
/* harmony import */ var _channel_PanVol__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./channel/PanVol */ "./node_modules/tone/build/esm/component/channel/PanVol.js");
/* harmony import */ var _channel_Recorder__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./channel/Recorder */ "./node_modules/tone/build/esm/component/channel/Recorder.js");
/* harmony import */ var _channel_Solo__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./channel/Solo */ "./node_modules/tone/build/esm/component/channel/Solo.js");
/* harmony import */ var _channel_Split__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./channel/Split */ "./node_modules/tone/build/esm/component/channel/Split.js");
/* harmony import */ var _channel_Volume__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./channel/Volume */ "./node_modules/tone/build/esm/component/channel/Volume.js");
/* harmony import */ var _dynamics_Compressor__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./dynamics/Compressor */ "./node_modules/tone/build/esm/component/dynamics/Compressor.js");
/* harmony import */ var _dynamics_Gate__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./dynamics/Gate */ "./node_modules/tone/build/esm/component/dynamics/Gate.js");
/* harmony import */ var _dynamics_Limiter__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./dynamics/Limiter */ "./node_modules/tone/build/esm/component/dynamics/Limiter.js");
/* harmony import */ var _dynamics_MidSideCompressor__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ./dynamics/MidSideCompressor */ "./node_modules/tone/build/esm/component/dynamics/MidSideCompressor.js");
/* harmony import */ var _dynamics_MultibandCompressor__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ./dynamics/MultibandCompressor */ "./node_modules/tone/build/esm/component/dynamics/MultibandCompressor.js");
/* harmony import */ var _envelope_AmplitudeEnvelope__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ./envelope/AmplitudeEnvelope */ "./node_modules/tone/build/esm/component/envelope/AmplitudeEnvelope.js");
/* harmony import */ var _envelope_Envelope__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ./envelope/Envelope */ "./node_modules/tone/build/esm/component/envelope/Envelope.js");
/* harmony import */ var _envelope_FrequencyEnvelope__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ./envelope/FrequencyEnvelope */ "./node_modules/tone/build/esm/component/envelope/FrequencyEnvelope.js");
/* harmony import */ var _filter_EQ3__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! ./filter/EQ3 */ "./node_modules/tone/build/esm/component/filter/EQ3.js");
/* harmony import */ var _filter_Filter__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! ./filter/Filter */ "./node_modules/tone/build/esm/component/filter/Filter.js");
/* harmony import */ var _filter_OnePoleFilter__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! ./filter/OnePoleFilter */ "./node_modules/tone/build/esm/component/filter/OnePoleFilter.js");
/* harmony import */ var _filter_FeedbackCombFilter__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(/*! ./filter/FeedbackCombFilter */ "./node_modules/tone/build/esm/component/filter/FeedbackCombFilter.js");
/* harmony import */ var _filter_LowpassCombFilter__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(/*! ./filter/LowpassCombFilter */ "./node_modules/tone/build/esm/component/filter/LowpassCombFilter.js");
/* harmony import */ var _filter_Convolver__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(/*! ./filter/Convolver */ "./node_modules/tone/build/esm/component/filter/Convolver.js");
/* harmony import */ var _filter_BiquadFilter__WEBPACK_IMPORTED_MODULE_33__ = __webpack_require__(/*! ./filter/BiquadFilter */ "./node_modules/tone/build/esm/component/filter/BiquadFilter.js");


































//# sourceMappingURL=index.js.map

/***/ }),

/***/ "./node_modules/tone/build/esm/core/Global.js":
/*!****************************************************!*\
  !*** ./node_modules/tone/build/esm/core/Global.js ***!
  \****************************************************/
/*! namespace exports */
/*! export getContext [provided] [no usage info] [missing usage info prevents renaming] */
/*! export setContext [provided] [no usage info] [missing usage info prevents renaming] */
/*! export start [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "getContext": () => /* binding */ getContext,
/* harmony export */   "setContext": () => /* binding */ setContext,
/* harmony export */   "start": () => /* binding */ start
/* harmony export */ });
/* harmony import */ var _version__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../version */ "./node_modules/tone/build/esm/version.js");
/* harmony import */ var _context_AudioContext__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./context/AudioContext */ "./node_modules/tone/build/esm/core/context/AudioContext.js");
/* harmony import */ var _context_Context__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./context/Context */ "./node_modules/tone/build/esm/core/context/Context.js");
/* harmony import */ var _context_DummyContext__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./context/DummyContext */ "./node_modules/tone/build/esm/core/context/DummyContext.js");
/* harmony import */ var _context_OfflineContext__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./context/OfflineContext */ "./node_modules/tone/build/esm/core/context/OfflineContext.js");
/* harmony import */ var _util_AdvancedTypeCheck__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./util/AdvancedTypeCheck */ "./node_modules/tone/build/esm/core/util/AdvancedTypeCheck.js");
;





/**
 * This dummy context is used to avoid throwing immediate errors when importing in Node.js
 */
const dummyContext = new _context_DummyContext__WEBPACK_IMPORTED_MODULE_3__.DummyContext();
/**
 * The global audio context which is getable and assignable through
 * getContext and setContext
 */
let globalContext = dummyContext;
/**
 * Returns the default system-wide [[Context]]
 * @category Core
 */
function getContext() {
    if (globalContext === dummyContext && _context_AudioContext__WEBPACK_IMPORTED_MODULE_1__.hasAudioContext) {
        setContext(new _context_Context__WEBPACK_IMPORTED_MODULE_2__.Context());
    }
    return globalContext;
}
/**
 * Set the default audio context
 * @category Core
 */
function setContext(context) {
    if ((0,_util_AdvancedTypeCheck__WEBPACK_IMPORTED_MODULE_5__.isAudioContext)(context)) {
        globalContext = new _context_Context__WEBPACK_IMPORTED_MODULE_2__.Context(context);
    }
    else if ((0,_util_AdvancedTypeCheck__WEBPACK_IMPORTED_MODULE_5__.isOfflineAudioContext)(context)) {
        globalContext = new _context_OfflineContext__WEBPACK_IMPORTED_MODULE_4__.OfflineContext(context);
    }
    else {
        globalContext = context;
    }
}
/**
 * Most browsers will not play _any_ audio until a user
 * clicks something (like a play button). Invoke this method
 * on a click or keypress event handler to start the audio context.
 * More about the Autoplay policy
 * [here](https://developers.google.com/web/updates/2017/09/autoplay-policy-changes#webaudio)
 * @example
 * document.querySelector("button").addEventListener("click", async () => {
 * 	await Tone.start();
 * 	console.log("context started");
 * });
 * @category Core
 */
function start() {
    return globalContext.resume();
}
/**
 * Log Tone.js + version in the console.
 */
if (_context_AudioContext__WEBPACK_IMPORTED_MODULE_1__.theWindow && !_context_AudioContext__WEBPACK_IMPORTED_MODULE_1__.theWindow.TONE_SILENCE_LOGGING) {
    let prefix = "v";
    if (_version__WEBPACK_IMPORTED_MODULE_0__.version === "dev") {
        prefix = "";
    }
    const printString = ` * Tone.js ${prefix}${_version__WEBPACK_IMPORTED_MODULE_0__.version} * `;
    // eslint-disable-next-line no-console
    console.log(`%c${printString}`, "background: #000; color: #fff");
}
//# sourceMappingURL=Global.js.map

/***/ }),

/***/ "./node_modules/tone/build/esm/core/Tone.js":
/*!**************************************************!*\
  !*** ./node_modules/tone/build/esm/core/Tone.js ***!
  \**************************************************/
/*! namespace exports */
/*! export Tone [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Tone": () => /* binding */ Tone
/* harmony export */ });
/* harmony import */ var _version__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../version */ "./node_modules/tone/build/esm/version.js");
/* harmony import */ var _context_AudioContext__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./context/AudioContext */ "./node_modules/tone/build/esm/core/context/AudioContext.js");
/* harmony import */ var _util_Debug__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./util/Debug */ "./node_modules/tone/build/esm/core/util/Debug.js");
/**
 * Tone.js
 * @author Yotam Mann
 * @license http://opensource.org/licenses/MIT MIT License
 * @copyright 2014-2019 Yotam Mann
 */
;


/**
 * @class  Tone is the base class of all other classes.
 * @category Core
 * @constructor
 */
class Tone {
    constructor() {
        //-------------------------------------
        // 	DEBUGGING
        //-------------------------------------
        /**
         * Set this debug flag to log all events that happen in this class.
         */
        this.debug = false;
        //-------------------------------------
        // 	DISPOSING
        //-------------------------------------
        /**
         * Indicates if the instance was disposed
         */
        this._wasDisposed = false;
    }
    /**
     * Returns all of the default options belonging to the class.
     */
    static getDefaults() {
        return {};
    }
    /**
     * Prints the outputs to the console log for debugging purposes.
     * Prints the contents only if either the object has a property
     * called `debug` set to true, or a variable called TONE_DEBUG_CLASS
     * is set to the name of the class.
     * @example
     * const osc = new Tone.Oscillator();
     * // prints all logs originating from this oscillator
     * osc.debug = true;
     * // calls to start/stop will print in the console
     * osc.start();
     */
    log(...args) {
        // if the object is either set to debug = true
        // or if there is a string on the Tone.global.with the class name
        if (this.debug || (_context_AudioContext__WEBPACK_IMPORTED_MODULE_1__.theWindow && this.toString() === _context_AudioContext__WEBPACK_IMPORTED_MODULE_1__.theWindow.TONE_DEBUG_CLASS)) {
            (0,_util_Debug__WEBPACK_IMPORTED_MODULE_2__.log)(this, ...args);
        }
    }
    /**
     * disconnect and dispose.
     */
    dispose() {
        this._wasDisposed = true;
        return this;
    }
    /**
     * Indicates if the instance was disposed. 'Disposing' an
     * instance means that all of the Web Audio nodes that were
     * created for the instance are disconnected and freed for garbage collection.
     */
    get disposed() {
        return this._wasDisposed;
    }
    /**
     * Convert the class to a string
     * @example
     * const osc = new Tone.Oscillator();
     * console.log(osc.toString());
     */
    toString() {
        return this.name;
    }
}
/**
 * The version number semver
 */
Tone.version = _version__WEBPACK_IMPORTED_MODULE_0__.version;
//# sourceMappingURL=Tone.js.map

/***/ }),

/***/ "./node_modules/tone/build/esm/core/clock/Clock.js":
/*!*********************************************************!*\
  !*** ./node_modules/tone/build/esm/core/clock/Clock.js ***!
  \*********************************************************/
/*! namespace exports */
/*! export Clock [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Clock": () => /* binding */ Clock
/* harmony export */ });
/* harmony import */ var _context_ToneWithContext__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../context/ToneWithContext */ "./node_modules/tone/build/esm/core/context/ToneWithContext.js");
/* harmony import */ var _util_Defaults__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util/Defaults */ "./node_modules/tone/build/esm/core/util/Defaults.js");
/* harmony import */ var _util_Emitter__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util/Emitter */ "./node_modules/tone/build/esm/core/util/Emitter.js");
/* harmony import */ var _util_Interface__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../util/Interface */ "./node_modules/tone/build/esm/core/util/Interface.js");
/* harmony import */ var _util_StateTimeline__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../util/StateTimeline */ "./node_modules/tone/build/esm/core/util/StateTimeline.js");
/* harmony import */ var _TickSource__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./TickSource */ "./node_modules/tone/build/esm/core/clock/TickSource.js");
/* harmony import */ var _util_Debug__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../util/Debug */ "./node_modules/tone/build/esm/core/util/Debug.js");
;






/**
 * A sample accurate clock which provides a callback at the given rate.
 * While the callback is not sample-accurate (it is still susceptible to
 * loose JS timing), the time passed in as the argument to the callback
 * is precise. For most applications, it is better to use Tone.Transport
 * instead of the Clock by itself since you can synchronize multiple callbacks.
 * @example
 * // the callback will be invoked approximately once a second
 * // and will print the time exactly once a second apart.
 * const clock = new Tone.Clock(time => {
 * 	console.log(time);
 * }, 1);
 * clock.start();
 * @category Core
 */
class Clock extends _context_ToneWithContext__WEBPACK_IMPORTED_MODULE_0__.ToneWithContext {
    constructor() {
        super((0,_util_Defaults__WEBPACK_IMPORTED_MODULE_1__.optionsFromArguments)(Clock.getDefaults(), arguments, ["callback", "frequency"]));
        this.name = "Clock";
        /**
         * The callback function to invoke at the scheduled tick.
         */
        this.callback = _util_Interface__WEBPACK_IMPORTED_MODULE_3__.noOp;
        /**
         * The last time the loop callback was invoked
         */
        this._lastUpdate = 0;
        /**
         * Keep track of the playback state
         */
        this._state = new _util_StateTimeline__WEBPACK_IMPORTED_MODULE_4__.StateTimeline("stopped");
        /**
         * Context bound reference to the _loop method
         * This is necessary to remove the event in the end.
         */
        this._boundLoop = this._loop.bind(this);
        const options = (0,_util_Defaults__WEBPACK_IMPORTED_MODULE_1__.optionsFromArguments)(Clock.getDefaults(), arguments, ["callback", "frequency"]);
        this.callback = options.callback;
        this._tickSource = new _TickSource__WEBPACK_IMPORTED_MODULE_5__.TickSource({
            context: this.context,
            frequency: options.frequency,
            units: options.units,
        });
        this._lastUpdate = 0;
        this.frequency = this._tickSource.frequency;
        (0,_util_Interface__WEBPACK_IMPORTED_MODULE_3__.readOnly)(this, "frequency");
        // add an initial state
        this._state.setStateAtTime("stopped", 0);
        // bind a callback to the worker thread
        this.context.on("tick", this._boundLoop);
    }
    static getDefaults() {
        return Object.assign(_context_ToneWithContext__WEBPACK_IMPORTED_MODULE_0__.ToneWithContext.getDefaults(), {
            callback: _util_Interface__WEBPACK_IMPORTED_MODULE_3__.noOp,
            frequency: 1,
            units: "hertz",
        });
    }
    /**
     * Returns the playback state of the source, either "started", "stopped" or "paused".
     */
    get state() {
        return this._state.getValueAtTime(this.now());
    }
    /**
     * Start the clock at the given time. Optionally pass in an offset
     * of where to start the tick counter from.
     * @param  time    The time the clock should start
     * @param offset  Where the tick counter starts counting from.
     */
    start(time, offset) {
        // make sure the context is running
        (0,_util_Debug__WEBPACK_IMPORTED_MODULE_6__.assertContextRunning)(this.context);
        // start the loop
        const computedTime = this.toSeconds(time);
        this.log("start", computedTime);
        if (this._state.getValueAtTime(computedTime) !== "started") {
            this._state.setStateAtTime("started", computedTime);
            this._tickSource.start(computedTime, offset);
            if (computedTime < this._lastUpdate) {
                this.emit("start", computedTime, offset);
            }
        }
        return this;
    }
    /**
     * Stop the clock. Stopping the clock resets the tick counter to 0.
     * @param time The time when the clock should stop.
     * @example
     * const clock = new Tone.Clock(time => {
     * 	console.log(time);
     * }, 1);
     * clock.start();
     * // stop the clock after 10 seconds
     * clock.stop("+10");
     */
    stop(time) {
        const computedTime = this.toSeconds(time);
        this.log("stop", computedTime);
        this._state.cancel(computedTime);
        this._state.setStateAtTime("stopped", computedTime);
        this._tickSource.stop(computedTime);
        if (computedTime < this._lastUpdate) {
            this.emit("stop", computedTime);
        }
        return this;
    }
    /**
     * Pause the clock. Pausing does not reset the tick counter.
     * @param time The time when the clock should stop.
     */
    pause(time) {
        const computedTime = this.toSeconds(time);
        if (this._state.getValueAtTime(computedTime) === "started") {
            this._state.setStateAtTime("paused", computedTime);
            this._tickSource.pause(computedTime);
            if (computedTime < this._lastUpdate) {
                this.emit("pause", computedTime);
            }
        }
        return this;
    }
    /**
     * The number of times the callback was invoked. Starts counting at 0
     * and increments after the callback was invoked.
     */
    get ticks() {
        return Math.ceil(this.getTicksAtTime(this.now()));
    }
    set ticks(t) {
        this._tickSource.ticks = t;
    }
    /**
     * The time since ticks=0 that the Clock has been running. Accounts for tempo curves
     */
    get seconds() {
        return this._tickSource.seconds;
    }
    set seconds(s) {
        this._tickSource.seconds = s;
    }
    /**
     * Return the elapsed seconds at the given time.
     * @param  time  When to get the elapsed seconds
     * @return  The number of elapsed seconds
     */
    getSecondsAtTime(time) {
        return this._tickSource.getSecondsAtTime(time);
    }
    /**
     * Set the clock's ticks at the given time.
     * @param  ticks The tick value to set
     * @param  time  When to set the tick value
     */
    setTicksAtTime(ticks, time) {
        this._tickSource.setTicksAtTime(ticks, time);
        return this;
    }
    /**
     * Get the time of the given tick. The second argument
     * is when to test before. Since ticks can be set (with setTicksAtTime)
     * there may be multiple times for a given tick value.
     * @param  tick The tick number.
     * @param  before When to measure the tick value from.
     * @return The time of the tick
     */
    getTimeOfTick(tick, before = this.now()) {
        return this._tickSource.getTimeOfTick(tick, before);
    }
    /**
     * Get the clock's ticks at the given time.
     * @param  time  When to get the tick value
     * @return The tick value at the given time.
     */
    getTicksAtTime(time) {
        return this._tickSource.getTicksAtTime(time);
    }
    /**
     * Get the time of the next tick
     * @param  offset The tick number.
     */
    nextTickTime(offset, when) {
        const computedTime = this.toSeconds(when);
        const currentTick = this.getTicksAtTime(computedTime);
        return this._tickSource.getTimeOfTick(currentTick + offset, computedTime);
    }
    /**
     * The scheduling loop.
     */
    _loop() {
        const startTime = this._lastUpdate;
        const endTime = this.now();
        this._lastUpdate = endTime;
        this.log("loop", startTime, endTime);
        if (startTime !== endTime) {
            // the state change events
            this._state.forEachBetween(startTime, endTime, e => {
                switch (e.state) {
                    case "started":
                        const offset = this._tickSource.getTicksAtTime(e.time);
                        this.emit("start", e.time, offset);
                        break;
                    case "stopped":
                        if (e.time !== 0) {
                            this.emit("stop", e.time);
                        }
                        break;
                    case "paused":
                        this.emit("pause", e.time);
                        break;
                }
            });
            // the tick callbacks
            this._tickSource.forEachTickBetween(startTime, endTime, (time, ticks) => {
                this.callback(time, ticks);
            });
        }
    }
    /**
     * Returns the scheduled state at the given time.
     * @param  time  The time to query.
     * @return  The name of the state input in setStateAtTime.
     * @example
     * const clock = new Tone.Clock();
     * clock.start("+0.1");
     * clock.getStateAtTime("+0.1"); // returns "started"
     */
    getStateAtTime(time) {
        const computedTime = this.toSeconds(time);
        return this._state.getValueAtTime(computedTime);
    }
    /**
     * Clean up
     */
    dispose() {
        super.dispose();
        this.context.off("tick", this._boundLoop);
        this._tickSource.dispose();
        this._state.dispose();
        return this;
    }
}
_util_Emitter__WEBPACK_IMPORTED_MODULE_2__.Emitter.mixin(Clock);
//# sourceMappingURL=Clock.js.map

/***/ }),

/***/ "./node_modules/tone/build/esm/core/clock/TickParam.js":
/*!*************************************************************!*\
  !*** ./node_modules/tone/build/esm/core/clock/TickParam.js ***!
  \*************************************************************/
/*! namespace exports */
/*! export TickParam [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "TickParam": () => /* binding */ TickParam
/* harmony export */ });
/* harmony import */ var _context_Param__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../context/Param */ "./node_modules/tone/build/esm/core/context/Param.js");
/* harmony import */ var _util_Defaults__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util/Defaults */ "./node_modules/tone/build/esm/core/util/Defaults.js");
/* harmony import */ var _util_Timeline__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util/Timeline */ "./node_modules/tone/build/esm/core/util/Timeline.js");
/* harmony import */ var _util_TypeCheck__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../util/TypeCheck */ "./node_modules/tone/build/esm/core/util/TypeCheck.js");
;



/**
 * A Param class just for computing ticks. Similar to the [[Param]] class,
 * but offers conversion to BPM values as well as ability to compute tick
 * duration and elapsed ticks
 */
class TickParam extends _context_Param__WEBPACK_IMPORTED_MODULE_0__.Param {
    constructor() {
        super((0,_util_Defaults__WEBPACK_IMPORTED_MODULE_1__.optionsFromArguments)(TickParam.getDefaults(), arguments, ["value"]));
        this.name = "TickParam";
        /**
         * The timeline which tracks all of the automations.
         */
        this._events = new _util_Timeline__WEBPACK_IMPORTED_MODULE_2__.Timeline(Infinity);
        /**
         * The internal holder for the multiplier value
         */
        this._multiplier = 1;
        const options = (0,_util_Defaults__WEBPACK_IMPORTED_MODULE_1__.optionsFromArguments)(TickParam.getDefaults(), arguments, ["value"]);
        // set the multiplier
        this._multiplier = options.multiplier;
        // clear the ticks from the beginning
        this._events.cancel(0);
        // set an initial event
        this._events.add({
            ticks: 0,
            time: 0,
            type: "setValueAtTime",
            value: this._fromType(options.value),
        });
        this.setValueAtTime(options.value, 0);
    }
    static getDefaults() {
        return Object.assign(_context_Param__WEBPACK_IMPORTED_MODULE_0__.Param.getDefaults(), {
            multiplier: 1,
            units: "hertz",
            value: 1,
        });
    }
    setTargetAtTime(value, time, constant) {
        // approximate it with multiple linear ramps
        time = this.toSeconds(time);
        this.setRampPoint(time);
        const computedValue = this._fromType(value);
        // start from previously scheduled value
        const prevEvent = this._events.get(time);
        const segments = Math.round(Math.max(1 / constant, 1));
        for (let i = 0; i <= segments; i++) {
            const segTime = constant * i + time;
            const rampVal = this._exponentialApproach(prevEvent.time, prevEvent.value, computedValue, constant, segTime);
            this.linearRampToValueAtTime(this._toType(rampVal), segTime);
        }
        return this;
    }
    setValueAtTime(value, time) {
        const computedTime = this.toSeconds(time);
        super.setValueAtTime(value, time);
        const event = this._events.get(computedTime);
        const previousEvent = this._events.previousEvent(event);
        const ticksUntilTime = this._getTicksUntilEvent(previousEvent, computedTime);
        event.ticks = Math.max(ticksUntilTime, 0);
        return this;
    }
    linearRampToValueAtTime(value, time) {
        const computedTime = this.toSeconds(time);
        super.linearRampToValueAtTime(value, time);
        const event = this._events.get(computedTime);
        const previousEvent = this._events.previousEvent(event);
        const ticksUntilTime = this._getTicksUntilEvent(previousEvent, computedTime);
        event.ticks = Math.max(ticksUntilTime, 0);
        return this;
    }
    exponentialRampToValueAtTime(value, time) {
        // aproximate it with multiple linear ramps
        time = this.toSeconds(time);
        const computedVal = this._fromType(value);
        // start from previously scheduled value
        const prevEvent = this._events.get(time);
        // approx 10 segments per second
        const segments = Math.round(Math.max((time - prevEvent.time) * 10, 1));
        const segmentDur = ((time - prevEvent.time) / segments);
        for (let i = 0; i <= segments; i++) {
            const segTime = segmentDur * i + prevEvent.time;
            const rampVal = this._exponentialInterpolate(prevEvent.time, prevEvent.value, time, computedVal, segTime);
            this.linearRampToValueAtTime(this._toType(rampVal), segTime);
        }
        return this;
    }
    /**
     * Returns the tick value at the time. Takes into account
     * any automation curves scheduled on the signal.
     * @param  event The time to get the tick count at
     * @return The number of ticks which have elapsed at the time given any automations.
     */
    _getTicksUntilEvent(event, time) {
        if (event === null) {
            event = {
                ticks: 0,
                time: 0,
                type: "setValueAtTime",
                value: 0,
            };
        }
        else if ((0,_util_TypeCheck__WEBPACK_IMPORTED_MODULE_3__.isUndef)(event.ticks)) {
            const previousEvent = this._events.previousEvent(event);
            event.ticks = this._getTicksUntilEvent(previousEvent, event.time);
        }
        const val0 = this._fromType(this.getValueAtTime(event.time));
        let val1 = this._fromType(this.getValueAtTime(time));
        // if it's right on the line, take the previous value
        const onTheLineEvent = this._events.get(time);
        if (onTheLineEvent && onTheLineEvent.time === time && onTheLineEvent.type === "setValueAtTime") {
            val1 = this._fromType(this.getValueAtTime(time - this.sampleTime));
        }
        return 0.5 * (time - event.time) * (val0 + val1) + event.ticks;
    }
    /**
     * Returns the tick value at the time. Takes into account
     * any automation curves scheduled on the signal.
     * @param  time The time to get the tick count at
     * @return The number of ticks which have elapsed at the time given any automations.
     */
    getTicksAtTime(time) {
        const computedTime = this.toSeconds(time);
        const event = this._events.get(computedTime);
        return Math.max(this._getTicksUntilEvent(event, computedTime), 0);
    }
    /**
     * Return the elapsed time of the number of ticks from the given time
     * @param ticks The number of ticks to calculate
     * @param  time The time to get the next tick from
     * @return The duration of the number of ticks from the given time in seconds
     */
    getDurationOfTicks(ticks, time) {
        const computedTime = this.toSeconds(time);
        const currentTick = this.getTicksAtTime(time);
        return this.getTimeOfTick(currentTick + ticks) - computedTime;
    }
    /**
     * Given a tick, returns the time that tick occurs at.
     * @return The time that the tick occurs.
     */
    getTimeOfTick(tick) {
        const before = this._events.get(tick, "ticks");
        const after = this._events.getAfter(tick, "ticks");
        if (before && before.ticks === tick) {
            return before.time;
        }
        else if (before && after &&
            after.type === "linearRampToValueAtTime" &&
            before.value !== after.value) {
            const val0 = this._fromType(this.getValueAtTime(before.time));
            const val1 = this._fromType(this.getValueAtTime(after.time));
            const delta = (val1 - val0) / (after.time - before.time);
            const k = Math.sqrt(Math.pow(val0, 2) - 2 * delta * (before.ticks - tick));
            const sol1 = (-val0 + k) / delta;
            const sol2 = (-val0 - k) / delta;
            return (sol1 > 0 ? sol1 : sol2) + before.time;
        }
        else if (before) {
            if (before.value === 0) {
                return Infinity;
            }
            else {
                return before.time + (tick - before.ticks) / before.value;
            }
        }
        else {
            return tick / this._initialValue;
        }
    }
    /**
     * Convert some number of ticks their the duration in seconds accounting
     * for any automation curves starting at the given time.
     * @param  ticks The number of ticks to convert to seconds.
     * @param  when  When along the automation timeline to convert the ticks.
     * @return The duration in seconds of the ticks.
     */
    ticksToTime(ticks, when) {
        return this.getDurationOfTicks(ticks, when);
    }
    /**
     * The inverse of [[ticksToTime]]. Convert a duration in
     * seconds to the corresponding number of ticks accounting for any
     * automation curves starting at the given time.
     * @param  duration The time interval to convert to ticks.
     * @param  when When along the automation timeline to convert the ticks.
     * @return The duration in ticks.
     */
    timeToTicks(duration, when) {
        const computedTime = this.toSeconds(when);
        const computedDuration = this.toSeconds(duration);
        const startTicks = this.getTicksAtTime(computedTime);
        const endTicks = this.getTicksAtTime(computedTime + computedDuration);
        return endTicks - startTicks;
    }
    /**
     * Convert from the type when the unit value is BPM
     */
    _fromType(val) {
        if (this.units === "bpm" && this.multiplier) {
            return 1 / (60 / val / this.multiplier);
        }
        else {
            return super._fromType(val);
        }
    }
    /**
     * Special case of type conversion where the units === "bpm"
     */
    _toType(val) {
        if (this.units === "bpm" && this.multiplier) {
            return (val / this.multiplier) * 60;
        }
        else {
            return super._toType(val);
        }
    }
    /**
     * A multiplier on the bpm value. Useful for setting a PPQ relative to the base frequency value.
     */
    get multiplier() {
        return this._multiplier;
    }
    set multiplier(m) {
        // get and reset the current value with the new multiplier
        // might be necessary to clear all the previous values
        const currentVal = this.value;
        this._multiplier = m;
        this.cancelScheduledValues(0);
        this.setValueAtTime(currentVal, 0);
    }
}
//# sourceMappingURL=TickParam.js.map

/***/ }),

/***/ "./node_modules/tone/build/esm/core/clock/TickSignal.js":
/*!**************************************************************!*\
  !*** ./node_modules/tone/build/esm/core/clock/TickSignal.js ***!
  \**************************************************************/
/*! namespace exports */
/*! export TickSignal [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "TickSignal": () => /* binding */ TickSignal
/* harmony export */ });
/* harmony import */ var _signal_Signal__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../signal/Signal */ "./node_modules/tone/build/esm/signal/Signal.js");
/* harmony import */ var _util_Defaults__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util/Defaults */ "./node_modules/tone/build/esm/core/util/Defaults.js");
/* harmony import */ var _TickParam__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./TickParam */ "./node_modules/tone/build/esm/core/clock/TickParam.js");
;


/**
 * TickSignal extends Tone.Signal, but adds the capability
 * to calculate the number of elapsed ticks. exponential and target curves
 * are approximated with multiple linear ramps.
 *
 * Thank you Bruno Dias, H. Sofia Pinto, and David M. Matos,
 * for your [WAC paper](https://smartech.gatech.edu/bitstream/handle/1853/54588/WAC2016-49.pdf)
 * describing integrating timing functions for tempo calculations.
 */
class TickSignal extends _signal_Signal__WEBPACK_IMPORTED_MODULE_0__.Signal {
    constructor() {
        super((0,_util_Defaults__WEBPACK_IMPORTED_MODULE_1__.optionsFromArguments)(TickSignal.getDefaults(), arguments, ["value"]));
        this.name = "TickSignal";
        const options = (0,_util_Defaults__WEBPACK_IMPORTED_MODULE_1__.optionsFromArguments)(TickSignal.getDefaults(), arguments, ["value"]);
        this.input = this._param = new _TickParam__WEBPACK_IMPORTED_MODULE_2__.TickParam({
            context: this.context,
            convert: options.convert,
            multiplier: options.multiplier,
            param: this._constantSource.offset,
            units: options.units,
            value: options.value,
        });
    }
    static getDefaults() {
        return Object.assign(_signal_Signal__WEBPACK_IMPORTED_MODULE_0__.Signal.getDefaults(), {
            multiplier: 1,
            units: "hertz",
            value: 1,
        });
    }
    ticksToTime(ticks, when) {
        return this._param.ticksToTime(ticks, when);
    }
    timeToTicks(duration, when) {
        return this._param.timeToTicks(duration, when);
    }
    getTimeOfTick(tick) {
        return this._param.getTimeOfTick(tick);
    }
    getDurationOfTicks(ticks, time) {
        return this._param.getDurationOfTicks(ticks, time);
    }
    getTicksAtTime(time) {
        return this._param.getTicksAtTime(time);
    }
    /**
     * A multiplier on the bpm value. Useful for setting a PPQ relative to the base frequency value.
     */
    get multiplier() {
        return this._param.multiplier;
    }
    set multiplier(m) {
        this._param.multiplier = m;
    }
    dispose() {
        super.dispose();
        this._param.dispose();
        return this;
    }
}
//# sourceMappingURL=TickSignal.js.map

/***/ }),

/***/ "./node_modules/tone/build/esm/core/clock/TickSource.js":
/*!**************************************************************!*\
  !*** ./node_modules/tone/build/esm/core/clock/TickSource.js ***!
  \**************************************************************/
/*! namespace exports */
/*! export TickSource [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "TickSource": () => /* binding */ TickSource
/* harmony export */ });
/* harmony import */ var _context_ToneWithContext__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../context/ToneWithContext */ "./node_modules/tone/build/esm/core/context/ToneWithContext.js");
/* harmony import */ var _util_Defaults__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util/Defaults */ "./node_modules/tone/build/esm/core/util/Defaults.js");
/* harmony import */ var _util_Interface__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util/Interface */ "./node_modules/tone/build/esm/core/util/Interface.js");
/* harmony import */ var _util_StateTimeline__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../util/StateTimeline */ "./node_modules/tone/build/esm/core/util/StateTimeline.js");
/* harmony import */ var _util_Timeline__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../util/Timeline */ "./node_modules/tone/build/esm/core/util/Timeline.js");
/* harmony import */ var _util_TypeCheck__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../util/TypeCheck */ "./node_modules/tone/build/esm/core/util/TypeCheck.js");
/* harmony import */ var _TickSignal__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./TickSignal */ "./node_modules/tone/build/esm/core/clock/TickSignal.js");
/* harmony import */ var _util_Math__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../util/Math */ "./node_modules/tone/build/esm/core/util/Math.js");
;







/**
 * Uses [TickSignal](TickSignal) to track elapsed ticks with complex automation curves.
 */
class TickSource extends _context_ToneWithContext__WEBPACK_IMPORTED_MODULE_0__.ToneWithContext {
    constructor() {
        super((0,_util_Defaults__WEBPACK_IMPORTED_MODULE_1__.optionsFromArguments)(TickSource.getDefaults(), arguments, ["frequency"]));
        this.name = "TickSource";
        /**
         * The state timeline
         */
        this._state = new _util_StateTimeline__WEBPACK_IMPORTED_MODULE_3__.StateTimeline();
        /**
         * The offset values of the ticks
         */
        this._tickOffset = new _util_Timeline__WEBPACK_IMPORTED_MODULE_4__.Timeline();
        const options = (0,_util_Defaults__WEBPACK_IMPORTED_MODULE_1__.optionsFromArguments)(TickSource.getDefaults(), arguments, ["frequency"]);
        this.frequency = new _TickSignal__WEBPACK_IMPORTED_MODULE_6__.TickSignal({
            context: this.context,
            units: options.units,
            value: options.frequency,
        });
        (0,_util_Interface__WEBPACK_IMPORTED_MODULE_2__.readOnly)(this, "frequency");
        // set the initial state
        this._state.setStateAtTime("stopped", 0);
        // add the first event
        this.setTicksAtTime(0, 0);
    }
    static getDefaults() {
        return Object.assign({
            frequency: 1,
            units: "hertz",
        }, _context_ToneWithContext__WEBPACK_IMPORTED_MODULE_0__.ToneWithContext.getDefaults());
    }
    /**
     * Returns the playback state of the source, either "started", "stopped" or "paused".
     */
    get state() {
        return this.getStateAtTime(this.now());
    }
    /**
     * Start the clock at the given time. Optionally pass in an offset
     * of where to start the tick counter from.
     * @param  time    The time the clock should start
     * @param offset The number of ticks to start the source at
     */
    start(time, offset) {
        const computedTime = this.toSeconds(time);
        if (this._state.getValueAtTime(computedTime) !== "started") {
            this._state.setStateAtTime("started", computedTime);
            if ((0,_util_TypeCheck__WEBPACK_IMPORTED_MODULE_5__.isDefined)(offset)) {
                this.setTicksAtTime(offset, computedTime);
            }
        }
        return this;
    }
    /**
     * Stop the clock. Stopping the clock resets the tick counter to 0.
     * @param time The time when the clock should stop.
     */
    stop(time) {
        const computedTime = this.toSeconds(time);
        // cancel the previous stop
        if (this._state.getValueAtTime(computedTime) === "stopped") {
            const event = this._state.get(computedTime);
            if (event && event.time > 0) {
                this._tickOffset.cancel(event.time);
                this._state.cancel(event.time);
            }
        }
        this._state.cancel(computedTime);
        this._state.setStateAtTime("stopped", computedTime);
        this.setTicksAtTime(0, computedTime);
        return this;
    }
    /**
     * Pause the clock. Pausing does not reset the tick counter.
     * @param time The time when the clock should stop.
     */
    pause(time) {
        const computedTime = this.toSeconds(time);
        if (this._state.getValueAtTime(computedTime) === "started") {
            this._state.setStateAtTime("paused", computedTime);
        }
        return this;
    }
    /**
     * Cancel start/stop/pause and setTickAtTime events scheduled after the given time.
     * @param time When to clear the events after
     */
    cancel(time) {
        time = this.toSeconds(time);
        this._state.cancel(time);
        this._tickOffset.cancel(time);
        return this;
    }
    /**
     * Get the elapsed ticks at the given time
     * @param  time  When to get the tick value
     * @return The number of ticks
     */
    getTicksAtTime(time) {
        const computedTime = this.toSeconds(time);
        const stopEvent = this._state.getLastState("stopped", computedTime);
        // this event allows forEachBetween to iterate until the current time
        const tmpEvent = { state: "paused", time: computedTime };
        this._state.add(tmpEvent);
        // keep track of the previous offset event
        let lastState = stopEvent;
        let elapsedTicks = 0;
        // iterate through all the events since the last stop
        this._state.forEachBetween(stopEvent.time, computedTime + this.sampleTime, e => {
            let periodStartTime = lastState.time;
            // if there is an offset event in this period use that
            const offsetEvent = this._tickOffset.get(e.time);
            if (offsetEvent && offsetEvent.time >= lastState.time) {
                elapsedTicks = offsetEvent.ticks;
                periodStartTime = offsetEvent.time;
            }
            if (lastState.state === "started" && e.state !== "started") {
                elapsedTicks += this.frequency.getTicksAtTime(e.time) - this.frequency.getTicksAtTime(periodStartTime);
            }
            lastState = e;
        });
        // remove the temporary event
        this._state.remove(tmpEvent);
        // return the ticks
        return elapsedTicks;
    }
    /**
     * The number of times the callback was invoked. Starts counting at 0
     * and increments after the callback was invoked. Returns -1 when stopped.
     */
    get ticks() {
        return this.getTicksAtTime(this.now());
    }
    set ticks(t) {
        this.setTicksAtTime(t, this.now());
    }
    /**
     * The time since ticks=0 that the TickSource has been running. Accounts
     * for tempo curves
     */
    get seconds() {
        return this.getSecondsAtTime(this.now());
    }
    set seconds(s) {
        const now = this.now();
        const ticks = this.frequency.timeToTicks(s, now);
        this.setTicksAtTime(ticks, now);
    }
    /**
     * Return the elapsed seconds at the given time.
     * @param  time  When to get the elapsed seconds
     * @return  The number of elapsed seconds
     */
    getSecondsAtTime(time) {
        time = this.toSeconds(time);
        const stopEvent = this._state.getLastState("stopped", time);
        // this event allows forEachBetween to iterate until the current time
        const tmpEvent = { state: "paused", time };
        this._state.add(tmpEvent);
        // keep track of the previous offset event
        let lastState = stopEvent;
        let elapsedSeconds = 0;
        // iterate through all the events since the last stop
        this._state.forEachBetween(stopEvent.time, time + this.sampleTime, e => {
            let periodStartTime = lastState.time;
            // if there is an offset event in this period use that
            const offsetEvent = this._tickOffset.get(e.time);
            if (offsetEvent && offsetEvent.time >= lastState.time) {
                elapsedSeconds = offsetEvent.seconds;
                periodStartTime = offsetEvent.time;
            }
            if (lastState.state === "started" && e.state !== "started") {
                elapsedSeconds += e.time - periodStartTime;
            }
            lastState = e;
        });
        // remove the temporary event
        this._state.remove(tmpEvent);
        // return the ticks
        return elapsedSeconds;
    }
    /**
     * Set the clock's ticks at the given time.
     * @param  ticks The tick value to set
     * @param  time  When to set the tick value
     */
    setTicksAtTime(ticks, time) {
        time = this.toSeconds(time);
        this._tickOffset.cancel(time);
        this._tickOffset.add({
            seconds: this.frequency.getDurationOfTicks(ticks, time),
            ticks,
            time,
        });
        return this;
    }
    /**
     * Returns the scheduled state at the given time.
     * @param  time  The time to query.
     */
    getStateAtTime(time) {
        time = this.toSeconds(time);
        return this._state.getValueAtTime(time);
    }
    /**
     * Get the time of the given tick. The second argument
     * is when to test before. Since ticks can be set (with setTicksAtTime)
     * there may be multiple times for a given tick value.
     * @param  tick The tick number.
     * @param  before When to measure the tick value from.
     * @return The time of the tick
     */
    getTimeOfTick(tick, before = this.now()) {
        const offset = this._tickOffset.get(before);
        const event = this._state.get(before);
        const startTime = Math.max(offset.time, event.time);
        const absoluteTicks = this.frequency.getTicksAtTime(startTime) + tick - offset.ticks;
        return this.frequency.getTimeOfTick(absoluteTicks);
    }
    /**
     * Invoke the callback event at all scheduled ticks between the
     * start time and the end time
     * @param  startTime  The beginning of the search range
     * @param  endTime    The end of the search range
     * @param  callback   The callback to invoke with each tick
     */
    forEachTickBetween(startTime, endTime, callback) {
        // only iterate through the sections where it is "started"
        let lastStateEvent = this._state.get(startTime);
        this._state.forEachBetween(startTime, endTime, event => {
            if (lastStateEvent && lastStateEvent.state === "started" && event.state !== "started") {
                this.forEachTickBetween(Math.max(lastStateEvent.time, startTime), event.time - this.sampleTime, callback);
            }
            lastStateEvent = event;
        });
        let error = null;
        if (lastStateEvent && lastStateEvent.state === "started") {
            const maxStartTime = Math.max(lastStateEvent.time, startTime);
            // figure out the difference between the frequency ticks and the
            const startTicks = this.frequency.getTicksAtTime(maxStartTime);
            const ticksAtStart = this.frequency.getTicksAtTime(lastStateEvent.time);
            const diff = startTicks - ticksAtStart;
            let offset = Math.ceil(diff) - diff;
            // guard against floating point issues
            offset = (0,_util_Math__WEBPACK_IMPORTED_MODULE_7__.EQ)(offset, 1) ? 0 : offset;
            let nextTickTime = this.frequency.getTimeOfTick(startTicks + offset);
            while (nextTickTime < endTime) {
                try {
                    callback(nextTickTime, Math.round(this.getTicksAtTime(nextTickTime)));
                }
                catch (e) {
                    error = e;
                    break;
                }
                nextTickTime += this.frequency.getDurationOfTicks(1, nextTickTime);
            }
        }
        if (error) {
            throw error;
        }
        return this;
    }
    /**
     * Clean up
     */
    dispose() {
        super.dispose();
        this._state.dispose();
        this._tickOffset.dispose();
        this.frequency.dispose();
        return this;
    }
}
//# sourceMappingURL=TickSource.js.map

/***/ }),

/***/ "./node_modules/tone/build/esm/core/clock/Ticker.js":
/*!**********************************************************!*\
  !*** ./node_modules/tone/build/esm/core/clock/Ticker.js ***!
  \**********************************************************/
/*! namespace exports */
/*! export Ticker [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Ticker": () => /* binding */ Ticker
/* harmony export */ });
/**
 * A class which provides a reliable callback using either
 * a Web Worker, or if that isn't supported, falls back to setTimeout.
 */
class Ticker {
    constructor(callback, type, updateInterval) {
        this._callback = callback;
        this._type = type;
        this._updateInterval = updateInterval;
        // create the clock source for the first time
        this._createClock();
    }
    /**
     * Generate a web worker
     */
    _createWorker() {
        const blob = new Blob([
            /* javascript */ `
			// the initial timeout time
			let timeoutTime =  ${(this._updateInterval * 1000).toFixed(1)};
			// onmessage callback
			self.onmessage = function(msg){
				timeoutTime = parseInt(msg.data);
			};
			// the tick function which posts a message
			// and schedules a new tick
			function tick(){
				setTimeout(tick, timeoutTime);
				self.postMessage('tick');
			}
			// call tick initially
			tick();
			`
        ], { type: "text/javascript" });
        const blobUrl = URL.createObjectURL(blob);
        const worker = new Worker(blobUrl);
        worker.onmessage = this._callback.bind(this);
        this._worker = worker;
    }
    /**
     * Create a timeout loop
     */
    _createTimeout() {
        this._timeout = setTimeout(() => {
            this._createTimeout();
            this._callback();
        }, this._updateInterval * 1000);
    }
    /**
     * Create the clock source.
     */
    _createClock() {
        if (this._type === "worker") {
            try {
                this._createWorker();
            }
            catch (e) {
                // workers not supported, fallback to timeout
                this._type = "timeout";
                this._createClock();
            }
        }
        else if (this._type === "timeout") {
            this._createTimeout();
        }
    }
    /**
     * Clean up the current clock source
     */
    _disposeClock() {
        if (this._timeout) {
            clearTimeout(this._timeout);
            this._timeout = 0;
        }
        if (this._worker) {
            this._worker.terminate();
            this._worker.onmessage = null;
        }
    }
    /**
     * The rate in seconds the ticker will update
     */
    get updateInterval() {
        return this._updateInterval;
    }
    set updateInterval(interval) {
        this._updateInterval = Math.max(interval, 128 / 44100);
        if (this._type === "worker") {
            this._worker.postMessage(Math.max(interval * 1000, 1));
        }
    }
    /**
     * The type of the ticker, either a worker or a timeout
     */
    get type() {
        return this._type;
    }
    set type(type) {
        this._disposeClock();
        this._type = type;
        this._createClock();
    }
    /**
     * Clean up
     */
    dispose() {
        this._disposeClock();
    }
}
//# sourceMappingURL=Ticker.js.map

/***/ }),

/***/ "./node_modules/tone/build/esm/core/clock/Transport.js":
/*!*************************************************************!*\
  !*** ./node_modules/tone/build/esm/core/clock/Transport.js ***!
  \*************************************************************/
/*! namespace exports */
/*! export Transport [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Transport": () => /* binding */ Transport
/* harmony export */ });
/* harmony import */ var _core_type_Time__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/type/Time */ "./node_modules/tone/build/esm/core/type/Time.js");
/* harmony import */ var _core_util_TimelineValue__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core/util/TimelineValue */ "./node_modules/tone/build/esm/core/util/TimelineValue.js");
/* harmony import */ var _context_ContextInitialization__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../context/ContextInitialization */ "./node_modules/tone/build/esm/core/context/ContextInitialization.js");
/* harmony import */ var _context_Gain__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../context/Gain */ "./node_modules/tone/build/esm/core/context/Gain.js");
/* harmony import */ var _context_ToneWithContext__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../context/ToneWithContext */ "./node_modules/tone/build/esm/core/context/ToneWithContext.js");
/* harmony import */ var _type_Ticks__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../type/Ticks */ "./node_modules/tone/build/esm/core/type/Ticks.js");
/* harmony import */ var _type_TransportTime__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../type/TransportTime */ "./node_modules/tone/build/esm/core/type/TransportTime.js");
/* harmony import */ var _util_Defaults__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../util/Defaults */ "./node_modules/tone/build/esm/core/util/Defaults.js");
/* harmony import */ var _util_Emitter__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../util/Emitter */ "./node_modules/tone/build/esm/core/util/Emitter.js");
/* harmony import */ var _util_Interface__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../util/Interface */ "./node_modules/tone/build/esm/core/util/Interface.js");
/* harmony import */ var _util_IntervalTimeline__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../util/IntervalTimeline */ "./node_modules/tone/build/esm/core/util/IntervalTimeline.js");
/* harmony import */ var _util_Timeline__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../util/Timeline */ "./node_modules/tone/build/esm/core/util/Timeline.js");
/* harmony import */ var _util_TypeCheck__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../util/TypeCheck */ "./node_modules/tone/build/esm/core/util/TypeCheck.js");
/* harmony import */ var _Clock__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./Clock */ "./node_modules/tone/build/esm/core/clock/Clock.js");
/* harmony import */ var _TransportEvent__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./TransportEvent */ "./node_modules/tone/build/esm/core/clock/TransportEvent.js");
/* harmony import */ var _TransportRepeatEvent__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./TransportRepeatEvent */ "./node_modules/tone/build/esm/core/clock/TransportRepeatEvent.js");
;















/**
 * Transport for timing musical events.
 * Supports tempo curves and time changes. Unlike browser-based timing (setInterval, requestAnimationFrame)
 * Transport timing events pass in the exact time of the scheduled event
 * in the argument of the callback function. Pass that time value to the object
 * you're scheduling. <br><br>
 * A single transport is created for you when the library is initialized.
 * <br><br>
 * The transport emits the events: "start", "stop", "pause", and "loop" which are
 * called with the time of that event as the argument.
 *
 * @example
 * const osc = new Tone.Oscillator().toDestination();
 * // repeated event every 8th note
 * Tone.Transport.scheduleRepeat((time) => {
 * 	// use the callback time to schedule events
 * 	osc.start(time).stop(time + 0.1);
 * }, "8n");
 * // transport must be started before it starts invoking events
 * Tone.Transport.start();
 * @category Core
 */
class Transport extends _context_ToneWithContext__WEBPACK_IMPORTED_MODULE_4__.ToneWithContext {
    constructor() {
        super((0,_util_Defaults__WEBPACK_IMPORTED_MODULE_7__.optionsFromArguments)(Transport.getDefaults(), arguments));
        this.name = "Transport";
        //-------------------------------------
        // 	LOOPING
        //-------------------------------------
        /**
         * If the transport loops or not.
         */
        this._loop = new _core_util_TimelineValue__WEBPACK_IMPORTED_MODULE_1__.TimelineValue(false);
        /**
         * The loop start position in ticks
         */
        this._loopStart = 0;
        /**
         * The loop end position in ticks
         */
        this._loopEnd = 0;
        //-------------------------------------
        // 	TIMELINE EVENTS
        //-------------------------------------
        /**
         * All the events in an object to keep track by ID
         */
        this._scheduledEvents = {};
        /**
         * The scheduled events.
         */
        this._timeline = new _util_Timeline__WEBPACK_IMPORTED_MODULE_11__.Timeline();
        /**
         * Repeated events
         */
        this._repeatedEvents = new _util_IntervalTimeline__WEBPACK_IMPORTED_MODULE_10__.IntervalTimeline();
        /**
         * All of the synced Signals
         */
        this._syncedSignals = [];
        /**
         * The swing amount
         */
        this._swingAmount = 0;
        const options = (0,_util_Defaults__WEBPACK_IMPORTED_MODULE_7__.optionsFromArguments)(Transport.getDefaults(), arguments);
        // CLOCK/TEMPO
        this._ppq = options.ppq;
        this._clock = new _Clock__WEBPACK_IMPORTED_MODULE_13__.Clock({
            callback: this._processTick.bind(this),
            context: this.context,
            frequency: 0,
            units: "bpm",
        });
        this._bindClockEvents();
        this.bpm = this._clock.frequency;
        this._clock.frequency.multiplier = options.ppq;
        this.bpm.setValueAtTime(options.bpm, 0);
        (0,_util_Interface__WEBPACK_IMPORTED_MODULE_9__.readOnly)(this, "bpm");
        this._timeSignature = options.timeSignature;
        // SWING
        this._swingTicks = options.ppq / 2; // 8n
    }
    static getDefaults() {
        return Object.assign(_context_ToneWithContext__WEBPACK_IMPORTED_MODULE_4__.ToneWithContext.getDefaults(), {
            bpm: 120,
            loopEnd: "4m",
            loopStart: 0,
            ppq: 192,
            swing: 0,
            swingSubdivision: "8n",
            timeSignature: 4,
        });
    }
    //-------------------------------------
    // 	TICKS
    //-------------------------------------
    /**
     * called on every tick
     * @param  tickTime clock relative tick time
     */
    _processTick(tickTime, ticks) {
        // handle swing
        if (this._swingAmount > 0 &&
            ticks % this._ppq !== 0 && // not on a downbeat
            ticks % (this._swingTicks * 2) !== 0) {
            // add some swing
            const progress = (ticks % (this._swingTicks * 2)) / (this._swingTicks * 2);
            const amount = Math.sin((progress) * Math.PI) * this._swingAmount;
            tickTime += new _type_Ticks__WEBPACK_IMPORTED_MODULE_5__.TicksClass(this.context, this._swingTicks * 2 / 3).toSeconds() * amount;
        }
        // do the loop test
        if (this._loop.get(tickTime)) {
            if (ticks >= this._loopEnd) {
                this.emit("loopEnd", tickTime);
                this._clock.setTicksAtTime(this._loopStart, tickTime);
                ticks = this._loopStart;
                this.emit("loopStart", tickTime, this._clock.getSecondsAtTime(tickTime));
                this.emit("loop", tickTime);
            }
        }
        // invoke the timeline events scheduled on this tick
        this._timeline.forEachAtTime(ticks, event => event.invoke(tickTime));
    }
    //-------------------------------------
    // 	SCHEDULABLE EVENTS
    //-------------------------------------
    /**
     * Schedule an event along the timeline.
     * @param callback The callback to be invoked at the time.
     * @param time The time to invoke the callback at.
     * @return The id of the event which can be used for canceling the event.
     * @example
     * // schedule an event on the 16th measure
     * Tone.Transport.schedule((time) => {
     * 	// invoked on measure 16
     * 	console.log("measure 16!");
     * }, "16:0:0");
     */
    schedule(callback, time) {
        const event = new _TransportEvent__WEBPACK_IMPORTED_MODULE_14__.TransportEvent(this, {
            callback,
            time: new _type_TransportTime__WEBPACK_IMPORTED_MODULE_6__.TransportTimeClass(this.context, time).toTicks(),
        });
        return this._addEvent(event, this._timeline);
    }
    /**
     * Schedule a repeated event along the timeline. The event will fire
     * at the `interval` starting at the `startTime` and for the specified
     * `duration`.
     * @param  callback   The callback to invoke.
     * @param  interval   The duration between successive callbacks. Must be a positive number.
     * @param  startTime  When along the timeline the events should start being invoked.
     * @param  duration How long the event should repeat.
     * @return  The ID of the scheduled event. Use this to cancel the event.
     * @example
     * const osc = new Tone.Oscillator().toDestination().start();
     * // a callback invoked every eighth note after the first measure
     * Tone.Transport.scheduleRepeat((time) => {
     * 	osc.start(time).stop(time + 0.1);
     * }, "8n", "1m");
     */
    scheduleRepeat(callback, interval, startTime, duration = Infinity) {
        const event = new _TransportRepeatEvent__WEBPACK_IMPORTED_MODULE_15__.TransportRepeatEvent(this, {
            callback,
            duration: new _core_type_Time__WEBPACK_IMPORTED_MODULE_0__.TimeClass(this.context, duration).toTicks(),
            interval: new _core_type_Time__WEBPACK_IMPORTED_MODULE_0__.TimeClass(this.context, interval).toTicks(),
            time: new _type_TransportTime__WEBPACK_IMPORTED_MODULE_6__.TransportTimeClass(this.context, startTime).toTicks(),
        });
        // kick it off if the Transport is started
        // @ts-ignore
        return this._addEvent(event, this._repeatedEvents);
    }
    /**
     * Schedule an event that will be removed after it is invoked.
     * @param callback The callback to invoke once.
     * @param time The time the callback should be invoked.
     * @returns The ID of the scheduled event.
     */
    scheduleOnce(callback, time) {
        const event = new _TransportEvent__WEBPACK_IMPORTED_MODULE_14__.TransportEvent(this, {
            callback,
            once: true,
            time: new _type_TransportTime__WEBPACK_IMPORTED_MODULE_6__.TransportTimeClass(this.context, time).toTicks(),
        });
        return this._addEvent(event, this._timeline);
    }
    /**
     * Clear the passed in event id from the timeline
     * @param eventId The id of the event.
     */
    clear(eventId) {
        if (this._scheduledEvents.hasOwnProperty(eventId)) {
            const item = this._scheduledEvents[eventId.toString()];
            item.timeline.remove(item.event);
            item.event.dispose();
            delete this._scheduledEvents[eventId.toString()];
        }
        return this;
    }
    /**
     * Add an event to the correct timeline. Keep track of the
     * timeline it was added to.
     * @returns the event id which was just added
     */
    _addEvent(event, timeline) {
        this._scheduledEvents[event.id.toString()] = {
            event,
            timeline,
        };
        timeline.add(event);
        return event.id;
    }
    /**
     * Remove scheduled events from the timeline after
     * the given time. Repeated events will be removed
     * if their startTime is after the given time
     * @param after Clear all events after this time.
     */
    cancel(after = 0) {
        const computedAfter = this.toTicks(after);
        this._timeline.forEachFrom(computedAfter, event => this.clear(event.id));
        this._repeatedEvents.forEachFrom(computedAfter, event => this.clear(event.id));
        return this;
    }
    //-------------------------------------
    // 	START/STOP/PAUSE
    //-------------------------------------
    /**
     * Bind start/stop/pause events from the clock and emit them.
     */
    _bindClockEvents() {
        this._clock.on("start", (time, offset) => {
            offset = new _type_Ticks__WEBPACK_IMPORTED_MODULE_5__.TicksClass(this.context, offset).toSeconds();
            this.emit("start", time, offset);
        });
        this._clock.on("stop", (time) => {
            this.emit("stop", time);
        });
        this._clock.on("pause", (time) => {
            this.emit("pause", time);
        });
    }
    /**
     * Returns the playback state of the source, either "started", "stopped", or "paused"
     */
    get state() {
        return this._clock.getStateAtTime(this.now());
    }
    /**
     * Start the transport and all sources synced to the transport.
     * @param  time The time when the transport should start.
     * @param  offset The timeline offset to start the transport.
     * @example
     * // start the transport in one second starting at beginning of the 5th measure.
     * Tone.Transport.start("+1", "4:0:0");
     */
    start(time, offset) {
        let offsetTicks;
        if ((0,_util_TypeCheck__WEBPACK_IMPORTED_MODULE_12__.isDefined)(offset)) {
            offsetTicks = this.toTicks(offset);
        }
        // start the clock
        this._clock.start(time, offsetTicks);
        return this;
    }
    /**
     * Stop the transport and all sources synced to the transport.
     * @param time The time when the transport should stop.
     * @example
     * Tone.Transport.stop();
     */
    stop(time) {
        this._clock.stop(time);
        return this;
    }
    /**
     * Pause the transport and all sources synced to the transport.
     */
    pause(time) {
        this._clock.pause(time);
        return this;
    }
    /**
     * Toggle the current state of the transport. If it is
     * started, it will stop it, otherwise it will start the Transport.
     * @param  time The time of the event
     */
    toggle(time) {
        time = this.toSeconds(time);
        if (this._clock.getStateAtTime(time) !== "started") {
            this.start(time);
        }
        else {
            this.stop(time);
        }
        return this;
    }
    //-------------------------------------
    // 	SETTERS/GETTERS
    //-------------------------------------
    /**
     * The time signature as just the numerator over 4.
     * For example 4/4 would be just 4 and 6/8 would be 3.
     * @example
     * // common time
     * Tone.Transport.timeSignature = 4;
     * // 7/8
     * Tone.Transport.timeSignature = [7, 8];
     * // this will be reduced to a single number
     * Tone.Transport.timeSignature; // returns 3.5
     */
    get timeSignature() {
        return this._timeSignature;
    }
    set timeSignature(timeSig) {
        if ((0,_util_TypeCheck__WEBPACK_IMPORTED_MODULE_12__.isArray)(timeSig)) {
            timeSig = (timeSig[0] / timeSig[1]) * 4;
        }
        this._timeSignature = timeSig;
    }
    /**
     * When the Transport.loop = true, this is the starting position of the loop.
     */
    get loopStart() {
        return new _core_type_Time__WEBPACK_IMPORTED_MODULE_0__.TimeClass(this.context, this._loopStart, "i").toSeconds();
    }
    set loopStart(startPosition) {
        this._loopStart = this.toTicks(startPosition);
    }
    /**
     * When the Transport.loop = true, this is the ending position of the loop.
     */
    get loopEnd() {
        return new _core_type_Time__WEBPACK_IMPORTED_MODULE_0__.TimeClass(this.context, this._loopEnd, "i").toSeconds();
    }
    set loopEnd(endPosition) {
        this._loopEnd = this.toTicks(endPosition);
    }
    /**
     * If the transport loops or not.
     */
    get loop() {
        return this._loop.get(this.now());
    }
    set loop(loop) {
        this._loop.set(loop, this.now());
    }
    /**
     * Set the loop start and stop at the same time.
     * @example
     * // loop over the first measure
     * Tone.Transport.setLoopPoints(0, "1m");
     * Tone.Transport.loop = true;
     */
    setLoopPoints(startPosition, endPosition) {
        this.loopStart = startPosition;
        this.loopEnd = endPosition;
        return this;
    }
    /**
     * The swing value. Between 0-1 where 1 equal to the note + half the subdivision.
     */
    get swing() {
        return this._swingAmount;
    }
    set swing(amount) {
        // scale the values to a normal range
        this._swingAmount = amount;
    }
    /**
     * Set the subdivision which the swing will be applied to.
     * The default value is an 8th note. Value must be less
     * than a quarter note.
     */
    get swingSubdivision() {
        return new _type_Ticks__WEBPACK_IMPORTED_MODULE_5__.TicksClass(this.context, this._swingTicks).toNotation();
    }
    set swingSubdivision(subdivision) {
        this._swingTicks = this.toTicks(subdivision);
    }
    /**
     * The Transport's position in Bars:Beats:Sixteenths.
     * Setting the value will jump to that position right away.
     */
    get position() {
        const now = this.now();
        const ticks = this._clock.getTicksAtTime(now);
        return new _type_Ticks__WEBPACK_IMPORTED_MODULE_5__.TicksClass(this.context, ticks).toBarsBeatsSixteenths();
    }
    set position(progress) {
        const ticks = this.toTicks(progress);
        this.ticks = ticks;
    }
    /**
     * The Transport's position in seconds
     * Setting the value will jump to that position right away.
     */
    get seconds() {
        return this._clock.seconds;
    }
    set seconds(s) {
        const now = this.now();
        const ticks = this._clock.frequency.timeToTicks(s, now);
        this.ticks = ticks;
    }
    /**
     * The Transport's loop position as a normalized value. Always
     * returns 0 if the transport if loop is not true.
     */
    get progress() {
        if (this.loop) {
            const now = this.now();
            const ticks = this._clock.getTicksAtTime(now);
            return (ticks - this._loopStart) / (this._loopEnd - this._loopStart);
        }
        else {
            return 0;
        }
    }
    /**
     * The transports current tick position.
     */
    get ticks() {
        return this._clock.ticks;
    }
    set ticks(t) {
        if (this._clock.ticks !== t) {
            const now = this.now();
            // stop everything synced to the transport
            if (this.state === "started") {
                const ticks = this._clock.getTicksAtTime(now);
                // schedule to start on the next tick, #573
                const time = this._clock.getTimeOfTick(Math.ceil(ticks));
                this.emit("stop", time);
                this._clock.setTicksAtTime(t, time);
                // restart it with the new time
                this.emit("start", time, this._clock.getSecondsAtTime(time));
            }
            else {
                this._clock.setTicksAtTime(t, now);
            }
        }
    }
    /**
     * Get the clock's ticks at the given time.
     * @param  time  When to get the tick value
     * @return The tick value at the given time.
     */
    getTicksAtTime(time) {
        return Math.round(this._clock.getTicksAtTime(time));
    }
    /**
     * Return the elapsed seconds at the given time.
     * @param  time  When to get the elapsed seconds
     * @return  The number of elapsed seconds
     */
    getSecondsAtTime(time) {
        return this._clock.getSecondsAtTime(time);
    }
    /**
     * Pulses Per Quarter note. This is the smallest resolution
     * the Transport timing supports. This should be set once
     * on initialization and not set again. Changing this value
     * after other objects have been created can cause problems.
     */
    get PPQ() {
        return this._clock.frequency.multiplier;
    }
    set PPQ(ppq) {
        this._clock.frequency.multiplier = ppq;
    }
    //-------------------------------------
    // 	SYNCING
    //-------------------------------------
    /**
     * Returns the time aligned to the next subdivision
     * of the Transport. If the Transport is not started,
     * it will return 0.
     * Note: this will not work precisely during tempo ramps.
     * @param  subdivision  The subdivision to quantize to
     * @return  The context time of the next subdivision.
     * @example
     * // the transport must be started, otherwise returns 0
     * Tone.Transport.start();
     * Tone.Transport.nextSubdivision("4n");
     */
    nextSubdivision(subdivision) {
        subdivision = this.toTicks(subdivision);
        if (this.state !== "started") {
            // if the transport's not started, return 0
            return 0;
        }
        else {
            const now = this.now();
            // the remainder of the current ticks and the subdivision
            const transportPos = this.getTicksAtTime(now);
            const remainingTicks = subdivision - transportPos % subdivision;
            return this._clock.nextTickTime(remainingTicks, now);
        }
    }
    /**
     * Attaches the signal to the tempo control signal so that
     * any changes in the tempo will change the signal in the same
     * ratio.
     *
     * @param signal
     * @param ratio Optionally pass in the ratio between the two signals.
     * 			Otherwise it will be computed based on their current values.
     */
    syncSignal(signal, ratio) {
        if (!ratio) {
            // get the sync ratio
            const now = this.now();
            if (signal.getValueAtTime(now) !== 0) {
                const bpm = this.bpm.getValueAtTime(now);
                const computedFreq = 1 / (60 / bpm / this.PPQ);
                ratio = signal.getValueAtTime(now) / computedFreq;
            }
            else {
                ratio = 0;
            }
        }
        const ratioSignal = new _context_Gain__WEBPACK_IMPORTED_MODULE_3__.Gain(ratio);
        // @ts-ignore
        this.bpm.connect(ratioSignal);
        // @ts-ignore
        ratioSignal.connect(signal._param);
        this._syncedSignals.push({
            initial: signal.value,
            ratio: ratioSignal,
            signal,
        });
        signal.value = 0;
        return this;
    }
    /**
     * Unsyncs a previously synced signal from the transport's control.
     * See Transport.syncSignal.
     */
    unsyncSignal(signal) {
        for (let i = this._syncedSignals.length - 1; i >= 0; i--) {
            const syncedSignal = this._syncedSignals[i];
            if (syncedSignal.signal === signal) {
                syncedSignal.ratio.dispose();
                syncedSignal.signal.value = syncedSignal.initial;
                this._syncedSignals.splice(i, 1);
            }
        }
        return this;
    }
    /**
     * Clean up.
     */
    dispose() {
        super.dispose();
        this._clock.dispose();
        (0,_util_Interface__WEBPACK_IMPORTED_MODULE_9__.writable)(this, "bpm");
        this._timeline.dispose();
        this._repeatedEvents.dispose();
        return this;
    }
}
_util_Emitter__WEBPACK_IMPORTED_MODULE_8__.Emitter.mixin(Transport);
//-------------------------------------
// 	INITIALIZATION
//-------------------------------------
(0,_context_ContextInitialization__WEBPACK_IMPORTED_MODULE_2__.onContextInit)(context => {
    context.transport = new Transport({ context });
});
(0,_context_ContextInitialization__WEBPACK_IMPORTED_MODULE_2__.onContextClose)(context => {
    context.transport.dispose();
});
//# sourceMappingURL=Transport.js.map

/***/ }),

/***/ "./node_modules/tone/build/esm/core/clock/TransportEvent.js":
/*!******************************************************************!*\
  !*** ./node_modules/tone/build/esm/core/clock/TransportEvent.js ***!
  \******************************************************************/
/*! namespace exports */
/*! export TransportEvent [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "TransportEvent": () => /* binding */ TransportEvent
/* harmony export */ });
/* harmony import */ var _util_Interface__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/Interface */ "./node_modules/tone/build/esm/core/util/Interface.js");
;
/**
 * TransportEvent is an internal class used by [[Transport]]
 * to schedule events. Do no invoke this class directly, it is
 * handled from within Tone.Transport.
 */
class TransportEvent {
    /**
     * @param transport The transport object which the event belongs to
     */
    constructor(transport, opts) {
        /**
         * The unique id of the event
         */
        this.id = TransportEvent._eventId++;
        const options = Object.assign(TransportEvent.getDefaults(), opts);
        this.transport = transport;
        this.callback = options.callback;
        this._once = options.once;
        this.time = options.time;
    }
    static getDefaults() {
        return {
            callback: _util_Interface__WEBPACK_IMPORTED_MODULE_0__.noOp,
            once: false,
            time: 0,
        };
    }
    /**
     * Invoke the event callback.
     * @param  time  The AudioContext time in seconds of the event
     */
    invoke(time) {
        if (this.callback) {
            this.callback(time);
            if (this._once) {
                this.transport.clear(this.id);
            }
        }
    }
    /**
     * Clean up
     */
    dispose() {
        this.callback = undefined;
        return this;
    }
}
/**
 * Current ID counter
 */
TransportEvent._eventId = 0;
//# sourceMappingURL=TransportEvent.js.map

/***/ }),

/***/ "./node_modules/tone/build/esm/core/clock/TransportRepeatEvent.js":
/*!************************************************************************!*\
  !*** ./node_modules/tone/build/esm/core/clock/TransportRepeatEvent.js ***!
  \************************************************************************/
/*! namespace exports */
/*! export TransportRepeatEvent [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "TransportRepeatEvent": () => /* binding */ TransportRepeatEvent
/* harmony export */ });
/* harmony import */ var _type_Ticks__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../type/Ticks */ "./node_modules/tone/build/esm/core/type/Ticks.js");
/* harmony import */ var _TransportEvent__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./TransportEvent */ "./node_modules/tone/build/esm/core/clock/TransportEvent.js");
;

/**
 * TransportRepeatEvent is an internal class used by Tone.Transport
 * to schedule repeat events. This class should not be instantiated directly.
 */
class TransportRepeatEvent extends _TransportEvent__WEBPACK_IMPORTED_MODULE_1__.TransportEvent {
    /**
     * @param transport The transport object which the event belongs to
     */
    constructor(transport, opts) {
        super(transport, opts);
        /**
         * The ID of the current timeline event
         */
        this._currentId = -1;
        /**
         * The ID of the next timeline event
         */
        this._nextId = -1;
        /**
         * The time of the next event
         */
        this._nextTick = this.time;
        /**
         * a reference to the bound start method
         */
        this._boundRestart = this._restart.bind(this);
        const options = Object.assign(TransportRepeatEvent.getDefaults(), opts);
        this.duration = new _type_Ticks__WEBPACK_IMPORTED_MODULE_0__.TicksClass(transport.context, options.duration).valueOf();
        this._interval = new _type_Ticks__WEBPACK_IMPORTED_MODULE_0__.TicksClass(transport.context, options.interval).valueOf();
        this._nextTick = options.time;
        this.transport.on("start", this._boundRestart);
        this.transport.on("loopStart", this._boundRestart);
        this.context = this.transport.context;
        this._restart();
    }
    static getDefaults() {
        return Object.assign({}, _TransportEvent__WEBPACK_IMPORTED_MODULE_1__.TransportEvent.getDefaults(), {
            duration: Infinity,
            interval: 1,
            once: false,
        });
    }
    /**
     * Invoke the callback. Returns the tick time which
     * the next event should be scheduled at.
     * @param  time  The AudioContext time in seconds of the event
     */
    invoke(time) {
        // create more events if necessary
        this._createEvents(time);
        // call the super class
        super.invoke(time);
    }
    /**
     * Push more events onto the timeline to keep up with the position of the timeline
     */
    _createEvents(time) {
        // schedule the next event
        const ticks = this.transport.getTicksAtTime(time);
        if (ticks >= this.time && ticks >= this._nextTick && this._nextTick + this._interval < this.time + this.duration) {
            this._nextTick += this._interval;
            this._currentId = this._nextId;
            this._nextId = this.transport.scheduleOnce(this.invoke.bind(this), new _type_Ticks__WEBPACK_IMPORTED_MODULE_0__.TicksClass(this.context, this._nextTick).toSeconds());
        }
    }
    /**
     * Push more events onto the timeline to keep up with the position of the timeline
     */
    _restart(time) {
        this.transport.clear(this._currentId);
        this.transport.clear(this._nextId);
        this._nextTick = this.time;
        const ticks = this.transport.getTicksAtTime(time);
        if (ticks > this.time) {
            this._nextTick = this.time + Math.ceil((ticks - this.time) / this._interval) * this._interval;
        }
        this._currentId = this.transport.scheduleOnce(this.invoke.bind(this), new _type_Ticks__WEBPACK_IMPORTED_MODULE_0__.TicksClass(this.context, this._nextTick).toSeconds());
        this._nextTick += this._interval;
        this._nextId = this.transport.scheduleOnce(this.invoke.bind(this), new _type_Ticks__WEBPACK_IMPORTED_MODULE_0__.TicksClass(this.context, this._nextTick).toSeconds());
    }
    /**
     * Clean up
     */
    dispose() {
        super.dispose();
        this.transport.clear(this._currentId);
        this.transport.clear(this._nextId);
        this.transport.off("start", this._boundRestart);
        this.transport.off("loopStart", this._boundRestart);
        return this;
    }
}
//# sourceMappingURL=TransportRepeatEvent.js.map

/***/ }),

/***/ "./node_modules/tone/build/esm/core/context/AudioContext.js":
/*!******************************************************************!*\
  !*** ./node_modules/tone/build/esm/core/context/AudioContext.js ***!
  \******************************************************************/
/*! namespace exports */
/*! export createAudioContext [provided] [no usage info] [missing usage info prevents renaming] */
/*! export createAudioWorkletNode [provided] [no usage info] [missing usage info prevents renaming] */
/*! export createOfflineAudioContext [provided] [no usage info] [missing usage info prevents renaming] */
/*! export hasAudioContext [provided] [no usage info] [missing usage info prevents renaming] */
/*! export supported [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/standardized-audio-context/build/es2019/module.js .isSupported */
/*! export theWindow [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_exports__, __webpack_require__.d, __webpack_require__.r, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "createAudioContext": () => /* binding */ createAudioContext,
/* harmony export */   "createOfflineAudioContext": () => /* binding */ createOfflineAudioContext,
/* harmony export */   "theWindow": () => /* binding */ theWindow,
/* harmony export */   "hasAudioContext": () => /* binding */ hasAudioContext,
/* harmony export */   "createAudioWorkletNode": () => /* binding */ createAudioWorkletNode,
/* harmony export */   "supported": () => /* reexport safe */ standardized_audio_context__WEBPACK_IMPORTED_MODULE_0__.isSupported
/* harmony export */ });
/* harmony import */ var standardized_audio_context__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! standardized-audio-context */ "./node_modules/standardized-audio-context/build/es2019/module.js");
/* harmony import */ var _util_Debug__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util/Debug */ "./node_modules/tone/build/esm/core/util/Debug.js");
/* harmony import */ var _util_TypeCheck__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util/TypeCheck */ "./node_modules/tone/build/esm/core/util/TypeCheck.js");
;


/**
 * Create a new AudioContext
 */
function createAudioContext(options) {
    return new standardized_audio_context__WEBPACK_IMPORTED_MODULE_0__.AudioContext(options);
}
/**
 * Create a new OfflineAudioContext
 */
function createOfflineAudioContext(channels, length, sampleRate) {
    return new standardized_audio_context__WEBPACK_IMPORTED_MODULE_0__.OfflineAudioContext(channels, length, sampleRate);
}
/**
 * A reference to the window object
 * @hidden
 */
const theWindow = typeof self === "object" ? self : null;
/**
 * If the browser has a window object which has an AudioContext
 * @hidden
 */
const hasAudioContext = theWindow &&
    (theWindow.hasOwnProperty("AudioContext") || theWindow.hasOwnProperty("webkitAudioContext"));
function createAudioWorkletNode(context, name, options) {
    (0,_util_Debug__WEBPACK_IMPORTED_MODULE_1__.assert)((0,_util_TypeCheck__WEBPACK_IMPORTED_MODULE_2__.isDefined)(standardized_audio_context__WEBPACK_IMPORTED_MODULE_0__.AudioWorkletNode), "This node only works in a secure context (https or localhost)");
    // @ts-ignore
    return new standardized_audio_context__WEBPACK_IMPORTED_MODULE_0__.AudioWorkletNode(context, name, options);
}
/**
 * This promise resolves to a boolean which indicates if the
 * functionality is supported within the currently used browse.
 * Taken from [standardized-audio-context](https://github.com/chrisguttandin/standardized-audio-context#issupported)
 */

//# sourceMappingURL=AudioContext.js.map

/***/ }),

/***/ "./node_modules/tone/build/esm/core/context/BaseContext.js":
/*!*****************************************************************!*\
  !*** ./node_modules/tone/build/esm/core/context/BaseContext.js ***!
  \*****************************************************************/
/*! namespace exports */
/*! export BaseContext [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "BaseContext": () => /* binding */ BaseContext
/* harmony export */ });
/* harmony import */ var _util_Emitter__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/Emitter */ "./node_modules/tone/build/esm/core/util/Emitter.js");
;
class BaseContext extends _util_Emitter__WEBPACK_IMPORTED_MODULE_0__.Emitter {
    constructor() {
        super(...arguments);
        this.isOffline = false;
    }
}
//# sourceMappingURL=BaseContext.js.map

/***/ }),

/***/ "./node_modules/tone/build/esm/core/context/Context.js":
/*!*************************************************************!*\
  !*** ./node_modules/tone/build/esm/core/context/Context.js ***!
  \*************************************************************/
/*! namespace exports */
/*! export Context [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Context": () => /* binding */ Context
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! tslib */ "./node_modules/tone/node_modules/tslib/tslib.es6.js");
/* harmony import */ var _clock_Ticker__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../clock/Ticker */ "./node_modules/tone/build/esm/core/clock/Ticker.js");
/* harmony import */ var _util_AdvancedTypeCheck__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util/AdvancedTypeCheck */ "./node_modules/tone/build/esm/core/util/AdvancedTypeCheck.js");
/* harmony import */ var _util_Defaults__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util/Defaults */ "./node_modules/tone/build/esm/core/util/Defaults.js");
/* harmony import */ var _util_Timeline__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../util/Timeline */ "./node_modules/tone/build/esm/core/util/Timeline.js");
/* harmony import */ var _util_TypeCheck__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../util/TypeCheck */ "./node_modules/tone/build/esm/core/util/TypeCheck.js");
/* harmony import */ var _AudioContext__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./AudioContext */ "./node_modules/tone/build/esm/core/context/AudioContext.js");
/* harmony import */ var _ContextInitialization__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./ContextInitialization */ "./node_modules/tone/build/esm/core/context/ContextInitialization.js");
/* harmony import */ var _BaseContext__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./BaseContext */ "./node_modules/tone/build/esm/core/context/BaseContext.js");
/* harmony import */ var _util_Debug__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../util/Debug */ "./node_modules/tone/build/esm/core/util/Debug.js");
;









/**
 * Wrapper around the native AudioContext.
 * @category Core
 */
class Context extends _BaseContext__WEBPACK_IMPORTED_MODULE_7__.BaseContext {
    constructor() {
        super();
        this.name = "Context";
        /**
         * An object containing all of the constants AudioBufferSourceNodes
         */
        this._constants = new Map();
        /**
         * All of the setTimeout events.
         */
        this._timeouts = new _util_Timeline__WEBPACK_IMPORTED_MODULE_3__.Timeline();
        /**
         * The timeout id counter
         */
        this._timeoutIds = 0;
        /**
         * Private indicator if the context has been initialized
         */
        this._initialized = false;
        /**
         * Indicates if the context is an OfflineAudioContext or an AudioContext
         */
        this.isOffline = false;
        //--------------------------------------------
        // AUDIO WORKLET
        //--------------------------------------------
        /**
         * Maps a module name to promise of the addModule method
         */
        this._workletModules = new Map();
        const options = (0,_util_Defaults__WEBPACK_IMPORTED_MODULE_2__.optionsFromArguments)(Context.getDefaults(), arguments, ["context"]);
        if (options.context) {
            this._context = options.context;
        }
        else {
            this._context = (0,_AudioContext__WEBPACK_IMPORTED_MODULE_5__.createAudioContext)({
                latencyHint: options.latencyHint,
            });
        }
        this._ticker = new _clock_Ticker__WEBPACK_IMPORTED_MODULE_0__.Ticker(this.emit.bind(this, "tick"), options.clockSource, options.updateInterval);
        this.on("tick", this._timeoutLoop.bind(this));
        // fwd events from the context
        this._context.onstatechange = () => {
            this.emit("statechange", this.state);
        };
        this._setLatencyHint(options.latencyHint);
        this.lookAhead = options.lookAhead;
    }
    static getDefaults() {
        return {
            clockSource: "worker",
            latencyHint: "interactive",
            lookAhead: 0.1,
            updateInterval: 0.05,
        };
    }
    /**
     * Finish setting up the context. **You usually do not need to do this manually.**
     */
    initialize() {
        if (!this._initialized) {
            // add any additional modules
            (0,_ContextInitialization__WEBPACK_IMPORTED_MODULE_6__.initializeContext)(this);
            this._initialized = true;
        }
        return this;
    }
    //---------------------------
    // BASE AUDIO CONTEXT METHODS
    //---------------------------
    createAnalyser() {
        return this._context.createAnalyser();
    }
    createOscillator() {
        return this._context.createOscillator();
    }
    createBufferSource() {
        return this._context.createBufferSource();
    }
    createBiquadFilter() {
        return this._context.createBiquadFilter();
    }
    createBuffer(numberOfChannels, length, sampleRate) {
        return this._context.createBuffer(numberOfChannels, length, sampleRate);
    }
    createChannelMerger(numberOfInputs) {
        return this._context.createChannelMerger(numberOfInputs);
    }
    createChannelSplitter(numberOfOutputs) {
        return this._context.createChannelSplitter(numberOfOutputs);
    }
    createConstantSource() {
        return this._context.createConstantSource();
    }
    createConvolver() {
        return this._context.createConvolver();
    }
    createDelay(maxDelayTime) {
        return this._context.createDelay(maxDelayTime);
    }
    createDynamicsCompressor() {
        return this._context.createDynamicsCompressor();
    }
    createGain() {
        return this._context.createGain();
    }
    createIIRFilter(feedForward, feedback) {
        // @ts-ignore
        return this._context.createIIRFilter(feedForward, feedback);
    }
    createPanner() {
        return this._context.createPanner();
    }
    createPeriodicWave(real, imag, constraints) {
        return this._context.createPeriodicWave(real, imag, constraints);
    }
    createStereoPanner() {
        return this._context.createStereoPanner();
    }
    createWaveShaper() {
        return this._context.createWaveShaper();
    }
    createMediaStreamSource(stream) {
        (0,_util_Debug__WEBPACK_IMPORTED_MODULE_8__.assert)((0,_util_AdvancedTypeCheck__WEBPACK_IMPORTED_MODULE_1__.isAudioContext)(this._context), "Not available if OfflineAudioContext");
        const context = this._context;
        return context.createMediaStreamSource(stream);
    }
    createMediaStreamDestination() {
        (0,_util_Debug__WEBPACK_IMPORTED_MODULE_8__.assert)((0,_util_AdvancedTypeCheck__WEBPACK_IMPORTED_MODULE_1__.isAudioContext)(this._context), "Not available if OfflineAudioContext");
        const context = this._context;
        return context.createMediaStreamDestination();
    }
    decodeAudioData(audioData) {
        return this._context.decodeAudioData(audioData);
    }
    /**
     * The current time in seconds of the AudioContext.
     */
    get currentTime() {
        return this._context.currentTime;
    }
    /**
     * The current time in seconds of the AudioContext.
     */
    get state() {
        return this._context.state;
    }
    /**
     * The current time in seconds of the AudioContext.
     */
    get sampleRate() {
        return this._context.sampleRate;
    }
    /**
     * The listener
     */
    get listener() {
        this.initialize();
        return this._listener;
    }
    set listener(l) {
        (0,_util_Debug__WEBPACK_IMPORTED_MODULE_8__.assert)(!this._initialized, "The listener cannot be set after initialization.");
        this._listener = l;
    }
    /**
     * There is only one Transport per Context. It is created on initialization.
     */
    get transport() {
        this.initialize();
        return this._transport;
    }
    set transport(t) {
        (0,_util_Debug__WEBPACK_IMPORTED_MODULE_8__.assert)(!this._initialized, "The transport cannot be set after initialization.");
        this._transport = t;
    }
    /**
     * This is the Draw object for the context which is useful for synchronizing the draw frame with the Tone.js clock.
     */
    get draw() {
        this.initialize();
        return this._draw;
    }
    set draw(d) {
        (0,_util_Debug__WEBPACK_IMPORTED_MODULE_8__.assert)(!this._initialized, "Draw cannot be set after initialization.");
        this._draw = d;
    }
    /**
     * A reference to the Context's destination node.
     */
    get destination() {
        this.initialize();
        return this._destination;
    }
    set destination(d) {
        (0,_util_Debug__WEBPACK_IMPORTED_MODULE_8__.assert)(!this._initialized, "The destination cannot be set after initialization.");
        this._destination = d;
    }
    /**
     * Create an audio worklet node from a name and options. The module
     * must first be loaded using [[addAudioWorkletModule]].
     */
    createAudioWorkletNode(name, options) {
        return (0,_AudioContext__WEBPACK_IMPORTED_MODULE_5__.createAudioWorkletNode)(this.rawContext, name, options);
    }
    /**
     * Add an AudioWorkletProcessor module
     * @param url The url of the module
     * @param name The name of the module
     */
    addAudioWorkletModule(url, name) {
        return (0,tslib__WEBPACK_IMPORTED_MODULE_9__.__awaiter)(this, void 0, void 0, function* () {
            (0,_util_Debug__WEBPACK_IMPORTED_MODULE_8__.assert)((0,_util_TypeCheck__WEBPACK_IMPORTED_MODULE_4__.isDefined)(this.rawContext.audioWorklet), "AudioWorkletNode is only available in a secure context (https or localhost)");
            if (!this._workletModules.has(name)) {
                this._workletModules.set(name, this.rawContext.audioWorklet.addModule(url));
            }
            yield this._workletModules.get(name);
        });
    }
    /**
     * Returns a promise which resolves when all of the worklets have been loaded on this context
     */
    workletsAreReady() {
        return (0,tslib__WEBPACK_IMPORTED_MODULE_9__.__awaiter)(this, void 0, void 0, function* () {
            const promises = [];
            this._workletModules.forEach(promise => promises.push(promise));
            yield Promise.all(promises);
        });
    }
    //---------------------------
    // TICKER
    //---------------------------
    /**
     * How often the interval callback is invoked.
     * This number corresponds to how responsive the scheduling
     * can be. context.updateInterval + context.lookAhead gives you the
     * total latency between scheduling an event and hearing it.
     */
    get updateInterval() {
        return this._ticker.updateInterval;
    }
    set updateInterval(interval) {
        this._ticker.updateInterval = interval;
    }
    /**
     * What the source of the clock is, either "worker" (default),
     * "timeout", or "offline" (none).
     */
    get clockSource() {
        return this._ticker.type;
    }
    set clockSource(type) {
        this._ticker.type = type;
    }
    /**
     * The type of playback, which affects tradeoffs between audio
     * output latency and responsiveness.
     * In addition to setting the value in seconds, the latencyHint also
     * accepts the strings "interactive" (prioritizes low latency),
     * "playback" (prioritizes sustained playback), "balanced" (balances
     * latency and performance).
     * @example
     * // prioritize sustained playback
     * const context = new Tone.Context({ latencyHint: "playback" });
     * // set this context as the global Context
     * Tone.setContext(context);
     * // the global context is gettable with Tone.getContext()
     * console.log(Tone.getContext().latencyHint);
     */
    get latencyHint() {
        return this._latencyHint;
    }
    /**
     * Update the lookAhead and updateInterval based on the latencyHint
     */
    _setLatencyHint(hint) {
        let lookAheadValue = 0;
        this._latencyHint = hint;
        if ((0,_util_TypeCheck__WEBPACK_IMPORTED_MODULE_4__.isString)(hint)) {
            switch (hint) {
                case "interactive":
                    lookAheadValue = 0.1;
                    break;
                case "playback":
                    lookAheadValue = 0.5;
                    break;
                case "balanced":
                    lookAheadValue = 0.25;
                    break;
            }
        }
        this.lookAhead = lookAheadValue;
        this.updateInterval = lookAheadValue / 2;
    }
    /**
     * The unwrapped AudioContext or OfflineAudioContext
     */
    get rawContext() {
        return this._context;
    }
    /**
     * The current audio context time plus a short [[lookAhead]].
     */
    now() {
        return this._context.currentTime + this.lookAhead;
    }
    /**
     * The current audio context time without the [[lookAhead]].
     * In most cases it is better to use [[now]] instead of [[immediate]] since
     * with [[now]] the [[lookAhead]] is applied equally to _all_ components including internal components,
     * to making sure that everything is scheduled in sync. Mixing [[now]] and [[immediate]]
     * can cause some timing issues. If no lookAhead is desired, you can set the [[lookAhead]] to `0`.
     */
    immediate() {
        return this._context.currentTime;
    }
    /**
     * Starts the audio context from a suspended state. This is required
     * to initially start the AudioContext. See [[Tone.start]]
     */
    resume() {
        if (this._context.state === "suspended" && (0,_util_AdvancedTypeCheck__WEBPACK_IMPORTED_MODULE_1__.isAudioContext)(this._context)) {
            return this._context.resume();
        }
        else {
            return Promise.resolve();
        }
    }
    /**
     * Close the context. Once closed, the context can no longer be used and
     * any AudioNodes created from the context will be silent.
     */
    close() {
        return (0,tslib__WEBPACK_IMPORTED_MODULE_9__.__awaiter)(this, void 0, void 0, function* () {
            if ((0,_util_AdvancedTypeCheck__WEBPACK_IMPORTED_MODULE_1__.isAudioContext)(this._context)) {
                yield this._context.close();
            }
            if (this._initialized) {
                (0,_ContextInitialization__WEBPACK_IMPORTED_MODULE_6__.closeContext)(this);
            }
        });
    }
    /**
     * **Internal** Generate a looped buffer at some constant value.
     */
    getConstant(val) {
        if (this._constants.has(val)) {
            return this._constants.get(val);
        }
        else {
            const buffer = this._context.createBuffer(1, 128, this._context.sampleRate);
            const arr = buffer.getChannelData(0);
            for (let i = 0; i < arr.length; i++) {
                arr[i] = val;
            }
            const constant = this._context.createBufferSource();
            constant.channelCount = 1;
            constant.channelCountMode = "explicit";
            constant.buffer = buffer;
            constant.loop = true;
            constant.start(0);
            this._constants.set(val, constant);
            return constant;
        }
    }
    /**
     * Clean up. Also closes the audio context.
     */
    dispose() {
        super.dispose();
        this._ticker.dispose();
        this._timeouts.dispose();
        Object.keys(this._constants).map(val => this._constants[val].disconnect());
        return this;
    }
    //---------------------------
    // TIMEOUTS
    //---------------------------
    /**
     * The private loop which keeps track of the context scheduled timeouts
     * Is invoked from the clock source
     */
    _timeoutLoop() {
        const now = this.now();
        let firstEvent = this._timeouts.peek();
        while (this._timeouts.length && firstEvent && firstEvent.time <= now) {
            // invoke the callback
            firstEvent.callback();
            // shift the first event off
            this._timeouts.shift();
            // get the next one
            firstEvent = this._timeouts.peek();
        }
    }
    /**
     * A setTimeout which is guaranteed by the clock source.
     * Also runs in the offline context.
     * @param  fn       The callback to invoke
     * @param  timeout  The timeout in seconds
     * @returns ID to use when invoking Context.clearTimeout
     */
    setTimeout(fn, timeout) {
        this._timeoutIds++;
        const now = this.now();
        this._timeouts.add({
            callback: fn,
            id: this._timeoutIds,
            time: now + timeout,
        });
        return this._timeoutIds;
    }
    /**
     * Clears a previously scheduled timeout with Tone.context.setTimeout
     * @param  id  The ID returned from setTimeout
     */
    clearTimeout(id) {
        this._timeouts.forEach(event => {
            if (event.id === id) {
                this._timeouts.remove(event);
            }
        });
        return this;
    }
    /**
     * Clear the function scheduled by [[setInterval]]
     */
    clearInterval(id) {
        return this.clearTimeout(id);
    }
    /**
     * Adds a repeating event to the context's callback clock
     */
    setInterval(fn, interval) {
        const id = ++this._timeoutIds;
        const intervalFn = () => {
            const now = this.now();
            this._timeouts.add({
                callback: () => {
                    // invoke the callback
                    fn();
                    // invoke the event to repeat it
                    intervalFn();
                },
                id,
                time: now + interval,
            });
        };
        // kick it off
        intervalFn();
        return id;
    }
}
//# sourceMappingURL=Context.js.map

/***/ }),

/***/ "./node_modules/tone/build/esm/core/context/ContextInitialization.js":
/*!***************************************************************************!*\
  !*** ./node_modules/tone/build/esm/core/context/ContextInitialization.js ***!
  \***************************************************************************/
/*! namespace exports */
/*! export closeContext [provided] [no usage info] [missing usage info prevents renaming] */
/*! export initializeContext [provided] [no usage info] [missing usage info prevents renaming] */
/*! export onContextClose [provided] [no usage info] [missing usage info prevents renaming] */
/*! export onContextInit [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "onContextInit": () => /* binding */ onContextInit,
/* harmony export */   "initializeContext": () => /* binding */ initializeContext,
/* harmony export */   "onContextClose": () => /* binding */ onContextClose,
/* harmony export */   "closeContext": () => /* binding */ closeContext
/* harmony export */ });
//-------------------------------------
// INITIALIZING NEW CONTEXT
//-------------------------------------
/**
 * Array of callbacks to invoke when a new context is created
 */
const notifyNewContext = [];
/**
 * Used internally to setup a new Context
 */
function onContextInit(cb) {
    notifyNewContext.push(cb);
}
/**
 * Invoke any classes which need to also be initialized when a new context is created.
 */
function initializeContext(ctx) {
    // add any additional modules
    notifyNewContext.forEach(cb => cb(ctx));
}
/**
 * Array of callbacks to invoke when a new context is created
 */
const notifyCloseContext = [];
/**
 * Used internally to tear down a Context
 */
function onContextClose(cb) {
    notifyCloseContext.push(cb);
}
function closeContext(ctx) {
    // add any additional modules
    notifyCloseContext.forEach(cb => cb(ctx));
}
//# sourceMappingURL=ContextInitialization.js.map

/***/ }),

/***/ "./node_modules/tone/build/esm/core/context/Delay.js":
/*!***********************************************************!*\
  !*** ./node_modules/tone/build/esm/core/context/Delay.js ***!
  \***********************************************************/
/*! namespace exports */
/*! export Delay [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Delay": () => /* binding */ Delay
/* harmony export */ });
/* harmony import */ var _context_Param__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../context/Param */ "./node_modules/tone/build/esm/core/context/Param.js");
/* harmony import */ var _util_Defaults__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util/Defaults */ "./node_modules/tone/build/esm/core/util/Defaults.js");
/* harmony import */ var _util_Interface__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util/Interface */ "./node_modules/tone/build/esm/core/util/Interface.js");
/* harmony import */ var _ToneAudioNode__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./ToneAudioNode */ "./node_modules/tone/build/esm/core/context/ToneAudioNode.js");
;



/**
 * Wrapper around Web Audio's native [DelayNode](http://webaudio.github.io/web-audio-api/#the-delaynode-interface).
 * @category Core
 * @example
 * return Tone.Offline(() => {
 * 	const delay = new Tone.Delay(0.1).toDestination();
 * 	// connect the signal to both the delay and the destination
 * 	const pulse = new Tone.PulseOscillator().connect(delay).toDestination();
 * 	// start and stop the pulse
 * 	pulse.start(0).stop(0.01);
 * }, 0.5, 1);
 */
class Delay extends _ToneAudioNode__WEBPACK_IMPORTED_MODULE_3__.ToneAudioNode {
    constructor() {
        super((0,_util_Defaults__WEBPACK_IMPORTED_MODULE_1__.optionsFromArguments)(Delay.getDefaults(), arguments, ["delayTime", "maxDelay"]));
        this.name = "Delay";
        const options = (0,_util_Defaults__WEBPACK_IMPORTED_MODULE_1__.optionsFromArguments)(Delay.getDefaults(), arguments, ["delayTime", "maxDelay"]);
        const maxDelayInSeconds = this.toSeconds(options.maxDelay);
        this._maxDelay = Math.max(maxDelayInSeconds, this.toSeconds(options.delayTime));
        this._delayNode = this.input = this.output = this.context.createDelay(maxDelayInSeconds);
        this.delayTime = new _context_Param__WEBPACK_IMPORTED_MODULE_0__.Param({
            context: this.context,
            param: this._delayNode.delayTime,
            units: "time",
            value: options.delayTime,
            minValue: 0,
            maxValue: this.maxDelay,
        });
        (0,_util_Interface__WEBPACK_IMPORTED_MODULE_2__.readOnly)(this, "delayTime");
    }
    static getDefaults() {
        return Object.assign(_ToneAudioNode__WEBPACK_IMPORTED_MODULE_3__.ToneAudioNode.getDefaults(), {
            delayTime: 0,
            maxDelay: 1,
        });
    }
    /**
     * The maximum delay time. This cannot be changed after
     * the value is passed into the constructor.
     */
    get maxDelay() {
        return this._maxDelay;
    }
    /**
     * Clean up.
     */
    dispose() {
        super.dispose();
        this._delayNode.disconnect();
        this.delayTime.dispose();
        return this;
    }
}
//# sourceMappingURL=Delay.js.map

/***/ }),

/***/ "./node_modules/tone/build/esm/core/context/Destination.js":
/*!*****************************************************************!*\
  !*** ./node_modules/tone/build/esm/core/context/Destination.js ***!
  \*****************************************************************/
/*! namespace exports */
/*! export Destination [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Destination": () => /* binding */ Destination
/* harmony export */ });
/* harmony import */ var _component_channel_Volume__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../component/channel/Volume */ "./node_modules/tone/build/esm/component/channel/Volume.js");
/* harmony import */ var _util_Defaults__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util/Defaults */ "./node_modules/tone/build/esm/core/util/Defaults.js");
/* harmony import */ var _ContextInitialization__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./ContextInitialization */ "./node_modules/tone/build/esm/core/context/ContextInitialization.js");
/* harmony import */ var _Gain__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Gain */ "./node_modules/tone/build/esm/core/context/Gain.js");
/* harmony import */ var _ToneAudioNode__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./ToneAudioNode */ "./node_modules/tone/build/esm/core/context/ToneAudioNode.js");
;




/**
 * A single master output which is connected to the
 * AudioDestinationNode (aka your speakers).
 * It provides useful conveniences such as the ability
 * to set the volume and mute the entire application.
 * It also gives you the ability to apply master effects to your application.
 *
 * @example
 * const oscillator = new Tone.Oscillator().start();
 * // the audio will go from the oscillator to the speakers
 * oscillator.connect(Tone.Destination);
 * // a convenience for connecting to the master output is also provided:
 * oscillator.toDestination();
 * @category Core
 */
class Destination extends _ToneAudioNode__WEBPACK_IMPORTED_MODULE_4__.ToneAudioNode {
    constructor() {
        super((0,_util_Defaults__WEBPACK_IMPORTED_MODULE_1__.optionsFromArguments)(Destination.getDefaults(), arguments));
        this.name = "Destination";
        this.input = new _component_channel_Volume__WEBPACK_IMPORTED_MODULE_0__.Volume({ context: this.context });
        this.output = new _Gain__WEBPACK_IMPORTED_MODULE_3__.Gain({ context: this.context });
        /**
         * The volume of the master output.
         */
        this.volume = this.input.volume;
        const options = (0,_util_Defaults__WEBPACK_IMPORTED_MODULE_1__.optionsFromArguments)(Destination.getDefaults(), arguments);
        (0,_ToneAudioNode__WEBPACK_IMPORTED_MODULE_4__.connectSeries)(this.input, this.output, this.context.rawContext.destination);
        this.mute = options.mute;
        this._internalChannels = [this.input, this.context.rawContext.destination, this.output];
    }
    static getDefaults() {
        return Object.assign(_ToneAudioNode__WEBPACK_IMPORTED_MODULE_4__.ToneAudioNode.getDefaults(), {
            mute: false,
            volume: 0,
        });
    }
    /**
     * Mute the output.
     * @example
     * const oscillator = new Tone.Oscillator().start().toDestination();
     * setTimeout(() => {
     * 	// mute the output
     * 	Tone.Destination.mute = true;
     * }, 1000);
     */
    get mute() {
        return this.input.mute;
    }
    set mute(mute) {
        this.input.mute = mute;
    }
    /**
     * Add a master effects chain. NOTE: this will disconnect any nodes which were previously
     * chained in the master effects chain.
     * @param args All arguments will be connected in a row and the Master will be routed through it.
     * @example
     * // route all audio through a filter and compressor
     * const lowpass = new Tone.Filter(800, "lowpass");
     * const compressor = new Tone.Compressor(-18);
     * Tone.Destination.chain(lowpass, compressor);
     */
    chain(...args) {
        this.input.disconnect();
        args.unshift(this.input);
        args.push(this.output);
        (0,_ToneAudioNode__WEBPACK_IMPORTED_MODULE_4__.connectSeries)(...args);
        return this;
    }
    /**
     * The maximum number of channels the system can output
     * @example
     * console.log(Tone.Destination.maxChannelCount);
     */
    get maxChannelCount() {
        return this.context.rawContext.destination.maxChannelCount;
    }
    /**
     * Clean up
     */
    dispose() {
        super.dispose();
        this.volume.dispose();
        return this;
    }
}
//-------------------------------------
// 	INITIALIZATION
//-------------------------------------
(0,_ContextInitialization__WEBPACK_IMPORTED_MODULE_2__.onContextInit)(context => {
    context.destination = new Destination({ context });
});
(0,_ContextInitialization__WEBPACK_IMPORTED_MODULE_2__.onContextClose)(context => {
    context.destination.dispose();
});
//# sourceMappingURL=Destination.js.map

/***/ }),

/***/ "./node_modules/tone/build/esm/core/context/DummyContext.js":
/*!******************************************************************!*\
  !*** ./node_modules/tone/build/esm/core/context/DummyContext.js ***!
  \******************************************************************/
/*! namespace exports */
/*! export DummyContext [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "DummyContext": () => /* binding */ DummyContext
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! tslib */ "./node_modules/tone/node_modules/tslib/tslib.es6.js");
/* harmony import */ var _BaseContext__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./BaseContext */ "./node_modules/tone/build/esm/core/context/BaseContext.js");
;

class DummyContext extends _BaseContext__WEBPACK_IMPORTED_MODULE_0__.BaseContext {
    constructor() {
        super(...arguments);
        this.lookAhead = 0;
        this.latencyHint = 0;
        this.isOffline = false;
    }
    //---------------------------
    // BASE AUDIO CONTEXT METHODS
    //---------------------------
    createAnalyser() {
        return {};
    }
    createOscillator() {
        return {};
    }
    createBufferSource() {
        return {};
    }
    createBiquadFilter() {
        return {};
    }
    createBuffer(_numberOfChannels, _length, _sampleRate) {
        return {};
    }
    createChannelMerger(_numberOfInputs) {
        return {};
    }
    createChannelSplitter(_numberOfOutputs) {
        return {};
    }
    createConstantSource() {
        return {};
    }
    createConvolver() {
        return {};
    }
    createDelay(_maxDelayTime) {
        return {};
    }
    createDynamicsCompressor() {
        return {};
    }
    createGain() {
        return {};
    }
    createIIRFilter(_feedForward, _feedback) {
        return {};
    }
    createPanner() {
        return {};
    }
    createPeriodicWave(_real, _imag, _constraints) {
        return {};
    }
    createStereoPanner() {
        return {};
    }
    createWaveShaper() {
        return {};
    }
    createMediaStreamSource(_stream) {
        return {};
    }
    createMediaStreamDestination() {
        return {};
    }
    decodeAudioData(_audioData) {
        return Promise.resolve({});
    }
    //---------------------------
    // TONE AUDIO CONTEXT METHODS
    //---------------------------
    createAudioWorkletNode(_name, _options) {
        return {};
    }
    get rawContext() {
        return {};
    }
    addAudioWorkletModule(_url, _name) {
        return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(this, void 0, void 0, function* () {
            return Promise.resolve();
        });
    }
    resume() {
        return Promise.resolve();
    }
    setTimeout(_fn, _timeout) {
        return 0;
    }
    clearTimeout(_id) {
        return this;
    }
    setInterval(_fn, _interval) {
        return 0;
    }
    clearInterval(_id) {
        return this;
    }
    getConstant(_val) {
        return {};
    }
    get currentTime() {
        return 0;
    }
    get state() {
        return {};
    }
    get sampleRate() {
        return 0;
    }
    get listener() {
        return {};
    }
    get transport() {
        return {};
    }
    get draw() {
        return {};
    }
    set draw(_d) { }
    get destination() {
        return {};
    }
    set destination(_d) { }
    now() {
        return 0;
    }
    immediate() {
        return 0;
    }
}
//# sourceMappingURL=DummyContext.js.map

/***/ }),

/***/ "./node_modules/tone/build/esm/core/context/Gain.js":
/*!**********************************************************!*\
  !*** ./node_modules/tone/build/esm/core/context/Gain.js ***!
  \**********************************************************/
/*! namespace exports */
/*! export Gain [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Gain": () => /* binding */ Gain
/* harmony export */ });
/* harmony import */ var _context_Param__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../context/Param */ "./node_modules/tone/build/esm/core/context/Param.js");
/* harmony import */ var _util_Defaults__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util/Defaults */ "./node_modules/tone/build/esm/core/util/Defaults.js");
/* harmony import */ var _util_Interface__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util/Interface */ "./node_modules/tone/build/esm/core/util/Interface.js");
/* harmony import */ var _ToneAudioNode__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./ToneAudioNode */ "./node_modules/tone/build/esm/core/context/ToneAudioNode.js");
;



/**
 * A thin wrapper around the Native Web Audio GainNode.
 * The GainNode is a basic building block of the Web Audio
 * API and is useful for routing audio and adjusting gains.
 * @category Core
 * @example
 * return Tone.Offline(() => {
 * 	const gainNode = new Tone.Gain(0).toDestination();
 * 	const osc = new Tone.Oscillator(30).connect(gainNode).start();
 * 	gainNode.gain.rampTo(1, 0.1);
 * 	gainNode.gain.rampTo(0, 0.4, 0.2);
 * }, 0.7, 1);
 */
class Gain extends _ToneAudioNode__WEBPACK_IMPORTED_MODULE_3__.ToneAudioNode {
    constructor() {
        super((0,_util_Defaults__WEBPACK_IMPORTED_MODULE_1__.optionsFromArguments)(Gain.getDefaults(), arguments, ["gain", "units"]));
        this.name = "Gain";
        /**
         * The wrapped GainNode.
         */
        this._gainNode = this.context.createGain();
        // input = output
        this.input = this._gainNode;
        this.output = this._gainNode;
        const options = (0,_util_Defaults__WEBPACK_IMPORTED_MODULE_1__.optionsFromArguments)(Gain.getDefaults(), arguments, ["gain", "units"]);
        this.gain = new _context_Param__WEBPACK_IMPORTED_MODULE_0__.Param({
            context: this.context,
            convert: options.convert,
            param: this._gainNode.gain,
            units: options.units,
            value: options.gain,
            minValue: options.minValue,
            maxValue: options.maxValue,
        });
        (0,_util_Interface__WEBPACK_IMPORTED_MODULE_2__.readOnly)(this, "gain");
    }
    static getDefaults() {
        return Object.assign(_ToneAudioNode__WEBPACK_IMPORTED_MODULE_3__.ToneAudioNode.getDefaults(), {
            convert: true,
            gain: 1,
            units: "gain",
        });
    }
    /**
     * Clean up.
     */
    dispose() {
        super.dispose();
        this._gainNode.disconnect();
        this.gain.dispose();
        return this;
    }
}
//# sourceMappingURL=Gain.js.map

/***/ }),

/***/ "./node_modules/tone/build/esm/core/context/Listener.js":
/*!**************************************************************!*\
  !*** ./node_modules/tone/build/esm/core/context/Listener.js ***!
  \**************************************************************/
/*! namespace exports */
/*! export Listener [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Listener": () => /* binding */ Listener
/* harmony export */ });
/* harmony import */ var _ToneAudioNode__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ToneAudioNode */ "./node_modules/tone/build/esm/core/context/ToneAudioNode.js");
/* harmony import */ var _Param__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Param */ "./node_modules/tone/build/esm/core/context/Param.js");
/* harmony import */ var _ContextInitialization__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./ContextInitialization */ "./node_modules/tone/build/esm/core/context/ContextInitialization.js");
;


/**
 * Tone.Listener is a thin wrapper around the AudioListener. Listener combined
 * with [[Panner3D]] makes up the Web Audio API's 3D panning system. Panner3D allows you
 * to place sounds in 3D and Listener allows you to navigate the 3D sound environment from
 * a first-person perspective. There is only one listener per audio context.
 */
class Listener extends _ToneAudioNode__WEBPACK_IMPORTED_MODULE_0__.ToneAudioNode {
    constructor() {
        super(...arguments);
        this.name = "Listener";
        this.positionX = new _Param__WEBPACK_IMPORTED_MODULE_1__.Param({
            context: this.context,
            param: this.context.rawContext.listener.positionX,
        });
        this.positionY = new _Param__WEBPACK_IMPORTED_MODULE_1__.Param({
            context: this.context,
            param: this.context.rawContext.listener.positionY,
        });
        this.positionZ = new _Param__WEBPACK_IMPORTED_MODULE_1__.Param({
            context: this.context,
            param: this.context.rawContext.listener.positionZ,
        });
        this.forwardX = new _Param__WEBPACK_IMPORTED_MODULE_1__.Param({
            context: this.context,
            param: this.context.rawContext.listener.forwardX,
        });
        this.forwardY = new _Param__WEBPACK_IMPORTED_MODULE_1__.Param({
            context: this.context,
            param: this.context.rawContext.listener.forwardY,
        });
        this.forwardZ = new _Param__WEBPACK_IMPORTED_MODULE_1__.Param({
            context: this.context,
            param: this.context.rawContext.listener.forwardZ,
        });
        this.upX = new _Param__WEBPACK_IMPORTED_MODULE_1__.Param({
            context: this.context,
            param: this.context.rawContext.listener.upX,
        });
        this.upY = new _Param__WEBPACK_IMPORTED_MODULE_1__.Param({
            context: this.context,
            param: this.context.rawContext.listener.upY,
        });
        this.upZ = new _Param__WEBPACK_IMPORTED_MODULE_1__.Param({
            context: this.context,
            param: this.context.rawContext.listener.upZ,
        });
    }
    static getDefaults() {
        return Object.assign(_ToneAudioNode__WEBPACK_IMPORTED_MODULE_0__.ToneAudioNode.getDefaults(), {
            positionX: 0,
            positionY: 0,
            positionZ: 0,
            forwardX: 0,
            forwardY: 0,
            forwardZ: -1,
            upX: 0,
            upY: 1,
            upZ: 0,
        });
    }
    dispose() {
        super.dispose();
        this.positionX.dispose();
        this.positionY.dispose();
        this.positionZ.dispose();
        this.forwardX.dispose();
        this.forwardY.dispose();
        this.forwardZ.dispose();
        this.upX.dispose();
        this.upY.dispose();
        this.upZ.dispose();
        return this;
    }
}
//-------------------------------------
// 	INITIALIZATION
//-------------------------------------
(0,_ContextInitialization__WEBPACK_IMPORTED_MODULE_2__.onContextInit)(context => {
    context.listener = new Listener({ context });
});
(0,_ContextInitialization__WEBPACK_IMPORTED_MODULE_2__.onContextClose)(context => {
    context.listener.dispose();
});
//# sourceMappingURL=Listener.js.map

/***/ }),

/***/ "./node_modules/tone/build/esm/core/context/Offline.js":
/*!*************************************************************!*\
  !*** ./node_modules/tone/build/esm/core/context/Offline.js ***!
  \*************************************************************/
/*! namespace exports */
/*! export Offline [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Offline": () => /* binding */ Offline
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! tslib */ "./node_modules/tone/node_modules/tslib/tslib.es6.js");
/* harmony import */ var _Global__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Global */ "./node_modules/tone/build/esm/core/Global.js");
/* harmony import */ var _OfflineContext__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./OfflineContext */ "./node_modules/tone/build/esm/core/context/OfflineContext.js");
/* harmony import */ var _ToneAudioBuffer__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./ToneAudioBuffer */ "./node_modules/tone/build/esm/core/context/ToneAudioBuffer.js");
;



/**
 * Generate a buffer by rendering all of the Tone.js code within the callback using the OfflineAudioContext.
 * The OfflineAudioContext is capable of rendering much faster than real time in many cases.
 * The callback function also passes in an offline instance of [[Context]] which can be used
 * to schedule events along the Transport.
 * @param  callback  All Tone.js nodes which are created and scheduled within this callback are recorded into the output Buffer.
 * @param  duration     the amount of time to record for.
 * @return  The promise which is invoked with the ToneAudioBuffer of the recorded output.
 * @example
 * // render 2 seconds of the oscillator
 * Tone.Offline(() => {
 * 	// only nodes created in this callback will be recorded
 * 	const oscillator = new Tone.Oscillator().toDestination().start(0);
 * }, 2).then((buffer) => {
 * 	// do something with the output buffer
 * 	console.log(buffer);
 * });
 * @example
 * // can also schedule events along the Transport
 * // using the passed in Offline Transport
 * Tone.Offline(({ transport }) => {
 * 	const osc = new Tone.Oscillator().toDestination();
 * 	transport.schedule(time => {
 * 		osc.start(time).stop(time + 0.1);
 * 	}, 1);
 * 	// make sure to start the transport
 * 	transport.start(0.2);
 * }, 4).then((buffer) => {
 * 	// do something with the output buffer
 * 	console.log(buffer);
 * });
 * @category Core
 */
function Offline(callback, duration, channels = 2, sampleRate = (0,_Global__WEBPACK_IMPORTED_MODULE_0__.getContext)().sampleRate) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__awaiter)(this, void 0, void 0, function* () {
        // set the OfflineAudioContext based on the current context
        const originalContext = (0,_Global__WEBPACK_IMPORTED_MODULE_0__.getContext)();
        const context = new _OfflineContext__WEBPACK_IMPORTED_MODULE_1__.OfflineContext(channels, duration, sampleRate);
        (0,_Global__WEBPACK_IMPORTED_MODULE_0__.setContext)(context);
        // invoke the callback/scheduling
        yield callback(context);
        // then render the audio
        const bufferPromise = context.render();
        // return the original AudioContext
        (0,_Global__WEBPACK_IMPORTED_MODULE_0__.setContext)(originalContext);
        // await the rendering
        const buffer = yield bufferPromise;
        // return the audio
        return new _ToneAudioBuffer__WEBPACK_IMPORTED_MODULE_2__.ToneAudioBuffer(buffer);
    });
}
//# sourceMappingURL=Offline.js.map

/***/ }),

/***/ "./node_modules/tone/build/esm/core/context/OfflineContext.js":
/*!********************************************************************!*\
  !*** ./node_modules/tone/build/esm/core/context/OfflineContext.js ***!
  \********************************************************************/
/*! namespace exports */
/*! export OfflineContext [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "OfflineContext": () => /* binding */ OfflineContext
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! tslib */ "./node_modules/tone/node_modules/tslib/tslib.es6.js");
/* harmony import */ var _context_AudioContext__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../context/AudioContext */ "./node_modules/tone/build/esm/core/context/AudioContext.js");
/* harmony import */ var _context_Context__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../context/Context */ "./node_modules/tone/build/esm/core/context/Context.js");
/* harmony import */ var _util_AdvancedTypeCheck__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util/AdvancedTypeCheck */ "./node_modules/tone/build/esm/core/util/AdvancedTypeCheck.js");
/* harmony import */ var _ToneAudioBuffer__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./ToneAudioBuffer */ "./node_modules/tone/build/esm/core/context/ToneAudioBuffer.js");
;




/**
 * Wrapper around the OfflineAudioContext
 * @category Core
 * @example
 * // generate a single channel, 0.5 second buffer
 * const context = new Tone.OfflineContext(1, 0.5, 44100);
 * const osc = new Tone.Oscillator({ context });
 * context.render().then(buffer => {
 * 	console.log(buffer.numberOfChannels, buffer.duration);
 * });
 */
class OfflineContext extends _context_Context__WEBPACK_IMPORTED_MODULE_1__.Context {
    constructor() {
        super({
            clockSource: "offline",
            context: (0,_util_AdvancedTypeCheck__WEBPACK_IMPORTED_MODULE_2__.isOfflineAudioContext)(arguments[0]) ?
                arguments[0] : (0,_context_AudioContext__WEBPACK_IMPORTED_MODULE_0__.createOfflineAudioContext)(arguments[0], arguments[1] * arguments[2], arguments[2]),
            lookAhead: 0,
            updateInterval: (0,_util_AdvancedTypeCheck__WEBPACK_IMPORTED_MODULE_2__.isOfflineAudioContext)(arguments[0]) ?
                128 / arguments[0].sampleRate : 128 / arguments[2],
        });
        this.name = "OfflineContext";
        /**
         * An artificial clock source
         */
        this._currentTime = 0;
        this.isOffline = true;
        this._duration = (0,_util_AdvancedTypeCheck__WEBPACK_IMPORTED_MODULE_2__.isOfflineAudioContext)(arguments[0]) ?
            arguments[0].length / arguments[0].sampleRate : arguments[1];
    }
    /**
     * Override the now method to point to the internal clock time
     */
    now() {
        return this._currentTime;
    }
    /**
     * Same as this.now()
     */
    get currentTime() {
        return this._currentTime;
    }
    /**
     * Render just the clock portion of the audio context.
     */
    _renderClock(asynchronous) {
        return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(this, void 0, void 0, function* () {
            let index = 0;
            while (this._duration - this._currentTime >= 0) {
                // invoke all the callbacks on that time
                this.emit("tick");
                // increment the clock in block-sized chunks
                this._currentTime += 128 / this.sampleRate;
                // yield once a second of audio
                index++;
                const yieldEvery = Math.floor(this.sampleRate / 128);
                if (asynchronous && index % yieldEvery === 0) {
                    yield new Promise(done => setTimeout(done, 1));
                }
            }
        });
    }
    /**
     * Render the output of the OfflineContext
     * @param asynchronous If the clock should be rendered asynchronously, which will not block the main thread, but be slightly slower.
     */
    render(asynchronous = true) {
        return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(this, void 0, void 0, function* () {
            yield this.workletsAreReady();
            yield this._renderClock(asynchronous);
            const buffer = yield this._context.startRendering();
            return new _ToneAudioBuffer__WEBPACK_IMPORTED_MODULE_3__.ToneAudioBuffer(buffer);
        });
    }
    /**
     * Close the context
     */
    close() {
        return Promise.resolve();
    }
}
//# sourceMappingURL=OfflineContext.js.map

/***/ }),

/***/ "./node_modules/tone/build/esm/core/context/Param.js":
/*!***********************************************************!*\
  !*** ./node_modules/tone/build/esm/core/context/Param.js ***!
  \***********************************************************/
/*! namespace exports */
/*! export Param [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Param": () => /* binding */ Param
/* harmony export */ });
/* harmony import */ var _type_Conversions__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../type/Conversions */ "./node_modules/tone/build/esm/core/type/Conversions.js");
/* harmony import */ var _util_AdvancedTypeCheck__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util/AdvancedTypeCheck */ "./node_modules/tone/build/esm/core/util/AdvancedTypeCheck.js");
/* harmony import */ var _util_Defaults__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util/Defaults */ "./node_modules/tone/build/esm/core/util/Defaults.js");
/* harmony import */ var _util_Timeline__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../util/Timeline */ "./node_modules/tone/build/esm/core/util/Timeline.js");
/* harmony import */ var _util_TypeCheck__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../util/TypeCheck */ "./node_modules/tone/build/esm/core/util/TypeCheck.js");
/* harmony import */ var _ToneWithContext__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./ToneWithContext */ "./node_modules/tone/build/esm/core/context/ToneWithContext.js");
/* harmony import */ var _util_Math__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../util/Math */ "./node_modules/tone/build/esm/core/util/Math.js");
/* harmony import */ var _util_Debug__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../util/Debug */ "./node_modules/tone/build/esm/core/util/Debug.js");
;







/**
 * Param wraps the native Web Audio's AudioParam to provide
 * additional unit conversion functionality. It also
 * serves as a base-class for classes which have a single,
 * automatable parameter.
 * @category Core
 */
class Param extends _ToneWithContext__WEBPACK_IMPORTED_MODULE_5__.ToneWithContext {
    constructor() {
        super((0,_util_Defaults__WEBPACK_IMPORTED_MODULE_2__.optionsFromArguments)(Param.getDefaults(), arguments, ["param", "units", "convert"]));
        this.name = "Param";
        this.overridden = false;
        /**
         * The minimum output value
         */
        this._minOutput = 1e-7;
        const options = (0,_util_Defaults__WEBPACK_IMPORTED_MODULE_2__.optionsFromArguments)(Param.getDefaults(), arguments, ["param", "units", "convert"]);
        (0,_util_Debug__WEBPACK_IMPORTED_MODULE_7__.assert)((0,_util_TypeCheck__WEBPACK_IMPORTED_MODULE_4__.isDefined)(options.param) &&
            ((0,_util_AdvancedTypeCheck__WEBPACK_IMPORTED_MODULE_1__.isAudioParam)(options.param) || options.param instanceof Param), "param must be an AudioParam");
        while (!(0,_util_AdvancedTypeCheck__WEBPACK_IMPORTED_MODULE_1__.isAudioParam)(options.param)) {
            options.param = options.param._param;
        }
        this._swappable = (0,_util_TypeCheck__WEBPACK_IMPORTED_MODULE_4__.isDefined)(options.swappable) ? options.swappable : false;
        if (this._swappable) {
            this.input = this.context.createGain();
            // initialize
            this._param = options.param;
            this.input.connect(this._param);
        }
        else {
            this._param = this.input = options.param;
        }
        this._events = new _util_Timeline__WEBPACK_IMPORTED_MODULE_3__.Timeline(1000);
        this._initialValue = this._param.defaultValue;
        this.units = options.units;
        this.convert = options.convert;
        this._minValue = options.minValue;
        this._maxValue = options.maxValue;
        // if the value is defined, set it immediately
        if ((0,_util_TypeCheck__WEBPACK_IMPORTED_MODULE_4__.isDefined)(options.value) && options.value !== this._toType(this._initialValue)) {
            this.setValueAtTime(options.value, 0);
        }
    }
    static getDefaults() {
        return Object.assign(_ToneWithContext__WEBPACK_IMPORTED_MODULE_5__.ToneWithContext.getDefaults(), {
            convert: true,
            units: "number",
        });
    }
    get value() {
        const now = this.now();
        return this.getValueAtTime(now);
    }
    set value(value) {
        this.cancelScheduledValues(this.now());
        this.setValueAtTime(value, this.now());
    }
    get minValue() {
        // if it's not the default minValue, return it
        if ((0,_util_TypeCheck__WEBPACK_IMPORTED_MODULE_4__.isDefined)(this._minValue)) {
            return this._minValue;
        }
        else if (this.units === "time" || this.units === "frequency" ||
            this.units === "normalRange" || this.units === "positive" ||
            this.units === "transportTime" || this.units === "ticks" ||
            this.units === "bpm" || this.units === "hertz" || this.units === "samples") {
            return 0;
        }
        else if (this.units === "audioRange") {
            return -1;
        }
        else if (this.units === "decibels") {
            return -Infinity;
        }
        else {
            return this._param.minValue;
        }
    }
    get maxValue() {
        if ((0,_util_TypeCheck__WEBPACK_IMPORTED_MODULE_4__.isDefined)(this._maxValue)) {
            return this._maxValue;
        }
        else if (this.units === "normalRange" ||
            this.units === "audioRange") {
            return 1;
        }
        else {
            return this._param.maxValue;
        }
    }
    /**
     * Type guard based on the unit name
     */
    _is(arg, type) {
        return this.units === type;
    }
    /**
     * Make sure the value is always in the defined range
     */
    _assertRange(value) {
        if ((0,_util_TypeCheck__WEBPACK_IMPORTED_MODULE_4__.isDefined)(this.maxValue) && (0,_util_TypeCheck__WEBPACK_IMPORTED_MODULE_4__.isDefined)(this.minValue)) {
            (0,_util_Debug__WEBPACK_IMPORTED_MODULE_7__.assertRange)(value, this._fromType(this.minValue), this._fromType(this.maxValue));
        }
        return value;
    }
    /**
     * Convert the given value from the type specified by Param.units
     * into the destination value (such as Gain or Frequency).
     */
    _fromType(val) {
        if (this.convert && !this.overridden) {
            if (this._is(val, "time")) {
                return this.toSeconds(val);
            }
            else if (this._is(val, "decibels")) {
                return (0,_type_Conversions__WEBPACK_IMPORTED_MODULE_0__.dbToGain)(val);
            }
            else if (this._is(val, "frequency")) {
                return this.toFrequency(val);
            }
            else {
                return val;
            }
        }
        else if (this.overridden) {
            // if it's overridden, should only schedule 0s
            return 0;
        }
        else {
            return val;
        }
    }
    /**
     * Convert the parameters value into the units specified by Param.units.
     */
    _toType(val) {
        if (this.convert && this.units === "decibels") {
            return (0,_type_Conversions__WEBPACK_IMPORTED_MODULE_0__.gainToDb)(val);
        }
        else {
            return val;
        }
    }
    //-------------------------------------
    // ABSTRACT PARAM INTERFACE
    // all docs are generated from ParamInterface.ts
    //-------------------------------------
    setValueAtTime(value, time) {
        const computedTime = this.toSeconds(time);
        const numericValue = this._fromType(value);
        (0,_util_Debug__WEBPACK_IMPORTED_MODULE_7__.assert)(isFinite(numericValue) && isFinite(computedTime), `Invalid argument(s) to setValueAtTime: ${JSON.stringify(value)}, ${JSON.stringify(time)}`);
        this._assertRange(numericValue);
        this.log(this.units, "setValueAtTime", value, computedTime);
        this._events.add({
            time: computedTime,
            type: "setValueAtTime",
            value: numericValue,
        });
        this._param.setValueAtTime(numericValue, computedTime);
        return this;
    }
    getValueAtTime(time) {
        const computedTime = Math.max(this.toSeconds(time), 0);
        const after = this._events.getAfter(computedTime);
        const before = this._events.get(computedTime);
        let value = this._initialValue;
        // if it was set by
        if (before === null) {
            value = this._initialValue;
        }
        else if (before.type === "setTargetAtTime" && (after === null || after.type === "setValueAtTime")) {
            const previous = this._events.getBefore(before.time);
            let previousVal;
            if (previous === null) {
                previousVal = this._initialValue;
            }
            else {
                previousVal = previous.value;
            }
            if (before.type === "setTargetAtTime") {
                value = this._exponentialApproach(before.time, previousVal, before.value, before.constant, computedTime);
            }
        }
        else if (after === null) {
            value = before.value;
        }
        else if (after.type === "linearRampToValueAtTime" || after.type === "exponentialRampToValueAtTime") {
            let beforeValue = before.value;
            if (before.type === "setTargetAtTime") {
                const previous = this._events.getBefore(before.time);
                if (previous === null) {
                    beforeValue = this._initialValue;
                }
                else {
                    beforeValue = previous.value;
                }
            }
            if (after.type === "linearRampToValueAtTime") {
                value = this._linearInterpolate(before.time, beforeValue, after.time, after.value, computedTime);
            }
            else {
                value = this._exponentialInterpolate(before.time, beforeValue, after.time, after.value, computedTime);
            }
        }
        else {
            value = before.value;
        }
        return this._toType(value);
    }
    setRampPoint(time) {
        time = this.toSeconds(time);
        let currentVal = this.getValueAtTime(time);
        this.cancelAndHoldAtTime(time);
        if (this._fromType(currentVal) === 0) {
            currentVal = this._toType(this._minOutput);
        }
        this.setValueAtTime(currentVal, time);
        return this;
    }
    linearRampToValueAtTime(value, endTime) {
        const numericValue = this._fromType(value);
        const computedTime = this.toSeconds(endTime);
        (0,_util_Debug__WEBPACK_IMPORTED_MODULE_7__.assert)(isFinite(numericValue) && isFinite(computedTime), `Invalid argument(s) to linearRampToValueAtTime: ${JSON.stringify(value)}, ${JSON.stringify(endTime)}`);
        this._assertRange(numericValue);
        this._events.add({
            time: computedTime,
            type: "linearRampToValueAtTime",
            value: numericValue,
        });
        this.log(this.units, "linearRampToValueAtTime", value, computedTime);
        this._param.linearRampToValueAtTime(numericValue, computedTime);
        return this;
    }
    exponentialRampToValueAtTime(value, endTime) {
        let numericValue = this._fromType(value);
        numericValue = Math.max(this._minOutput, numericValue);
        this._assertRange(numericValue);
        const computedTime = this.toSeconds(endTime);
        (0,_util_Debug__WEBPACK_IMPORTED_MODULE_7__.assert)(isFinite(numericValue) && isFinite(computedTime), `Invalid argument(s) to exponentialRampToValueAtTime: ${JSON.stringify(value)}, ${JSON.stringify(endTime)}`);
        // store the event
        this._events.add({
            time: computedTime,
            type: "exponentialRampToValueAtTime",
            value: numericValue,
        });
        this.log(this.units, "exponentialRampToValueAtTime", value, computedTime);
        this._param.exponentialRampToValueAtTime(numericValue, computedTime);
        return this;
    }
    exponentialRampTo(value, rampTime, startTime) {
        startTime = this.toSeconds(startTime);
        this.setRampPoint(startTime);
        this.exponentialRampToValueAtTime(value, startTime + this.toSeconds(rampTime));
        return this;
    }
    linearRampTo(value, rampTime, startTime) {
        startTime = this.toSeconds(startTime);
        this.setRampPoint(startTime);
        this.linearRampToValueAtTime(value, startTime + this.toSeconds(rampTime));
        return this;
    }
    targetRampTo(value, rampTime, startTime) {
        startTime = this.toSeconds(startTime);
        this.setRampPoint(startTime);
        this.exponentialApproachValueAtTime(value, startTime, rampTime);
        return this;
    }
    exponentialApproachValueAtTime(value, time, rampTime) {
        time = this.toSeconds(time);
        rampTime = this.toSeconds(rampTime);
        const timeConstant = Math.log(rampTime + 1) / Math.log(200);
        this.setTargetAtTime(value, time, timeConstant);
        // at 90% start a linear ramp to the final value
        this.cancelAndHoldAtTime(time + rampTime * 0.9);
        this.linearRampToValueAtTime(value, time + rampTime);
        return this;
    }
    setTargetAtTime(value, startTime, timeConstant) {
        const numericValue = this._fromType(value);
        // The value will never be able to approach without timeConstant > 0.
        (0,_util_Debug__WEBPACK_IMPORTED_MODULE_7__.assert)(isFinite(timeConstant) && timeConstant > 0, "timeConstant must be a number greater than 0");
        const computedTime = this.toSeconds(startTime);
        this._assertRange(numericValue);
        (0,_util_Debug__WEBPACK_IMPORTED_MODULE_7__.assert)(isFinite(numericValue) && isFinite(computedTime), `Invalid argument(s) to setTargetAtTime: ${JSON.stringify(value)}, ${JSON.stringify(startTime)}`);
        this._events.add({
            constant: timeConstant,
            time: computedTime,
            type: "setTargetAtTime",
            value: numericValue,
        });
        this.log(this.units, "setTargetAtTime", value, computedTime, timeConstant);
        this._param.setTargetAtTime(numericValue, computedTime, timeConstant);
        return this;
    }
    setValueCurveAtTime(values, startTime, duration, scaling = 1) {
        duration = this.toSeconds(duration);
        startTime = this.toSeconds(startTime);
        const startingValue = this._fromType(values[0]) * scaling;
        this.setValueAtTime(this._toType(startingValue), startTime);
        const segTime = duration / (values.length - 1);
        for (let i = 1; i < values.length; i++) {
            const numericValue = this._fromType(values[i]) * scaling;
            this.linearRampToValueAtTime(this._toType(numericValue), startTime + i * segTime);
        }
        return this;
    }
    cancelScheduledValues(time) {
        const computedTime = this.toSeconds(time);
        (0,_util_Debug__WEBPACK_IMPORTED_MODULE_7__.assert)(isFinite(computedTime), `Invalid argument to cancelScheduledValues: ${JSON.stringify(time)}`);
        this._events.cancel(computedTime);
        this._param.cancelScheduledValues(computedTime);
        this.log(this.units, "cancelScheduledValues", computedTime);
        return this;
    }
    cancelAndHoldAtTime(time) {
        const computedTime = this.toSeconds(time);
        const valueAtTime = this._fromType(this.getValueAtTime(computedTime));
        // remove the schedule events
        (0,_util_Debug__WEBPACK_IMPORTED_MODULE_7__.assert)(isFinite(computedTime), `Invalid argument to cancelAndHoldAtTime: ${JSON.stringify(time)}`);
        this.log(this.units, "cancelAndHoldAtTime", computedTime, "value=" + valueAtTime);
        // if there is an event at the given computedTime
        // and that even is not a "set"
        const before = this._events.get(computedTime);
        const after = this._events.getAfter(computedTime);
        if (before && (0,_util_Math__WEBPACK_IMPORTED_MODULE_6__.EQ)(before.time, computedTime)) {
            // remove everything after
            if (after) {
                this._param.cancelScheduledValues(after.time);
                this._events.cancel(after.time);
            }
            else {
                this._param.cancelAndHoldAtTime(computedTime);
                this._events.cancel(computedTime + this.sampleTime);
            }
        }
        else if (after) {
            this._param.cancelScheduledValues(after.time);
            // cancel the next event(s)
            this._events.cancel(after.time);
            if (after.type === "linearRampToValueAtTime") {
                this.linearRampToValueAtTime(this._toType(valueAtTime), computedTime);
            }
            else if (after.type === "exponentialRampToValueAtTime") {
                this.exponentialRampToValueAtTime(this._toType(valueAtTime), computedTime);
            }
        }
        // set the value at the given time
        this._events.add({
            time: computedTime,
            type: "setValueAtTime",
            value: valueAtTime,
        });
        this._param.setValueAtTime(valueAtTime, computedTime);
        return this;
    }
    rampTo(value, rampTime = 0.1, startTime) {
        if (this.units === "frequency" || this.units === "bpm" || this.units === "decibels") {
            this.exponentialRampTo(value, rampTime, startTime);
        }
        else {
            this.linearRampTo(value, rampTime, startTime);
        }
        return this;
    }
    /**
     * Apply all of the previously scheduled events to the passed in Param or AudioParam.
     * The applied values will start at the context's current time and schedule
     * all of the events which are scheduled on this Param onto the passed in param.
     */
    apply(param) {
        const now = this.context.currentTime;
        // set the param's value at the current time and schedule everything else
        param.setValueAtTime(this.getValueAtTime(now), now);
        // if the previous event was a curve, then set the rest of it
        const previousEvent = this._events.get(now);
        if (previousEvent && previousEvent.type === "setTargetAtTime") {
            // approx it until the next event with linear ramps
            const nextEvent = this._events.getAfter(previousEvent.time);
            // or for 2 seconds if there is no event
            const endTime = nextEvent ? nextEvent.time : now + 2;
            const subdivisions = (endTime - now) / 10;
            for (let i = now; i < endTime; i += subdivisions) {
                param.linearRampToValueAtTime(this.getValueAtTime(i), i);
            }
        }
        this._events.forEachAfter(this.context.currentTime, event => {
            if (event.type === "cancelScheduledValues") {
                param.cancelScheduledValues(event.time);
            }
            else if (event.type === "setTargetAtTime") {
                param.setTargetAtTime(event.value, event.time, event.constant);
            }
            else {
                param[event.type](event.value, event.time);
            }
        });
        return this;
    }
    /**
     * Replace the Param's internal AudioParam. Will apply scheduled curves
     * onto the parameter and replace the connections.
     */
    setParam(param) {
        (0,_util_Debug__WEBPACK_IMPORTED_MODULE_7__.assert)(this._swappable, "The Param must be assigned as 'swappable' in the constructor");
        const input = this.input;
        input.disconnect(this._param);
        this.apply(param);
        this._param = param;
        input.connect(this._param);
        return this;
    }
    dispose() {
        super.dispose();
        this._events.dispose();
        return this;
    }
    get defaultValue() {
        return this._toType(this._param.defaultValue);
    }
    //-------------------------------------
    // 	AUTOMATION CURVE CALCULATIONS
    // 	MIT License, copyright (c) 2014 Jordan Santell
    //-------------------------------------
    // Calculates the the value along the curve produced by setTargetAtTime
    _exponentialApproach(t0, v0, v1, timeConstant, t) {
        return v1 + (v0 - v1) * Math.exp(-(t - t0) / timeConstant);
    }
    // Calculates the the value along the curve produced by linearRampToValueAtTime
    _linearInterpolate(t0, v0, t1, v1, t) {
        return v0 + (v1 - v0) * ((t - t0) / (t1 - t0));
    }
    // Calculates the the value along the curve produced by exponentialRampToValueAtTime
    _exponentialInterpolate(t0, v0, t1, v1, t) {
        return v0 * Math.pow(v1 / v0, (t - t0) / (t1 - t0));
    }
}
//# sourceMappingURL=Param.js.map

/***/ }),

/***/ "./node_modules/tone/build/esm/core/context/ToneAudioBuffer.js":
/*!*********************************************************************!*\
  !*** ./node_modules/tone/build/esm/core/context/ToneAudioBuffer.js ***!
  \*********************************************************************/
/*! namespace exports */
/*! export ToneAudioBuffer [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ToneAudioBuffer": () => /* binding */ ToneAudioBuffer
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! tslib */ "./node_modules/tone/node_modules/tslib/tslib.es6.js");
/* harmony import */ var _Global__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Global */ "./node_modules/tone/build/esm/core/Global.js");
/* harmony import */ var _Tone__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Tone */ "./node_modules/tone/build/esm/core/Tone.js");
/* harmony import */ var _util_AdvancedTypeCheck__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util/AdvancedTypeCheck */ "./node_modules/tone/build/esm/core/util/AdvancedTypeCheck.js");
/* harmony import */ var _util_Defaults__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../util/Defaults */ "./node_modules/tone/build/esm/core/util/Defaults.js");
/* harmony import */ var _util_Interface__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../util/Interface */ "./node_modules/tone/build/esm/core/util/Interface.js");
/* harmony import */ var _util_TypeCheck__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../util/TypeCheck */ "./node_modules/tone/build/esm/core/util/TypeCheck.js");
/* harmony import */ var _util_Debug__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../util/Debug */ "./node_modules/tone/build/esm/core/util/Debug.js");
;







/**
 * AudioBuffer loading and storage. ToneAudioBuffer is used internally by all
 * classes that make requests for audio files such as Tone.Player,
 * Tone.Sampler and Tone.Convolver.
 * Aside from load callbacks from individual buffers, ToneAudioBuffer
 * provides events which keep track of the loading progress
 * of _all_ of the buffers. These are ToneAudioBuffer.on("load" / "progress" / "error")
 * @example
 * const buffer = new Tone.ToneAudioBuffer("https://tonejs.github.io/audio/casio/A1.mp3", () => {
 * 	console.log("loaded");
 * });
 * @category Core
 */
class ToneAudioBuffer extends _Tone__WEBPACK_IMPORTED_MODULE_1__.Tone {
    constructor() {
        super();
        this.name = "ToneAudioBuffer";
        /**
         * Callback when the buffer is loaded.
         */
        this.onload = _util_Interface__WEBPACK_IMPORTED_MODULE_4__.noOp;
        const options = (0,_util_Defaults__WEBPACK_IMPORTED_MODULE_3__.optionsFromArguments)(ToneAudioBuffer.getDefaults(), arguments, ["url", "onload", "onerror"]);
        this.reverse = options.reverse;
        this.onload = options.onload;
        if (options.url && (0,_util_AdvancedTypeCheck__WEBPACK_IMPORTED_MODULE_2__.isAudioBuffer)(options.url) || options.url instanceof ToneAudioBuffer) {
            this.set(options.url);
        }
        else if ((0,_util_TypeCheck__WEBPACK_IMPORTED_MODULE_5__.isString)(options.url)) {
            // initiate the download
            this.load(options.url).catch(options.onerror);
        }
    }
    static getDefaults() {
        return {
            onerror: _util_Interface__WEBPACK_IMPORTED_MODULE_4__.noOp,
            onload: _util_Interface__WEBPACK_IMPORTED_MODULE_4__.noOp,
            reverse: false,
        };
    }
    /**
     * The sample rate of the AudioBuffer
     */
    get sampleRate() {
        if (this._buffer) {
            return this._buffer.sampleRate;
        }
        else {
            return (0,_Global__WEBPACK_IMPORTED_MODULE_0__.getContext)().sampleRate;
        }
    }
    /**
     * Pass in an AudioBuffer or ToneAudioBuffer to set the value of this buffer.
     */
    set(buffer) {
        if (buffer instanceof ToneAudioBuffer) {
            // if it's loaded, set it
            if (buffer.loaded) {
                this._buffer = buffer.get();
            }
            else {
                // otherwise when it's loaded, invoke it's callback
                buffer.onload = () => {
                    this.set(buffer);
                    this.onload(this);
                };
            }
        }
        else {
            this._buffer = buffer;
        }
        // reverse it initially
        if (this._reversed) {
            this._reverse();
        }
        return this;
    }
    /**
     * The audio buffer stored in the object.
     */
    get() {
        return this._buffer;
    }
    /**
     * Makes an fetch request for the selected url then decodes the file as an audio buffer.
     * Invokes the callback once the audio buffer loads.
     * @param url The url of the buffer to load. filetype support depends on the browser.
     * @returns A Promise which resolves with this ToneAudioBuffer
     */
    load(url) {
        return (0,tslib__WEBPACK_IMPORTED_MODULE_7__.__awaiter)(this, void 0, void 0, function* () {
            const doneLoading = ToneAudioBuffer.load(url).then(audioBuffer => {
                this.set(audioBuffer);
                // invoke the onload method
                this.onload(this);
            });
            ToneAudioBuffer.downloads.push(doneLoading);
            try {
                yield doneLoading;
            }
            finally {
                // remove the downloaded file
                const index = ToneAudioBuffer.downloads.indexOf(doneLoading);
                ToneAudioBuffer.downloads.splice(index, 1);
            }
            return this;
        });
    }
    /**
     * clean up
     */
    dispose() {
        super.dispose();
        this._buffer = undefined;
        return this;
    }
    /**
     * Set the audio buffer from the array.
     * To create a multichannel AudioBuffer, pass in a multidimensional array.
     * @param array The array to fill the audio buffer
     */
    fromArray(array) {
        const isMultidimensional = (0,_util_TypeCheck__WEBPACK_IMPORTED_MODULE_5__.isArray)(array) && array[0].length > 0;
        const channels = isMultidimensional ? array.length : 1;
        const len = isMultidimensional ? array[0].length : array.length;
        const context = (0,_Global__WEBPACK_IMPORTED_MODULE_0__.getContext)();
        const buffer = context.createBuffer(channels, len, context.sampleRate);
        const multiChannelArray = !isMultidimensional && channels === 1 ?
            [array] : array;
        for (let c = 0; c < channels; c++) {
            buffer.copyToChannel(multiChannelArray[c], c);
        }
        this._buffer = buffer;
        return this;
    }
    /**
     * Sums multiple channels into 1 channel
     * @param chanNum Optionally only copy a single channel from the array.
     */
    toMono(chanNum) {
        if ((0,_util_TypeCheck__WEBPACK_IMPORTED_MODULE_5__.isNumber)(chanNum)) {
            this.fromArray(this.toArray(chanNum));
        }
        else {
            let outputArray = new Float32Array(this.length);
            const numChannels = this.numberOfChannels;
            for (let channel = 0; channel < numChannels; channel++) {
                const channelArray = this.toArray(channel);
                for (let i = 0; i < channelArray.length; i++) {
                    outputArray[i] += channelArray[i];
                }
            }
            // divide by the number of channels
            outputArray = outputArray.map(sample => sample / numChannels);
            this.fromArray(outputArray);
        }
        return this;
    }
    /**
     * Get the buffer as an array. Single channel buffers will return a 1-dimensional
     * Float32Array, and multichannel buffers will return multidimensional arrays.
     * @param channel Optionally only copy a single channel from the array.
     */
    toArray(channel) {
        if ((0,_util_TypeCheck__WEBPACK_IMPORTED_MODULE_5__.isNumber)(channel)) {
            return this.getChannelData(channel);
        }
        else if (this.numberOfChannels === 1) {
            return this.toArray(0);
        }
        else {
            const ret = [];
            for (let c = 0; c < this.numberOfChannels; c++) {
                ret[c] = this.getChannelData(c);
            }
            return ret;
        }
    }
    /**
     * Returns the Float32Array representing the PCM audio data for the specific channel.
     * @param  channel  The channel number to return
     * @return The audio as a TypedArray
     */
    getChannelData(channel) {
        if (this._buffer) {
            return this._buffer.getChannelData(channel);
        }
        else {
            return new Float32Array(0);
        }
    }
    /**
     * Cut a subsection of the array and return a buffer of the
     * subsection. Does not modify the original buffer
     * @param start The time to start the slice
     * @param end The end time to slice. If none is given will default to the end of the buffer
     */
    slice(start, end = this.duration) {
        const startSamples = Math.floor(start * this.sampleRate);
        const endSamples = Math.floor(end * this.sampleRate);
        (0,_util_Debug__WEBPACK_IMPORTED_MODULE_6__.assert)(startSamples < endSamples, "The start time must be less than the end time");
        const length = endSamples - startSamples;
        const retBuffer = (0,_Global__WEBPACK_IMPORTED_MODULE_0__.getContext)().createBuffer(this.numberOfChannels, length, this.sampleRate);
        for (let channel = 0; channel < this.numberOfChannels; channel++) {
            retBuffer.copyToChannel(this.getChannelData(channel).subarray(startSamples, endSamples), channel);
        }
        return new ToneAudioBuffer(retBuffer);
    }
    /**
     * Reverse the buffer.
     */
    _reverse() {
        if (this.loaded) {
            for (let i = 0; i < this.numberOfChannels; i++) {
                this.getChannelData(i).reverse();
            }
        }
        return this;
    }
    /**
     * If the buffer is loaded or not
     */
    get loaded() {
        return this.length > 0;
    }
    /**
     * The duration of the buffer in seconds.
     */
    get duration() {
        if (this._buffer) {
            return this._buffer.duration;
        }
        else {
            return 0;
        }
    }
    /**
     * The length of the buffer in samples
     */
    get length() {
        if (this._buffer) {
            return this._buffer.length;
        }
        else {
            return 0;
        }
    }
    /**
     * The number of discrete audio channels. Returns 0 if no buffer is loaded.
     */
    get numberOfChannels() {
        if (this._buffer) {
            return this._buffer.numberOfChannels;
        }
        else {
            return 0;
        }
    }
    /**
     * Reverse the buffer.
     */
    get reverse() {
        return this._reversed;
    }
    set reverse(rev) {
        if (this._reversed !== rev) {
            this._reversed = rev;
            this._reverse();
        }
    }
    /**
     * Create a ToneAudioBuffer from the array. To create a multichannel AudioBuffer,
     * pass in a multidimensional array.
     * @param array The array to fill the audio buffer
     * @return A ToneAudioBuffer created from the array
     */
    static fromArray(array) {
        return (new ToneAudioBuffer()).fromArray(array);
    }
    /**
     * Creates a ToneAudioBuffer from a URL, returns a promise which resolves to a ToneAudioBuffer
     * @param  url The url to load.
     * @return A promise which resolves to a ToneAudioBuffer
     */
    static fromUrl(url) {
        return (0,tslib__WEBPACK_IMPORTED_MODULE_7__.__awaiter)(this, void 0, void 0, function* () {
            const buffer = new ToneAudioBuffer();
            return yield buffer.load(url);
        });
    }
    /**
     * Loads a url using fetch and returns the AudioBuffer.
     */
    static load(url) {
        return (0,tslib__WEBPACK_IMPORTED_MODULE_7__.__awaiter)(this, void 0, void 0, function* () {
            // test if the url contains multiple extensions
            const matches = url.match(/\[(.+\|?)+\]$/);
            if (matches) {
                const extensions = matches[1].split("|");
                let extension = extensions[0];
                for (const ext of extensions) {
                    if (ToneAudioBuffer.supportsType(ext)) {
                        extension = ext;
                        break;
                    }
                }
                url = url.replace(matches[0], extension);
            }
            // make sure there is a slash between the baseUrl and the url
            const baseUrl = ToneAudioBuffer.baseUrl === "" || ToneAudioBuffer.baseUrl.endsWith("/") ? ToneAudioBuffer.baseUrl : ToneAudioBuffer.baseUrl + "/";
            const response = yield fetch(baseUrl + url);
            if (!response.ok) {
                throw new Error(`could not load url: ${url}`);
            }
            const arrayBuffer = yield response.arrayBuffer();
            const audioBuffer = yield (0,_Global__WEBPACK_IMPORTED_MODULE_0__.getContext)().decodeAudioData(arrayBuffer);
            return audioBuffer;
        });
    }
    /**
     * Checks a url's extension to see if the current browser can play that file type.
     * @param url The url/extension to test
     * @return If the file extension can be played
     * @static
     * @example
     * Tone.ToneAudioBuffer.supportsType("wav"); // returns true
     * Tone.ToneAudioBuffer.supportsType("path/to/file.wav"); // returns true
     */
    static supportsType(url) {
        const extensions = url.split(".");
        const extension = extensions[extensions.length - 1];
        const response = document.createElement("audio").canPlayType("audio/" + extension);
        return response !== "";
    }
    /**
     * Returns a Promise which resolves when all of the buffers have loaded
     */
    static loaded() {
        return (0,tslib__WEBPACK_IMPORTED_MODULE_7__.__awaiter)(this, void 0, void 0, function* () {
            // this makes sure that the function is always async
            yield Promise.resolve();
            while (ToneAudioBuffer.downloads.length) {
                yield ToneAudioBuffer.downloads[0];
            }
        });
    }
}
//-------------------------------------
// STATIC METHODS
//-------------------------------------
/**
 * A path which is prefixed before every url.
 */
ToneAudioBuffer.baseUrl = "";
/**
 * All of the downloads
 */
ToneAudioBuffer.downloads = [];
//# sourceMappingURL=ToneAudioBuffer.js.map

/***/ }),

/***/ "./node_modules/tone/build/esm/core/context/ToneAudioBuffers.js":
/*!**********************************************************************!*\
  !*** ./node_modules/tone/build/esm/core/context/ToneAudioBuffers.js ***!
  \**********************************************************************/
/*! namespace exports */
/*! export ToneAudioBuffers [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ToneAudioBuffers": () => /* binding */ ToneAudioBuffers
/* harmony export */ });
/* harmony import */ var _Tone__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Tone */ "./node_modules/tone/build/esm/core/Tone.js");
/* harmony import */ var _util_Defaults__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util/Defaults */ "./node_modules/tone/build/esm/core/util/Defaults.js");
/* harmony import */ var _util_Interface__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util/Interface */ "./node_modules/tone/build/esm/core/util/Interface.js");
/* harmony import */ var _util_TypeCheck__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../util/TypeCheck */ "./node_modules/tone/build/esm/core/util/TypeCheck.js");
/* harmony import */ var _ToneAudioBuffer__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./ToneAudioBuffer */ "./node_modules/tone/build/esm/core/context/ToneAudioBuffer.js");
/* harmony import */ var _util_Debug__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../util/Debug */ "./node_modules/tone/build/esm/core/util/Debug.js");
;





/**
 * A data structure for holding multiple buffers in a Map-like datastructure.
 *
 * @example
 * const pianoSamples = new Tone.ToneAudioBuffers({
 * 	A1: "https://tonejs.github.io/audio/casio/A1.mp3",
 * 	A2: "https://tonejs.github.io/audio/casio/A2.mp3",
 * }, () => {
 * 	const player = new Tone.Player().toDestination();
 * 	// play one of the samples when they all load
 * 	player.buffer = pianoSamples.get("A2");
 * 	player.start();
 * });
 * @example
 * // To pass in additional parameters in the second parameter
 * const buffers = new Tone.ToneAudioBuffers({
 * 	 urls: {
 * 		 A1: "A1.mp3",
 * 		 A2: "A2.mp3",
 * 	 },
 * 	 onload: () => console.log("loaded"),
 * 	 baseUrl: "https://tonejs.github.io/audio/casio/"
 * });
 * @category Core
 */
class ToneAudioBuffers extends _Tone__WEBPACK_IMPORTED_MODULE_0__.Tone {
    constructor() {
        super();
        this.name = "ToneAudioBuffers";
        /**
         * All of the buffers
         */
        this._buffers = new Map();
        /**
         * Keep track of the number of loaded buffers
         */
        this._loadingCount = 0;
        const options = (0,_util_Defaults__WEBPACK_IMPORTED_MODULE_1__.optionsFromArguments)(ToneAudioBuffers.getDefaults(), arguments, ["urls", "onload", "baseUrl"], "urls");
        this.baseUrl = options.baseUrl;
        // add each one
        Object.keys(options.urls).forEach(name => {
            this._loadingCount++;
            const url = options.urls[name];
            this.add(name, url, this._bufferLoaded.bind(this, options.onload), options.onerror);
        });
    }
    static getDefaults() {
        return {
            baseUrl: "",
            onerror: _util_Interface__WEBPACK_IMPORTED_MODULE_2__.noOp,
            onload: _util_Interface__WEBPACK_IMPORTED_MODULE_2__.noOp,
            urls: {},
        };
    }
    /**
     * True if the buffers object has a buffer by that name.
     * @param  name  The key or index of the buffer.
     */
    has(name) {
        return this._buffers.has(name.toString());
    }
    /**
     * Get a buffer by name. If an array was loaded,
     * then use the array index.
     * @param  name  The key or index of the buffer.
     */
    get(name) {
        (0,_util_Debug__WEBPACK_IMPORTED_MODULE_5__.assert)(this.has(name), `ToneAudioBuffers has no buffer named: ${name}`);
        return this._buffers.get(name.toString());
    }
    /**
     * A buffer was loaded. decrement the counter.
     */
    _bufferLoaded(callback) {
        this._loadingCount--;
        if (this._loadingCount === 0 && callback) {
            callback();
        }
    }
    /**
     * If the buffers are loaded or not
     */
    get loaded() {
        return Array.from(this._buffers).every(([_, buffer]) => buffer.loaded);
    }
    /**
     * Add a buffer by name and url to the Buffers
     * @param  name      A unique name to give the buffer
     * @param  url  Either the url of the bufer, or a buffer which will be added with the given name.
     * @param  callback  The callback to invoke when the url is loaded.
     * @param  onerror  Invoked if the buffer can't be loaded
     */
    add(name, url, callback = _util_Interface__WEBPACK_IMPORTED_MODULE_2__.noOp, onerror = _util_Interface__WEBPACK_IMPORTED_MODULE_2__.noOp) {
        if ((0,_util_TypeCheck__WEBPACK_IMPORTED_MODULE_3__.isString)(url)) {
            this._buffers.set(name.toString(), new _ToneAudioBuffer__WEBPACK_IMPORTED_MODULE_4__.ToneAudioBuffer(this.baseUrl + url, callback, onerror));
        }
        else {
            this._buffers.set(name.toString(), new _ToneAudioBuffer__WEBPACK_IMPORTED_MODULE_4__.ToneAudioBuffer(url, callback, onerror));
        }
        return this;
    }
    dispose() {
        super.dispose();
        this._buffers.forEach(buffer => buffer.dispose());
        this._buffers.clear();
        return this;
    }
}
//# sourceMappingURL=ToneAudioBuffers.js.map

/***/ }),

/***/ "./node_modules/tone/build/esm/core/context/ToneAudioNode.js":
/*!*******************************************************************!*\
  !*** ./node_modules/tone/build/esm/core/context/ToneAudioNode.js ***!
  \*******************************************************************/
/*! namespace exports */
/*! export ToneAudioNode [provided] [no usage info] [missing usage info prevents renaming] */
/*! export connect [provided] [no usage info] [missing usage info prevents renaming] */
/*! export connectSeries [provided] [no usage info] [missing usage info prevents renaming] */
/*! export disconnect [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ToneAudioNode": () => /* binding */ ToneAudioNode,
/* harmony export */   "connectSeries": () => /* binding */ connectSeries,
/* harmony export */   "connect": () => /* binding */ connect,
/* harmony export */   "disconnect": () => /* binding */ disconnect
/* harmony export */ });
/* harmony import */ var _util_AdvancedTypeCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/AdvancedTypeCheck */ "./node_modules/tone/build/esm/core/util/AdvancedTypeCheck.js");
/* harmony import */ var _util_TypeCheck__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util/TypeCheck */ "./node_modules/tone/build/esm/core/util/TypeCheck.js");
/* harmony import */ var _Param__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Param */ "./node_modules/tone/build/esm/core/context/Param.js");
/* harmony import */ var _ToneWithContext__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./ToneWithContext */ "./node_modules/tone/build/esm/core/context/ToneWithContext.js");
/* harmony import */ var _util_Debug__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../util/Debug */ "./node_modules/tone/build/esm/core/util/Debug.js");
;




/**
 * ToneAudioNode is the base class for classes which process audio.
 */
class ToneAudioNode extends _ToneWithContext__WEBPACK_IMPORTED_MODULE_3__.ToneWithContext {
    constructor() {
        super(...arguments);
        /**
         * The name of the class
         */
        this.name = "ToneAudioNode";
        /**
         * List all of the node that must be set to match the ChannelProperties
         */
        this._internalChannels = [];
    }
    /**
     * The number of inputs feeding into the AudioNode.
     * For source nodes, this will be 0.
     * @example
     * const node = new Tone.Gain();
     * console.log(node.numberOfInputs);
     */
    get numberOfInputs() {
        if ((0,_util_TypeCheck__WEBPACK_IMPORTED_MODULE_1__.isDefined)(this.input)) {
            if ((0,_util_AdvancedTypeCheck__WEBPACK_IMPORTED_MODULE_0__.isAudioParam)(this.input) || this.input instanceof _Param__WEBPACK_IMPORTED_MODULE_2__.Param) {
                return 1;
            }
            else {
                return this.input.numberOfInputs;
            }
        }
        else {
            return 0;
        }
    }
    /**
     * The number of outputs of the AudioNode.
     * @example
     * const node = new Tone.Gain();
     * console.log(node.numberOfOutputs);
     */
    get numberOfOutputs() {
        if ((0,_util_TypeCheck__WEBPACK_IMPORTED_MODULE_1__.isDefined)(this.output)) {
            return this.output.numberOfOutputs;
        }
        else {
            return 0;
        }
    }
    //-------------------------------------
    // AUDIO PROPERTIES
    //-------------------------------------
    /**
     * Used to decide which nodes to get/set properties on
     */
    _isAudioNode(node) {
        return (0,_util_TypeCheck__WEBPACK_IMPORTED_MODULE_1__.isDefined)(node) && (node instanceof ToneAudioNode || (0,_util_AdvancedTypeCheck__WEBPACK_IMPORTED_MODULE_0__.isAudioNode)(node));
    }
    /**
     * Get all of the audio nodes (either internal or input/output) which together
     * make up how the class node responds to channel input/output
     */
    _getInternalNodes() {
        const nodeList = this._internalChannels.slice(0);
        if (this._isAudioNode(this.input)) {
            nodeList.push(this.input);
        }
        if (this._isAudioNode(this.output)) {
            if (this.input !== this.output) {
                nodeList.push(this.output);
            }
        }
        return nodeList;
    }
    /**
     * Set the audio options for this node such as channelInterpretation
     * channelCount, etc.
     * @param options
     */
    _setChannelProperties(options) {
        const nodeList = this._getInternalNodes();
        nodeList.forEach(node => {
            node.channelCount = options.channelCount;
            node.channelCountMode = options.channelCountMode;
            node.channelInterpretation = options.channelInterpretation;
        });
    }
    /**
     * Get the current audio options for this node such as channelInterpretation
     * channelCount, etc.
     */
    _getChannelProperties() {
        const nodeList = this._getInternalNodes();
        (0,_util_Debug__WEBPACK_IMPORTED_MODULE_4__.assert)(nodeList.length > 0, "ToneAudioNode does not have any internal nodes");
        // use the first node to get properties
        // they should all be the same
        const node = nodeList[0];
        return {
            channelCount: node.channelCount,
            channelCountMode: node.channelCountMode,
            channelInterpretation: node.channelInterpretation,
        };
    }
    /**
     * channelCount is the number of channels used when up-mixing and down-mixing
     * connections to any inputs to the node. The default value is 2 except for
     * specific nodes where its value is specially determined.
     */
    get channelCount() {
        return this._getChannelProperties().channelCount;
    }
    set channelCount(channelCount) {
        const props = this._getChannelProperties();
        // merge it with the other properties
        this._setChannelProperties(Object.assign(props, { channelCount }));
    }
    /**
     * channelCountMode determines how channels will be counted when up-mixing and
     * down-mixing connections to any inputs to the node.
     * The default value is "max". This attribute has no effect for nodes with no inputs.
     * * "max" - computedNumberOfChannels is the maximum of the number of channels of all connections to an input. In this mode channelCount is ignored.
     * * "clamped-max" - computedNumberOfChannels is determined as for "max" and then clamped to a maximum value of the given channelCount.
     * * "explicit" - computedNumberOfChannels is the exact value as specified by the channelCount.
     */
    get channelCountMode() {
        return this._getChannelProperties().channelCountMode;
    }
    set channelCountMode(channelCountMode) {
        const props = this._getChannelProperties();
        // merge it with the other properties
        this._setChannelProperties(Object.assign(props, { channelCountMode }));
    }
    /**
     * channelInterpretation determines how individual channels will be treated
     * when up-mixing and down-mixing connections to any inputs to the node.
     * The default value is "speakers".
     */
    get channelInterpretation() {
        return this._getChannelProperties().channelInterpretation;
    }
    set channelInterpretation(channelInterpretation) {
        const props = this._getChannelProperties();
        // merge it with the other properties
        this._setChannelProperties(Object.assign(props, { channelInterpretation }));
    }
    //-------------------------------------
    // CONNECTIONS
    //-------------------------------------
    /**
     * connect the output of a ToneAudioNode to an AudioParam, AudioNode, or ToneAudioNode
     * @param destination The output to connect to
     * @param outputNum The output to connect from
     * @param inputNum The input to connect to
     */
    connect(destination, outputNum = 0, inputNum = 0) {
        connect(this, destination, outputNum, inputNum);
        return this;
    }
    /**
     * Connect the output to the context's destination node.
     * @example
     * const osc = new Tone.Oscillator("C2").start();
     * osc.toDestination();
     */
    toDestination() {
        this.connect(this.context.destination);
        return this;
    }
    /**
     * Connect the output to the context's destination node.
     * See [[toDestination]]
     * @deprecated
     */
    toMaster() {
        (0,_util_Debug__WEBPACK_IMPORTED_MODULE_4__.warn)("toMaster() has been renamed toDestination()");
        return this.toDestination();
    }
    /**
     * disconnect the output
     */
    disconnect(destination, outputNum = 0, inputNum = 0) {
        disconnect(this, destination, outputNum, inputNum);
        return this;
    }
    /**
     * Connect the output of this node to the rest of the nodes in series.
     * @example
     * const player = new Tone.Player("https://tonejs.github.io/audio/drum-samples/handdrum-loop.mp3");
     * player.autostart = true;
     * const filter = new Tone.AutoFilter(4).start();
     * const distortion = new Tone.Distortion(0.5);
     * // connect the player to the filter, distortion and then to the master output
     * player.chain(filter, distortion, Tone.Destination);
     */
    chain(...nodes) {
        connectSeries(this, ...nodes);
        return this;
    }
    /**
     * connect the output of this node to the rest of the nodes in parallel.
     * @example
     * const player = new Tone.Player("https://tonejs.github.io/audio/drum-samples/conga-rhythm.mp3");
     * player.autostart = true;
     * const pitchShift = new Tone.PitchShift(4).toDestination();
     * const filter = new Tone.Filter("G5").toDestination();
     * // connect a node to the pitch shift and filter in parallel
     * player.fan(pitchShift, filter);
     */
    fan(...nodes) {
        nodes.forEach(node => this.connect(node));
        return this;
    }
    /**
     * Dispose and disconnect
     */
    dispose() {
        super.dispose();
        if ((0,_util_TypeCheck__WEBPACK_IMPORTED_MODULE_1__.isDefined)(this.input)) {
            if (this.input instanceof ToneAudioNode) {
                this.input.dispose();
            }
            else if ((0,_util_AdvancedTypeCheck__WEBPACK_IMPORTED_MODULE_0__.isAudioNode)(this.input)) {
                this.input.disconnect();
            }
        }
        if ((0,_util_TypeCheck__WEBPACK_IMPORTED_MODULE_1__.isDefined)(this.output)) {
            if (this.output instanceof ToneAudioNode) {
                this.output.dispose();
            }
            else if ((0,_util_AdvancedTypeCheck__WEBPACK_IMPORTED_MODULE_0__.isAudioNode)(this.output)) {
                this.output.disconnect();
            }
        }
        this._internalChannels = [];
        return this;
    }
}
//-------------------------------------
// CONNECTIONS
//-------------------------------------
/**
 * connect together all of the arguments in series
 * @param nodes
 */
function connectSeries(...nodes) {
    const first = nodes.shift();
    nodes.reduce((prev, current) => {
        if (prev instanceof ToneAudioNode) {
            prev.connect(current);
        }
        else if ((0,_util_AdvancedTypeCheck__WEBPACK_IMPORTED_MODULE_0__.isAudioNode)(prev)) {
            connect(prev, current);
        }
        return current;
    }, first);
}
/**
 * Connect two nodes together so that signal flows from the
 * first node to the second. Optionally specify the input and output channels.
 * @param srcNode The source node
 * @param dstNode The destination node
 * @param outputNumber The output channel of the srcNode
 * @param inputNumber The input channel of the dstNode
 */
function connect(srcNode, dstNode, outputNumber = 0, inputNumber = 0) {
    (0,_util_Debug__WEBPACK_IMPORTED_MODULE_4__.assert)((0,_util_TypeCheck__WEBPACK_IMPORTED_MODULE_1__.isDefined)(srcNode), "Cannot connect from undefined node");
    (0,_util_Debug__WEBPACK_IMPORTED_MODULE_4__.assert)((0,_util_TypeCheck__WEBPACK_IMPORTED_MODULE_1__.isDefined)(dstNode), "Cannot connect to undefined node");
    if (dstNode instanceof ToneAudioNode || (0,_util_AdvancedTypeCheck__WEBPACK_IMPORTED_MODULE_0__.isAudioNode)(dstNode)) {
        (0,_util_Debug__WEBPACK_IMPORTED_MODULE_4__.assert)(dstNode.numberOfInputs > 0, "Cannot connect to node with no inputs");
    }
    (0,_util_Debug__WEBPACK_IMPORTED_MODULE_4__.assert)(srcNode.numberOfOutputs > 0, "Cannot connect from node with no outputs");
    // resolve the input of the dstNode
    while ((dstNode instanceof ToneAudioNode || dstNode instanceof _Param__WEBPACK_IMPORTED_MODULE_2__.Param)) {
        if ((0,_util_TypeCheck__WEBPACK_IMPORTED_MODULE_1__.isDefined)(dstNode.input)) {
            dstNode = dstNode.input;
        }
    }
    while (srcNode instanceof ToneAudioNode) {
        if ((0,_util_TypeCheck__WEBPACK_IMPORTED_MODULE_1__.isDefined)(srcNode.output)) {
            srcNode = srcNode.output;
        }
    }
    // make the connection
    if ((0,_util_AdvancedTypeCheck__WEBPACK_IMPORTED_MODULE_0__.isAudioParam)(dstNode)) {
        srcNode.connect(dstNode, outputNumber);
    }
    else {
        srcNode.connect(dstNode, outputNumber, inputNumber);
    }
}
/**
 * Disconnect a node from all nodes or optionally include a destination node and input/output channels.
 * @param srcNode The source node
 * @param dstNode The destination node
 * @param outputNumber The output channel of the srcNode
 * @param inputNumber The input channel of the dstNode
 */
function disconnect(srcNode, dstNode, outputNumber = 0, inputNumber = 0) {
    // resolve the destination node
    if ((0,_util_TypeCheck__WEBPACK_IMPORTED_MODULE_1__.isDefined)(dstNode)) {
        while (dstNode instanceof ToneAudioNode) {
            dstNode = dstNode.input;
        }
    }
    // resolve the src node
    while (!((0,_util_AdvancedTypeCheck__WEBPACK_IMPORTED_MODULE_0__.isAudioNode)(srcNode))) {
        if ((0,_util_TypeCheck__WEBPACK_IMPORTED_MODULE_1__.isDefined)(srcNode.output)) {
            srcNode = srcNode.output;
        }
    }
    if ((0,_util_AdvancedTypeCheck__WEBPACK_IMPORTED_MODULE_0__.isAudioParam)(dstNode)) {
        srcNode.disconnect(dstNode, outputNumber);
    }
    else if ((0,_util_AdvancedTypeCheck__WEBPACK_IMPORTED_MODULE_0__.isAudioNode)(dstNode)) {
        srcNode.disconnect(dstNode, outputNumber, inputNumber);
    }
    else {
        srcNode.disconnect();
    }
}
//# sourceMappingURL=ToneAudioNode.js.map

/***/ }),

/***/ "./node_modules/tone/build/esm/core/context/ToneWithContext.js":
/*!*********************************************************************!*\
  !*** ./node_modules/tone/build/esm/core/context/ToneWithContext.js ***!
  \*********************************************************************/
/*! namespace exports */
/*! export ToneWithContext [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ToneWithContext": () => /* binding */ ToneWithContext
/* harmony export */ });
/* harmony import */ var _Global__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Global */ "./node_modules/tone/build/esm/core/Global.js");
/* harmony import */ var _Tone__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Tone */ "./node_modules/tone/build/esm/core/Tone.js");
/* harmony import */ var _type_Frequency__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../type/Frequency */ "./node_modules/tone/build/esm/core/type/Frequency.js");
/* harmony import */ var _type_Time__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../type/Time */ "./node_modules/tone/build/esm/core/type/Time.js");
/* harmony import */ var _type_TransportTime__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../type/TransportTime */ "./node_modules/tone/build/esm/core/type/TransportTime.js");
/* harmony import */ var _util_Defaults__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../util/Defaults */ "./node_modules/tone/build/esm/core/util/Defaults.js");
/* harmony import */ var _util_TypeCheck__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../util/TypeCheck */ "./node_modules/tone/build/esm/core/util/TypeCheck.js");
;






/**
 * The Base class for all nodes that have an AudioContext.
 */
class ToneWithContext extends _Tone__WEBPACK_IMPORTED_MODULE_1__.Tone {
    constructor() {
        super();
        const options = (0,_util_Defaults__WEBPACK_IMPORTED_MODULE_5__.optionsFromArguments)(ToneWithContext.getDefaults(), arguments, ["context"]);
        if (this.defaultContext) {
            this.context = this.defaultContext;
        }
        else {
            this.context = options.context;
        }
    }
    static getDefaults() {
        return {
            context: (0,_Global__WEBPACK_IMPORTED_MODULE_0__.getContext)(),
        };
    }
    /**
     * Return the current time of the Context clock plus the lookAhead.
     * @example
     * setInterval(() => {
     * 	console.log(Tone.now());
     * }, 100);
     */
    now() {
        return this.context.currentTime + this.context.lookAhead;
    }
    /**
     * Return the current time of the Context clock without any lookAhead.
     * @example
     * setInterval(() => {
     * 	console.log(Tone.immediate());
     * }, 100);
     */
    immediate() {
        return this.context.currentTime;
    }
    /**
     * The duration in seconds of one sample.
     * @example
     * console.log(Tone.Transport.sampleTime);
     */
    get sampleTime() {
        return 1 / this.context.sampleRate;
    }
    /**
     * The number of seconds of 1 processing block (128 samples)
     * @example
     * console.log(Tone.Destination.blockTime);
     */
    get blockTime() {
        return 128 / this.context.sampleRate;
    }
    /**
     * Convert the incoming time to seconds.
     * This is calculated against the current [[Tone.Transport]] bpm
     * @example
     * const gain = new Tone.Gain();
     * setInterval(() => console.log(gain.toSeconds("4n")), 100);
     * // ramp the tempo to 60 bpm over 30 seconds
     * Tone.getTransport().bpm.rampTo(60, 30);
     */
    toSeconds(time) {
        return new _type_Time__WEBPACK_IMPORTED_MODULE_3__.TimeClass(this.context, time).toSeconds();
    }
    /**
     * Convert the input to a frequency number
     * @example
     * const gain = new Tone.Gain();
     * console.log(gain.toFrequency("4n"));
     */
    toFrequency(freq) {
        return new _type_Frequency__WEBPACK_IMPORTED_MODULE_2__.FrequencyClass(this.context, freq).toFrequency();
    }
    /**
     * Convert the input time into ticks
     * @example
     * const gain = new Tone.Gain();
     * console.log(gain.toTicks("4n"));
     */
    toTicks(time) {
        return new _type_TransportTime__WEBPACK_IMPORTED_MODULE_4__.TransportTimeClass(this.context, time).toTicks();
    }
    //-------------------------------------
    // 	GET/SET
    //-------------------------------------
    /**
     * Get a subset of the properties which are in the partial props
     */
    _getPartialProperties(props) {
        const options = this.get();
        // remove attributes from the prop that are not in the partial
        Object.keys(options).forEach(name => {
            if ((0,_util_TypeCheck__WEBPACK_IMPORTED_MODULE_6__.isUndef)(props[name])) {
                delete options[name];
            }
        });
        return options;
    }
    /**
     * Get the object's attributes.
     * @example
     * const osc = new Tone.Oscillator();
     * console.log(osc.get());
     */
    get() {
        const defaults = (0,_util_Defaults__WEBPACK_IMPORTED_MODULE_5__.getDefaultsFromInstance)(this);
        Object.keys(defaults).forEach(attribute => {
            if (Reflect.has(this, attribute)) {
                const member = this[attribute];
                if ((0,_util_TypeCheck__WEBPACK_IMPORTED_MODULE_6__.isDefined)(member) && (0,_util_TypeCheck__WEBPACK_IMPORTED_MODULE_6__.isDefined)(member.value) && (0,_util_TypeCheck__WEBPACK_IMPORTED_MODULE_6__.isDefined)(member.setValueAtTime)) {
                    defaults[attribute] = member.value;
                }
                else if (member instanceof ToneWithContext) {
                    defaults[attribute] = member._getPartialProperties(defaults[attribute]);
                    // otherwise make sure it's a serializable type
                }
                else if ((0,_util_TypeCheck__WEBPACK_IMPORTED_MODULE_6__.isArray)(member) || (0,_util_TypeCheck__WEBPACK_IMPORTED_MODULE_6__.isNumber)(member) || (0,_util_TypeCheck__WEBPACK_IMPORTED_MODULE_6__.isString)(member) || (0,_util_TypeCheck__WEBPACK_IMPORTED_MODULE_6__.isBoolean)(member)) {
                    defaults[attribute] = member;
                }
                else {
                    // remove all undefined and unserializable attributes
                    delete defaults[attribute];
                }
            }
        });
        return defaults;
    }
    /**
     * Set multiple properties at once with an object.
     * @example
     * const filter = new Tone.Filter().toDestination();
     * // set values using an object
     * filter.set({
     * 	frequency: "C6",
     * 	type: "highpass"
     * });
     * const player = new Tone.Player("https://tonejs.github.io/audio/berklee/Analogsynth_octaves_highmid.mp3").connect(filter);
     * player.autostart = true;
     */
    set(props) {
        Object.keys(props).forEach(attribute => {
            if (Reflect.has(this, attribute) && (0,_util_TypeCheck__WEBPACK_IMPORTED_MODULE_6__.isDefined)(this[attribute])) {
                if (this[attribute] && (0,_util_TypeCheck__WEBPACK_IMPORTED_MODULE_6__.isDefined)(this[attribute].value) && (0,_util_TypeCheck__WEBPACK_IMPORTED_MODULE_6__.isDefined)(this[attribute].setValueAtTime)) {
                    // small optimization
                    if (this[attribute].value !== props[attribute]) {
                        this[attribute].value = props[attribute];
                    }
                }
                else if (this[attribute] instanceof ToneWithContext) {
                    this[attribute].set(props[attribute]);
                }
                else {
                    this[attribute] = props[attribute];
                }
            }
        });
        return this;
    }
}
//# sourceMappingURL=ToneWithContext.js.map

/***/ }),

/***/ "./node_modules/tone/build/esm/core/index.js":
/*!***************************************************!*\
  !*** ./node_modules/tone/build/esm/core/index.js ***!
  \***************************************************/
/*! namespace exports */
/*! export BaseContext [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/core/context/BaseContext.js .BaseContext */
/*! export Clock [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/core/clock/Clock.js .Clock */
/*! export Context [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/core/context/Context.js .Context */
/*! export Delay [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/core/context/Delay.js .Delay */
/*! export Emitter [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/core/util/Emitter.js .Emitter */
/*! export Frequency [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/core/type/Frequency.js .Frequency */
/*! export FrequencyClass [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/core/type/Frequency.js .FrequencyClass */
/*! export Gain [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/core/context/Gain.js .Gain */
/*! export IntervalTimeline [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/core/util/IntervalTimeline.js .IntervalTimeline */
/*! export Midi [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/core/type/Midi.js .Midi */
/*! export MidiClass [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/core/type/Midi.js .MidiClass */
/*! export Offline [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/core/context/Offline.js .Offline */
/*! export OfflineContext [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/core/context/OfflineContext.js .OfflineContext */
/*! export Param [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/core/context/Param.js .Param */
/*! export StateTimeline [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/core/util/StateTimeline.js .StateTimeline */
/*! export Ticks [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/core/type/Ticks.js .Ticks */
/*! export TicksClass [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/core/type/Ticks.js .TicksClass */
/*! export Time [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/core/type/Time.js .Time */
/*! export TimeClass [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/core/type/Time.js .TimeClass */
/*! export Timeline [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/core/util/Timeline.js .Timeline */
/*! export ToneAudioBuffer [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/core/context/ToneAudioBuffer.js .ToneAudioBuffer */
/*! export ToneAudioBuffers [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/core/context/ToneAudioBuffers.js .ToneAudioBuffers */
/*! export ToneAudioNode [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/core/context/ToneAudioNode.js .ToneAudioNode */
/*! export TransportTime [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/core/type/TransportTime.js .TransportTime */
/*! export TransportTimeClass [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/core/type/TransportTime.js .TransportTimeClass */
/*! export Unit [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/core/type/Units.js */
/*!   exports [not provided] [no usage info] */
/*! export connect [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/core/context/ToneAudioNode.js .connect */
/*! export connectSeries [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/core/context/ToneAudioNode.js .connectSeries */
/*! export dbToGain [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/core/type/Conversions.js .dbToGain */
/*! export debug [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/core/util/Debug.js */
/*!   export assert [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export assertContextRunning [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export assertRange [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export log [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export setLogger [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export warn [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export defaultArg [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/core/util/Defaults.js .defaultArg */
/*! export disconnect [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/core/context/ToneAudioNode.js .disconnect */
/*! export ftom [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/core/type/Conversions.js .ftom */
/*! export gainToDb [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/core/type/Conversions.js .gainToDb */
/*! export intervalToFrequencyRatio [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/core/type/Conversions.js .intervalToFrequencyRatio */
/*! export isArray [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/core/util/TypeCheck.js .isArray */
/*! export isBoolean [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/core/util/TypeCheck.js .isBoolean */
/*! export isDefined [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/core/util/TypeCheck.js .isDefined */
/*! export isFunction [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/core/util/TypeCheck.js .isFunction */
/*! export isNote [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/core/util/TypeCheck.js .isNote */
/*! export isNumber [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/core/util/TypeCheck.js .isNumber */
/*! export isObject [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/core/util/TypeCheck.js .isObject */
/*! export isString [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/core/util/TypeCheck.js .isString */
/*! export isUndef [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/core/util/TypeCheck.js .isUndef */
/*! export mtof [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/core/type/Conversions.js .mtof */
/*! export optionsFromArguments [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/core/util/Defaults.js .optionsFromArguments */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_exports__, __webpack_require__.d, __webpack_require__.r, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Clock": () => /* reexport safe */ _clock_Clock__WEBPACK_IMPORTED_MODULE_0__.Clock,
/* harmony export */   "Context": () => /* reexport safe */ _context_Context__WEBPACK_IMPORTED_MODULE_1__.Context,
/* harmony export */   "BaseContext": () => /* reexport safe */ _context_BaseContext__WEBPACK_IMPORTED_MODULE_2__.BaseContext,
/* harmony export */   "Delay": () => /* reexport safe */ _context_Delay__WEBPACK_IMPORTED_MODULE_3__.Delay,
/* harmony export */   "Gain": () => /* reexport safe */ _context_Gain__WEBPACK_IMPORTED_MODULE_4__.Gain,
/* harmony export */   "Offline": () => /* reexport safe */ _context_Offline__WEBPACK_IMPORTED_MODULE_5__.Offline,
/* harmony export */   "OfflineContext": () => /* reexport safe */ _context_OfflineContext__WEBPACK_IMPORTED_MODULE_6__.OfflineContext,
/* harmony export */   "Param": () => /* reexport safe */ _context_Param__WEBPACK_IMPORTED_MODULE_7__.Param,
/* harmony export */   "ToneAudioBuffer": () => /* reexport safe */ _context_ToneAudioBuffer__WEBPACK_IMPORTED_MODULE_8__.ToneAudioBuffer,
/* harmony export */   "ToneAudioBuffers": () => /* reexport safe */ _context_ToneAudioBuffers__WEBPACK_IMPORTED_MODULE_9__.ToneAudioBuffers,
/* harmony export */   "ToneAudioNode": () => /* reexport safe */ _context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_10__.ToneAudioNode,
/* harmony export */   "connect": () => /* reexport safe */ _context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_10__.connect,
/* harmony export */   "connectSeries": () => /* reexport safe */ _context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_10__.connectSeries,
/* harmony export */   "disconnect": () => /* reexport safe */ _context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_10__.disconnect,
/* harmony export */   "Frequency": () => /* reexport safe */ _type_Frequency__WEBPACK_IMPORTED_MODULE_11__.Frequency,
/* harmony export */   "FrequencyClass": () => /* reexport safe */ _type_Frequency__WEBPACK_IMPORTED_MODULE_11__.FrequencyClass,
/* harmony export */   "Midi": () => /* reexport safe */ _type_Midi__WEBPACK_IMPORTED_MODULE_12__.Midi,
/* harmony export */   "MidiClass": () => /* reexport safe */ _type_Midi__WEBPACK_IMPORTED_MODULE_12__.MidiClass,
/* harmony export */   "Time": () => /* reexport safe */ _type_Time__WEBPACK_IMPORTED_MODULE_13__.Time,
/* harmony export */   "TimeClass": () => /* reexport safe */ _type_Time__WEBPACK_IMPORTED_MODULE_13__.TimeClass,
/* harmony export */   "Ticks": () => /* reexport safe */ _type_Ticks__WEBPACK_IMPORTED_MODULE_14__.Ticks,
/* harmony export */   "TicksClass": () => /* reexport safe */ _type_Ticks__WEBPACK_IMPORTED_MODULE_14__.TicksClass,
/* harmony export */   "TransportTime": () => /* reexport safe */ _type_TransportTime__WEBPACK_IMPORTED_MODULE_15__.TransportTime,
/* harmony export */   "TransportTimeClass": () => /* reexport safe */ _type_TransportTime__WEBPACK_IMPORTED_MODULE_15__.TransportTimeClass,
/* harmony export */   "Emitter": () => /* reexport safe */ _util_Emitter__WEBPACK_IMPORTED_MODULE_17__.Emitter,
/* harmony export */   "IntervalTimeline": () => /* reexport safe */ _util_IntervalTimeline__WEBPACK_IMPORTED_MODULE_18__.IntervalTimeline,
/* harmony export */   "StateTimeline": () => /* reexport safe */ _util_StateTimeline__WEBPACK_IMPORTED_MODULE_19__.StateTimeline,
/* harmony export */   "Timeline": () => /* reexport safe */ _util_Timeline__WEBPACK_IMPORTED_MODULE_20__.Timeline,
/* harmony export */   "isArray": () => /* reexport safe */ _util_TypeCheck__WEBPACK_IMPORTED_MODULE_21__.isArray,
/* harmony export */   "isBoolean": () => /* reexport safe */ _util_TypeCheck__WEBPACK_IMPORTED_MODULE_21__.isBoolean,
/* harmony export */   "isDefined": () => /* reexport safe */ _util_TypeCheck__WEBPACK_IMPORTED_MODULE_21__.isDefined,
/* harmony export */   "isFunction": () => /* reexport safe */ _util_TypeCheck__WEBPACK_IMPORTED_MODULE_21__.isFunction,
/* harmony export */   "isNote": () => /* reexport safe */ _util_TypeCheck__WEBPACK_IMPORTED_MODULE_21__.isNote,
/* harmony export */   "isNumber": () => /* reexport safe */ _util_TypeCheck__WEBPACK_IMPORTED_MODULE_21__.isNumber,
/* harmony export */   "isObject": () => /* reexport safe */ _util_TypeCheck__WEBPACK_IMPORTED_MODULE_21__.isObject,
/* harmony export */   "isString": () => /* reexport safe */ _util_TypeCheck__WEBPACK_IMPORTED_MODULE_21__.isString,
/* harmony export */   "isUndef": () => /* reexport safe */ _util_TypeCheck__WEBPACK_IMPORTED_MODULE_21__.isUndef,
/* harmony export */   "dbToGain": () => /* reexport safe */ _type_Conversions__WEBPACK_IMPORTED_MODULE_22__.dbToGain,
/* harmony export */   "gainToDb": () => /* reexport safe */ _type_Conversions__WEBPACK_IMPORTED_MODULE_22__.gainToDb,
/* harmony export */   "intervalToFrequencyRatio": () => /* reexport safe */ _type_Conversions__WEBPACK_IMPORTED_MODULE_22__.intervalToFrequencyRatio,
/* harmony export */   "ftom": () => /* reexport safe */ _type_Conversions__WEBPACK_IMPORTED_MODULE_22__.ftom,
/* harmony export */   "mtof": () => /* reexport safe */ _type_Conversions__WEBPACK_IMPORTED_MODULE_22__.mtof,
/* harmony export */   "optionsFromArguments": () => /* reexport safe */ _util_Defaults__WEBPACK_IMPORTED_MODULE_23__.optionsFromArguments,
/* harmony export */   "defaultArg": () => /* reexport safe */ _util_Defaults__WEBPACK_IMPORTED_MODULE_23__.defaultArg,
/* harmony export */   "Unit": () => /* reexport module object */ _type_Units__WEBPACK_IMPORTED_MODULE_24__,
/* harmony export */   "debug": () => /* reexport module object */ _util_Debug__WEBPACK_IMPORTED_MODULE_25__
/* harmony export */ });
/* harmony import */ var _clock_Clock__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./clock/Clock */ "./node_modules/tone/build/esm/core/clock/Clock.js");
/* harmony import */ var _context_Context__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./context/Context */ "./node_modules/tone/build/esm/core/context/Context.js");
/* harmony import */ var _context_BaseContext__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./context/BaseContext */ "./node_modules/tone/build/esm/core/context/BaseContext.js");
/* harmony import */ var _context_Delay__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./context/Delay */ "./node_modules/tone/build/esm/core/context/Delay.js");
/* harmony import */ var _context_Gain__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./context/Gain */ "./node_modules/tone/build/esm/core/context/Gain.js");
/* harmony import */ var _context_Offline__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./context/Offline */ "./node_modules/tone/build/esm/core/context/Offline.js");
/* harmony import */ var _context_OfflineContext__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./context/OfflineContext */ "./node_modules/tone/build/esm/core/context/OfflineContext.js");
/* harmony import */ var _context_Param__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./context/Param */ "./node_modules/tone/build/esm/core/context/Param.js");
/* harmony import */ var _context_ToneAudioBuffer__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./context/ToneAudioBuffer */ "./node_modules/tone/build/esm/core/context/ToneAudioBuffer.js");
/* harmony import */ var _context_ToneAudioBuffers__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./context/ToneAudioBuffers */ "./node_modules/tone/build/esm/core/context/ToneAudioBuffers.js");
/* harmony import */ var _context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./context/ToneAudioNode */ "./node_modules/tone/build/esm/core/context/ToneAudioNode.js");
/* harmony import */ var _type_Frequency__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./type/Frequency */ "./node_modules/tone/build/esm/core/type/Frequency.js");
/* harmony import */ var _type_Midi__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./type/Midi */ "./node_modules/tone/build/esm/core/type/Midi.js");
/* harmony import */ var _type_Time__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./type/Time */ "./node_modules/tone/build/esm/core/type/Time.js");
/* harmony import */ var _type_Ticks__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./type/Ticks */ "./node_modules/tone/build/esm/core/type/Ticks.js");
/* harmony import */ var _type_TransportTime__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./type/TransportTime */ "./node_modules/tone/build/esm/core/type/TransportTime.js");
/* harmony import */ var _util_Draw__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./util/Draw */ "./node_modules/tone/build/esm/core/util/Draw.js");
/* harmony import */ var _util_Emitter__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./util/Emitter */ "./node_modules/tone/build/esm/core/util/Emitter.js");
/* harmony import */ var _util_IntervalTimeline__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./util/IntervalTimeline */ "./node_modules/tone/build/esm/core/util/IntervalTimeline.js");
/* harmony import */ var _util_StateTimeline__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./util/StateTimeline */ "./node_modules/tone/build/esm/core/util/StateTimeline.js");
/* harmony import */ var _util_Timeline__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./util/Timeline */ "./node_modules/tone/build/esm/core/util/Timeline.js");
/* harmony import */ var _util_TypeCheck__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./util/TypeCheck */ "./node_modules/tone/build/esm/core/util/TypeCheck.js");
/* harmony import */ var _type_Conversions__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ./type/Conversions */ "./node_modules/tone/build/esm/core/type/Conversions.js");
/* harmony import */ var _util_Defaults__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ./util/Defaults */ "./node_modules/tone/build/esm/core/util/Defaults.js");
/* harmony import */ var _type_Units__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ./type/Units */ "./node_modules/tone/build/esm/core/type/Units.js");
/* harmony import */ var _util_Debug__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ./util/Debug */ "./node_modules/tone/build/esm/core/util/Debug.js");

// export * from "./clock/Transport";



// export * from "./context/Destination";




















// get the units and export them under the "Unit" namespace


// export the debug stuff as Debug


//# sourceMappingURL=index.js.map

/***/ }),

/***/ "./node_modules/tone/build/esm/core/type/Conversions.js":
/*!**************************************************************!*\
  !*** ./node_modules/tone/build/esm/core/type/Conversions.js ***!
  \**************************************************************/
/*! namespace exports */
/*! export dbToGain [provided] [no usage info] [missing usage info prevents renaming] */
/*! export equalPowerScale [provided] [no usage info] [missing usage info prevents renaming] */
/*! export ftom [provided] [no usage info] [missing usage info prevents renaming] */
/*! export ftomf [provided] [no usage info] [missing usage info prevents renaming] */
/*! export gainToDb [provided] [no usage info] [missing usage info prevents renaming] */
/*! export getA4 [provided] [no usage info] [missing usage info prevents renaming] */
/*! export intervalToFrequencyRatio [provided] [no usage info] [missing usage info prevents renaming] */
/*! export mtof [provided] [no usage info] [missing usage info prevents renaming] */
/*! export setA4 [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "equalPowerScale": () => /* binding */ equalPowerScale,
/* harmony export */   "dbToGain": () => /* binding */ dbToGain,
/* harmony export */   "gainToDb": () => /* binding */ gainToDb,
/* harmony export */   "intervalToFrequencyRatio": () => /* binding */ intervalToFrequencyRatio,
/* harmony export */   "getA4": () => /* binding */ getA4,
/* harmony export */   "setA4": () => /* binding */ setA4,
/* harmony export */   "ftom": () => /* binding */ ftom,
/* harmony export */   "ftomf": () => /* binding */ ftomf,
/* harmony export */   "mtof": () => /* binding */ mtof
/* harmony export */ });
/**
 * Equal power gain scale. Good for cross-fading.
 * @param  percent (0-1)
 */
function equalPowerScale(percent) {
    const piFactor = 0.5 * Math.PI;
    return Math.sin(percent * piFactor);
}
/**
 * Convert decibels into gain.
 */
function dbToGain(db) {
    return Math.pow(10, db / 20);
}
/**
 * Convert gain to decibels.
 */
function gainToDb(gain) {
    return 20 * (Math.log(gain) / Math.LN10);
}
/**
 * Convert an interval (in semitones) to a frequency ratio.
 * @param interval the number of semitones above the base note
 * @example
 * Tone.intervalToFrequencyRatio(0); // 1
 * Tone.intervalToFrequencyRatio(12); // 2
 * Tone.intervalToFrequencyRatio(-12); // 0.5
 */
function intervalToFrequencyRatio(interval) {
    return Math.pow(2, (interval / 12));
}
/**
 * The Global [concert tuning pitch](https://en.wikipedia.org/wiki/Concert_pitch) which is used
 * to generate all the other pitch values from notes. A4's values in Hertz.
 */
let A4 = 440;
function getA4() {
    return A4;
}
function setA4(freq) {
    A4 = freq;
}
/**
 * Convert a frequency value to a MIDI note.
 * @param frequency The value to frequency value to convert.
 * @example
 * Tone.ftom(440); // returns 69
 */
function ftom(frequency) {
    return Math.round(ftomf(frequency));
}
/**
 * Convert a frequency to a floating point midi value
 */
function ftomf(frequency) {
    return 69 + 12 * Math.log2(frequency / A4);
}
/**
 * Convert a MIDI note to frequency value.
 * @param  midi The midi number to convert.
 * @return The corresponding frequency value
 * @example
 * Tone.mtof(69); // 440
 */
function mtof(midi) {
    return A4 * Math.pow(2, (midi - 69) / 12);
}
//# sourceMappingURL=Conversions.js.map

/***/ }),

/***/ "./node_modules/tone/build/esm/core/type/Frequency.js":
/*!************************************************************!*\
  !*** ./node_modules/tone/build/esm/core/type/Frequency.js ***!
  \************************************************************/
/*! namespace exports */
/*! export Frequency [provided] [no usage info] [missing usage info prevents renaming] */
/*! export FrequencyClass [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "FrequencyClass": () => /* binding */ FrequencyClass,
/* harmony export */   "Frequency": () => /* binding */ Frequency
/* harmony export */ });
/* harmony import */ var _Global__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Global */ "./node_modules/tone/build/esm/core/Global.js");
/* harmony import */ var _Conversions__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Conversions */ "./node_modules/tone/build/esm/core/type/Conversions.js");
/* harmony import */ var _Time__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Time */ "./node_modules/tone/build/esm/core/type/Time.js");
;



/**
 * Frequency is a primitive type for encoding Frequency values.
 * Eventually all time values are evaluated to hertz using the `valueOf` method.
 * @example
 * Tone.Frequency("C3"); // 261
 * Tone.Frequency(38, "midi");
 * Tone.Frequency("C3").transpose(4);
 * @category Unit
 */
class FrequencyClass extends _Time__WEBPACK_IMPORTED_MODULE_2__.TimeClass {
    constructor() {
        super(...arguments);
        this.name = "Frequency";
        this.defaultUnits = "hz";
    }
    /**
     * The [concert tuning pitch](https://en.wikipedia.org/wiki/Concert_pitch) which is used
     * to generate all the other pitch values from notes. A4's values in Hertz.
     */
    static get A4() {
        return (0,_Conversions__WEBPACK_IMPORTED_MODULE_1__.getA4)();
    }
    static set A4(freq) {
        (0,_Conversions__WEBPACK_IMPORTED_MODULE_1__.setA4)(freq);
    }
    //-------------------------------------
    // 	AUGMENT BASE EXPRESSIONS
    //-------------------------------------
    _getExpressions() {
        return Object.assign({}, super._getExpressions(), {
            midi: {
                regexp: /^(\d+(?:\.\d+)?midi)/,
                method(value) {
                    if (this.defaultUnits === "midi") {
                        return value;
                    }
                    else {
                        return FrequencyClass.mtof(value);
                    }
                },
            },
            note: {
                regexp: /^([a-g]{1}(?:b|#|x|bb)?)(-?[0-9]+)/i,
                method(pitch, octave) {
                    const index = noteToScaleIndex[pitch.toLowerCase()];
                    const noteNumber = index + (parseInt(octave, 10) + 1) * 12;
                    if (this.defaultUnits === "midi") {
                        return noteNumber;
                    }
                    else {
                        return FrequencyClass.mtof(noteNumber);
                    }
                },
            },
            tr: {
                regexp: /^(\d+(?:\.\d+)?):(\d+(?:\.\d+)?):?(\d+(?:\.\d+)?)?/,
                method(m, q, s) {
                    let total = 1;
                    if (m && m !== "0") {
                        total *= this._beatsToUnits(this._getTimeSignature() * parseFloat(m));
                    }
                    if (q && q !== "0") {
                        total *= this._beatsToUnits(parseFloat(q));
                    }
                    if (s && s !== "0") {
                        total *= this._beatsToUnits(parseFloat(s) / 4);
                    }
                    return total;
                },
            },
        });
    }
    //-------------------------------------
    // 	EXPRESSIONS
    //-------------------------------------
    /**
     * Transposes the frequency by the given number of semitones.
     * @return  A new transposed frequency
     * @example
     * Tone.Frequency("A4").transpose(3); // "C5"
     */
    transpose(interval) {
        return new FrequencyClass(this.context, this.valueOf() * (0,_Conversions__WEBPACK_IMPORTED_MODULE_1__.intervalToFrequencyRatio)(interval));
    }
    /**
     * Takes an array of semitone intervals and returns
     * an array of frequencies transposed by those intervals.
     * @return  Returns an array of Frequencies
     * @example
     * Tone.Frequency("A4").harmonize([0, 3, 7]); // ["A4", "C5", "E5"]
     */
    harmonize(intervals) {
        return intervals.map(interval => {
            return this.transpose(interval);
        });
    }
    //-------------------------------------
    // 	UNIT CONVERSIONS
    //-------------------------------------
    /**
     * Return the value of the frequency as a MIDI note
     * @example
     * Tone.Frequency("C4").toMidi(); // 60
     */
    toMidi() {
        return (0,_Conversions__WEBPACK_IMPORTED_MODULE_1__.ftom)(this.valueOf());
    }
    /**
     * Return the value of the frequency in Scientific Pitch Notation
     * @example
     * Tone.Frequency(69, "midi").toNote(); // "A4"
     */
    toNote() {
        const freq = this.toFrequency();
        const log = Math.log2(freq / FrequencyClass.A4);
        let noteNumber = Math.round(12 * log) + 57;
        const octave = Math.floor(noteNumber / 12);
        if (octave < 0) {
            noteNumber += -12 * octave;
        }
        const noteName = scaleIndexToNote[noteNumber % 12];
        return noteName + octave.toString();
    }
    /**
     * Return the duration of one cycle in seconds.
     */
    toSeconds() {
        return 1 / super.toSeconds();
    }
    /**
     * Return the duration of one cycle in ticks
     */
    toTicks() {
        const quarterTime = this._beatsToUnits(1);
        const quarters = this.valueOf() / quarterTime;
        return Math.floor(quarters * this._getPPQ());
    }
    //-------------------------------------
    // 	UNIT CONVERSIONS HELPERS
    //-------------------------------------
    /**
     * With no arguments, return 0
     */
    _noArg() {
        return 0;
    }
    /**
     * Returns the value of a frequency in the current units
     */
    _frequencyToUnits(freq) {
        return freq;
    }
    /**
     * Returns the value of a tick in the current time units
     */
    _ticksToUnits(ticks) {
        return 1 / ((ticks * 60) / (this._getBpm() * this._getPPQ()));
    }
    /**
     * Return the value of the beats in the current units
     */
    _beatsToUnits(beats) {
        return 1 / super._beatsToUnits(beats);
    }
    /**
     * Returns the value of a second in the current units
     */
    _secondsToUnits(seconds) {
        return 1 / seconds;
    }
    /**
     * Convert a MIDI note to frequency value.
     * @param  midi The midi number to convert.
     * @return The corresponding frequency value
     */
    static mtof(midi) {
        return (0,_Conversions__WEBPACK_IMPORTED_MODULE_1__.mtof)(midi);
    }
    /**
     * Convert a frequency value to a MIDI note.
     * @param frequency The value to frequency value to convert.
     */
    static ftom(frequency) {
        return (0,_Conversions__WEBPACK_IMPORTED_MODULE_1__.ftom)(frequency);
    }
}
//-------------------------------------
// 	FREQUENCY CONVERSIONS
//-------------------------------------
/**
 * Note to scale index.
 * @hidden
 */
const noteToScaleIndex = {
    cbb: -2, cb: -1, c: 0, "c#": 1, cx: 2,
    dbb: 0, db: 1, d: 2, "d#": 3, dx: 4,
    ebb: 2, eb: 3, e: 4, "e#": 5, ex: 6,
    fbb: 3, fb: 4, f: 5, "f#": 6, fx: 7,
    gbb: 5, gb: 6, g: 7, "g#": 8, gx: 9,
    abb: 7, ab: 8, a: 9, "a#": 10, ax: 11,
    bbb: 9, bb: 10, b: 11, "b#": 12, bx: 13,
};
/**
 * scale index to note (sharps)
 * @hidden
 */
const scaleIndexToNote = ["C", "C#", "D", "D#", "E", "F", "F#", "G", "G#", "A", "A#", "B"];
/**
 * Convert a value into a FrequencyClass object.
 * @category Unit
 * @example
 * const midi = Tone.Frequency("C3").toMidi();
 * console.log(midi);
 * @example
 * const hertz = Tone.Frequency(38, "midi").toFrequency();
 * console.log(hertz);
 */
function Frequency(value, units) {
    return new FrequencyClass((0,_Global__WEBPACK_IMPORTED_MODULE_0__.getContext)(), value, units);
}
//# sourceMappingURL=Frequency.js.map

/***/ }),

/***/ "./node_modules/tone/build/esm/core/type/Midi.js":
/*!*******************************************************!*\
  !*** ./node_modules/tone/build/esm/core/type/Midi.js ***!
  \*******************************************************/
/*! namespace exports */
/*! export Midi [provided] [no usage info] [missing usage info prevents renaming] */
/*! export MidiClass [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "MidiClass": () => /* binding */ MidiClass,
/* harmony export */   "Midi": () => /* binding */ Midi
/* harmony export */ });
/* harmony import */ var _Global__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Global */ "./node_modules/tone/build/esm/core/Global.js");
/* harmony import */ var _Conversions__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Conversions */ "./node_modules/tone/build/esm/core/type/Conversions.js");
/* harmony import */ var _Frequency__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Frequency */ "./node_modules/tone/build/esm/core/type/Frequency.js");
;


/**
 * Midi is a primitive type for encoding Time values.
 * Midi can be constructed with or without the `new` keyword. Midi can be passed
 * into the parameter of any method which takes time as an argument.
 * @category Unit
 */
class MidiClass extends _Frequency__WEBPACK_IMPORTED_MODULE_2__.FrequencyClass {
    constructor() {
        super(...arguments);
        this.name = "MidiClass";
        this.defaultUnits = "midi";
    }
    /**
     * Returns the value of a frequency in the current units
     */
    _frequencyToUnits(freq) {
        return (0,_Conversions__WEBPACK_IMPORTED_MODULE_1__.ftom)(super._frequencyToUnits(freq));
    }
    /**
     * Returns the value of a tick in the current time units
     */
    _ticksToUnits(ticks) {
        return (0,_Conversions__WEBPACK_IMPORTED_MODULE_1__.ftom)(super._ticksToUnits(ticks));
    }
    /**
     * Return the value of the beats in the current units
     */
    _beatsToUnits(beats) {
        return (0,_Conversions__WEBPACK_IMPORTED_MODULE_1__.ftom)(super._beatsToUnits(beats));
    }
    /**
     * Returns the value of a second in the current units
     */
    _secondsToUnits(seconds) {
        return (0,_Conversions__WEBPACK_IMPORTED_MODULE_1__.ftom)(super._secondsToUnits(seconds));
    }
    /**
     * Return the value of the frequency as a MIDI note
     * @example
     * Tone.Midi(60).toMidi(); // 60
     */
    toMidi() {
        return this.valueOf();
    }
    /**
     * Return the value of the frequency as a MIDI note
     * @example
     * Tone.Midi(60).toFrequency(); // 261.6255653005986
     */
    toFrequency() {
        return (0,_Conversions__WEBPACK_IMPORTED_MODULE_1__.mtof)(this.toMidi());
    }
    /**
     * Transposes the frequency by the given number of semitones.
     * @return A new transposed MidiClass
     * @example
     * Tone.Midi("A4").transpose(3); // "C5"
     */
    transpose(interval) {
        return new MidiClass(this.context, this.toMidi() + interval);
    }
}
/**
 * Convert a value into a FrequencyClass object.
 * @category Unit
 */
function Midi(value, units) {
    return new MidiClass((0,_Global__WEBPACK_IMPORTED_MODULE_0__.getContext)(), value, units);
}
//# sourceMappingURL=Midi.js.map

/***/ }),

/***/ "./node_modules/tone/build/esm/core/type/NoteUnits.js":
/*!************************************************************!*\
  !*** ./node_modules/tone/build/esm/core/type/NoteUnits.js ***!
  \************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
// this file contains all of the valid note names for all pitches between C-4 and C11

//# sourceMappingURL=NoteUnits.js.map

/***/ }),

/***/ "./node_modules/tone/build/esm/core/type/Ticks.js":
/*!********************************************************!*\
  !*** ./node_modules/tone/build/esm/core/type/Ticks.js ***!
  \********************************************************/
/*! namespace exports */
/*! export Ticks [provided] [no usage info] [missing usage info prevents renaming] */
/*! export TicksClass [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "TicksClass": () => /* binding */ TicksClass,
/* harmony export */   "Ticks": () => /* binding */ Ticks
/* harmony export */ });
/* harmony import */ var _Global__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Global */ "./node_modules/tone/build/esm/core/Global.js");
/* harmony import */ var _TransportTime__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./TransportTime */ "./node_modules/tone/build/esm/core/type/TransportTime.js");
;

/**
 * Ticks is a primitive type for encoding Time values.
 * Ticks can be constructed with or without the `new` keyword. Ticks can be passed
 * into the parameter of any method which takes time as an argument.
 * @example
 * const t = Tone.Ticks("4n"); // a quarter note as ticks
 * @category Unit
 */
class TicksClass extends _TransportTime__WEBPACK_IMPORTED_MODULE_1__.TransportTimeClass {
    constructor() {
        super(...arguments);
        this.name = "Ticks";
        this.defaultUnits = "i";
    }
    /**
     * Get the current time in the given units
     */
    _now() {
        return this.context.transport.ticks;
    }
    /**
     * Return the value of the beats in the current units
     */
    _beatsToUnits(beats) {
        return this._getPPQ() * beats;
    }
    /**
     * Returns the value of a second in the current units
     */
    _secondsToUnits(seconds) {
        return Math.floor(seconds / (60 / this._getBpm()) * this._getPPQ());
    }
    /**
     * Returns the value of a tick in the current time units
     */
    _ticksToUnits(ticks) {
        return ticks;
    }
    /**
     * Return the time in ticks
     */
    toTicks() {
        return this.valueOf();
    }
    /**
     * Return the time in seconds
     */
    toSeconds() {
        return (this.valueOf() / this._getPPQ()) * (60 / this._getBpm());
    }
}
/**
 * Convert a time representation to ticks
 * @category Unit
 */
function Ticks(value, units) {
    return new TicksClass((0,_Global__WEBPACK_IMPORTED_MODULE_0__.getContext)(), value, units);
}
//# sourceMappingURL=Ticks.js.map

/***/ }),

/***/ "./node_modules/tone/build/esm/core/type/Time.js":
/*!*******************************************************!*\
  !*** ./node_modules/tone/build/esm/core/type/Time.js ***!
  \*******************************************************/
/*! namespace exports */
/*! export Time [provided] [no usage info] [missing usage info prevents renaming] */
/*! export TimeClass [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "TimeClass": () => /* binding */ TimeClass,
/* harmony export */   "Time": () => /* binding */ Time
/* harmony export */ });
/* harmony import */ var _Global__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Global */ "./node_modules/tone/build/esm/core/Global.js");
/* harmony import */ var _Conversions__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Conversions */ "./node_modules/tone/build/esm/core/type/Conversions.js");
/* harmony import */ var _TimeBase__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./TimeBase */ "./node_modules/tone/build/esm/core/type/TimeBase.js");
;


/**
 * TimeClass is a primitive type for encoding and decoding Time values.
 * TimeClass can be passed into the parameter of any method which takes time as an argument.
 * @param  val    The time value.
 * @param  units  The units of the value.
 * @example
 * const time = Tone.Time("4n"); // a quarter note
 * @category Unit
 */
class TimeClass extends _TimeBase__WEBPACK_IMPORTED_MODULE_2__.TimeBaseClass {
    constructor() {
        super(...arguments);
        this.name = "TimeClass";
    }
    _getExpressions() {
        return Object.assign(super._getExpressions(), {
            now: {
                method: (capture) => {
                    return this._now() + new this.constructor(this.context, capture).valueOf();
                },
                regexp: /^\+(.+)/,
            },
            quantize: {
                method: (capture) => {
                    const quantTo = new TimeClass(this.context, capture).valueOf();
                    return this._secondsToUnits(this.context.transport.nextSubdivision(quantTo));
                },
                regexp: /^@(.+)/,
            },
        });
    }
    /**
     * Quantize the time by the given subdivision. Optionally add a
     * percentage which will move the time value towards the ideal
     * quantized value by that percentage.
     * @param  subdiv    The subdivision to quantize to
     * @param  percent  Move the time value towards the quantized value by a percentage.
     * @example
     * Tone.Time(21).quantize(2); // returns 22
     * Tone.Time(0.6).quantize("4n", 0.5); // returns 0.55
     */
    quantize(subdiv, percent = 1) {
        const subdivision = new this.constructor(this.context, subdiv).valueOf();
        const value = this.valueOf();
        const multiple = Math.round(value / subdivision);
        const ideal = multiple * subdivision;
        const diff = ideal - value;
        return value + diff * percent;
    }
    //-------------------------------------
    // CONVERSIONS
    //-------------------------------------
    /**
     * Convert a Time to Notation. The notation values are will be the
     * closest representation between 1m to 128th note.
     * @return {Notation}
     * @example
     * // if the Transport is at 120bpm:
     * Tone.Time(2).toNotation(); // returns "1m"
     */
    toNotation() {
        const time = this.toSeconds();
        const testNotations = ["1m"];
        for (let power = 1; power < 9; power++) {
            const subdiv = Math.pow(2, power);
            testNotations.push(subdiv + "n.");
            testNotations.push(subdiv + "n");
            testNotations.push(subdiv + "t");
        }
        testNotations.push("0");
        // find the closets notation representation
        let closest = testNotations[0];
        let closestSeconds = new TimeClass(this.context, testNotations[0]).toSeconds();
        testNotations.forEach(notation => {
            const notationSeconds = new TimeClass(this.context, notation).toSeconds();
            if (Math.abs(notationSeconds - time) < Math.abs(closestSeconds - time)) {
                closest = notation;
                closestSeconds = notationSeconds;
            }
        });
        return closest;
    }
    /**
     * Return the time encoded as Bars:Beats:Sixteenths.
     */
    toBarsBeatsSixteenths() {
        const quarterTime = this._beatsToUnits(1);
        let quarters = this.valueOf() / quarterTime;
        quarters = parseFloat(quarters.toFixed(4));
        const measures = Math.floor(quarters / this._getTimeSignature());
        let sixteenths = (quarters % 1) * 4;
        quarters = Math.floor(quarters) % this._getTimeSignature();
        const sixteenthString = sixteenths.toString();
        if (sixteenthString.length > 3) {
            // the additional parseFloat removes insignificant trailing zeroes
            sixteenths = parseFloat(parseFloat(sixteenthString).toFixed(3));
        }
        const progress = [measures, quarters, sixteenths];
        return progress.join(":");
    }
    /**
     * Return the time in ticks.
     */
    toTicks() {
        const quarterTime = this._beatsToUnits(1);
        const quarters = this.valueOf() / quarterTime;
        return Math.round(quarters * this._getPPQ());
    }
    /**
     * Return the time in seconds.
     */
    toSeconds() {
        return this.valueOf();
    }
    /**
     * Return the value as a midi note.
     */
    toMidi() {
        return (0,_Conversions__WEBPACK_IMPORTED_MODULE_1__.ftom)(this.toFrequency());
    }
    _now() {
        return this.context.now();
    }
}
/**
 * Create a TimeClass from a time string or number. The time is computed against the
 * global Tone.Context. To use a specific context, use [[TimeClass]]
 * @param value A value which represents time
 * @param units The value's units if they can't be inferred by the value.
 * @category Unit
 * @example
 * const time = Tone.Time("4n").toSeconds();
 * console.log(time);
 * @example
 * const note = Tone.Time(1).toNotation();
 * console.log(note);
 * @example
 * const freq = Tone.Time(0.5).toFrequency();
 * console.log(freq);
 */
function Time(value, units) {
    return new TimeClass((0,_Global__WEBPACK_IMPORTED_MODULE_0__.getContext)(), value, units);
}
//# sourceMappingURL=Time.js.map

/***/ }),

/***/ "./node_modules/tone/build/esm/core/type/TimeBase.js":
/*!***********************************************************!*\
  !*** ./node_modules/tone/build/esm/core/type/TimeBase.js ***!
  \***********************************************************/
/*! namespace exports */
/*! export TimeBaseClass [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "TimeBaseClass": () => /* binding */ TimeBaseClass
/* harmony export */ });
/* harmony import */ var _Tone__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Tone */ "./node_modules/tone/build/esm/core/Tone.js");
/* harmony import */ var _util_TypeCheck__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util/TypeCheck */ "./node_modules/tone/build/esm/core/util/TypeCheck.js");
;

/**
 * TimeBase is a flexible encoding of time which can be evaluated to and from a string.
 */
class TimeBaseClass extends _Tone__WEBPACK_IMPORTED_MODULE_0__.Tone {
    /**
     * @param context The context associated with the time value. Used to compute
     * Transport and context-relative timing.
     * @param  value  The time value as a number, string or object
     * @param  units  Unit values
     */
    constructor(context, value, units) {
        super();
        /**
         * The default units
         */
        this.defaultUnits = "s";
        this._val = value;
        this._units = units;
        this.context = context;
        this._expressions = this._getExpressions();
    }
    /**
     * All of the time encoding expressions
     */
    _getExpressions() {
        return {
            hz: {
                method: (value) => {
                    return this._frequencyToUnits(parseFloat(value));
                },
                regexp: /^(\d+(?:\.\d+)?)hz$/i,
            },
            i: {
                method: (value) => {
                    return this._ticksToUnits(parseInt(value, 10));
                },
                regexp: /^(\d+)i$/i,
            },
            m: {
                method: (value) => {
                    return this._beatsToUnits(parseInt(value, 10) * this._getTimeSignature());
                },
                regexp: /^(\d+)m$/i,
            },
            n: {
                method: (value, dot) => {
                    const numericValue = parseInt(value, 10);
                    const scalar = dot === "." ? 1.5 : 1;
                    if (numericValue === 1) {
                        return this._beatsToUnits(this._getTimeSignature()) * scalar;
                    }
                    else {
                        return this._beatsToUnits(4 / numericValue) * scalar;
                    }
                },
                regexp: /^(\d+)n(\.?)$/i,
            },
            number: {
                method: (value) => {
                    return this._expressions[this.defaultUnits].method.call(this, value);
                },
                regexp: /^(\d+(?:\.\d+)?)$/,
            },
            s: {
                method: (value) => {
                    return this._secondsToUnits(parseFloat(value));
                },
                regexp: /^(\d+(?:\.\d+)?)s$/,
            },
            samples: {
                method: (value) => {
                    return parseInt(value, 10) / this.context.sampleRate;
                },
                regexp: /^(\d+)samples$/,
            },
            t: {
                method: (value) => {
                    const numericValue = parseInt(value, 10);
                    return this._beatsToUnits(8 / (Math.floor(numericValue) * 3));
                },
                regexp: /^(\d+)t$/i,
            },
            tr: {
                method: (m, q, s) => {
                    let total = 0;
                    if (m && m !== "0") {
                        total += this._beatsToUnits(this._getTimeSignature() * parseFloat(m));
                    }
                    if (q && q !== "0") {
                        total += this._beatsToUnits(parseFloat(q));
                    }
                    if (s && s !== "0") {
                        total += this._beatsToUnits(parseFloat(s) / 4);
                    }
                    return total;
                },
                regexp: /^(\d+(?:\.\d+)?):(\d+(?:\.\d+)?):?(\d+(?:\.\d+)?)?$/,
            },
        };
    }
    //-------------------------------------
    // 	VALUE OF
    //-------------------------------------
    /**
     * Evaluate the time value. Returns the time in seconds.
     */
    valueOf() {
        if (this._val instanceof TimeBaseClass) {
            this.fromType(this._val);
        }
        if ((0,_util_TypeCheck__WEBPACK_IMPORTED_MODULE_1__.isUndef)(this._val)) {
            return this._noArg();
        }
        else if ((0,_util_TypeCheck__WEBPACK_IMPORTED_MODULE_1__.isString)(this._val) && (0,_util_TypeCheck__WEBPACK_IMPORTED_MODULE_1__.isUndef)(this._units)) {
            for (const units in this._expressions) {
                if (this._expressions[units].regexp.test(this._val.trim())) {
                    this._units = units;
                    break;
                }
            }
        }
        else if ((0,_util_TypeCheck__WEBPACK_IMPORTED_MODULE_1__.isObject)(this._val)) {
            let total = 0;
            for (const typeName in this._val) {
                if ((0,_util_TypeCheck__WEBPACK_IMPORTED_MODULE_1__.isDefined)(this._val[typeName])) {
                    const quantity = this._val[typeName];
                    // @ts-ignore
                    const time = (new this.constructor(this.context, typeName)).valueOf() * quantity;
                    total += time;
                }
            }
            return total;
        }
        if ((0,_util_TypeCheck__WEBPACK_IMPORTED_MODULE_1__.isDefined)(this._units)) {
            const expr = this._expressions[this._units];
            const matching = this._val.toString().trim().match(expr.regexp);
            if (matching) {
                return expr.method.apply(this, matching.slice(1));
            }
            else {
                return expr.method.call(this, this._val);
            }
        }
        else if ((0,_util_TypeCheck__WEBPACK_IMPORTED_MODULE_1__.isString)(this._val)) {
            return parseFloat(this._val);
        }
        else {
            return this._val;
        }
    }
    //-------------------------------------
    // 	UNIT CONVERSIONS
    //-------------------------------------
    /**
     * Returns the value of a frequency in the current units
     */
    _frequencyToUnits(freq) {
        return 1 / freq;
    }
    /**
     * Return the value of the beats in the current units
     */
    _beatsToUnits(beats) {
        return (60 / this._getBpm()) * beats;
    }
    /**
     * Returns the value of a second in the current units
     */
    _secondsToUnits(seconds) {
        return seconds;
    }
    /**
     * Returns the value of a tick in the current time units
     */
    _ticksToUnits(ticks) {
        return (ticks * (this._beatsToUnits(1)) / this._getPPQ());
    }
    /**
     * With no arguments, return 'now'
     */
    _noArg() {
        return this._now();
    }
    //-------------------------------------
    // 	TEMPO CONVERSIONS
    //-------------------------------------
    /**
     * Return the bpm
     */
    _getBpm() {
        return this.context.transport.bpm.value;
    }
    /**
     * Return the timeSignature
     */
    _getTimeSignature() {
        return this.context.transport.timeSignature;
    }
    /**
     * Return the PPQ or 192 if Transport is not available
     */
    _getPPQ() {
        return this.context.transport.PPQ;
    }
    //-------------------------------------
    // 	CONVERSION INTERFACE
    //-------------------------------------
    /**
     * Coerce a time type into this units type.
     * @param type Any time type units
     */
    fromType(type) {
        this._units = undefined;
        switch (this.defaultUnits) {
            case "s":
                this._val = type.toSeconds();
                break;
            case "i":
                this._val = type.toTicks();
                break;
            case "hz":
                this._val = type.toFrequency();
                break;
            case "midi":
                this._val = type.toMidi();
                break;
        }
        return this;
    }
    /**
     * Return the value in hertz
     */
    toFrequency() {
        return 1 / this.toSeconds();
    }
    /**
     * Return the time in samples
     */
    toSamples() {
        return this.toSeconds() * this.context.sampleRate;
    }
    /**
     * Return the time in milliseconds.
     */
    toMilliseconds() {
        return this.toSeconds() * 1000;
    }
}
//# sourceMappingURL=TimeBase.js.map

/***/ }),

/***/ "./node_modules/tone/build/esm/core/type/TransportTime.js":
/*!****************************************************************!*\
  !*** ./node_modules/tone/build/esm/core/type/TransportTime.js ***!
  \****************************************************************/
/*! namespace exports */
/*! export TransportTime [provided] [no usage info] [missing usage info prevents renaming] */
/*! export TransportTimeClass [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "TransportTimeClass": () => /* binding */ TransportTimeClass,
/* harmony export */   "TransportTime": () => /* binding */ TransportTime
/* harmony export */ });
/* harmony import */ var _Global__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Global */ "./node_modules/tone/build/esm/core/Global.js");
/* harmony import */ var _Time__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Time */ "./node_modules/tone/build/esm/core/type/Time.js");
;

/**
 * TransportTime is a the time along the Transport's
 * timeline. It is similar to Tone.Time, but instead of evaluating
 * against the AudioContext's clock, it is evaluated against
 * the Transport's position. See [TransportTime wiki](https://github.com/Tonejs/Tone.js/wiki/TransportTime).
 * @category Unit
 */
class TransportTimeClass extends _Time__WEBPACK_IMPORTED_MODULE_1__.TimeClass {
    constructor() {
        super(...arguments);
        this.name = "TransportTime";
    }
    /**
     * Return the current time in whichever context is relevant
     */
    _now() {
        return this.context.transport.seconds;
    }
}
/**
 * TransportTime is a the time along the Transport's
 * timeline. It is similar to [[Time]], but instead of evaluating
 * against the AudioContext's clock, it is evaluated against
 * the Transport's position. See [TransportTime wiki](https://github.com/Tonejs/Tone.js/wiki/TransportTime).
 * @category Unit
 */
function TransportTime(value, units) {
    return new TransportTimeClass((0,_Global__WEBPACK_IMPORTED_MODULE_0__.getContext)(), value, units);
}
//# sourceMappingURL=TransportTime.js.map

/***/ }),

/***/ "./node_modules/tone/build/esm/core/type/Units.js":
/*!********************************************************!*\
  !*** ./node_modules/tone/build/esm/core/type/Units.js ***!
  \********************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _NoteUnits__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./NoteUnits */ "./node_modules/tone/build/esm/core/type/NoteUnits.js");

//# sourceMappingURL=Units.js.map

/***/ }),

/***/ "./node_modules/tone/build/esm/core/util/AdvancedTypeCheck.js":
/*!********************************************************************!*\
  !*** ./node_modules/tone/build/esm/core/util/AdvancedTypeCheck.js ***!
  \********************************************************************/
/*! namespace exports */
/*! export isAudioBuffer [provided] [no usage info] [missing usage info prevents renaming] */
/*! export isAudioContext [provided] [no usage info] [missing usage info prevents renaming] */
/*! export isAudioNode [provided] [no usage info] [missing usage info prevents renaming] */
/*! export isAudioParam [provided] [no usage info] [missing usage info prevents renaming] */
/*! export isOfflineAudioContext [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "isAudioParam": () => /* binding */ isAudioParam,
/* harmony export */   "isAudioNode": () => /* binding */ isAudioNode,
/* harmony export */   "isOfflineAudioContext": () => /* binding */ isOfflineAudioContext,
/* harmony export */   "isAudioContext": () => /* binding */ isAudioContext,
/* harmony export */   "isAudioBuffer": () => /* binding */ isAudioBuffer
/* harmony export */ });
/* harmony import */ var standardized_audio_context__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! standardized-audio-context */ "./node_modules/standardized-audio-context/build/es2019/module.js");
;
/**
 * Test if the given value is an instanceof AudioParam
 */
function isAudioParam(arg) {
    return (0,standardized_audio_context__WEBPACK_IMPORTED_MODULE_0__.isAnyAudioParam)(arg);
}
/**
 * Test if the given value is an instanceof AudioNode
 */
function isAudioNode(arg) {
    return (0,standardized_audio_context__WEBPACK_IMPORTED_MODULE_0__.isAnyAudioNode)(arg);
}
/**
 * Test if the arg is instanceof an OfflineAudioContext
 */
function isOfflineAudioContext(arg) {
    return (0,standardized_audio_context__WEBPACK_IMPORTED_MODULE_0__.isAnyOfflineAudioContext)(arg);
}
/**
 * Test if the arg is an instanceof AudioContext
 */
function isAudioContext(arg) {
    return (0,standardized_audio_context__WEBPACK_IMPORTED_MODULE_0__.isAnyAudioContext)(arg);
}
/**
 * Test if the arg is instanceof an AudioBuffer
 */
function isAudioBuffer(arg) {
    return arg instanceof AudioBuffer;
}
//# sourceMappingURL=AdvancedTypeCheck.js.map

/***/ }),

/***/ "./node_modules/tone/build/esm/core/util/Debug.js":
/*!********************************************************!*\
  !*** ./node_modules/tone/build/esm/core/util/Debug.js ***!
  \********************************************************/
/*! namespace exports */
/*! export assert [provided] [no usage info] [missing usage info prevents renaming] */
/*! export assertContextRunning [provided] [no usage info] [missing usage info prevents renaming] */
/*! export assertRange [provided] [no usage info] [missing usage info prevents renaming] */
/*! export log [provided] [no usage info] [missing usage info prevents renaming] */
/*! export setLogger [provided] [no usage info] [missing usage info prevents renaming] */
/*! export warn [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "assert": () => /* binding */ assert,
/* harmony export */   "assertRange": () => /* binding */ assertRange,
/* harmony export */   "assertContextRunning": () => /* binding */ assertContextRunning,
/* harmony export */   "setLogger": () => /* binding */ setLogger,
/* harmony export */   "log": () => /* binding */ log,
/* harmony export */   "warn": () => /* binding */ warn
/* harmony export */ });
/**
 * Assert that the statement is true, otherwise invoke the error.
 * @param statement
 * @param error The message which is passed into an Error
 */
function assert(statement, error) {
    if (!statement) {
        throw new Error(error);
    }
}
/**
 * Make sure that the given value is within the range
 */
function assertRange(value, gte, lte = Infinity) {
    if (!(gte <= value && value <= lte)) {
        throw new RangeError(`Value must be within [${gte}, ${lte}], got: ${value}`);
    }
}
/**
 * Make sure that the given value is within the range
 */
function assertContextRunning(context) {
    // add a warning if the context is not started
    if (!context.isOffline && context.state !== "running") {
        warn("The AudioContext is \"suspended\". Invoke Tone.start() from a user action to start the audio.");
    }
}
/**
 * The default logger is the console
 */
let defaultLogger = console;
/**
 * Set the logging interface
 */
function setLogger(logger) {
    defaultLogger = logger;
}
/**
 * Log anything
 */
function log(...args) {
    defaultLogger.log(...args);
}
/**
 * Warn anything
 */
function warn(...args) {
    defaultLogger.warn(...args);
}
//# sourceMappingURL=Debug.js.map

/***/ }),

/***/ "./node_modules/tone/build/esm/core/util/Decorator.js":
/*!************************************************************!*\
  !*** ./node_modules/tone/build/esm/core/util/Decorator.js ***!
  \************************************************************/
/*! namespace exports */
/*! export range [provided] [no usage info] [missing usage info prevents renaming] */
/*! export timeRange [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "range": () => /* binding */ range,
/* harmony export */   "timeRange": () => /* binding */ timeRange
/* harmony export */ });
/* harmony import */ var _Debug__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Debug */ "./node_modules/tone/build/esm/core/util/Debug.js");
;
/**
 * Assert that the number is in the given range.
 */
function range(min, max = Infinity) {
    const valueMap = new WeakMap();
    return function (target, propertyKey) {
        Reflect.defineProperty(target, propertyKey, {
            configurable: true,
            enumerable: true,
            get: function () {
                return valueMap.get(this);
            },
            set: function (newValue) {
                (0,_Debug__WEBPACK_IMPORTED_MODULE_0__.assertRange)(newValue, min, max);
                valueMap.set(this, newValue);
            }
        });
    };
}
/**
 * Convert the time to seconds and assert that the time is in between the two
 * values when being set.
 */
function timeRange(min, max = Infinity) {
    const valueMap = new WeakMap();
    return function (target, propertyKey) {
        Reflect.defineProperty(target, propertyKey, {
            configurable: true,
            enumerable: true,
            get: function () {
                return valueMap.get(this);
            },
            set: function (newValue) {
                (0,_Debug__WEBPACK_IMPORTED_MODULE_0__.assertRange)(this.toSeconds(newValue), min, max);
                valueMap.set(this, newValue);
            }
        });
    };
}
//# sourceMappingURL=Decorator.js.map

/***/ }),

/***/ "./node_modules/tone/build/esm/core/util/Defaults.js":
/*!***********************************************************!*\
  !*** ./node_modules/tone/build/esm/core/util/Defaults.js ***!
  \***********************************************************/
/*! namespace exports */
/*! export deepEquals [provided] [no usage info] [missing usage info prevents renaming] */
/*! export deepMerge [provided] [no usage info] [missing usage info prevents renaming] */
/*! export defaultArg [provided] [no usage info] [missing usage info prevents renaming] */
/*! export getDefaultsFromInstance [provided] [no usage info] [missing usage info prevents renaming] */
/*! export omitFromObject [provided] [no usage info] [missing usage info prevents renaming] */
/*! export optionsFromArguments [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "deepMerge": () => /* binding */ deepMerge,
/* harmony export */   "deepEquals": () => /* binding */ deepEquals,
/* harmony export */   "optionsFromArguments": () => /* binding */ optionsFromArguments,
/* harmony export */   "getDefaultsFromInstance": () => /* binding */ getDefaultsFromInstance,
/* harmony export */   "defaultArg": () => /* binding */ defaultArg,
/* harmony export */   "omitFromObject": () => /* binding */ omitFromObject
/* harmony export */ });
/* harmony import */ var _AdvancedTypeCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./AdvancedTypeCheck */ "./node_modules/tone/build/esm/core/util/AdvancedTypeCheck.js");
/* harmony import */ var _TypeCheck__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./TypeCheck */ "./node_modules/tone/build/esm/core/util/TypeCheck.js");
;

/**
 * Some objects should not be merged
 */
function noCopy(key, arg) {
    return key === "value" || (0,_AdvancedTypeCheck__WEBPACK_IMPORTED_MODULE_0__.isAudioParam)(arg) || (0,_AdvancedTypeCheck__WEBPACK_IMPORTED_MODULE_0__.isAudioNode)(arg) || (0,_AdvancedTypeCheck__WEBPACK_IMPORTED_MODULE_0__.isAudioBuffer)(arg);
}
function deepMerge(target, ...sources) {
    if (!sources.length) {
        return target;
    }
    const source = sources.shift();
    if ((0,_TypeCheck__WEBPACK_IMPORTED_MODULE_1__.isObject)(target) && (0,_TypeCheck__WEBPACK_IMPORTED_MODULE_1__.isObject)(source)) {
        for (const key in source) {
            if (noCopy(key, source[key])) {
                target[key] = source[key];
            }
            else if ((0,_TypeCheck__WEBPACK_IMPORTED_MODULE_1__.isObject)(source[key])) {
                if (!target[key]) {
                    Object.assign(target, { [key]: {} });
                }
                deepMerge(target[key], source[key]);
            }
            else {
                Object.assign(target, { [key]: source[key] });
            }
        }
    }
    // @ts-ignore
    return deepMerge(target, ...sources);
}
/**
 * Returns true if the two arrays have the same value for each of the elements
 */
function deepEquals(arrayA, arrayB) {
    return arrayA.length === arrayB.length && arrayA.every((element, index) => arrayB[index] === element);
}
/**
 * Convert an args array into an object.
 */
function optionsFromArguments(defaults, argsArray, keys = [], objKey) {
    const opts = {};
    const args = Array.from(argsArray);
    // if the first argument is an object and has an object key
    if ((0,_TypeCheck__WEBPACK_IMPORTED_MODULE_1__.isObject)(args[0]) && objKey && !Reflect.has(args[0], objKey)) {
        // if it's not part of the defaults
        const partOfDefaults = Object.keys(args[0]).some(key => Reflect.has(defaults, key));
        if (!partOfDefaults) {
            // merge that key
            deepMerge(opts, { [objKey]: args[0] });
            // remove the obj key from the keys
            keys.splice(keys.indexOf(objKey), 1);
            // shift the first argument off
            args.shift();
        }
    }
    if (args.length === 1 && (0,_TypeCheck__WEBPACK_IMPORTED_MODULE_1__.isObject)(args[0])) {
        deepMerge(opts, args[0]);
    }
    else {
        for (let i = 0; i < keys.length; i++) {
            if ((0,_TypeCheck__WEBPACK_IMPORTED_MODULE_1__.isDefined)(args[i])) {
                opts[keys[i]] = args[i];
            }
        }
    }
    return deepMerge(defaults, opts);
}
/**
 * Return this instances default values by calling Constructor.getDefaults()
 */
function getDefaultsFromInstance(instance) {
    return instance.constructor.getDefaults();
}
/**
 * Returns the fallback if the given object is undefined.
 * Take an array of arguments and return a formatted options object.
 */
function defaultArg(given, fallback) {
    if ((0,_TypeCheck__WEBPACK_IMPORTED_MODULE_1__.isUndef)(given)) {
        return fallback;
    }
    else {
        return given;
    }
}
/**
 * Remove all of the properties belonging to omit from obj.
 */
function omitFromObject(obj, omit) {
    omit.forEach(prop => {
        if (Reflect.has(obj, prop)) {
            delete obj[prop];
        }
    });
    return obj;
}
//# sourceMappingURL=Defaults.js.map

/***/ }),

/***/ "./node_modules/tone/build/esm/core/util/Draw.js":
/*!*******************************************************!*\
  !*** ./node_modules/tone/build/esm/core/util/Draw.js ***!
  \*******************************************************/
/*! namespace exports */
/*! export Draw [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Draw": () => /* binding */ Draw
/* harmony export */ });
/* harmony import */ var _context_ToneWithContext__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../context/ToneWithContext */ "./node_modules/tone/build/esm/core/context/ToneWithContext.js");
/* harmony import */ var _Timeline__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Timeline */ "./node_modules/tone/build/esm/core/util/Timeline.js");
/* harmony import */ var _context_ContextInitialization__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../context/ContextInitialization */ "./node_modules/tone/build/esm/core/context/ContextInitialization.js");
;


/**
 * Draw is useful for synchronizing visuals and audio events.
 * Callbacks from Tone.Transport or any of the Tone.Event classes
 * always happen _before_ the scheduled time and are not synchronized
 * to the animation frame so they are not good for triggering tightly
 * synchronized visuals and sound. Draw makes it easy to schedule
 * callbacks using the AudioContext time and uses requestAnimationFrame.
 * @example
 * Tone.Transport.schedule((time) => {
 * 	// use the time argument to schedule a callback with Draw
 * 	Tone.Draw.schedule(() => {
 * 		// do drawing or DOM manipulation here
 * 		console.log(time);
 * 	}, time);
 * }, "+0.5");
 * Tone.Transport.start();
 * @category Core
 */
class Draw extends _context_ToneWithContext__WEBPACK_IMPORTED_MODULE_0__.ToneWithContext {
    constructor() {
        super(...arguments);
        this.name = "Draw";
        /**
         * The duration after which events are not invoked.
         */
        this.expiration = 0.25;
        /**
         * The amount of time before the scheduled time
         * that the callback can be invoked. Default is
         * half the time of an animation frame (0.008 seconds).
         */
        this.anticipation = 0.008;
        /**
         * All of the events.
         */
        this._events = new _Timeline__WEBPACK_IMPORTED_MODULE_1__.Timeline();
        /**
         * The draw loop
         */
        this._boundDrawLoop = this._drawLoop.bind(this);
        /**
         * The animation frame id
         */
        this._animationFrame = -1;
    }
    /**
     * Schedule a function at the given time to be invoked
     * on the nearest animation frame.
     * @param  callback  Callback is invoked at the given time.
     * @param  time      The time relative to the AudioContext time to invoke the callback.
     * @example
     * Tone.Transport.scheduleRepeat(time => {
     * 	Tone.Draw.schedule(() => console.log(time), time);
     * }, 1);
     * Tone.Transport.start();
     */
    schedule(callback, time) {
        this._events.add({
            callback,
            time: this.toSeconds(time),
        });
        // start the draw loop on the first event
        if (this._events.length === 1) {
            this._animationFrame = requestAnimationFrame(this._boundDrawLoop);
        }
        return this;
    }
    /**
     * Cancel events scheduled after the given time
     * @param  after  Time after which scheduled events will be removed from the scheduling timeline.
     */
    cancel(after) {
        this._events.cancel(this.toSeconds(after));
        return this;
    }
    /**
     * The draw loop
     */
    _drawLoop() {
        const now = this.context.currentTime;
        while (this._events.length && this._events.peek().time - this.anticipation <= now) {
            const event = this._events.shift();
            if (event && now - event.time <= this.expiration) {
                event.callback();
            }
        }
        if (this._events.length > 0) {
            this._animationFrame = requestAnimationFrame(this._boundDrawLoop);
        }
    }
    dispose() {
        super.dispose();
        this._events.dispose();
        cancelAnimationFrame(this._animationFrame);
        return this;
    }
}
//-------------------------------------
// 	INITIALIZATION
//-------------------------------------
(0,_context_ContextInitialization__WEBPACK_IMPORTED_MODULE_2__.onContextInit)(context => {
    context.draw = new Draw({ context });
});
(0,_context_ContextInitialization__WEBPACK_IMPORTED_MODULE_2__.onContextClose)(context => {
    context.draw.dispose();
});
//# sourceMappingURL=Draw.js.map

/***/ }),

/***/ "./node_modules/tone/build/esm/core/util/Emitter.js":
/*!**********************************************************!*\
  !*** ./node_modules/tone/build/esm/core/util/Emitter.js ***!
  \**********************************************************/
/*! namespace exports */
/*! export Emitter [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Emitter": () => /* binding */ Emitter
/* harmony export */ });
/* harmony import */ var _Tone__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Tone */ "./node_modules/tone/build/esm/core/Tone.js");
/* harmony import */ var _TypeCheck__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./TypeCheck */ "./node_modules/tone/build/esm/core/util/TypeCheck.js");
;

/**
 * Emitter gives classes which extend it
 * the ability to listen for and emit events.
 * Inspiration and reference from Jerome Etienne's [MicroEvent](https://github.com/jeromeetienne/microevent.js).
 * MIT (c) 2011 Jerome Etienne.
 * @category Core
 */
class Emitter extends _Tone__WEBPACK_IMPORTED_MODULE_0__.Tone {
    constructor() {
        super(...arguments);
        this.name = "Emitter";
    }
    /**
     * Bind a callback to a specific event.
     * @param  event     The name of the event to listen for.
     * @param  callback  The callback to invoke when the event is emitted
     */
    on(event, callback) {
        // split the event
        const events = event.split(/\W+/);
        events.forEach(eventName => {
            if ((0,_TypeCheck__WEBPACK_IMPORTED_MODULE_1__.isUndef)(this._events)) {
                this._events = {};
            }
            if (!this._events.hasOwnProperty(eventName)) {
                this._events[eventName] = [];
            }
            this._events[eventName].push(callback);
        });
        return this;
    }
    /**
     * Bind a callback which is only invoked once
     * @param  event     The name of the event to listen for.
     * @param  callback  The callback to invoke when the event is emitted
     */
    once(event, callback) {
        const boundCallback = (...args) => {
            // invoke the callback
            callback(...args);
            // remove the event
            this.off(event, boundCallback);
        };
        this.on(event, boundCallback);
        return this;
    }
    /**
     * Remove the event listener.
     * @param  event     The event to stop listening to.
     * @param  callback  The callback which was bound to the event with Emitter.on.
     *                   If no callback is given, all callbacks events are removed.
     */
    off(event, callback) {
        const events = event.split(/\W+/);
        events.forEach(eventName => {
            if ((0,_TypeCheck__WEBPACK_IMPORTED_MODULE_1__.isUndef)(this._events)) {
                this._events = {};
            }
            if (this._events.hasOwnProperty(event)) {
                if ((0,_TypeCheck__WEBPACK_IMPORTED_MODULE_1__.isUndef)(callback)) {
                    this._events[event] = [];
                }
                else {
                    const eventList = this._events[event];
                    for (let i = eventList.length - 1; i >= 0; i--) {
                        if (eventList[i] === callback) {
                            eventList.splice(i, 1);
                        }
                    }
                }
            }
        });
        return this;
    }
    /**
     * Invoke all of the callbacks bound to the event
     * with any arguments passed in.
     * @param  event  The name of the event.
     * @param args The arguments to pass to the functions listening.
     */
    emit(event, ...args) {
        if (this._events) {
            if (this._events.hasOwnProperty(event)) {
                const eventList = this._events[event].slice(0);
                for (let i = 0, len = eventList.length; i < len; i++) {
                    eventList[i].apply(this, args);
                }
            }
        }
        return this;
    }
    /**
     * Add Emitter functions (on/off/emit) to the object
     */
    static mixin(constr) {
        // instance._events = {};
        ["on", "once", "off", "emit"].forEach(name => {
            const property = Object.getOwnPropertyDescriptor(Emitter.prototype, name);
            Object.defineProperty(constr.prototype, name, property);
        });
    }
    /**
     * Clean up
     */
    dispose() {
        super.dispose();
        this._events = undefined;
        return this;
    }
}
//# sourceMappingURL=Emitter.js.map

/***/ }),

/***/ "./node_modules/tone/build/esm/core/util/Interface.js":
/*!************************************************************!*\
  !*** ./node_modules/tone/build/esm/core/util/Interface.js ***!
  \************************************************************/
/*! namespace exports */
/*! export noOp [provided] [no usage info] [missing usage info prevents renaming] */
/*! export readOnly [provided] [no usage info] [missing usage info prevents renaming] */
/*! export writable [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "readOnly": () => /* binding */ readOnly,
/* harmony export */   "writable": () => /* binding */ writable,
/* harmony export */   "noOp": () => /* binding */ noOp
/* harmony export */ });
/* harmony import */ var _TypeCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./TypeCheck */ "./node_modules/tone/build/esm/core/util/TypeCheck.js");
;
/**
 * Make the property not writable using `defineProperty`. Internal use only.
 */
function readOnly(target, property) {
    if ((0,_TypeCheck__WEBPACK_IMPORTED_MODULE_0__.isArray)(property)) {
        property.forEach(str => readOnly(target, str));
    }
    else {
        Object.defineProperty(target, property, {
            enumerable: true,
            writable: false,
        });
    }
}
/**
 * Make an attribute writeable. Internal use only.
 */
function writable(target, property) {
    if ((0,_TypeCheck__WEBPACK_IMPORTED_MODULE_0__.isArray)(property)) {
        property.forEach(str => writable(target, str));
    }
    else {
        Object.defineProperty(target, property, {
            writable: true,
        });
    }
}
const noOp = () => {
    // no operation here!
};
//# sourceMappingURL=Interface.js.map

/***/ }),

/***/ "./node_modules/tone/build/esm/core/util/IntervalTimeline.js":
/*!*******************************************************************!*\
  !*** ./node_modules/tone/build/esm/core/util/IntervalTimeline.js ***!
  \*******************************************************************/
/*! namespace exports */
/*! export IntervalTimeline [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "IntervalTimeline": () => /* binding */ IntervalTimeline
/* harmony export */ });
/* harmony import */ var _Tone__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Tone */ "./node_modules/tone/build/esm/core/Tone.js");
/* harmony import */ var _TypeCheck__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./TypeCheck */ "./node_modules/tone/build/esm/core/util/TypeCheck.js");
/* harmony import */ var _Debug__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Debug */ "./node_modules/tone/build/esm/core/util/Debug.js");
;


/**
 * Similar to Tone.Timeline, but all events represent
 * intervals with both "time" and "duration" times. The
 * events are placed in a tree structure optimized
 * for querying an intersection point with the timeline
 * events. Internally uses an [Interval Tree](https://en.wikipedia.org/wiki/Interval_tree)
 * to represent the data.
 */
class IntervalTimeline extends _Tone__WEBPACK_IMPORTED_MODULE_0__.Tone {
    constructor() {
        super(...arguments);
        this.name = "IntervalTimeline";
        /**
         * The root node of the inteval tree
         */
        this._root = null;
        /**
         * Keep track of the length of the timeline.
         */
        this._length = 0;
    }
    /**
     * The event to add to the timeline. All events must
     * have a time and duration value
     * @param  event  The event to add to the timeline
     */
    add(event) {
        (0,_Debug__WEBPACK_IMPORTED_MODULE_2__.assert)((0,_TypeCheck__WEBPACK_IMPORTED_MODULE_1__.isDefined)(event.time), "Events must have a time property");
        (0,_Debug__WEBPACK_IMPORTED_MODULE_2__.assert)((0,_TypeCheck__WEBPACK_IMPORTED_MODULE_1__.isDefined)(event.duration), "Events must have a duration parameter");
        event.time = event.time.valueOf();
        let node = new IntervalNode(event.time, event.time + event.duration, event);
        if (this._root === null) {
            this._root = node;
        }
        else {
            this._root.insert(node);
        }
        this._length++;
        // Restructure tree to be balanced
        while (node !== null) {
            node.updateHeight();
            node.updateMax();
            this._rebalance(node);
            node = node.parent;
        }
        return this;
    }
    /**
     * Remove an event from the timeline.
     * @param  event  The event to remove from the timeline
     */
    remove(event) {
        if (this._root !== null) {
            const results = [];
            this._root.search(event.time, results);
            for (const node of results) {
                if (node.event === event) {
                    this._removeNode(node);
                    this._length--;
                    break;
                }
            }
        }
        return this;
    }
    /**
     * The number of items in the timeline.
     * @readOnly
     */
    get length() {
        return this._length;
    }
    /**
     * Remove events whose time time is after the given time
     * @param  after  The time to query.
     */
    cancel(after) {
        this.forEachFrom(after, event => this.remove(event));
        return this;
    }
    /**
     * Set the root node as the given node
     */
    _setRoot(node) {
        this._root = node;
        if (this._root !== null) {
            this._root.parent = null;
        }
    }
    /**
     * Replace the references to the node in the node's parent
     * with the replacement node.
     */
    _replaceNodeInParent(node, replacement) {
        if (node.parent !== null) {
            if (node.isLeftChild()) {
                node.parent.left = replacement;
            }
            else {
                node.parent.right = replacement;
            }
            this._rebalance(node.parent);
        }
        else {
            this._setRoot(replacement);
        }
    }
    /**
     * Remove the node from the tree and replace it with
     * a successor which follows the schema.
     */
    _removeNode(node) {
        if (node.left === null && node.right === null) {
            this._replaceNodeInParent(node, null);
        }
        else if (node.right === null) {
            this._replaceNodeInParent(node, node.left);
        }
        else if (node.left === null) {
            this._replaceNodeInParent(node, node.right);
        }
        else {
            const balance = node.getBalance();
            let replacement;
            let temp = null;
            if (balance > 0) {
                if (node.left.right === null) {
                    replacement = node.left;
                    replacement.right = node.right;
                    temp = replacement;
                }
                else {
                    replacement = node.left.right;
                    while (replacement.right !== null) {
                        replacement = replacement.right;
                    }
                    if (replacement.parent) {
                        replacement.parent.right = replacement.left;
                        temp = replacement.parent;
                        replacement.left = node.left;
                        replacement.right = node.right;
                    }
                }
            }
            else if (node.right.left === null) {
                replacement = node.right;
                replacement.left = node.left;
                temp = replacement;
            }
            else {
                replacement = node.right.left;
                while (replacement.left !== null) {
                    replacement = replacement.left;
                }
                if (replacement.parent) {
                    replacement.parent.left = replacement.right;
                    temp = replacement.parent;
                    replacement.left = node.left;
                    replacement.right = node.right;
                }
            }
            if (node.parent !== null) {
                if (node.isLeftChild()) {
                    node.parent.left = replacement;
                }
                else {
                    node.parent.right = replacement;
                }
            }
            else {
                this._setRoot(replacement);
            }
            if (temp) {
                this._rebalance(temp);
            }
        }
        node.dispose();
    }
    /**
     * Rotate the tree to the left
     */
    _rotateLeft(node) {
        const parent = node.parent;
        const isLeftChild = node.isLeftChild();
        // Make node.right the new root of this sub tree (instead of node)
        const pivotNode = node.right;
        if (pivotNode) {
            node.right = pivotNode.left;
            pivotNode.left = node;
        }
        if (parent !== null) {
            if (isLeftChild) {
                parent.left = pivotNode;
            }
            else {
                parent.right = pivotNode;
            }
        }
        else {
            this._setRoot(pivotNode);
        }
    }
    /**
     * Rotate the tree to the right
     */
    _rotateRight(node) {
        const parent = node.parent;
        const isLeftChild = node.isLeftChild();
        // Make node.left the new root of this sub tree (instead of node)
        const pivotNode = node.left;
        if (pivotNode) {
            node.left = pivotNode.right;
            pivotNode.right = node;
        }
        if (parent !== null) {
            if (isLeftChild) {
                parent.left = pivotNode;
            }
            else {
                parent.right = pivotNode;
            }
        }
        else {
            this._setRoot(pivotNode);
        }
    }
    /**
     * Balance the BST
     */
    _rebalance(node) {
        const balance = node.getBalance();
        if (balance > 1 && node.left) {
            if (node.left.getBalance() < 0) {
                this._rotateLeft(node.left);
            }
            else {
                this._rotateRight(node);
            }
        }
        else if (balance < -1 && node.right) {
            if (node.right.getBalance() > 0) {
                this._rotateRight(node.right);
            }
            else {
                this._rotateLeft(node);
            }
        }
    }
    /**
     * Get an event whose time and duration span the give time. Will
     * return the match whose "time" value is closest to the given time.
     * @return  The event which spans the desired time
     */
    get(time) {
        if (this._root !== null) {
            const results = [];
            this._root.search(time, results);
            if (results.length > 0) {
                let max = results[0];
                for (let i = 1; i < results.length; i++) {
                    if (results[i].low > max.low) {
                        max = results[i];
                    }
                }
                return max.event;
            }
        }
        return null;
    }
    /**
     * Iterate over everything in the timeline.
     * @param  callback The callback to invoke with every item
     */
    forEach(callback) {
        if (this._root !== null) {
            const allNodes = [];
            this._root.traverse(node => allNodes.push(node));
            allNodes.forEach(node => {
                if (node.event) {
                    callback(node.event);
                }
            });
        }
        return this;
    }
    /**
     * Iterate over everything in the array in which the given time
     * overlaps with the time and duration time of the event.
     * @param  time The time to check if items are overlapping
     * @param  callback The callback to invoke with every item
     */
    forEachAtTime(time, callback) {
        if (this._root !== null) {
            const results = [];
            this._root.search(time, results);
            results.forEach(node => {
                if (node.event) {
                    callback(node.event);
                }
            });
        }
        return this;
    }
    /**
     * Iterate over everything in the array in which the time is greater
     * than or equal to the given time.
     * @param  time The time to check if items are before
     * @param  callback The callback to invoke with every item
     */
    forEachFrom(time, callback) {
        if (this._root !== null) {
            const results = [];
            this._root.searchAfter(time, results);
            results.forEach(node => {
                if (node.event) {
                    callback(node.event);
                }
            });
        }
        return this;
    }
    /**
     * Clean up
     */
    dispose() {
        super.dispose();
        if (this._root !== null) {
            this._root.traverse(node => node.dispose());
        }
        this._root = null;
        return this;
    }
}
//-------------------------------------
// 	INTERVAL NODE HELPER
//-------------------------------------
/**
 * Represents a node in the binary search tree, with the addition
 * of a "high" value which keeps track of the highest value of
 * its children.
 * References:
 * https://brooknovak.wordpress.com/2013/12/07/augmented-interval-tree-in-c/
 * http://www.mif.vu.lt/~valdas/ALGORITMAI/LITERATURA/Cormen/Cormen.pdf
 * @param low
 * @param high
 */
class IntervalNode {
    constructor(low, high, event) {
        // the nodes to the left
        this._left = null;
        // the nodes to the right
        this._right = null;
        // the parent node
        this.parent = null;
        // the number of child nodes
        this.height = 0;
        this.event = event;
        // the low value
        this.low = low;
        // the high value
        this.high = high;
        // the high value for this and all child nodes
        this.max = this.high;
    }
    /**
     * Insert a node into the correct spot in the tree
     */
    insert(node) {
        if (node.low <= this.low) {
            if (this.left === null) {
                this.left = node;
            }
            else {
                this.left.insert(node);
            }
        }
        else if (this.right === null) {
            this.right = node;
        }
        else {
            this.right.insert(node);
        }
    }
    /**
     * Search the tree for nodes which overlap
     * with the given point
     * @param  point  The point to query
     * @param  results  The array to put the results
     */
    search(point, results) {
        // If p is to the right of the rightmost point of any interval
        // in this node and all children, there won't be any matches.
        if (point > this.max) {
            return;
        }
        // Search left children
        if (this.left !== null) {
            this.left.search(point, results);
        }
        // Check this node
        if (this.low <= point && this.high > point) {
            results.push(this);
        }
        // If p is to the left of the time of this interval,
        // then it can't be in any child to the right.
        if (this.low > point) {
            return;
        }
        // Search right children
        if (this.right !== null) {
            this.right.search(point, results);
        }
    }
    /**
     * Search the tree for nodes which are less
     * than the given point
     * @param  point  The point to query
     * @param  results  The array to put the results
     */
    searchAfter(point, results) {
        // Check this node
        if (this.low >= point) {
            results.push(this);
            if (this.left !== null) {
                this.left.searchAfter(point, results);
            }
        }
        // search the right side
        if (this.right !== null) {
            this.right.searchAfter(point, results);
        }
    }
    /**
     * Invoke the callback on this element and both it's branches
     * @param  {Function}  callback
     */
    traverse(callback) {
        callback(this);
        if (this.left !== null) {
            this.left.traverse(callback);
        }
        if (this.right !== null) {
            this.right.traverse(callback);
        }
    }
    /**
     * Update the height of the node
     */
    updateHeight() {
        if (this.left !== null && this.right !== null) {
            this.height = Math.max(this.left.height, this.right.height) + 1;
        }
        else if (this.right !== null) {
            this.height = this.right.height + 1;
        }
        else if (this.left !== null) {
            this.height = this.left.height + 1;
        }
        else {
            this.height = 0;
        }
    }
    /**
     * Update the height of the node
     */
    updateMax() {
        this.max = this.high;
        if (this.left !== null) {
            this.max = Math.max(this.max, this.left.max);
        }
        if (this.right !== null) {
            this.max = Math.max(this.max, this.right.max);
        }
    }
    /**
     * The balance is how the leafs are distributed on the node
     * @return  Negative numbers are balanced to the right
     */
    getBalance() {
        let balance = 0;
        if (this.left !== null && this.right !== null) {
            balance = this.left.height - this.right.height;
        }
        else if (this.left !== null) {
            balance = this.left.height + 1;
        }
        else if (this.right !== null) {
            balance = -(this.right.height + 1);
        }
        return balance;
    }
    /**
     * @returns true if this node is the left child of its parent
     */
    isLeftChild() {
        return this.parent !== null && this.parent.left === this;
    }
    /**
     * get/set the left node
     */
    get left() {
        return this._left;
    }
    set left(node) {
        this._left = node;
        if (node !== null) {
            node.parent = this;
        }
        this.updateHeight();
        this.updateMax();
    }
    /**
     * get/set the right node
     */
    get right() {
        return this._right;
    }
    set right(node) {
        this._right = node;
        if (node !== null) {
            node.parent = this;
        }
        this.updateHeight();
        this.updateMax();
    }
    /**
     * null out references.
     */
    dispose() {
        this.parent = null;
        this._left = null;
        this._right = null;
        this.event = null;
    }
}
//# sourceMappingURL=IntervalTimeline.js.map

/***/ }),

/***/ "./node_modules/tone/build/esm/core/util/Math.js":
/*!*******************************************************!*\
  !*** ./node_modules/tone/build/esm/core/util/Math.js ***!
  \*******************************************************/
/*! namespace exports */
/*! export EQ [provided] [no usage info] [missing usage info prevents renaming] */
/*! export GT [provided] [no usage info] [missing usage info prevents renaming] */
/*! export GTE [provided] [no usage info] [missing usage info prevents renaming] */
/*! export LT [provided] [no usage info] [missing usage info prevents renaming] */
/*! export clamp [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "GT": () => /* binding */ GT,
/* harmony export */   "GTE": () => /* binding */ GTE,
/* harmony export */   "LT": () => /* binding */ LT,
/* harmony export */   "EQ": () => /* binding */ EQ,
/* harmony export */   "clamp": () => /* binding */ clamp
/* harmony export */ });
/**
 * The threshold for correctness for operators. Less than one sample even
 * at very high sampling rates (e.g. `1e-6 < 1 / 192000`).
 */
const EPSILON = 1e-6;
/**
 * Test if A is greater than B
 */
function GT(a, b) {
    return a > b + EPSILON;
}
/**
 * Test if A is greater than or equal to B
 */
function GTE(a, b) {
    return GT(a, b) || EQ(a, b);
}
/**
 * Test if A is less than B
 */
function LT(a, b) {
    return a + EPSILON < b;
}
/**
 * Test if A is less than B
 */
function EQ(a, b) {
    return Math.abs(a - b) < EPSILON;
}
/**
 * Clamp the value within the given range
 */
function clamp(value, min, max) {
    return Math.max(Math.min(value, max), min);
}
//# sourceMappingURL=Math.js.map

/***/ }),

/***/ "./node_modules/tone/build/esm/core/util/StateTimeline.js":
/*!****************************************************************!*\
  !*** ./node_modules/tone/build/esm/core/util/StateTimeline.js ***!
  \****************************************************************/
/*! namespace exports */
/*! export StateTimeline [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "StateTimeline": () => /* binding */ StateTimeline
/* harmony export */ });
/* harmony import */ var _Timeline__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Timeline */ "./node_modules/tone/build/esm/core/util/Timeline.js");
/* harmony import */ var _Debug__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Debug */ "./node_modules/tone/build/esm/core/util/Debug.js");
;

/**
 * A Timeline State. Provides the methods: `setStateAtTime("state", time)` and `getValueAtTime(time)`
 * @param initial The initial state of the StateTimeline.  Defaults to `undefined`
 */
class StateTimeline extends _Timeline__WEBPACK_IMPORTED_MODULE_0__.Timeline {
    constructor(initial = "stopped") {
        super();
        this.name = "StateTimeline";
        this._initial = initial;
        this.setStateAtTime(this._initial, 0);
    }
    /**
     * Returns the scheduled state scheduled before or at
     * the given time.
     * @param  time  The time to query.
     * @return  The name of the state input in setStateAtTime.
     */
    getValueAtTime(time) {
        const event = this.get(time);
        if (event !== null) {
            return event.state;
        }
        else {
            return this._initial;
        }
    }
    /**
     * Add a state to the timeline.
     * @param  state The name of the state to set.
     * @param  time  The time to query.
     * @param options Any additional options that are needed in the timeline.
     */
    setStateAtTime(state, time, options) {
        (0,_Debug__WEBPACK_IMPORTED_MODULE_1__.assertRange)(time, 0);
        this.add(Object.assign({}, options, {
            state,
            time,
        }));
        return this;
    }
    /**
     * Return the event before the time with the given state
     * @param  state The state to look for
     * @param  time  When to check before
     * @return  The event with the given state before the time
     */
    getLastState(state, time) {
        // time = this.toSeconds(time);
        const index = this._search(time);
        for (let i = index; i >= 0; i--) {
            const event = this._timeline[i];
            if (event.state === state) {
                return event;
            }
        }
    }
    /**
     * Return the event after the time with the given state
     * @param  state The state to look for
     * @param  time  When to check from
     * @return  The event with the given state after the time
     */
    getNextState(state, time) {
        // time = this.toSeconds(time);
        const index = this._search(time);
        if (index !== -1) {
            for (let i = index; i < this._timeline.length; i++) {
                const event = this._timeline[i];
                if (event.state === state) {
                    return event;
                }
            }
        }
    }
}
//# sourceMappingURL=StateTimeline.js.map

/***/ }),

/***/ "./node_modules/tone/build/esm/core/util/Timeline.js":
/*!***********************************************************!*\
  !*** ./node_modules/tone/build/esm/core/util/Timeline.js ***!
  \***********************************************************/
/*! namespace exports */
/*! export Timeline [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Timeline": () => /* binding */ Timeline
/* harmony export */ });
/* harmony import */ var _Tone__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Tone */ "./node_modules/tone/build/esm/core/Tone.js");
/* harmony import */ var _Defaults__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Defaults */ "./node_modules/tone/build/esm/core/util/Defaults.js");
/* harmony import */ var _Debug__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Debug */ "./node_modules/tone/build/esm/core/util/Debug.js");
/* harmony import */ var _Math__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Math */ "./node_modules/tone/build/esm/core/util/Math.js");
;



/**
 * A Timeline class for scheduling and maintaining state
 * along a timeline. All events must have a "time" property.
 * Internally, events are stored in time order for fast
 * retrieval.
 */
class Timeline extends _Tone__WEBPACK_IMPORTED_MODULE_0__.Tone {
    constructor() {
        super();
        this.name = "Timeline";
        /**
         * The array of scheduled timeline events
         */
        this._timeline = [];
        const options = (0,_Defaults__WEBPACK_IMPORTED_MODULE_1__.optionsFromArguments)(Timeline.getDefaults(), arguments, ["memory"]);
        this.memory = options.memory;
        this.increasing = options.increasing;
    }
    static getDefaults() {
        return {
            memory: Infinity,
            increasing: false,
        };
    }
    /**
     * The number of items in the timeline.
     */
    get length() {
        return this._timeline.length;
    }
    /**
     * Insert an event object onto the timeline. Events must have a "time" attribute.
     * @param event  The event object to insert into the timeline.
     */
    add(event) {
        // the event needs to have a time attribute
        (0,_Debug__WEBPACK_IMPORTED_MODULE_2__.assert)(Reflect.has(event, "time"), "Timeline: events must have a time attribute");
        event.time = event.time.valueOf();
        if (this.increasing && this.length) {
            const lastValue = this._timeline[this.length - 1];
            (0,_Debug__WEBPACK_IMPORTED_MODULE_2__.assert)((0,_Math__WEBPACK_IMPORTED_MODULE_3__.GTE)(event.time, lastValue.time), "The time must be greater than or equal to the last scheduled time");
            this._timeline.push(event);
        }
        else {
            const index = this._search(event.time);
            this._timeline.splice(index + 1, 0, event);
        }
        // if the length is more than the memory, remove the previous ones
        if (this.length > this.memory) {
            const diff = this.length - this.memory;
            this._timeline.splice(0, diff);
        }
        return this;
    }
    /**
     * Remove an event from the timeline.
     * @param  {Object}  event  The event object to remove from the list.
     * @returns {Timeline} this
     */
    remove(event) {
        const index = this._timeline.indexOf(event);
        if (index !== -1) {
            this._timeline.splice(index, 1);
        }
        return this;
    }
    /**
     * Get the nearest event whose time is less than or equal to the given time.
     * @param  time  The time to query.
     */
    get(time, param = "time") {
        const index = this._search(time, param);
        if (index !== -1) {
            return this._timeline[index];
        }
        else {
            return null;
        }
    }
    /**
     * Return the first event in the timeline without removing it
     * @returns {Object} The first event object
     */
    peek() {
        return this._timeline[0];
    }
    /**
     * Return the first event in the timeline and remove it
     */
    shift() {
        return this._timeline.shift();
    }
    /**
     * Get the event which is scheduled after the given time.
     * @param  time  The time to query.
     */
    getAfter(time, param = "time") {
        const index = this._search(time, param);
        if (index + 1 < this._timeline.length) {
            return this._timeline[index + 1];
        }
        else {
            return null;
        }
    }
    /**
     * Get the event before the event at the given time.
     * @param  time  The time to query.
     */
    getBefore(time) {
        const len = this._timeline.length;
        // if it's after the last item, return the last item
        if (len > 0 && this._timeline[len - 1].time < time) {
            return this._timeline[len - 1];
        }
        const index = this._search(time);
        if (index - 1 >= 0) {
            return this._timeline[index - 1];
        }
        else {
            return null;
        }
    }
    /**
     * Cancel events at and after the given time
     * @param  after  The time to query.
     */
    cancel(after) {
        if (this._timeline.length > 1) {
            let index = this._search(after);
            if (index >= 0) {
                if ((0,_Math__WEBPACK_IMPORTED_MODULE_3__.EQ)(this._timeline[index].time, after)) {
                    // get the first item with that time
                    for (let i = index; i >= 0; i--) {
                        if ((0,_Math__WEBPACK_IMPORTED_MODULE_3__.EQ)(this._timeline[i].time, after)) {
                            index = i;
                        }
                        else {
                            break;
                        }
                    }
                    this._timeline = this._timeline.slice(0, index);
                }
                else {
                    this._timeline = this._timeline.slice(0, index + 1);
                }
            }
            else {
                this._timeline = [];
            }
        }
        else if (this._timeline.length === 1) {
            // the first item's time
            if ((0,_Math__WEBPACK_IMPORTED_MODULE_3__.GTE)(this._timeline[0].time, after)) {
                this._timeline = [];
            }
        }
        return this;
    }
    /**
     * Cancel events before or equal to the given time.
     * @param  time  The time to cancel before.
     */
    cancelBefore(time) {
        const index = this._search(time);
        if (index >= 0) {
            this._timeline = this._timeline.slice(index + 1);
        }
        return this;
    }
    /**
     * Returns the previous event if there is one. null otherwise
     * @param  event The event to find the previous one of
     * @return The event right before the given event
     */
    previousEvent(event) {
        const index = this._timeline.indexOf(event);
        if (index > 0) {
            return this._timeline[index - 1];
        }
        else {
            return null;
        }
    }
    /**
     * Does a binary search on the timeline array and returns the
     * nearest event index whose time is after or equal to the given time.
     * If a time is searched before the first index in the timeline, -1 is returned.
     * If the time is after the end, the index of the last item is returned.
     */
    _search(time, param = "time") {
        if (this._timeline.length === 0) {
            return -1;
        }
        let beginning = 0;
        const len = this._timeline.length;
        let end = len;
        if (len > 0 && this._timeline[len - 1][param] <= time) {
            return len - 1;
        }
        while (beginning < end) {
            // calculate the midpoint for roughly equal partition
            let midPoint = Math.floor(beginning + (end - beginning) / 2);
            const event = this._timeline[midPoint];
            const nextEvent = this._timeline[midPoint + 1];
            if ((0,_Math__WEBPACK_IMPORTED_MODULE_3__.EQ)(event[param], time)) {
                // choose the last one that has the same time
                for (let i = midPoint; i < this._timeline.length; i++) {
                    const testEvent = this._timeline[i];
                    if ((0,_Math__WEBPACK_IMPORTED_MODULE_3__.EQ)(testEvent[param], time)) {
                        midPoint = i;
                    }
                    else {
                        break;
                    }
                }
                return midPoint;
            }
            else if ((0,_Math__WEBPACK_IMPORTED_MODULE_3__.LT)(event[param], time) && (0,_Math__WEBPACK_IMPORTED_MODULE_3__.GT)(nextEvent[param], time)) {
                return midPoint;
            }
            else if ((0,_Math__WEBPACK_IMPORTED_MODULE_3__.GT)(event[param], time)) {
                // search lower
                end = midPoint;
            }
            else {
                // search upper
                beginning = midPoint + 1;
            }
        }
        return -1;
    }
    /**
     * Internal iterator. Applies extra safety checks for
     * removing items from the array.
     */
    _iterate(callback, lowerBound = 0, upperBound = this._timeline.length - 1) {
        this._timeline.slice(lowerBound, upperBound + 1).forEach(callback);
    }
    /**
     * Iterate over everything in the array
     * @param  callback The callback to invoke with every item
     */
    forEach(callback) {
        this._iterate(callback);
        return this;
    }
    /**
     * Iterate over everything in the array at or before the given time.
     * @param  time The time to check if items are before
     * @param  callback The callback to invoke with every item
     */
    forEachBefore(time, callback) {
        // iterate over the items in reverse so that removing an item doesn't break things
        const upperBound = this._search(time);
        if (upperBound !== -1) {
            this._iterate(callback, 0, upperBound);
        }
        return this;
    }
    /**
     * Iterate over everything in the array after the given time.
     * @param  time The time to check if items are before
     * @param  callback The callback to invoke with every item
     */
    forEachAfter(time, callback) {
        // iterate over the items in reverse so that removing an item doesn't break things
        const lowerBound = this._search(time);
        this._iterate(callback, lowerBound + 1);
        return this;
    }
    /**
     * Iterate over everything in the array between the startTime and endTime.
     * The timerange is inclusive of the startTime, but exclusive of the endTime.
     * range = [startTime, endTime).
     * @param  startTime The time to check if items are before
     * @param  endTime The end of the test interval.
     * @param  callback The callback to invoke with every item
     */
    forEachBetween(startTime, endTime, callback) {
        let lowerBound = this._search(startTime);
        let upperBound = this._search(endTime);
        if (lowerBound !== -1 && upperBound !== -1) {
            if (this._timeline[lowerBound].time !== startTime) {
                lowerBound += 1;
            }
            // exclusive of the end time
            if (this._timeline[upperBound].time === endTime) {
                upperBound -= 1;
            }
            this._iterate(callback, lowerBound, upperBound);
        }
        else if (lowerBound === -1) {
            this._iterate(callback, 0, upperBound);
        }
        return this;
    }
    /**
     * Iterate over everything in the array at or after the given time. Similar to
     * forEachAfter, but includes the item(s) at the given time.
     * @param  time The time to check if items are before
     * @param  callback The callback to invoke with every item
     */
    forEachFrom(time, callback) {
        // iterate over the items in reverse so that removing an item doesn't break things
        let lowerBound = this._search(time);
        // work backwards until the event time is less than time
        while (lowerBound >= 0 && this._timeline[lowerBound].time >= time) {
            lowerBound--;
        }
        this._iterate(callback, lowerBound + 1);
        return this;
    }
    /**
     * Iterate over everything in the array at the given time
     * @param  time The time to check if items are before
     * @param  callback The callback to invoke with every item
     */
    forEachAtTime(time, callback) {
        // iterate over the items in reverse so that removing an item doesn't break things
        const upperBound = this._search(time);
        if (upperBound !== -1 && (0,_Math__WEBPACK_IMPORTED_MODULE_3__.EQ)(this._timeline[upperBound].time, time)) {
            let lowerBound = upperBound;
            for (let i = upperBound; i >= 0; i--) {
                if ((0,_Math__WEBPACK_IMPORTED_MODULE_3__.EQ)(this._timeline[i].time, time)) {
                    lowerBound = i;
                }
                else {
                    break;
                }
            }
            this._iterate(event => {
                callback(event);
            }, lowerBound, upperBound);
        }
        return this;
    }
    /**
     * Clean up.
     */
    dispose() {
        super.dispose();
        this._timeline = [];
        return this;
    }
}
//# sourceMappingURL=Timeline.js.map

/***/ }),

/***/ "./node_modules/tone/build/esm/core/util/TimelineValue.js":
/*!****************************************************************!*\
  !*** ./node_modules/tone/build/esm/core/util/TimelineValue.js ***!
  \****************************************************************/
/*! namespace exports */
/*! export TimelineValue [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "TimelineValue": () => /* binding */ TimelineValue
/* harmony export */ });
/* harmony import */ var _Timeline__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Timeline */ "./node_modules/tone/build/esm/core/util/Timeline.js");
/* harmony import */ var _Tone__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Tone */ "./node_modules/tone/build/esm/core/Tone.js");
;

/**
 * Represents a single value which is gettable and settable in a timed way
 */
class TimelineValue extends _Tone__WEBPACK_IMPORTED_MODULE_1__.Tone {
    /**
     * @param initialValue The value to return if there is no scheduled values
     */
    constructor(initialValue) {
        super();
        this.name = "TimelineValue";
        /**
         * The timeline which stores the values
         */
        this._timeline = new _Timeline__WEBPACK_IMPORTED_MODULE_0__.Timeline({ memory: 10 });
        this._initialValue = initialValue;
    }
    /**
     * Set the value at the given time
     */
    set(value, time) {
        this._timeline.add({
            value, time
        });
        return this;
    }
    /**
     * Get the value at the given time
     */
    get(time) {
        const event = this._timeline.get(time);
        if (event) {
            return event.value;
        }
        else {
            return this._initialValue;
        }
    }
}
//# sourceMappingURL=TimelineValue.js.map

/***/ }),

/***/ "./node_modules/tone/build/esm/core/util/TypeCheck.js":
/*!************************************************************!*\
  !*** ./node_modules/tone/build/esm/core/util/TypeCheck.js ***!
  \************************************************************/
/*! namespace exports */
/*! export isArray [provided] [no usage info] [missing usage info prevents renaming] */
/*! export isBoolean [provided] [no usage info] [missing usage info prevents renaming] */
/*! export isDefined [provided] [no usage info] [missing usage info prevents renaming] */
/*! export isFunction [provided] [no usage info] [missing usage info prevents renaming] */
/*! export isNote [provided] [no usage info] [missing usage info prevents renaming] */
/*! export isNumber [provided] [no usage info] [missing usage info prevents renaming] */
/*! export isObject [provided] [no usage info] [missing usage info prevents renaming] */
/*! export isString [provided] [no usage info] [missing usage info prevents renaming] */
/*! export isUndef [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "isUndef": () => /* binding */ isUndef,
/* harmony export */   "isDefined": () => /* binding */ isDefined,
/* harmony export */   "isFunction": () => /* binding */ isFunction,
/* harmony export */   "isNumber": () => /* binding */ isNumber,
/* harmony export */   "isObject": () => /* binding */ isObject,
/* harmony export */   "isBoolean": () => /* binding */ isBoolean,
/* harmony export */   "isArray": () => /* binding */ isArray,
/* harmony export */   "isString": () => /* binding */ isString,
/* harmony export */   "isNote": () => /* binding */ isNote
/* harmony export */ });
/**
 * Test if the arg is undefined
 */
function isUndef(arg) {
    return typeof arg === "undefined";
}
/**
 * Test if the arg is not undefined
 */
function isDefined(arg) {
    return !isUndef(arg);
}
/**
 * Test if the arg is a function
 */
function isFunction(arg) {
    return typeof arg === "function";
}
/**
 * Test if the argument is a number.
 */
function isNumber(arg) {
    return (typeof arg === "number");
}
/**
 * Test if the given argument is an object literal (i.e. `{}`);
 */
function isObject(arg) {
    return (Object.prototype.toString.call(arg) === "[object Object]" && arg.constructor === Object);
}
/**
 * Test if the argument is a boolean.
 */
function isBoolean(arg) {
    return (typeof arg === "boolean");
}
/**
 * Test if the argument is an Array
 */
function isArray(arg) {
    return (Array.isArray(arg));
}
/**
 * Test if the argument is a string.
 */
function isString(arg) {
    return (typeof arg === "string");
}
/**
 * Test if the argument is in the form of a note in scientific pitch notation.
 * e.g. "C4"
 */
function isNote(arg) {
    return isString(arg) && /^([a-g]{1}(?:b|#|x|bb)?)(-?[0-9]+)/i.test(arg);
}
//# sourceMappingURL=TypeCheck.js.map

/***/ }),

/***/ "./node_modules/tone/build/esm/core/worklet/DelayLine.worklet.js":
/*!***********************************************************************!*\
  !*** ./node_modules/tone/build/esm/core/worklet/DelayLine.worklet.js ***!
  \***********************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _WorkletGlobalScope__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./WorkletGlobalScope */ "./node_modules/tone/build/esm/core/worklet/WorkletGlobalScope.js");
;
const delayLine = /* javascript */ `
	/**
	 * A multichannel buffer for use within an AudioWorkletProcessor as a delay line
	 */
	class DelayLine {
		
		constructor(size, channels) {
			this.buffer = [];
			this.writeHead = []
			this.size = size;

			// create the empty channels
			for (let i = 0; i < channels; i++) {
				this.buffer[i] = new Float32Array(this.size);
				this.writeHead[i] = 0;
			}
		}

		/**
		 * Push a value onto the end
		 * @param channel number
		 * @param value number
		 */
		push(channel, value) {
			this.writeHead[channel] += 1;
			if (this.writeHead[channel] > this.size) {
				this.writeHead[channel] = 0;
			}
			this.buffer[channel][this.writeHead[channel]] = value;
		}

		/**
		 * Get the recorded value of the channel given the delay
		 * @param channel number
		 * @param delay number delay samples
		 */
		get(channel, delay) {
			let readHead = this.writeHead[channel] - Math.floor(delay);
			if (readHead < 0) {
				readHead += this.size;
			}
			return this.buffer[channel][readHead];
		}
	}
`;
(0,_WorkletGlobalScope__WEBPACK_IMPORTED_MODULE_0__.addToWorklet)(delayLine);
//# sourceMappingURL=DelayLine.worklet.js.map

/***/ }),

/***/ "./node_modules/tone/build/esm/core/worklet/SingleIOProcessor.worklet.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/tone/build/esm/core/worklet/SingleIOProcessor.worklet.js ***!
  \*******************************************************************************/
/*! namespace exports */
/*! export singleIOProcess [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "singleIOProcess": () => /* binding */ singleIOProcess
/* harmony export */ });
/* harmony import */ var _ToneAudioWorkletProcessor_worklet__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ToneAudioWorkletProcessor.worklet */ "./node_modules/tone/build/esm/core/worklet/ToneAudioWorkletProcessor.worklet.js");
/* harmony import */ var _WorkletGlobalScope__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./WorkletGlobalScope */ "./node_modules/tone/build/esm/core/worklet/WorkletGlobalScope.js");
;

const singleIOProcess = /* javascript */ `
	/**
	 * Abstract class for a single input/output processor. 
	 * has a 'generate' function which processes one sample at a time
	 */
	class SingleIOProcessor extends ToneAudioWorkletProcessor {

		constructor(options) {
			super(Object.assign(options, {
				numberOfInputs: 1,
				numberOfOutputs: 1
			}));
			/**
			 * Holds the name of the parameter and a single value of that
			 * parameter at the current sample
			 * @type { [name: string]: number }
			 */
			this.params = {}
		}

		/**
		 * Generate an output sample from the input sample and parameters
		 * @abstract
		 * @param input number
		 * @param channel number
		 * @param parameters { [name: string]: number }
		 * @returns number
		 */
		generate(){}

		/**
		 * Update the private params object with the 
		 * values of the parameters at the given index
		 * @param parameters { [name: string]: Float32Array },
		 * @param index number
		 */
		updateParams(parameters, index) {
			for (const paramName in parameters) {
				const param = parameters[paramName];
				if (param.length > 1) {
					this.params[paramName] = parameters[paramName][index];
				} else {
					this.params[paramName] = parameters[paramName][0];
				}
			}
		}

		/**
		 * Process a single frame of the audio
		 * @param inputs Float32Array[][]
		 * @param outputs Float32Array[][]
		 */
		process(inputs, outputs, parameters) {
			const input = inputs[0];
			const output = outputs[0];
			// get the parameter values
			const channelCount = Math.max(input && input.length || 0, output.length);
			for (let sample = 0; sample < this.blockSize; sample++) {
				this.updateParams(parameters, sample);
				for (let channel = 0; channel < channelCount; channel++) {
					const inputSample = input && input.length ? input[channel][sample] : 0;
					output[channel][sample] = this.generate(inputSample, channel, this.params);
				}
			}
			return !this.disposed;
		}
	};
`;
(0,_WorkletGlobalScope__WEBPACK_IMPORTED_MODULE_1__.addToWorklet)(singleIOProcess);
//# sourceMappingURL=SingleIOProcessor.worklet.js.map

/***/ }),

/***/ "./node_modules/tone/build/esm/core/worklet/ToneAudioWorklet.js":
/*!**********************************************************************!*\
  !*** ./node_modules/tone/build/esm/core/worklet/ToneAudioWorklet.js ***!
  \**********************************************************************/
/*! namespace exports */
/*! export ToneAudioWorklet [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ToneAudioWorklet": () => /* binding */ ToneAudioWorklet
/* harmony export */ });
/* harmony import */ var _context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../context/ToneAudioNode */ "./node_modules/tone/build/esm/core/context/ToneAudioNode.js");
/* harmony import */ var _util_Interface__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util/Interface */ "./node_modules/tone/build/esm/core/util/Interface.js");
/* harmony import */ var _WorkletGlobalScope__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./WorkletGlobalScope */ "./node_modules/tone/build/esm/core/worklet/WorkletGlobalScope.js");
;


class ToneAudioWorklet extends _context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_0__.ToneAudioNode {
    constructor(options) {
        super(options);
        this.name = "ToneAudioWorklet";
        /**
         * The constructor options for the node
         */
        this.workletOptions = {};
        /**
         * Callback which is invoked when there is an error in the processing
         */
        this.onprocessorerror = _util_Interface__WEBPACK_IMPORTED_MODULE_1__.noOp;
        const blobUrl = URL.createObjectURL(new Blob([(0,_WorkletGlobalScope__WEBPACK_IMPORTED_MODULE_2__.getWorkletGlobalScope)()], { type: "text/javascript" }));
        const name = this._audioWorkletName();
        this._dummyGain = this.context.createGain();
        this._dummyParam = this._dummyGain.gain;
        // Register the processor
        this.context.addAudioWorkletModule(blobUrl, name).then(() => {
            // create the worklet when it's read
            if (!this.disposed) {
                this._worklet = this.context.createAudioWorkletNode(name, this.workletOptions);
                this._worklet.onprocessorerror = this.onprocessorerror.bind(this);
                this.onReady(this._worklet);
            }
        });
    }
    dispose() {
        super.dispose();
        this._dummyGain.disconnect();
        if (this._worklet) {
            this._worklet.port.postMessage("dispose");
            this._worklet.disconnect();
        }
        return this;
    }
}
//# sourceMappingURL=ToneAudioWorklet.js.map

/***/ }),

/***/ "./node_modules/tone/build/esm/core/worklet/ToneAudioWorkletProcessor.worklet.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/tone/build/esm/core/worklet/ToneAudioWorkletProcessor.worklet.js ***!
  \***************************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _WorkletGlobalScope__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./WorkletGlobalScope */ "./node_modules/tone/build/esm/core/worklet/WorkletGlobalScope.js");
;
const toneAudioWorkletProcessor = /* javascript */ `
	/**
	 * The base AudioWorkletProcessor for use in Tone.js. Works with the [[ToneAudioWorklet]]. 
	 */
	class ToneAudioWorkletProcessor extends AudioWorkletProcessor {

		constructor(options) {
			
			super(options);
			/**
			 * If the processor was disposed or not. Keep alive until it's disposed.
			 */
			this.disposed = false;
		   	/** 
			 * The number of samples in the processing block
			 */
			this.blockSize = 128;
			/**
			 * the sample rate
			 */
			this.sampleRate = sampleRate;

			this.port.onmessage = (event) => {
				// when it receives a dispose 
				if (event.data === "dispose") {
					this.disposed = true;
				}
			};
		}
	}
`;
(0,_WorkletGlobalScope__WEBPACK_IMPORTED_MODULE_0__.addToWorklet)(toneAudioWorkletProcessor);
//# sourceMappingURL=ToneAudioWorkletProcessor.worklet.js.map

/***/ }),

/***/ "./node_modules/tone/build/esm/core/worklet/WorkletGlobalScope.js":
/*!************************************************************************!*\
  !*** ./node_modules/tone/build/esm/core/worklet/WorkletGlobalScope.js ***!
  \************************************************************************/
/*! namespace exports */
/*! export addToWorklet [provided] [no usage info] [missing usage info prevents renaming] */
/*! export getWorkletGlobalScope [provided] [no usage info] [missing usage info prevents renaming] */
/*! export registerProcessor [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "addToWorklet": () => /* binding */ addToWorklet,
/* harmony export */   "registerProcessor": () => /* binding */ registerProcessor,
/* harmony export */   "getWorkletGlobalScope": () => /* binding */ getWorkletGlobalScope
/* harmony export */ });
/**
 * All of the classes or functions which are loaded into the AudioWorkletGlobalScope
 */
const workletContext = new Set();
/**
 * Add a class to the AudioWorkletGlobalScope
 */
function addToWorklet(classOrFunction) {
    workletContext.add(classOrFunction);
}
/**
 * Register a processor in the AudioWorkletGlobalScope with the given name
 */
function registerProcessor(name, classDesc) {
    const processor = /* javascript */ `registerProcessor("${name}", ${classDesc})`;
    workletContext.add(processor);
}
/**
 * Get all of the modules which have been registered to the AudioWorkletGlobalScope
 */
function getWorkletGlobalScope() {
    return Array.from(workletContext).join("\n");
}
//# sourceMappingURL=WorkletGlobalScope.js.map

/***/ }),

/***/ "./node_modules/tone/build/esm/effect/AutoFilter.js":
/*!**********************************************************!*\
  !*** ./node_modules/tone/build/esm/effect/AutoFilter.js ***!
  \**********************************************************/
/*! namespace exports */
/*! export AutoFilter [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "AutoFilter": () => /* binding */ AutoFilter
/* harmony export */ });
/* harmony import */ var _component_filter_Filter__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../component/filter/Filter */ "./node_modules/tone/build/esm/component/filter/Filter.js");
/* harmony import */ var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../core/util/Defaults */ "./node_modules/tone/build/esm/core/util/Defaults.js");
/* harmony import */ var _LFOEffect__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./LFOEffect */ "./node_modules/tone/build/esm/effect/LFOEffect.js");
;


/**
 * AutoFilter is a Tone.Filter with a Tone.LFO connected to the filter cutoff frequency.
 * Setting the LFO rate and depth allows for control over the filter modulation rate
 * and depth.
 *
 * @example
 * // create an autofilter and start it's LFO
 * const autoFilter = new Tone.AutoFilter("4n").toDestination().start();
 * // route an oscillator through the filter and start it
 * const oscillator = new Tone.Oscillator().connect(autoFilter).start();
 * @category Effect
 */
class AutoFilter extends _LFOEffect__WEBPACK_IMPORTED_MODULE_2__.LFOEffect {
    constructor() {
        super((0,_core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__.optionsFromArguments)(AutoFilter.getDefaults(), arguments, ["frequency", "baseFrequency", "octaves"]));
        this.name = "AutoFilter";
        const options = (0,_core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__.optionsFromArguments)(AutoFilter.getDefaults(), arguments, ["frequency", "baseFrequency", "octaves"]);
        this.filter = new _component_filter_Filter__WEBPACK_IMPORTED_MODULE_0__.Filter(Object.assign(options.filter, {
            context: this.context,
        }));
        // connections
        this.connectEffect(this.filter);
        this._lfo.connect(this.filter.frequency);
        this.octaves = options.octaves;
        this.baseFrequency = options.baseFrequency;
    }
    static getDefaults() {
        return Object.assign(_LFOEffect__WEBPACK_IMPORTED_MODULE_2__.LFOEffect.getDefaults(), {
            baseFrequency: 200,
            octaves: 2.6,
            filter: {
                type: "lowpass",
                rolloff: -12,
                Q: 1,
            }
        });
    }
    /**
     * The minimum value of the filter's cutoff frequency.
     */
    get baseFrequency() {
        return this._lfo.min;
    }
    set baseFrequency(freq) {
        this._lfo.min = this.toFrequency(freq);
        // and set the max
        this.octaves = this._octaves;
    }
    /**
     * The maximum value of the filter's cutoff frequency.
     */
    get octaves() {
        return this._octaves;
    }
    set octaves(oct) {
        this._octaves = oct;
        this._lfo.max = this._lfo.min * Math.pow(2, oct);
    }
    dispose() {
        super.dispose();
        this.filter.dispose();
        return this;
    }
}
//# sourceMappingURL=AutoFilter.js.map

/***/ }),

/***/ "./node_modules/tone/build/esm/effect/AutoPanner.js":
/*!**********************************************************!*\
  !*** ./node_modules/tone/build/esm/effect/AutoPanner.js ***!
  \**********************************************************/
/*! namespace exports */
/*! export AutoPanner [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "AutoPanner": () => /* binding */ AutoPanner
/* harmony export */ });
/* harmony import */ var _component_channel_Panner__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../component/channel/Panner */ "./node_modules/tone/build/esm/component/channel/Panner.js");
/* harmony import */ var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../core/util/Defaults */ "./node_modules/tone/build/esm/core/util/Defaults.js");
/* harmony import */ var _LFOEffect__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./LFOEffect */ "./node_modules/tone/build/esm/effect/LFOEffect.js");
;


/**
 * AutoPanner is a [[Panner]] with an [[LFO]] connected to the pan amount.
 * [Related Reading](https://www.ableton.com/en/blog/autopan-chopper-effect-and-more-liveschool/).
 *
 * @example
 * // create an autopanner and start it
 * const autoPanner = new Tone.AutoPanner("4n").toDestination().start();
 * // route an oscillator through the panner and start it
 * const oscillator = new Tone.Oscillator().connect(autoPanner).start();
 * @category Effect
 */
class AutoPanner extends _LFOEffect__WEBPACK_IMPORTED_MODULE_2__.LFOEffect {
    constructor() {
        super((0,_core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__.optionsFromArguments)(AutoPanner.getDefaults(), arguments, ["frequency"]));
        this.name = "AutoPanner";
        const options = (0,_core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__.optionsFromArguments)(AutoPanner.getDefaults(), arguments, ["frequency"]);
        this._panner = new _component_channel_Panner__WEBPACK_IMPORTED_MODULE_0__.Panner({
            context: this.context,
            channelCount: options.channelCount
        });
        // connections
        this.connectEffect(this._panner);
        this._lfo.connect(this._panner.pan);
        this._lfo.min = -1;
        this._lfo.max = 1;
    }
    static getDefaults() {
        return Object.assign(_LFOEffect__WEBPACK_IMPORTED_MODULE_2__.LFOEffect.getDefaults(), {
            channelCount: 1
        });
    }
    dispose() {
        super.dispose();
        this._panner.dispose();
        return this;
    }
}
//# sourceMappingURL=AutoPanner.js.map

/***/ }),

/***/ "./node_modules/tone/build/esm/effect/AutoWah.js":
/*!*******************************************************!*\
  !*** ./node_modules/tone/build/esm/effect/AutoWah.js ***!
  \*******************************************************/
/*! namespace exports */
/*! export AutoWah [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "AutoWah": () => /* binding */ AutoWah
/* harmony export */ });
/* harmony import */ var _Effect__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Effect */ "./node_modules/tone/build/esm/effect/Effect.js");
/* harmony import */ var _component_filter_Filter__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../component/filter/Filter */ "./node_modules/tone/build/esm/component/filter/Filter.js");
/* harmony import */ var _component_analysis_Follower__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../component/analysis/Follower */ "./node_modules/tone/build/esm/component/analysis/Follower.js");
/* harmony import */ var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../core/util/Defaults */ "./node_modules/tone/build/esm/core/util/Defaults.js");
/* harmony import */ var _core_context_Gain__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../core/context/Gain */ "./node_modules/tone/build/esm/core/context/Gain.js");
/* harmony import */ var _core_type_Conversions__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../core/type/Conversions */ "./node_modules/tone/build/esm/core/type/Conversions.js");
/* harmony import */ var _signal_ScaleExp__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../signal/ScaleExp */ "./node_modules/tone/build/esm/signal/ScaleExp.js");
/* harmony import */ var _core_util_Interface__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../core/util/Interface */ "./node_modules/tone/build/esm/core/util/Interface.js");
;







/**
 * AutoWah connects a [[Follower]] to a [[Filter]].
 * The frequency of the filter, follows the input amplitude curve.
 * Inspiration from [Tuna.js](https://github.com/Dinahmoe/tuna).
 *
 * @example
 * const autoWah = new Tone.AutoWah(50, 6, -30).toDestination();
 * // initialize the synth and connect to autowah
 * const synth = new Tone.Synth().connect(autoWah);
 * // Q value influences the effect of the wah - default is 2
 * autoWah.Q.value = 6;
 * // more audible on higher notes
 * synth.triggerAttackRelease("C4", "8n");
 * @category Effect
 */
class AutoWah extends _Effect__WEBPACK_IMPORTED_MODULE_0__.Effect {
    constructor() {
        super((0,_core_util_Defaults__WEBPACK_IMPORTED_MODULE_3__.optionsFromArguments)(AutoWah.getDefaults(), arguments, ["baseFrequency", "octaves", "sensitivity"]));
        this.name = "AutoWah";
        const options = (0,_core_util_Defaults__WEBPACK_IMPORTED_MODULE_3__.optionsFromArguments)(AutoWah.getDefaults(), arguments, ["baseFrequency", "octaves", "sensitivity"]);
        this._follower = new _component_analysis_Follower__WEBPACK_IMPORTED_MODULE_2__.Follower({
            context: this.context,
            smoothing: options.follower,
        });
        this._sweepRange = new _signal_ScaleExp__WEBPACK_IMPORTED_MODULE_6__.ScaleExp({
            context: this.context,
            min: 0,
            max: 1,
            exponent: 0.5,
        });
        this._baseFrequency = this.toFrequency(options.baseFrequency);
        this._octaves = options.octaves;
        this._inputBoost = new _core_context_Gain__WEBPACK_IMPORTED_MODULE_4__.Gain({ context: this.context });
        this._bandpass = new _component_filter_Filter__WEBPACK_IMPORTED_MODULE_1__.Filter({
            context: this.context,
            rolloff: -48,
            frequency: 0,
            Q: options.Q,
        });
        this._peaking = new _component_filter_Filter__WEBPACK_IMPORTED_MODULE_1__.Filter({
            context: this.context,
            type: "peaking"
        });
        this._peaking.gain.value = options.gain;
        this.gain = this._peaking.gain;
        this.Q = this._bandpass.Q;
        // the control signal path
        this.effectSend.chain(this._inputBoost, this._follower, this._sweepRange);
        this._sweepRange.connect(this._bandpass.frequency);
        this._sweepRange.connect(this._peaking.frequency);
        // the filtered path
        this.effectSend.chain(this._bandpass, this._peaking, this.effectReturn);
        // set the initial value
        this._setSweepRange();
        this.sensitivity = options.sensitivity;
        (0,_core_util_Interface__WEBPACK_IMPORTED_MODULE_7__.readOnly)(this, ["gain", "Q"]);
    }
    static getDefaults() {
        return Object.assign(_Effect__WEBPACK_IMPORTED_MODULE_0__.Effect.getDefaults(), {
            baseFrequency: 100,
            octaves: 6,
            sensitivity: 0,
            Q: 2,
            gain: 2,
            follower: 0.2,
        });
    }
    /**
     * The number of octaves that the filter will sweep above the baseFrequency.
     */
    get octaves() {
        return this._octaves;
    }
    set octaves(octaves) {
        this._octaves = octaves;
        this._setSweepRange();
    }
    /**
     * The follower's smoothing time
     */
    get follower() {
        return this._follower.smoothing;
    }
    set follower(follower) {
        this._follower.smoothing = follower;
    }
    /**
     * The base frequency from which the sweep will start from.
     */
    get baseFrequency() {
        return this._baseFrequency;
    }
    set baseFrequency(baseFreq) {
        this._baseFrequency = this.toFrequency(baseFreq);
        this._setSweepRange();
    }
    /**
     * The sensitivity to control how responsive to the input signal the filter is.
     */
    get sensitivity() {
        return (0,_core_type_Conversions__WEBPACK_IMPORTED_MODULE_5__.gainToDb)(1 / this._inputBoost.gain.value);
    }
    set sensitivity(sensitivity) {
        this._inputBoost.gain.value = 1 / (0,_core_type_Conversions__WEBPACK_IMPORTED_MODULE_5__.dbToGain)(sensitivity);
    }
    /**
     * sets the sweep range of the scaler
     */
    _setSweepRange() {
        this._sweepRange.min = this._baseFrequency;
        this._sweepRange.max = Math.min(this._baseFrequency * Math.pow(2, this._octaves), this.context.sampleRate / 2);
    }
    dispose() {
        super.dispose();
        this._follower.dispose();
        this._sweepRange.dispose();
        this._bandpass.dispose();
        this._peaking.dispose();
        this._inputBoost.dispose();
        return this;
    }
}
//# sourceMappingURL=AutoWah.js.map

/***/ }),

/***/ "./node_modules/tone/build/esm/effect/BitCrusher.js":
/*!**********************************************************!*\
  !*** ./node_modules/tone/build/esm/effect/BitCrusher.js ***!
  \**********************************************************/
/*! namespace exports */
/*! export BitCrusher [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "BitCrusher": () => /* binding */ BitCrusher
/* harmony export */ });
/* harmony import */ var _core_worklet_ToneAudioWorklet__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../core/worklet/ToneAudioWorklet */ "./node_modules/tone/build/esm/core/worklet/ToneAudioWorklet.js");
/* harmony import */ var _Effect__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Effect */ "./node_modules/tone/build/esm/effect/Effect.js");
/* harmony import */ var _core_context_Gain__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../core/context/Gain */ "./node_modules/tone/build/esm/core/context/Gain.js");
/* harmony import */ var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../core/util/Defaults */ "./node_modules/tone/build/esm/core/util/Defaults.js");
/* harmony import */ var _core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../core/context/ToneAudioNode */ "./node_modules/tone/build/esm/core/context/ToneAudioNode.js");
/* harmony import */ var _core_context_Param__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../core/context/Param */ "./node_modules/tone/build/esm/core/context/Param.js");
/* harmony import */ var _BitCrusher_worklet__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./BitCrusher.worklet */ "./node_modules/tone/build/esm/effect/BitCrusher.worklet.js");
;






/**
 * BitCrusher down-samples the incoming signal to a different bit depth.
 * Lowering the bit depth of the signal creates distortion. Read more about BitCrushing
 * on [Wikipedia](https://en.wikipedia.org/wiki/Bitcrusher).
 * @example
 * // initialize crusher and route a synth through it
 * const crusher = new Tone.BitCrusher(4).toDestination();
 * const synth = new Tone.Synth().connect(crusher);
 * synth.triggerAttackRelease("C2", 2);
 *
 * @category Effect
 */
class BitCrusher extends _Effect__WEBPACK_IMPORTED_MODULE_1__.Effect {
    constructor() {
        super((0,_core_util_Defaults__WEBPACK_IMPORTED_MODULE_3__.optionsFromArguments)(BitCrusher.getDefaults(), arguments, ["bits"]));
        this.name = "BitCrusher";
        const options = (0,_core_util_Defaults__WEBPACK_IMPORTED_MODULE_3__.optionsFromArguments)(BitCrusher.getDefaults(), arguments, ["bits"]);
        this._bitCrusherWorklet = new BitCrusherWorklet({
            context: this.context,
            bits: options.bits,
        });
        // connect it up
        this.connectEffect(this._bitCrusherWorklet);
        this.bits = this._bitCrusherWorklet.bits;
    }
    static getDefaults() {
        return Object.assign(_Effect__WEBPACK_IMPORTED_MODULE_1__.Effect.getDefaults(), {
            bits: 4,
        });
    }
    dispose() {
        super.dispose();
        this._bitCrusherWorklet.dispose();
        return this;
    }
}
/**
 * Internal class which creates an AudioWorklet to do the bit crushing
 */
class BitCrusherWorklet extends _core_worklet_ToneAudioWorklet__WEBPACK_IMPORTED_MODULE_0__.ToneAudioWorklet {
    constructor() {
        super((0,_core_util_Defaults__WEBPACK_IMPORTED_MODULE_3__.optionsFromArguments)(BitCrusherWorklet.getDefaults(), arguments));
        this.name = "BitCrusherWorklet";
        const options = (0,_core_util_Defaults__WEBPACK_IMPORTED_MODULE_3__.optionsFromArguments)(BitCrusherWorklet.getDefaults(), arguments);
        this.input = new _core_context_Gain__WEBPACK_IMPORTED_MODULE_2__.Gain({ context: this.context });
        this.output = new _core_context_Gain__WEBPACK_IMPORTED_MODULE_2__.Gain({ context: this.context });
        this.bits = new _core_context_Param__WEBPACK_IMPORTED_MODULE_5__.Param({
            context: this.context,
            value: options.bits,
            units: "positive",
            minValue: 1,
            maxValue: 16,
            param: this._dummyParam,
            swappable: true,
        });
    }
    static getDefaults() {
        return Object.assign(_core_worklet_ToneAudioWorklet__WEBPACK_IMPORTED_MODULE_0__.ToneAudioWorklet.getDefaults(), {
            bits: 12,
        });
    }
    _audioWorkletName() {
        return _BitCrusher_worklet__WEBPACK_IMPORTED_MODULE_6__.workletName;
    }
    onReady(node) {
        (0,_core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_4__.connectSeries)(this.input, node, this.output);
        const bits = node.parameters.get("bits");
        this.bits.setParam(bits);
    }
    dispose() {
        super.dispose();
        this.input.dispose();
        this.output.dispose();
        this.bits.dispose();
        return this;
    }
}
//# sourceMappingURL=BitCrusher.js.map

/***/ }),

/***/ "./node_modules/tone/build/esm/effect/BitCrusher.worklet.js":
/*!******************************************************************!*\
  !*** ./node_modules/tone/build/esm/effect/BitCrusher.worklet.js ***!
  \******************************************************************/
/*! namespace exports */
/*! export bitCrusherWorklet [provided] [no usage info] [missing usage info prevents renaming] */
/*! export workletName [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "workletName": () => /* binding */ workletName,
/* harmony export */   "bitCrusherWorklet": () => /* binding */ bitCrusherWorklet
/* harmony export */ });
/* harmony import */ var _core_worklet_SingleIOProcessor_worklet__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../core/worklet/SingleIOProcessor.worklet */ "./node_modules/tone/build/esm/core/worklet/SingleIOProcessor.worklet.js");
/* harmony import */ var _core_worklet_WorkletGlobalScope__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../core/worklet/WorkletGlobalScope */ "./node_modules/tone/build/esm/core/worklet/WorkletGlobalScope.js");
;

const workletName = "bit-crusher";
const bitCrusherWorklet = /* javascript */ `
	class BitCrusherWorklet extends SingleIOProcessor {

		static get parameterDescriptors() {
			return [{
				name: "bits",
				defaultValue: 12,
				minValue: 1,
				maxValue: 16,
				automationRate: 'k-rate'
			}];
		}

		generate(input, _channel, parameters) {
			const step = Math.pow(0.5, parameters.bits - 1);
			const val = step * Math.floor(input / step + 0.5);
			return val;
		}
	}
`;
(0,_core_worklet_WorkletGlobalScope__WEBPACK_IMPORTED_MODULE_1__.registerProcessor)(workletName, bitCrusherWorklet);
//# sourceMappingURL=BitCrusher.worklet.js.map

/***/ }),

/***/ "./node_modules/tone/build/esm/effect/Chebyshev.js":
/*!*********************************************************!*\
  !*** ./node_modules/tone/build/esm/effect/Chebyshev.js ***!
  \*********************************************************/
/*! namespace exports */
/*! export Chebyshev [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Chebyshev": () => /* binding */ Chebyshev
/* harmony export */ });
/* harmony import */ var _Effect__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Effect */ "./node_modules/tone/build/esm/effect/Effect.js");
/* harmony import */ var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../core/util/Defaults */ "./node_modules/tone/build/esm/core/util/Defaults.js");
/* harmony import */ var _signal_WaveShaper__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../signal/WaveShaper */ "./node_modules/tone/build/esm/signal/WaveShaper.js");
;


/**
 * Chebyshev is a waveshaper which is good
 * for making different types of distortion sounds.
 * Note that odd orders sound very different from even ones,
 * and order = 1 is no change.
 * Read more at [music.columbia.edu](http://music.columbia.edu/cmc/musicandcomputers/chapter4/04_06.php).
 * @example
 * // create a new cheby
 * const cheby = new Tone.Chebyshev(50).toDestination();
 * // create a monosynth connected to our cheby
 * const synth = new Tone.MonoSynth().connect(cheby);
 * synth.triggerAttackRelease("C2", 0.4);
 * @category Effect
 */
class Chebyshev extends _Effect__WEBPACK_IMPORTED_MODULE_0__.Effect {
    constructor() {
        super((0,_core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__.optionsFromArguments)(Chebyshev.getDefaults(), arguments, ["order"]));
        this.name = "Chebyshev";
        const options = (0,_core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__.optionsFromArguments)(Chebyshev.getDefaults(), arguments, ["order"]);
        this._shaper = new _signal_WaveShaper__WEBPACK_IMPORTED_MODULE_2__.WaveShaper({
            context: this.context,
            length: 4096
        });
        this._order = options.order;
        this.connectEffect(this._shaper);
        this.order = options.order;
        this.oversample = options.oversample;
    }
    static getDefaults() {
        return Object.assign(_Effect__WEBPACK_IMPORTED_MODULE_0__.Effect.getDefaults(), {
            order: 1,
            oversample: "none"
        });
    }
    /**
     * get the coefficient for that degree
     * @param  x the x value
     * @param  degree
     * @param  memo memoize the computed value. this speeds up computation greatly.
     */
    _getCoefficient(x, degree, memo) {
        if (memo.has(degree)) {
            return memo.get(degree);
        }
        else if (degree === 0) {
            memo.set(degree, 0);
        }
        else if (degree === 1) {
            memo.set(degree, x);
        }
        else {
            memo.set(degree, 2 * x * this._getCoefficient(x, degree - 1, memo) - this._getCoefficient(x, degree - 2, memo));
        }
        return memo.get(degree);
    }
    /**
     * The order of the Chebyshev polynomial which creates the equation which is applied to the incoming
     * signal through a Tone.WaveShaper. The equations are in the form:
     * ```
     * order 2: 2x^2 + 1
     * order 3: 4x^3 + 3x
     * ```
     * @min 1
     * @max 100
     */
    get order() {
        return this._order;
    }
    set order(order) {
        this._order = order;
        this._shaper.setMap((x => {
            return this._getCoefficient(x, order, new Map());
        }));
    }
    /**
     * The oversampling of the effect. Can either be "none", "2x" or "4x".
     */
    get oversample() {
        return this._shaper.oversample;
    }
    set oversample(oversampling) {
        this._shaper.oversample = oversampling;
    }
    dispose() {
        super.dispose();
        this._shaper.dispose();
        return this;
    }
}
//# sourceMappingURL=Chebyshev.js.map

/***/ }),

/***/ "./node_modules/tone/build/esm/effect/Chorus.js":
/*!******************************************************!*\
  !*** ./node_modules/tone/build/esm/effect/Chorus.js ***!
  \******************************************************/
/*! namespace exports */
/*! export Chorus [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Chorus": () => /* binding */ Chorus
/* harmony export */ });
/* harmony import */ var _effect_StereoFeedbackEffect__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../effect/StereoFeedbackEffect */ "./node_modules/tone/build/esm/effect/StereoFeedbackEffect.js");
/* harmony import */ var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../core/util/Defaults */ "./node_modules/tone/build/esm/core/util/Defaults.js");
/* harmony import */ var _source_oscillator_LFO__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../source/oscillator/LFO */ "./node_modules/tone/build/esm/source/oscillator/LFO.js");
/* harmony import */ var _core_context_Delay__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../core/context/Delay */ "./node_modules/tone/build/esm/core/context/Delay.js");
/* harmony import */ var _core_util_Interface__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../core/util/Interface */ "./node_modules/tone/build/esm/core/util/Interface.js");
;




/**
 * Chorus is a stereo chorus effect composed of a left and right delay with an [[LFO]] applied to the delayTime of each channel.
 * When [[feedback]] is set to a value larger than 0, you also get Flanger-type effects.
 * Inspiration from [Tuna.js](https://github.com/Dinahmoe/tuna/blob/master/tuna.js).
 * Read more on the chorus effect on [SoundOnSound](http://www.soundonsound.com/sos/jun04/articles/synthsecrets.htm).
 *
 * @example
 * const chorus = new Tone.Chorus(4, 2.5, 0.5);
 * const synth = new Tone.PolySynth().connect(chorus);
 * synth.triggerAttackRelease(["C3", "E3", "G3"], "8n");
 *
 * @category Effect
 */
class Chorus extends _effect_StereoFeedbackEffect__WEBPACK_IMPORTED_MODULE_0__.StereoFeedbackEffect {
    constructor() {
        super((0,_core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__.optionsFromArguments)(Chorus.getDefaults(), arguments, ["frequency", "delayTime", "depth"]));
        this.name = "Chorus";
        const options = (0,_core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__.optionsFromArguments)(Chorus.getDefaults(), arguments, ["frequency", "delayTime", "depth"]);
        this._depth = options.depth;
        this._delayTime = options.delayTime / 1000;
        this._lfoL = new _source_oscillator_LFO__WEBPACK_IMPORTED_MODULE_2__.LFO({
            context: this.context,
            frequency: options.frequency,
            min: 0,
            max: 1,
        });
        this._lfoR = new _source_oscillator_LFO__WEBPACK_IMPORTED_MODULE_2__.LFO({
            context: this.context,
            frequency: options.frequency,
            min: 0,
            max: 1,
            phase: 180
        });
        this._delayNodeL = new _core_context_Delay__WEBPACK_IMPORTED_MODULE_3__.Delay({ context: this.context });
        this._delayNodeR = new _core_context_Delay__WEBPACK_IMPORTED_MODULE_3__.Delay({ context: this.context });
        this.frequency = this._lfoL.frequency;
        (0,_core_util_Interface__WEBPACK_IMPORTED_MODULE_4__.readOnly)(this, ["frequency"]);
        // have one LFO frequency control the other
        this._lfoL.frequency.connect(this._lfoR.frequency);
        // connections
        this.connectEffectLeft(this._delayNodeL);
        this.connectEffectRight(this._delayNodeR);
        // lfo setup
        this._lfoL.connect(this._delayNodeL.delayTime);
        this._lfoR.connect(this._delayNodeR.delayTime);
        // set the initial values
        this.depth = this._depth;
        this.type = options.type;
        this.spread = options.spread;
    }
    static getDefaults() {
        return Object.assign(_effect_StereoFeedbackEffect__WEBPACK_IMPORTED_MODULE_0__.StereoFeedbackEffect.getDefaults(), {
            frequency: 1.5,
            delayTime: 3.5,
            depth: 0.7,
            type: "sine",
            spread: 180,
            feedback: 0,
            wet: 0.5,
        });
    }
    /**
     * The depth of the effect. A depth of 1 makes the delayTime
     * modulate between 0 and 2*delayTime (centered around the delayTime).
     */
    get depth() {
        return this._depth;
    }
    set depth(depth) {
        this._depth = depth;
        const deviation = this._delayTime * depth;
        this._lfoL.min = Math.max(this._delayTime - deviation, 0);
        this._lfoL.max = this._delayTime + deviation;
        this._lfoR.min = Math.max(this._delayTime - deviation, 0);
        this._lfoR.max = this._delayTime + deviation;
    }
    /**
     * The delayTime in milliseconds of the chorus. A larger delayTime
     * will give a more pronounced effect. Nominal range a delayTime
     * is between 2 and 20ms.
     */
    get delayTime() {
        return this._delayTime * 1000;
    }
    set delayTime(delayTime) {
        this._delayTime = delayTime / 1000;
        this.depth = this._depth;
    }
    /**
     * The oscillator type of the LFO.
     */
    get type() {
        return this._lfoL.type;
    }
    set type(type) {
        this._lfoL.type = type;
        this._lfoR.type = type;
    }
    /**
     * Amount of stereo spread. When set to 0, both LFO's will be panned centrally.
     * When set to 180, LFO's will be panned hard left and right respectively.
     */
    get spread() {
        return this._lfoR.phase - this._lfoL.phase;
    }
    set spread(spread) {
        this._lfoL.phase = 90 - (spread / 2);
        this._lfoR.phase = (spread / 2) + 90;
    }
    /**
     * Start the effect.
     */
    start(time) {
        this._lfoL.start(time);
        this._lfoR.start(time);
        return this;
    }
    /**
     * Stop the lfo
     */
    stop(time) {
        this._lfoL.stop(time);
        this._lfoR.stop(time);
        return this;
    }
    /**
     * Sync the filter to the transport. See [[LFO.sync]]
     */
    sync() {
        this._lfoL.sync();
        this._lfoR.sync();
        return this;
    }
    /**
     * Unsync the filter from the transport.
     */
    unsync() {
        this._lfoL.unsync();
        this._lfoR.unsync();
        return this;
    }
    dispose() {
        super.dispose();
        this._lfoL.dispose();
        this._lfoR.dispose();
        this._delayNodeL.dispose();
        this._delayNodeR.dispose();
        this.frequency.dispose();
        return this;
    }
}
//# sourceMappingURL=Chorus.js.map

/***/ }),

/***/ "./node_modules/tone/build/esm/effect/Distortion.js":
/*!**********************************************************!*\
  !*** ./node_modules/tone/build/esm/effect/Distortion.js ***!
  \**********************************************************/
/*! namespace exports */
/*! export Distortion [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Distortion": () => /* binding */ Distortion
/* harmony export */ });
/* harmony import */ var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../core/util/Defaults */ "./node_modules/tone/build/esm/core/util/Defaults.js");
/* harmony import */ var _signal_WaveShaper__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../signal/WaveShaper */ "./node_modules/tone/build/esm/signal/WaveShaper.js");
/* harmony import */ var _Effect__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Effect */ "./node_modules/tone/build/esm/effect/Effect.js");
;


/**
 * A simple distortion effect using Tone.WaveShaper.
 * Algorithm from [this stackoverflow answer](http://stackoverflow.com/a/22313408).
 *
 * @example
 * const dist = new Tone.Distortion(0.8).toDestination();
 * const fm = new Tone.FMSynth().connect(dist);
 * fm.triggerAttackRelease("A1", "8n");
 * @category Effect
 */
class Distortion extends _Effect__WEBPACK_IMPORTED_MODULE_2__.Effect {
    constructor() {
        super((0,_core_util_Defaults__WEBPACK_IMPORTED_MODULE_0__.optionsFromArguments)(Distortion.getDefaults(), arguments, ["distortion"]));
        this.name = "Distortion";
        const options = (0,_core_util_Defaults__WEBPACK_IMPORTED_MODULE_0__.optionsFromArguments)(Distortion.getDefaults(), arguments, ["distortion"]);
        this._shaper = new _signal_WaveShaper__WEBPACK_IMPORTED_MODULE_1__.WaveShaper({
            context: this.context,
            length: 4096,
        });
        this._distortion = options.distortion;
        this.connectEffect(this._shaper);
        this.distortion = options.distortion;
        this.oversample = options.oversample;
    }
    static getDefaults() {
        return Object.assign(_Effect__WEBPACK_IMPORTED_MODULE_2__.Effect.getDefaults(), {
            distortion: 0.4,
            oversample: "none",
        });
    }
    /**
     * The amount of distortion. Nominal range is between 0 and 1.
     */
    get distortion() {
        return this._distortion;
    }
    set distortion(amount) {
        this._distortion = amount;
        const k = amount * 100;
        const deg = Math.PI / 180;
        this._shaper.setMap((x) => {
            if (Math.abs(x) < 0.001) {
                // should output 0 when input is 0
                return 0;
            }
            else {
                return (3 + k) * x * 20 * deg / (Math.PI + k * Math.abs(x));
            }
        });
    }
    /**
     * The oversampling of the effect. Can either be "none", "2x" or "4x".
     */
    get oversample() {
        return this._shaper.oversample;
    }
    set oversample(oversampling) {
        this._shaper.oversample = oversampling;
    }
    dispose() {
        super.dispose();
        this._shaper.dispose();
        return this;
    }
}
//# sourceMappingURL=Distortion.js.map

/***/ }),

/***/ "./node_modules/tone/build/esm/effect/Effect.js":
/*!******************************************************!*\
  !*** ./node_modules/tone/build/esm/effect/Effect.js ***!
  \******************************************************/
/*! namespace exports */
/*! export Effect [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Effect": () => /* binding */ Effect
/* harmony export */ });
/* harmony import */ var _component_channel_CrossFade__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../component/channel/CrossFade */ "./node_modules/tone/build/esm/component/channel/CrossFade.js");
/* harmony import */ var _core_context_Gain__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../core/context/Gain */ "./node_modules/tone/build/esm/core/context/Gain.js");
/* harmony import */ var _core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../core/context/ToneAudioNode */ "./node_modules/tone/build/esm/core/context/ToneAudioNode.js");
/* harmony import */ var _core_util_Interface__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../core/util/Interface */ "./node_modules/tone/build/esm/core/util/Interface.js");
;



/**
 * Effect is the base class for effects. Connect the effect between
 * the effectSend and effectReturn GainNodes, then control the amount of
 * effect which goes to the output using the wet control.
 */
class Effect extends _core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_2__.ToneAudioNode {
    constructor(options) {
        super(options);
        this.name = "Effect";
        /**
         * the drywet knob to control the amount of effect
         */
        this._dryWet = new _component_channel_CrossFade__WEBPACK_IMPORTED_MODULE_0__.CrossFade({ context: this.context });
        /**
         * The wet control is how much of the effected
         * will pass through to the output. 1 = 100% effected
         * signal, 0 = 100% dry signal.
         */
        this.wet = this._dryWet.fade;
        /**
         * connect the effectSend to the input of hte effect
         */
        this.effectSend = new _core_context_Gain__WEBPACK_IMPORTED_MODULE_1__.Gain({ context: this.context });
        /**
         * connect the output of the effect to the effectReturn
         */
        this.effectReturn = new _core_context_Gain__WEBPACK_IMPORTED_MODULE_1__.Gain({ context: this.context });
        /**
         * The effect input node
         */
        this.input = new _core_context_Gain__WEBPACK_IMPORTED_MODULE_1__.Gain({ context: this.context });
        /**
         * The effect output
         */
        this.output = this._dryWet;
        // connections
        this.input.fan(this._dryWet.a, this.effectSend);
        this.effectReturn.connect(this._dryWet.b);
        this.wet.setValueAtTime(options.wet, 0);
        this._internalChannels = [this.effectReturn, this.effectSend];
        (0,_core_util_Interface__WEBPACK_IMPORTED_MODULE_3__.readOnly)(this, "wet");
    }
    static getDefaults() {
        return Object.assign(_core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_2__.ToneAudioNode.getDefaults(), {
            wet: 1,
        });
    }
    /**
     * chains the effect in between the effectSend and effectReturn
     */
    connectEffect(effect) {
        // add it to the internal channels
        this._internalChannels.push(effect);
        this.effectSend.chain(effect, this.effectReturn);
        return this;
    }
    dispose() {
        super.dispose();
        this._dryWet.dispose();
        this.effectSend.dispose();
        this.effectReturn.dispose();
        this.wet.dispose();
        return this;
    }
}
//# sourceMappingURL=Effect.js.map

/***/ }),

/***/ "./node_modules/tone/build/esm/effect/FeedbackDelay.js":
/*!*************************************************************!*\
  !*** ./node_modules/tone/build/esm/effect/FeedbackDelay.js ***!
  \*************************************************************/
/*! namespace exports */
/*! export FeedbackDelay [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "FeedbackDelay": () => /* binding */ FeedbackDelay
/* harmony export */ });
/* harmony import */ var _core_context_Delay__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../core/context/Delay */ "./node_modules/tone/build/esm/core/context/Delay.js");
/* harmony import */ var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../core/util/Defaults */ "./node_modules/tone/build/esm/core/util/Defaults.js");
/* harmony import */ var _core_util_Interface__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../core/util/Interface */ "./node_modules/tone/build/esm/core/util/Interface.js");
/* harmony import */ var _FeedbackEffect__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./FeedbackEffect */ "./node_modules/tone/build/esm/effect/FeedbackEffect.js");
;



/**
 * FeedbackDelay is a DelayNode in which part of output signal is fed back into the delay.
 *
 * @param delayTime The delay applied to the incoming signal.
 * @param feedback The amount of the effected signal which is fed back through the delay.
 * @example
 * const feedbackDelay = new Tone.FeedbackDelay("8n", 0.5).toDestination();
 * const tom = new Tone.MembraneSynth({
 * 	octaves: 4,
 * 	pitchDecay: 0.1
 * }).connect(feedbackDelay);
 * tom.triggerAttackRelease("A2", "32n");
 * @category Effect
 */
class FeedbackDelay extends _FeedbackEffect__WEBPACK_IMPORTED_MODULE_3__.FeedbackEffect {
    constructor() {
        super((0,_core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__.optionsFromArguments)(FeedbackDelay.getDefaults(), arguments, ["delayTime", "feedback"]));
        this.name = "FeedbackDelay";
        const options = (0,_core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__.optionsFromArguments)(FeedbackDelay.getDefaults(), arguments, ["delayTime", "feedback"]);
        this._delayNode = new _core_context_Delay__WEBPACK_IMPORTED_MODULE_0__.Delay({
            context: this.context,
            delayTime: options.delayTime,
            maxDelay: options.maxDelay,
        });
        this.delayTime = this._delayNode.delayTime;
        // connect it up
        this.connectEffect(this._delayNode);
        (0,_core_util_Interface__WEBPACK_IMPORTED_MODULE_2__.readOnly)(this, "delayTime");
    }
    static getDefaults() {
        return Object.assign(_FeedbackEffect__WEBPACK_IMPORTED_MODULE_3__.FeedbackEffect.getDefaults(), {
            delayTime: 0.25,
            maxDelay: 1,
        });
    }
    dispose() {
        super.dispose();
        this._delayNode.dispose();
        this.delayTime.dispose();
        return this;
    }
}
//# sourceMappingURL=FeedbackDelay.js.map

/***/ }),

/***/ "./node_modules/tone/build/esm/effect/FeedbackEffect.js":
/*!**************************************************************!*\
  !*** ./node_modules/tone/build/esm/effect/FeedbackEffect.js ***!
  \**************************************************************/
/*! namespace exports */
/*! export FeedbackEffect [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "FeedbackEffect": () => /* binding */ FeedbackEffect
/* harmony export */ });
/* harmony import */ var _core_context_Gain__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../core/context/Gain */ "./node_modules/tone/build/esm/core/context/Gain.js");
/* harmony import */ var _core_util_Interface__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../core/util/Interface */ "./node_modules/tone/build/esm/core/util/Interface.js");
/* harmony import */ var _Effect__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Effect */ "./node_modules/tone/build/esm/effect/Effect.js");
;


/**
 * FeedbackEffect provides a loop between an audio source and its own output.
 * This is a base-class for feedback effects.
 */
class FeedbackEffect extends _Effect__WEBPACK_IMPORTED_MODULE_2__.Effect {
    constructor(options) {
        super(options);
        this.name = "FeedbackEffect";
        this._feedbackGain = new _core_context_Gain__WEBPACK_IMPORTED_MODULE_0__.Gain({
            context: this.context,
            gain: options.feedback,
            units: "normalRange",
        });
        this.feedback = this._feedbackGain.gain;
        (0,_core_util_Interface__WEBPACK_IMPORTED_MODULE_1__.readOnly)(this, "feedback");
        // the feedback loop
        this.effectReturn.chain(this._feedbackGain, this.effectSend);
    }
    static getDefaults() {
        return Object.assign(_Effect__WEBPACK_IMPORTED_MODULE_2__.Effect.getDefaults(), {
            feedback: 0.125,
        });
    }
    dispose() {
        super.dispose();
        this._feedbackGain.dispose();
        this.feedback.dispose();
        return this;
    }
}
//# sourceMappingURL=FeedbackEffect.js.map

/***/ }),

/***/ "./node_modules/tone/build/esm/effect/Freeverb.js":
/*!********************************************************!*\
  !*** ./node_modules/tone/build/esm/effect/Freeverb.js ***!
  \********************************************************/
/*! namespace exports */
/*! export Freeverb [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Freeverb": () => /* binding */ Freeverb
/* harmony export */ });
/* harmony import */ var _StereoEffect__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./StereoEffect */ "./node_modules/tone/build/esm/effect/StereoEffect.js");
/* harmony import */ var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../core/util/Defaults */ "./node_modules/tone/build/esm/core/util/Defaults.js");
/* harmony import */ var _core_util_Interface__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../core/util/Interface */ "./node_modules/tone/build/esm/core/util/Interface.js");
/* harmony import */ var _signal_Signal__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../signal/Signal */ "./node_modules/tone/build/esm/signal/Signal.js");
/* harmony import */ var _component_filter_LowpassCombFilter__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../component/filter/LowpassCombFilter */ "./node_modules/tone/build/esm/component/filter/LowpassCombFilter.js");
;




/**
 * An array of comb filter delay values from Freeverb implementation
 */
const combFilterTunings = [1557 / 44100, 1617 / 44100, 1491 / 44100, 1422 / 44100, 1277 / 44100, 1356 / 44100, 1188 / 44100, 1116 / 44100];
/**
 * An array of allpass filter frequency values from Freeverb implementation
 */
const allpassFilterFrequencies = [225, 556, 441, 341];
/**
 * Freeverb is a reverb based on [Freeverb](https://ccrma.stanford.edu/~jos/pasp/Freeverb.html).
 * Read more on reverb on [Sound On Sound](https://web.archive.org/web/20160404083902/http://www.soundonsound.com:80/sos/feb01/articles/synthsecrets.asp).
 * Freeverb is now implemented with an AudioWorkletNode which may result on performance degradation on some platforms. Consider using [[Reverb]].
 * @example
 * const freeverb = new Tone.Freeverb().toDestination();
 * freeverb.dampening = 1000;
 * // routing synth through the reverb
 * const synth = new Tone.NoiseSynth().connect(freeverb);
 * synth.triggerAttackRelease(0.05);
 * @category Effect
 */
class Freeverb extends _StereoEffect__WEBPACK_IMPORTED_MODULE_0__.StereoEffect {
    constructor() {
        super((0,_core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__.optionsFromArguments)(Freeverb.getDefaults(), arguments, ["roomSize", "dampening"]));
        this.name = "Freeverb";
        /**
         * the comb filters
         */
        this._combFilters = [];
        /**
         * the allpass filters on the left
         */
        this._allpassFiltersL = [];
        /**
         * the allpass filters on the right
         */
        this._allpassFiltersR = [];
        const options = (0,_core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__.optionsFromArguments)(Freeverb.getDefaults(), arguments, ["roomSize", "dampening"]);
        this.roomSize = new _signal_Signal__WEBPACK_IMPORTED_MODULE_3__.Signal({
            context: this.context,
            value: options.roomSize,
            units: "normalRange",
        });
        // make the allpass filters on the right
        this._allpassFiltersL = allpassFilterFrequencies.map(freq => {
            const allpassL = this.context.createBiquadFilter();
            allpassL.type = "allpass";
            allpassL.frequency.value = freq;
            return allpassL;
        });
        // make the allpass filters on the left
        this._allpassFiltersR = allpassFilterFrequencies.map(freq => {
            const allpassR = this.context.createBiquadFilter();
            allpassR.type = "allpass";
            allpassR.frequency.value = freq;
            return allpassR;
        });
        // make the comb filters
        this._combFilters = combFilterTunings.map((delayTime, index) => {
            const lfpf = new _component_filter_LowpassCombFilter__WEBPACK_IMPORTED_MODULE_4__.LowpassCombFilter({
                context: this.context,
                dampening: options.dampening,
                delayTime,
            });
            if (index < combFilterTunings.length / 2) {
                this.connectEffectLeft(lfpf, ...this._allpassFiltersL);
            }
            else {
                this.connectEffectRight(lfpf, ...this._allpassFiltersR);
            }
            this.roomSize.connect(lfpf.resonance);
            return lfpf;
        });
        (0,_core_util_Interface__WEBPACK_IMPORTED_MODULE_2__.readOnly)(this, ["roomSize"]);
    }
    static getDefaults() {
        return Object.assign(_StereoEffect__WEBPACK_IMPORTED_MODULE_0__.StereoEffect.getDefaults(), {
            roomSize: 0.7,
            dampening: 3000
        });
    }
    /**
     * The amount of dampening of the reverberant signal.
     */
    get dampening() {
        return this._combFilters[0].dampening;
    }
    set dampening(d) {
        this._combFilters.forEach(c => c.dampening = d);
    }
    dispose() {
        super.dispose();
        this._allpassFiltersL.forEach(al => al.disconnect());
        this._allpassFiltersR.forEach(ar => ar.disconnect());
        this._combFilters.forEach(cf => cf.dispose());
        this.roomSize.dispose();
        return this;
    }
}
//# sourceMappingURL=Freeverb.js.map

/***/ }),

/***/ "./node_modules/tone/build/esm/effect/FrequencyShifter.js":
/*!****************************************************************!*\
  !*** ./node_modules/tone/build/esm/effect/FrequencyShifter.js ***!
  \****************************************************************/
/*! namespace exports */
/*! export FrequencyShifter [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "FrequencyShifter": () => /* binding */ FrequencyShifter
/* harmony export */ });
/* harmony import */ var _component_filter_PhaseShiftAllpass__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../component/filter/PhaseShiftAllpass */ "./node_modules/tone/build/esm/component/filter/PhaseShiftAllpass.js");
/* harmony import */ var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../core/util/Defaults */ "./node_modules/tone/build/esm/core/util/Defaults.js");
/* harmony import */ var _effect_Effect__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../effect/Effect */ "./node_modules/tone/build/esm/effect/Effect.js");
/* harmony import */ var _signal_Add__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../signal/Add */ "./node_modules/tone/build/esm/signal/Add.js");
/* harmony import */ var _signal_Multiply__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../signal/Multiply */ "./node_modules/tone/build/esm/signal/Multiply.js");
/* harmony import */ var _signal_Negate__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../signal/Negate */ "./node_modules/tone/build/esm/signal/Negate.js");
/* harmony import */ var _signal_Signal__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../signal/Signal */ "./node_modules/tone/build/esm/signal/Signal.js");
/* harmony import */ var _source_oscillator_Oscillator__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../source/oscillator/Oscillator */ "./node_modules/tone/build/esm/source/oscillator/Oscillator.js");
/* harmony import */ var _source_oscillator_ToneOscillatorNode__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../source/oscillator/ToneOscillatorNode */ "./node_modules/tone/build/esm/source/oscillator/ToneOscillatorNode.js");
;








/**
 * FrequencyShifter can be used to shift all frequencies of a signal by a fixed amount.
 * The amount can be changed at audio rate and the effect is applied in real time.
 * The frequency shifting is implemented with a technique called single side band modulation using a ring modulator.
 * Note: Contrary to pitch shifting, all frequencies are shifted by the same amount,
 * destroying the harmonic relationship between them. This leads to the classic ring modulator timbre distortion.
 * The algorithm will produces some aliasing towards the high end, especially if your source material
 * contains a lot of high frequencies. Unfortunatelly the webaudio API does not support resampling
 * buffers in real time, so it is not possible to fix it properly. Depending on the use case it might
 * be an option to low pass filter your input before frequency shifting it to get ride of the aliasing.
 * You can find a very detailed description of the algorithm here: https://larzeitlin.github.io/RMFS/
 *
 * @example
 * const input = new Tone.Oscillator(230, "sawtooth").start();
 * const shift = new Tone.FrequencyShifter(42).toDestination();
 * input.connect(shift);
 * @category Effect
 */
class FrequencyShifter extends _effect_Effect__WEBPACK_IMPORTED_MODULE_2__.Effect {
    constructor() {
        super((0,_core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__.optionsFromArguments)(FrequencyShifter.getDefaults(), arguments, ["frequency"]));
        this.name = "FrequencyShifter";
        const options = (0,_core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__.optionsFromArguments)(FrequencyShifter.getDefaults(), arguments, ["frequency"]);
        this.frequency = new _signal_Signal__WEBPACK_IMPORTED_MODULE_6__.Signal({
            context: this.context,
            units: "frequency",
            value: options.frequency,
            minValue: -this.context.sampleRate / 2,
            maxValue: this.context.sampleRate / 2,
        });
        this._sine = new _source_oscillator_ToneOscillatorNode__WEBPACK_IMPORTED_MODULE_8__.ToneOscillatorNode({
            context: this.context,
            type: "sine",
        });
        this._cosine = new _source_oscillator_Oscillator__WEBPACK_IMPORTED_MODULE_7__.Oscillator({
            context: this.context,
            phase: -90,
            type: "sine",
        });
        this._sineMultiply = new _signal_Multiply__WEBPACK_IMPORTED_MODULE_4__.Multiply({ context: this.context });
        this._cosineMultiply = new _signal_Multiply__WEBPACK_IMPORTED_MODULE_4__.Multiply({ context: this.context });
        this._negate = new _signal_Negate__WEBPACK_IMPORTED_MODULE_5__.Negate({ context: this.context });
        this._add = new _signal_Add__WEBPACK_IMPORTED_MODULE_3__.Add({ context: this.context });
        this._phaseShifter = new _component_filter_PhaseShiftAllpass__WEBPACK_IMPORTED_MODULE_0__.PhaseShiftAllpass({ context: this.context });
        this.effectSend.connect(this._phaseShifter);
        // connect the carrier frequency signal to the two oscillators
        this.frequency.fan(this._sine.frequency, this._cosine.frequency);
        this._phaseShifter.offset90.connect(this._cosineMultiply);
        this._cosine.connect(this._cosineMultiply.factor);
        this._phaseShifter.connect(this._sineMultiply);
        this._sine.connect(this._sineMultiply.factor);
        this._sineMultiply.connect(this._negate);
        this._cosineMultiply.connect(this._add);
        this._negate.connect(this._add.addend);
        this._add.connect(this.effectReturn);
        // start the oscillators at the same time
        const now = this.immediate();
        this._sine.start(now);
        this._cosine.start(now);
    }
    static getDefaults() {
        return Object.assign(_effect_Effect__WEBPACK_IMPORTED_MODULE_2__.Effect.getDefaults(), {
            frequency: 0,
        });
    }
    dispose() {
        super.dispose();
        this.frequency.dispose();
        this._add.dispose();
        this._cosine.dispose();
        this._cosineMultiply.dispose();
        this._negate.dispose();
        this._phaseShifter.dispose();
        this._sine.dispose();
        this._sineMultiply.dispose();
        return this;
    }
}
//# sourceMappingURL=FrequencyShifter.js.map

/***/ }),

/***/ "./node_modules/tone/build/esm/effect/JCReverb.js":
/*!********************************************************!*\
  !*** ./node_modules/tone/build/esm/effect/JCReverb.js ***!
  \********************************************************/
/*! namespace exports */
/*! export JCReverb [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "JCReverb": () => /* binding */ JCReverb
/* harmony export */ });
/* harmony import */ var _StereoEffect__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./StereoEffect */ "./node_modules/tone/build/esm/effect/StereoEffect.js");
/* harmony import */ var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../core/util/Defaults */ "./node_modules/tone/build/esm/core/util/Defaults.js");
/* harmony import */ var _signal_Scale__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../signal/Scale */ "./node_modules/tone/build/esm/signal/Scale.js");
/* harmony import */ var _signal_Signal__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../signal/Signal */ "./node_modules/tone/build/esm/signal/Signal.js");
/* harmony import */ var _component_filter_FeedbackCombFilter__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../component/filter/FeedbackCombFilter */ "./node_modules/tone/build/esm/component/filter/FeedbackCombFilter.js");
/* harmony import */ var _core_util_Interface__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../core/util/Interface */ "./node_modules/tone/build/esm/core/util/Interface.js");
;





/**
 * an array of the comb filter delay time values
 */
const combFilterDelayTimes = [1687 / 25000, 1601 / 25000, 2053 / 25000, 2251 / 25000];
/**
 * the resonances of each of the comb filters
 */
const combFilterResonances = [0.773, 0.802, 0.753, 0.733];
/**
 * the allpass filter frequencies
 */
const allpassFilterFreqs = [347, 113, 37];
/**
 * JCReverb is a simple [Schroeder Reverberator](https://ccrma.stanford.edu/~jos/pasp/Schroeder_Reverberators.html)
 * tuned by John Chowning in 1970.
 * It is made up of three allpass filters and four [[FeedbackCombFilter]].
 * JCReverb is now implemented with an AudioWorkletNode which may result on performance degradation on some platforms. Consider using [[Reverb]].
 * @example
 * const reverb = new Tone.JCReverb(0.4).toDestination();
 * const delay = new Tone.FeedbackDelay(0.5);
 * // connecting the synth to reverb through delay
 * const synth = new Tone.DuoSynth().chain(delay, reverb);
 * synth.triggerAttackRelease("A4", "8n");
 *
 * @category Effect
 */
class JCReverb extends _StereoEffect__WEBPACK_IMPORTED_MODULE_0__.StereoEffect {
    constructor() {
        super((0,_core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__.optionsFromArguments)(JCReverb.getDefaults(), arguments, ["roomSize"]));
        this.name = "JCReverb";
        /**
         * a series of allpass filters
         */
        this._allpassFilters = [];
        /**
         * parallel feedback comb filters
         */
        this._feedbackCombFilters = [];
        const options = (0,_core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__.optionsFromArguments)(JCReverb.getDefaults(), arguments, ["roomSize"]);
        this.roomSize = new _signal_Signal__WEBPACK_IMPORTED_MODULE_3__.Signal({
            context: this.context,
            value: options.roomSize,
            units: "normalRange",
        });
        this._scaleRoomSize = new _signal_Scale__WEBPACK_IMPORTED_MODULE_2__.Scale({
            context: this.context,
            min: -0.733,
            max: 0.197,
        });
        // make the allpass filters
        this._allpassFilters = allpassFilterFreqs.map(freq => {
            const allpass = this.context.createBiquadFilter();
            allpass.type = "allpass";
            allpass.frequency.value = freq;
            return allpass;
        });
        // and the comb filters
        this._feedbackCombFilters = combFilterDelayTimes.map((delayTime, index) => {
            const fbcf = new _component_filter_FeedbackCombFilter__WEBPACK_IMPORTED_MODULE_4__.FeedbackCombFilter({
                context: this.context,
                delayTime,
            });
            this._scaleRoomSize.connect(fbcf.resonance);
            fbcf.resonance.value = combFilterResonances[index];
            if (index < combFilterDelayTimes.length / 2) {
                this.connectEffectLeft(...this._allpassFilters, fbcf);
            }
            else {
                this.connectEffectRight(...this._allpassFilters, fbcf);
            }
            return fbcf;
        });
        // chain the allpass filters together
        this.roomSize.connect(this._scaleRoomSize);
        (0,_core_util_Interface__WEBPACK_IMPORTED_MODULE_5__.readOnly)(this, ["roomSize"]);
    }
    static getDefaults() {
        return Object.assign(_StereoEffect__WEBPACK_IMPORTED_MODULE_0__.StereoEffect.getDefaults(), {
            roomSize: 0.5,
        });
    }
    dispose() {
        super.dispose();
        this._allpassFilters.forEach(apf => apf.disconnect());
        this._feedbackCombFilters.forEach(fbcf => fbcf.dispose());
        this.roomSize.dispose();
        this._scaleRoomSize.dispose();
        return this;
    }
}
//# sourceMappingURL=JCReverb.js.map

/***/ }),

/***/ "./node_modules/tone/build/esm/effect/LFOEffect.js":
/*!*********************************************************!*\
  !*** ./node_modules/tone/build/esm/effect/LFOEffect.js ***!
  \*********************************************************/
/*! namespace exports */
/*! export LFOEffect [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "LFOEffect": () => /* binding */ LFOEffect
/* harmony export */ });
/* harmony import */ var _effect_Effect__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../effect/Effect */ "./node_modules/tone/build/esm/effect/Effect.js");
/* harmony import */ var _source_oscillator_LFO__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../source/oscillator/LFO */ "./node_modules/tone/build/esm/source/oscillator/LFO.js");
/* harmony import */ var _core_util_Interface__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../core/util/Interface */ "./node_modules/tone/build/esm/core/util/Interface.js");
;


/**
 * Base class for LFO-based effects.
 */
class LFOEffect extends _effect_Effect__WEBPACK_IMPORTED_MODULE_0__.Effect {
    constructor(options) {
        super(options);
        this.name = "LFOEffect";
        this._lfo = new _source_oscillator_LFO__WEBPACK_IMPORTED_MODULE_1__.LFO({
            context: this.context,
            frequency: options.frequency,
            amplitude: options.depth,
        });
        this.depth = this._lfo.amplitude;
        this.frequency = this._lfo.frequency;
        this.type = options.type;
        (0,_core_util_Interface__WEBPACK_IMPORTED_MODULE_2__.readOnly)(this, ["frequency", "depth"]);
    }
    static getDefaults() {
        return Object.assign(_effect_Effect__WEBPACK_IMPORTED_MODULE_0__.Effect.getDefaults(), {
            frequency: 1,
            type: "sine",
            depth: 1,
        });
    }
    /**
     * Start the effect.
     */
    start(time) {
        this._lfo.start(time);
        return this;
    }
    /**
     * Stop the lfo
     */
    stop(time) {
        this._lfo.stop(time);
        return this;
    }
    /**
     * Sync the filter to the transport. See [[LFO.sync]]
     */
    sync() {
        this._lfo.sync();
        return this;
    }
    /**
     * Unsync the filter from the transport.
     */
    unsync() {
        this._lfo.unsync();
        return this;
    }
    /**
     * The type of the LFO's oscillator: See [[Oscillator.type]]
     * @example
     * const autoFilter = new Tone.AutoFilter().start().toDestination();
     * const noise = new Tone.Noise().start().connect(autoFilter);
     * autoFilter.type = "square";
     */
    get type() {
        return this._lfo.type;
    }
    set type(type) {
        this._lfo.type = type;
    }
    dispose() {
        super.dispose();
        this._lfo.dispose();
        this.frequency.dispose();
        this.depth.dispose();
        return this;
    }
}
//# sourceMappingURL=LFOEffect.js.map

/***/ }),

/***/ "./node_modules/tone/build/esm/effect/MidSideEffect.js":
/*!*************************************************************!*\
  !*** ./node_modules/tone/build/esm/effect/MidSideEffect.js ***!
  \*************************************************************/
/*! namespace exports */
/*! export MidSideEffect [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "MidSideEffect": () => /* binding */ MidSideEffect
/* harmony export */ });
/* harmony import */ var _Effect__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Effect */ "./node_modules/tone/build/esm/effect/Effect.js");
/* harmony import */ var _component_channel_MidSideSplit__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../component/channel/MidSideSplit */ "./node_modules/tone/build/esm/component/channel/MidSideSplit.js");
/* harmony import */ var _component_channel_MidSideMerge__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../component/channel/MidSideMerge */ "./node_modules/tone/build/esm/component/channel/MidSideMerge.js");
;


/**
 * Mid/Side processing separates the the 'mid' signal
 * (which comes out of both the left and the right channel)
 * and the 'side' (which only comes out of the the side channels)
 * and effects them separately before being recombined.
 * Applies a Mid/Side seperation and recombination.
 * Algorithm found in [kvraudio forums](http://www.kvraudio.com/forum/viewtopic.php?t=212587).
 * This is a base-class for Mid/Side Effects.
 * @category Effect
 */
class MidSideEffect extends _Effect__WEBPACK_IMPORTED_MODULE_0__.Effect {
    constructor(options) {
        super(options);
        this.name = "MidSideEffect";
        this._midSideMerge = new _component_channel_MidSideMerge__WEBPACK_IMPORTED_MODULE_2__.MidSideMerge({ context: this.context });
        this._midSideSplit = new _component_channel_MidSideSplit__WEBPACK_IMPORTED_MODULE_1__.MidSideSplit({ context: this.context });
        this._midSend = this._midSideSplit.mid;
        this._sideSend = this._midSideSplit.side;
        this._midReturn = this._midSideMerge.mid;
        this._sideReturn = this._midSideMerge.side;
        // the connections
        this.effectSend.connect(this._midSideSplit);
        this._midSideMerge.connect(this.effectReturn);
    }
    /**
     * Connect the mid chain of the effect
     */
    connectEffectMid(...nodes) {
        this._midSend.chain(...nodes, this._midReturn);
    }
    /**
     * Connect the side chain of the effect
     */
    connectEffectSide(...nodes) {
        this._sideSend.chain(...nodes, this._sideReturn);
    }
    dispose() {
        super.dispose();
        this._midSideSplit.dispose();
        this._midSideMerge.dispose();
        this._midSend.dispose();
        this._sideSend.dispose();
        this._midReturn.dispose();
        this._sideReturn.dispose();
        return this;
    }
}
//# sourceMappingURL=MidSideEffect.js.map

/***/ }),

/***/ "./node_modules/tone/build/esm/effect/Phaser.js":
/*!******************************************************!*\
  !*** ./node_modules/tone/build/esm/effect/Phaser.js ***!
  \******************************************************/
/*! namespace exports */
/*! export Phaser [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Phaser": () => /* binding */ Phaser
/* harmony export */ });
/* harmony import */ var _StereoEffect__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./StereoEffect */ "./node_modules/tone/build/esm/effect/StereoEffect.js");
/* harmony import */ var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../core/util/Defaults */ "./node_modules/tone/build/esm/core/util/Defaults.js");
/* harmony import */ var _source_oscillator_LFO__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../source/oscillator/LFO */ "./node_modules/tone/build/esm/source/oscillator/LFO.js");
/* harmony import */ var _signal_Signal__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../signal/Signal */ "./node_modules/tone/build/esm/signal/Signal.js");
/* harmony import */ var _core_util_Interface__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../core/util/Interface */ "./node_modules/tone/build/esm/core/util/Interface.js");
;




/**
 * Phaser is a phaser effect. Phasers work by changing the phase
 * of different frequency components of an incoming signal. Read more on
 * [Wikipedia](https://en.wikipedia.org/wiki/Phaser_(effect)).
 * Inspiration for this phaser comes from [Tuna.js](https://github.com/Dinahmoe/tuna/).
 * @example
 * const phaser = new Tone.Phaser({
 * 	frequency: 15,
 * 	octaves: 5,
 * 	baseFrequency: 1000
 * }).toDestination();
 * const synth = new Tone.FMSynth().connect(phaser);
 * synth.triggerAttackRelease("E3", "2n");
 * @category Effect
 */
class Phaser extends _StereoEffect__WEBPACK_IMPORTED_MODULE_0__.StereoEffect {
    constructor() {
        super((0,_core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__.optionsFromArguments)(Phaser.getDefaults(), arguments, ["frequency", "octaves", "baseFrequency"]));
        this.name = "Phaser";
        const options = (0,_core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__.optionsFromArguments)(Phaser.getDefaults(), arguments, ["frequency", "octaves", "baseFrequency"]);
        this._lfoL = new _source_oscillator_LFO__WEBPACK_IMPORTED_MODULE_2__.LFO({
            context: this.context,
            frequency: options.frequency,
            min: 0,
            max: 1
        });
        this._lfoR = new _source_oscillator_LFO__WEBPACK_IMPORTED_MODULE_2__.LFO({
            context: this.context,
            frequency: options.frequency,
            min: 0,
            max: 1,
            phase: 180,
        });
        this._baseFrequency = this.toFrequency(options.baseFrequency);
        this._octaves = options.octaves;
        this.Q = new _signal_Signal__WEBPACK_IMPORTED_MODULE_3__.Signal({
            context: this.context,
            value: options.Q,
            units: "positive",
        });
        this._filtersL = this._makeFilters(options.stages, this._lfoL);
        this._filtersR = this._makeFilters(options.stages, this._lfoR);
        this.frequency = this._lfoL.frequency;
        this.frequency.value = options.frequency;
        // connect them up
        this.connectEffectLeft(...this._filtersL);
        this.connectEffectRight(...this._filtersR);
        // control the frequency with one LFO
        this._lfoL.frequency.connect(this._lfoR.frequency);
        // set the options
        this.baseFrequency = options.baseFrequency;
        this.octaves = options.octaves;
        // start the lfo
        this._lfoL.start();
        this._lfoR.start();
        (0,_core_util_Interface__WEBPACK_IMPORTED_MODULE_4__.readOnly)(this, ["frequency", "Q"]);
    }
    static getDefaults() {
        return Object.assign(_StereoEffect__WEBPACK_IMPORTED_MODULE_0__.StereoEffect.getDefaults(), {
            frequency: 0.5,
            octaves: 3,
            stages: 10,
            Q: 10,
            baseFrequency: 350,
        });
    }
    _makeFilters(stages, connectToFreq) {
        const filters = [];
        // make all the filters
        for (let i = 0; i < stages; i++) {
            const filter = this.context.createBiquadFilter();
            filter.type = "allpass";
            this.Q.connect(filter.Q);
            connectToFreq.connect(filter.frequency);
            filters.push(filter);
        }
        return filters;
    }
    /**
     * The number of octaves the phase goes above the baseFrequency
     */
    get octaves() {
        return this._octaves;
    }
    set octaves(octaves) {
        this._octaves = octaves;
        const max = this._baseFrequency * Math.pow(2, octaves);
        this._lfoL.max = max;
        this._lfoR.max = max;
    }
    /**
     * The the base frequency of the filters.
     */
    get baseFrequency() {
        return this._baseFrequency;
    }
    set baseFrequency(freq) {
        this._baseFrequency = this.toFrequency(freq);
        this._lfoL.min = this._baseFrequency;
        this._lfoR.min = this._baseFrequency;
        this.octaves = this._octaves;
    }
    dispose() {
        super.dispose();
        this.Q.dispose();
        this._lfoL.dispose();
        this._lfoR.dispose();
        this._filtersL.forEach(f => f.disconnect());
        this._filtersR.forEach(f => f.disconnect());
        this.frequency.dispose();
        return this;
    }
}
//# sourceMappingURL=Phaser.js.map

/***/ }),

/***/ "./node_modules/tone/build/esm/effect/PingPongDelay.js":
/*!*************************************************************!*\
  !*** ./node_modules/tone/build/esm/effect/PingPongDelay.js ***!
  \*************************************************************/
/*! namespace exports */
/*! export PingPongDelay [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "PingPongDelay": () => /* binding */ PingPongDelay
/* harmony export */ });
/* harmony import */ var _StereoXFeedbackEffect__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./StereoXFeedbackEffect */ "./node_modules/tone/build/esm/effect/StereoXFeedbackEffect.js");
/* harmony import */ var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../core/util/Defaults */ "./node_modules/tone/build/esm/core/util/Defaults.js");
/* harmony import */ var _core_context_Delay__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../core/context/Delay */ "./node_modules/tone/build/esm/core/context/Delay.js");
/* harmony import */ var _signal_Signal__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../signal/Signal */ "./node_modules/tone/build/esm/signal/Signal.js");
/* harmony import */ var _core_util_Interface__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../core/util/Interface */ "./node_modules/tone/build/esm/core/util/Interface.js");
;




/**
 * PingPongDelay is a feedback delay effect where the echo is heard
 * first in one channel and next in the opposite channel. In a stereo
 * system these are the right and left channels.
 * PingPongDelay in more simplified terms is two Tone.FeedbackDelays
 * with independent delay values. Each delay is routed to one channel
 * (left or right), and the channel triggered second will always
 * trigger at the same interval after the first.
 * @example
 * const pingPong = new Tone.PingPongDelay("4n", 0.2).toDestination();
 * const drum = new Tone.MembraneSynth().connect(pingPong);
 * drum.triggerAttackRelease("C4", "32n");
 * @category Effect
 */
class PingPongDelay extends _StereoXFeedbackEffect__WEBPACK_IMPORTED_MODULE_0__.StereoXFeedbackEffect {
    constructor() {
        super((0,_core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__.optionsFromArguments)(PingPongDelay.getDefaults(), arguments, ["delayTime", "feedback"]));
        this.name = "PingPongDelay";
        const options = (0,_core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__.optionsFromArguments)(PingPongDelay.getDefaults(), arguments, ["delayTime", "feedback"]);
        this._leftDelay = new _core_context_Delay__WEBPACK_IMPORTED_MODULE_2__.Delay({
            context: this.context,
            maxDelay: options.maxDelay,
        });
        this._rightDelay = new _core_context_Delay__WEBPACK_IMPORTED_MODULE_2__.Delay({
            context: this.context,
            maxDelay: options.maxDelay
        });
        this._rightPreDelay = new _core_context_Delay__WEBPACK_IMPORTED_MODULE_2__.Delay({
            context: this.context,
            maxDelay: options.maxDelay
        });
        this.delayTime = new _signal_Signal__WEBPACK_IMPORTED_MODULE_3__.Signal({
            context: this.context,
            units: "time",
            value: options.delayTime,
        });
        // connect it up
        this.connectEffectLeft(this._leftDelay);
        this.connectEffectRight(this._rightPreDelay, this._rightDelay);
        this.delayTime.fan(this._leftDelay.delayTime, this._rightDelay.delayTime, this._rightPreDelay.delayTime);
        // rearranged the feedback to be after the rightPreDelay
        this._feedbackL.disconnect();
        this._feedbackL.connect(this._rightDelay);
        (0,_core_util_Interface__WEBPACK_IMPORTED_MODULE_4__.readOnly)(this, ["delayTime"]);
    }
    static getDefaults() {
        return Object.assign(_StereoXFeedbackEffect__WEBPACK_IMPORTED_MODULE_0__.StereoXFeedbackEffect.getDefaults(), {
            delayTime: 0.25,
            maxDelay: 1
        });
    }
    dispose() {
        super.dispose();
        this._leftDelay.dispose();
        this._rightDelay.dispose();
        this._rightPreDelay.dispose();
        this.delayTime.dispose();
        return this;
    }
}
//# sourceMappingURL=PingPongDelay.js.map

/***/ }),

/***/ "./node_modules/tone/build/esm/effect/PitchShift.js":
/*!**********************************************************!*\
  !*** ./node_modules/tone/build/esm/effect/PitchShift.js ***!
  \**********************************************************/
/*! namespace exports */
/*! export PitchShift [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "PitchShift": () => /* binding */ PitchShift
/* harmony export */ });
/* harmony import */ var _FeedbackEffect__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./FeedbackEffect */ "./node_modules/tone/build/esm/effect/FeedbackEffect.js");
/* harmony import */ var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../core/util/Defaults */ "./node_modules/tone/build/esm/core/util/Defaults.js");
/* harmony import */ var _source_oscillator_LFO__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../source/oscillator/LFO */ "./node_modules/tone/build/esm/source/oscillator/LFO.js");
/* harmony import */ var _core_context_Delay__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../core/context/Delay */ "./node_modules/tone/build/esm/core/context/Delay.js");
/* harmony import */ var _component_channel_CrossFade__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../component/channel/CrossFade */ "./node_modules/tone/build/esm/component/channel/CrossFade.js");
/* harmony import */ var _signal_Signal__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../signal/Signal */ "./node_modules/tone/build/esm/signal/Signal.js");
/* harmony import */ var _core_util_Interface__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../core/util/Interface */ "./node_modules/tone/build/esm/core/util/Interface.js");
/* harmony import */ var _core_type_Conversions__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../core/type/Conversions */ "./node_modules/tone/build/esm/core/type/Conversions.js");
;







/**
 * PitchShift does near-realtime pitch shifting to the incoming signal.
 * The effect is achieved by speeding up or slowing down the delayTime
 * of a DelayNode using a sawtooth wave.
 * Algorithm found in [this pdf](http://dsp-book.narod.ru/soundproc.pdf).
 * Additional reference by [Miller Pucket](http://msp.ucsd.edu/techniques/v0.11/book-html/node115.html).
 * @category Effect
 */
class PitchShift extends _FeedbackEffect__WEBPACK_IMPORTED_MODULE_0__.FeedbackEffect {
    constructor() {
        super((0,_core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__.optionsFromArguments)(PitchShift.getDefaults(), arguments, ["pitch"]));
        this.name = "PitchShift";
        const options = (0,_core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__.optionsFromArguments)(PitchShift.getDefaults(), arguments, ["pitch"]);
        this._frequency = new _signal_Signal__WEBPACK_IMPORTED_MODULE_5__.Signal({ context: this.context });
        this._delayA = new _core_context_Delay__WEBPACK_IMPORTED_MODULE_3__.Delay({
            maxDelay: 1,
            context: this.context
        });
        this._lfoA = new _source_oscillator_LFO__WEBPACK_IMPORTED_MODULE_2__.LFO({
            context: this.context,
            min: 0,
            max: 0.1,
            type: "sawtooth"
        }).connect(this._delayA.delayTime);
        this._delayB = new _core_context_Delay__WEBPACK_IMPORTED_MODULE_3__.Delay({
            maxDelay: 1,
            context: this.context
        });
        this._lfoB = new _source_oscillator_LFO__WEBPACK_IMPORTED_MODULE_2__.LFO({
            context: this.context,
            min: 0,
            max: 0.1,
            type: "sawtooth",
            phase: 180
        }).connect(this._delayB.delayTime);
        this._crossFade = new _component_channel_CrossFade__WEBPACK_IMPORTED_MODULE_4__.CrossFade({ context: this.context });
        this._crossFadeLFO = new _source_oscillator_LFO__WEBPACK_IMPORTED_MODULE_2__.LFO({
            context: this.context,
            min: 0,
            max: 1,
            type: "triangle",
            phase: 90
        }).connect(this._crossFade.fade);
        this._feedbackDelay = new _core_context_Delay__WEBPACK_IMPORTED_MODULE_3__.Delay({
            delayTime: options.delayTime,
            context: this.context,
        });
        this.delayTime = this._feedbackDelay.delayTime;
        (0,_core_util_Interface__WEBPACK_IMPORTED_MODULE_6__.readOnly)(this, "delayTime");
        this._pitch = options.pitch;
        this._windowSize = options.windowSize;
        // connect the two delay lines up
        this._delayA.connect(this._crossFade.a);
        this._delayB.connect(this._crossFade.b);
        // connect the frequency
        this._frequency.fan(this._lfoA.frequency, this._lfoB.frequency, this._crossFadeLFO.frequency);
        // route the input
        this.effectSend.fan(this._delayA, this._delayB);
        this._crossFade.chain(this._feedbackDelay, this.effectReturn);
        // start the LFOs at the same time
        const now = this.now();
        this._lfoA.start(now);
        this._lfoB.start(now);
        this._crossFadeLFO.start(now);
        // set the initial value
        this.windowSize = this._windowSize;
    }
    static getDefaults() {
        return Object.assign(_FeedbackEffect__WEBPACK_IMPORTED_MODULE_0__.FeedbackEffect.getDefaults(), {
            pitch: 0,
            windowSize: 0.1,
            delayTime: 0,
            feedback: 0
        });
    }
    /**
     * Repitch the incoming signal by some interval (measured in semi-tones).
     * @example
     * const pitchShift = new Tone.PitchShift().toDestination();
     * const osc = new Tone.Oscillator().connect(pitchShift).start().toDestination();
     * pitchShift.pitch = -12; // down one octave
     * pitchShift.pitch = 7; // up a fifth
     */
    get pitch() {
        return this._pitch;
    }
    set pitch(interval) {
        this._pitch = interval;
        let factor = 0;
        if (interval < 0) {
            this._lfoA.min = 0;
            this._lfoA.max = this._windowSize;
            this._lfoB.min = 0;
            this._lfoB.max = this._windowSize;
            factor = (0,_core_type_Conversions__WEBPACK_IMPORTED_MODULE_7__.intervalToFrequencyRatio)(interval - 1) + 1;
        }
        else {
            this._lfoA.min = this._windowSize;
            this._lfoA.max = 0;
            this._lfoB.min = this._windowSize;
            this._lfoB.max = 0;
            factor = (0,_core_type_Conversions__WEBPACK_IMPORTED_MODULE_7__.intervalToFrequencyRatio)(interval) - 1;
        }
        this._frequency.value = factor * (1.2 / this._windowSize);
    }
    /**
     * The window size corresponds roughly to the sample length in a looping sampler.
     * Smaller values are desirable for a less noticeable delay time of the pitch shifted
     * signal, but larger values will result in smoother pitch shifting for larger intervals.
     * A nominal range of 0.03 to 0.1 is recommended.
     */
    get windowSize() {
        return this._windowSize;
    }
    set windowSize(size) {
        this._windowSize = this.toSeconds(size);
        this.pitch = this._pitch;
    }
    dispose() {
        super.dispose();
        this._frequency.dispose();
        this._delayA.dispose();
        this._delayB.dispose();
        this._lfoA.dispose();
        this._lfoB.dispose();
        this._crossFade.dispose();
        this._crossFadeLFO.dispose();
        this._feedbackDelay.dispose();
        return this;
    }
}
//# sourceMappingURL=PitchShift.js.map

/***/ }),

/***/ "./node_modules/tone/build/esm/effect/Reverb.js":
/*!******************************************************!*\
  !*** ./node_modules/tone/build/esm/effect/Reverb.js ***!
  \******************************************************/
/*! namespace exports */
/*! export Reverb [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Reverb": () => /* binding */ Reverb
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! tslib */ "./node_modules/tone/node_modules/tslib/tslib.es6.js");
/* harmony import */ var _component_channel_Merge__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../component/channel/Merge */ "./node_modules/tone/build/esm/component/channel/Merge.js");
/* harmony import */ var _core_context_Gain__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../core/context/Gain */ "./node_modules/tone/build/esm/core/context/Gain.js");
/* harmony import */ var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../core/util/Defaults */ "./node_modules/tone/build/esm/core/util/Defaults.js");
/* harmony import */ var _source_Noise__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../source/Noise */ "./node_modules/tone/build/esm/source/Noise.js");
/* harmony import */ var _Effect__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./Effect */ "./node_modules/tone/build/esm/effect/Effect.js");
/* harmony import */ var _core_context_OfflineContext__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../core/context/OfflineContext */ "./node_modules/tone/build/esm/core/context/OfflineContext.js");
/* harmony import */ var _core_util_Interface__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../core/util/Interface */ "./node_modules/tone/build/esm/core/util/Interface.js");
/* harmony import */ var _core_util_Debug__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../core/util/Debug */ "./node_modules/tone/build/esm/core/util/Debug.js");
;








/**
 * Simple convolution created with decaying noise.
 * Generates an Impulse Response Buffer
 * with Tone.Offline then feeds the IR into ConvolverNode.
 * The impulse response generation is async, so you have
 * to wait until [[ready]] resolves before it will make a sound.
 *
 * Inspiration from [ReverbGen](https://github.com/adelespinasse/reverbGen).
 * Copyright (c) 2014 Alan deLespinasse Apache 2.0 License.
 *
 * @category Effect
 */
class Reverb extends _Effect__WEBPACK_IMPORTED_MODULE_4__.Effect {
    constructor() {
        super((0,_core_util_Defaults__WEBPACK_IMPORTED_MODULE_2__.optionsFromArguments)(Reverb.getDefaults(), arguments, ["decay"]));
        this.name = "Reverb";
        /**
         * Convolver node
         */
        this._convolver = this.context.createConvolver();
        /**
         * Resolves when the reverb buffer is generated. Whenever either [[decay]]
         * or [[preDelay]] are set, you have to wait until [[ready]] resolves
         * before the IR is generated with the latest values.
         */
        this.ready = Promise.resolve();
        const options = (0,_core_util_Defaults__WEBPACK_IMPORTED_MODULE_2__.optionsFromArguments)(Reverb.getDefaults(), arguments, ["decay"]);
        this._decay = options.decay;
        this._preDelay = options.preDelay;
        this.generate();
        this.connectEffect(this._convolver);
    }
    static getDefaults() {
        return Object.assign(_Effect__WEBPACK_IMPORTED_MODULE_4__.Effect.getDefaults(), {
            decay: 1.5,
            preDelay: 0.01,
        });
    }
    /**
     * The duration of the reverb.
     */
    get decay() {
        return this._decay;
    }
    set decay(time) {
        time = this.toSeconds(time);
        (0,_core_util_Debug__WEBPACK_IMPORTED_MODULE_7__.assertRange)(time, 0.001);
        this._decay = time;
        this.generate();
    }
    /**
     * The amount of time before the reverb is fully ramped in.
     */
    get preDelay() {
        return this._preDelay;
    }
    set preDelay(time) {
        time = this.toSeconds(time);
        (0,_core_util_Debug__WEBPACK_IMPORTED_MODULE_7__.assertRange)(time, 0);
        this._preDelay = time;
        this.generate();
    }
    /**
     * Generate the Impulse Response. Returns a promise while the IR is being generated.
     * @return Promise which returns this object.
     */
    generate() {
        return (0,tslib__WEBPACK_IMPORTED_MODULE_8__.__awaiter)(this, void 0, void 0, function* () {
            const previousReady = this.ready;
            // create a noise burst which decays over the duration in each channel
            const context = new _core_context_OfflineContext__WEBPACK_IMPORTED_MODULE_5__.OfflineContext(2, this._decay + this._preDelay, this.context.sampleRate);
            const noiseL = new _source_Noise__WEBPACK_IMPORTED_MODULE_3__.Noise({ context });
            const noiseR = new _source_Noise__WEBPACK_IMPORTED_MODULE_3__.Noise({ context });
            const merge = new _component_channel_Merge__WEBPACK_IMPORTED_MODULE_0__.Merge({ context });
            noiseL.connect(merge, 0, 0);
            noiseR.connect(merge, 0, 1);
            const gainNode = new _core_context_Gain__WEBPACK_IMPORTED_MODULE_1__.Gain({ context }).toDestination();
            merge.connect(gainNode);
            noiseL.start(0);
            noiseR.start(0);
            // predelay
            gainNode.gain.setValueAtTime(0, 0);
            gainNode.gain.setValueAtTime(1, this._preDelay);
            // decay
            gainNode.gain.exponentialApproachValueAtTime(0, this._preDelay, this.decay);
            // render the buffer
            const renderPromise = context.render();
            this.ready = renderPromise.then(_core_util_Interface__WEBPACK_IMPORTED_MODULE_6__.noOp);
            // wait for the previous `ready` to resolve
            yield previousReady;
            // set the buffer
            this._convolver.buffer = (yield renderPromise).get();
            return this;
        });
    }
    dispose() {
        super.dispose();
        this._convolver.disconnect();
        return this;
    }
}
//# sourceMappingURL=Reverb.js.map

/***/ }),

/***/ "./node_modules/tone/build/esm/effect/StereoEffect.js":
/*!************************************************************!*\
  !*** ./node_modules/tone/build/esm/effect/StereoEffect.js ***!
  \************************************************************/
/*! namespace exports */
/*! export StereoEffect [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "StereoEffect": () => /* binding */ StereoEffect
/* harmony export */ });
/* harmony import */ var _core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../core/context/ToneAudioNode */ "./node_modules/tone/build/esm/core/context/ToneAudioNode.js");
/* harmony import */ var _component_channel_CrossFade__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../component/channel/CrossFade */ "./node_modules/tone/build/esm/component/channel/CrossFade.js");
/* harmony import */ var _component_channel_Split__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../component/channel/Split */ "./node_modules/tone/build/esm/component/channel/Split.js");
/* harmony import */ var _core_context_Gain__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../core/context/Gain */ "./node_modules/tone/build/esm/core/context/Gain.js");
/* harmony import */ var _component_channel_Merge__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../component/channel/Merge */ "./node_modules/tone/build/esm/component/channel/Merge.js");
/* harmony import */ var _core_util_Interface__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../core/util/Interface */ "./node_modules/tone/build/esm/core/util/Interface.js");
;





/**
 * Base class for Stereo effects.
 */
class StereoEffect extends _core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_0__.ToneAudioNode {
    constructor(options) {
        super(options);
        this.name = "StereoEffect";
        this.input = new _core_context_Gain__WEBPACK_IMPORTED_MODULE_3__.Gain({ context: this.context });
        // force mono sources to be stereo
        this.input.channelCount = 2;
        this.input.channelCountMode = "explicit";
        this._dryWet = this.output = new _component_channel_CrossFade__WEBPACK_IMPORTED_MODULE_1__.CrossFade({
            context: this.context,
            fade: options.wet
        });
        this.wet = this._dryWet.fade;
        this._split = new _component_channel_Split__WEBPACK_IMPORTED_MODULE_2__.Split({ context: this.context, channels: 2 });
        this._merge = new _component_channel_Merge__WEBPACK_IMPORTED_MODULE_4__.Merge({ context: this.context, channels: 2 });
        // connections
        this.input.connect(this._split);
        // dry wet connections
        this.input.connect(this._dryWet.a);
        this._merge.connect(this._dryWet.b);
        (0,_core_util_Interface__WEBPACK_IMPORTED_MODULE_5__.readOnly)(this, ["wet"]);
    }
    /**
     * Connect the left part of the effect
     */
    connectEffectLeft(...nodes) {
        this._split.connect(nodes[0], 0, 0);
        (0,_core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_0__.connectSeries)(...nodes);
        (0,_core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_0__.connect)(nodes[nodes.length - 1], this._merge, 0, 0);
    }
    /**
     * Connect the right part of the effect
     */
    connectEffectRight(...nodes) {
        this._split.connect(nodes[0], 1, 0);
        (0,_core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_0__.connectSeries)(...nodes);
        (0,_core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_0__.connect)(nodes[nodes.length - 1], this._merge, 0, 1);
    }
    static getDefaults() {
        return Object.assign(_core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_0__.ToneAudioNode.getDefaults(), {
            wet: 1,
        });
    }
    dispose() {
        super.dispose();
        this._dryWet.dispose();
        this._split.dispose();
        this._merge.dispose();
        return this;
    }
}
//# sourceMappingURL=StereoEffect.js.map

/***/ }),

/***/ "./node_modules/tone/build/esm/effect/StereoFeedbackEffect.js":
/*!********************************************************************!*\
  !*** ./node_modules/tone/build/esm/effect/StereoFeedbackEffect.js ***!
  \********************************************************************/
/*! namespace exports */
/*! export StereoFeedbackEffect [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "StereoFeedbackEffect": () => /* binding */ StereoFeedbackEffect
/* harmony export */ });
/* harmony import */ var _StereoEffect__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./StereoEffect */ "./node_modules/tone/build/esm/effect/StereoEffect.js");
/* harmony import */ var _signal_Signal__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../signal/Signal */ "./node_modules/tone/build/esm/signal/Signal.js");
/* harmony import */ var _core_context_Gain__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../core/context/Gain */ "./node_modules/tone/build/esm/core/context/Gain.js");
/* harmony import */ var _core_util_Interface__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../core/util/Interface */ "./node_modules/tone/build/esm/core/util/Interface.js");
/* harmony import */ var _component_channel_Split__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../component/channel/Split */ "./node_modules/tone/build/esm/component/channel/Split.js");
/* harmony import */ var _component_channel_Merge__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../component/channel/Merge */ "./node_modules/tone/build/esm/component/channel/Merge.js");
;





/**
 * Base class for stereo feedback effects where the effectReturn is fed back into the same channel.
 */
class StereoFeedbackEffect extends _StereoEffect__WEBPACK_IMPORTED_MODULE_0__.StereoEffect {
    constructor(options) {
        super(options);
        this.feedback = new _signal_Signal__WEBPACK_IMPORTED_MODULE_1__.Signal({
            context: this.context,
            value: options.feedback,
            units: "normalRange"
        });
        this._feedbackL = new _core_context_Gain__WEBPACK_IMPORTED_MODULE_2__.Gain({ context: this.context });
        this._feedbackR = new _core_context_Gain__WEBPACK_IMPORTED_MODULE_2__.Gain({ context: this.context });
        this._feedbackSplit = new _component_channel_Split__WEBPACK_IMPORTED_MODULE_4__.Split({ context: this.context, channels: 2 });
        this._feedbackMerge = new _component_channel_Merge__WEBPACK_IMPORTED_MODULE_5__.Merge({ context: this.context, channels: 2 });
        this._merge.connect(this._feedbackSplit);
        this._feedbackMerge.connect(this._split);
        // the left output connected to the left input
        this._feedbackSplit.connect(this._feedbackL, 0, 0);
        this._feedbackL.connect(this._feedbackMerge, 0, 0);
        // the right output connected to the right input
        this._feedbackSplit.connect(this._feedbackR, 1, 0);
        this._feedbackR.connect(this._feedbackMerge, 0, 1);
        // the feedback control
        this.feedback.fan(this._feedbackL.gain, this._feedbackR.gain);
        (0,_core_util_Interface__WEBPACK_IMPORTED_MODULE_3__.readOnly)(this, ["feedback"]);
    }
    static getDefaults() {
        return Object.assign(_StereoEffect__WEBPACK_IMPORTED_MODULE_0__.StereoEffect.getDefaults(), {
            feedback: 0.5,
        });
    }
    dispose() {
        super.dispose();
        this.feedback.dispose();
        this._feedbackL.dispose();
        this._feedbackR.dispose();
        this._feedbackSplit.dispose();
        this._feedbackMerge.dispose();
        return this;
    }
}
//# sourceMappingURL=StereoFeedbackEffect.js.map

/***/ }),

/***/ "./node_modules/tone/build/esm/effect/StereoWidener.js":
/*!*************************************************************!*\
  !*** ./node_modules/tone/build/esm/effect/StereoWidener.js ***!
  \*************************************************************/
/*! namespace exports */
/*! export StereoWidener [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "StereoWidener": () => /* binding */ StereoWidener
/* harmony export */ });
/* harmony import */ var _effect_MidSideEffect__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../effect/MidSideEffect */ "./node_modules/tone/build/esm/effect/MidSideEffect.js");
/* harmony import */ var _signal_Signal__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../signal/Signal */ "./node_modules/tone/build/esm/signal/Signal.js");
/* harmony import */ var _signal_Multiply__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../signal/Multiply */ "./node_modules/tone/build/esm/signal/Multiply.js");
/* harmony import */ var _signal_Subtract__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../signal/Subtract */ "./node_modules/tone/build/esm/signal/Subtract.js");
/* harmony import */ var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../core/util/Defaults */ "./node_modules/tone/build/esm/core/util/Defaults.js");
/* harmony import */ var _core_util_Interface__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../core/util/Interface */ "./node_modules/tone/build/esm/core/util/Interface.js");
/* harmony import */ var _core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../core/context/ToneAudioNode */ "./node_modules/tone/build/esm/core/context/ToneAudioNode.js");
;






/**
 * Applies a width factor to the mid/side seperation.
 * 0 is all mid and 1 is all side.
 * Algorithm found in [kvraudio forums](http://www.kvraudio.com/forum/viewtopic.php?t=212587).
 * ```
 * Mid *= 2*(1-width)<br>
 * Side *= 2*width
 * ```
 * @category Effect
 */
class StereoWidener extends _effect_MidSideEffect__WEBPACK_IMPORTED_MODULE_0__.MidSideEffect {
    constructor() {
        super((0,_core_util_Defaults__WEBPACK_IMPORTED_MODULE_4__.optionsFromArguments)(StereoWidener.getDefaults(), arguments, ["width"]));
        this.name = "StereoWidener";
        const options = (0,_core_util_Defaults__WEBPACK_IMPORTED_MODULE_4__.optionsFromArguments)(StereoWidener.getDefaults(), arguments, ["width"]);
        this.width = new _signal_Signal__WEBPACK_IMPORTED_MODULE_1__.Signal({
            context: this.context,
            value: options.width,
            units: "normalRange",
        });
        (0,_core_util_Interface__WEBPACK_IMPORTED_MODULE_5__.readOnly)(this, ["width"]);
        this._twoTimesWidthMid = new _signal_Multiply__WEBPACK_IMPORTED_MODULE_2__.Multiply({
            context: this.context,
            value: 2,
        });
        this._twoTimesWidthSide = new _signal_Multiply__WEBPACK_IMPORTED_MODULE_2__.Multiply({
            context: this.context,
            value: 2,
        });
        this._midMult = new _signal_Multiply__WEBPACK_IMPORTED_MODULE_2__.Multiply({ context: this.context });
        this._twoTimesWidthMid.connect(this._midMult.factor);
        this.connectEffectMid(this._midMult);
        this._oneMinusWidth = new _signal_Subtract__WEBPACK_IMPORTED_MODULE_3__.Subtract({ context: this.context });
        this._oneMinusWidth.connect(this._twoTimesWidthMid);
        (0,_core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_6__.connect)(this.context.getConstant(1), this._oneMinusWidth);
        this.width.connect(this._oneMinusWidth.subtrahend);
        this._sideMult = new _signal_Multiply__WEBPACK_IMPORTED_MODULE_2__.Multiply({ context: this.context });
        this.width.connect(this._twoTimesWidthSide);
        this._twoTimesWidthSide.connect(this._sideMult.factor);
        this.connectEffectSide(this._sideMult);
    }
    static getDefaults() {
        return Object.assign(_effect_MidSideEffect__WEBPACK_IMPORTED_MODULE_0__.MidSideEffect.getDefaults(), {
            width: 0.5,
        });
    }
    dispose() {
        super.dispose();
        this.width.dispose();
        this._midMult.dispose();
        this._sideMult.dispose();
        this._twoTimesWidthMid.dispose();
        this._twoTimesWidthSide.dispose();
        this._oneMinusWidth.dispose();
        return this;
    }
}
//# sourceMappingURL=StereoWidener.js.map

/***/ }),

/***/ "./node_modules/tone/build/esm/effect/StereoXFeedbackEffect.js":
/*!*********************************************************************!*\
  !*** ./node_modules/tone/build/esm/effect/StereoXFeedbackEffect.js ***!
  \*********************************************************************/
/*! namespace exports */
/*! export StereoXFeedbackEffect [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "StereoXFeedbackEffect": () => /* binding */ StereoXFeedbackEffect
/* harmony export */ });
/* harmony import */ var _StereoFeedbackEffect__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./StereoFeedbackEffect */ "./node_modules/tone/build/esm/effect/StereoFeedbackEffect.js");
/* harmony import */ var _core_util_Interface__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../core/util/Interface */ "./node_modules/tone/build/esm/core/util/Interface.js");
;

/**
 * Just like a [[StereoFeedbackEffect]], but the feedback is routed from left to right
 * and right to left instead of on the same channel.
 * ```
 * +--------------------------------+ feedbackL <-----------------------------------+
 * |                                                                                |
 * +-->                          +----->        +---->                          +-----+
 *      feedbackMerge +--> split        (EFFECT)       merge +--> feedbackSplit     | |
 * +-->                          +----->        +---->                          +---+ |
 * |                                                                                  |
 * +--------------------------------+ feedbackR <-------------------------------------+
 * ```
 */
class StereoXFeedbackEffect extends _StereoFeedbackEffect__WEBPACK_IMPORTED_MODULE_0__.StereoFeedbackEffect {
    constructor(options) {
        super(options);
        // the left output connected to the right input
        this._feedbackL.disconnect();
        this._feedbackL.connect(this._feedbackMerge, 0, 1);
        // the left output connected to the right input
        this._feedbackR.disconnect();
        this._feedbackR.connect(this._feedbackMerge, 0, 0);
        (0,_core_util_Interface__WEBPACK_IMPORTED_MODULE_1__.readOnly)(this, ["feedback"]);
    }
}
//# sourceMappingURL=StereoXFeedbackEffect.js.map

/***/ }),

/***/ "./node_modules/tone/build/esm/effect/Tremolo.js":
/*!*******************************************************!*\
  !*** ./node_modules/tone/build/esm/effect/Tremolo.js ***!
  \*******************************************************/
/*! namespace exports */
/*! export Tremolo [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Tremolo": () => /* binding */ Tremolo
/* harmony export */ });
/* harmony import */ var _StereoEffect__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./StereoEffect */ "./node_modules/tone/build/esm/effect/StereoEffect.js");
/* harmony import */ var _source_oscillator_LFO__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../source/oscillator/LFO */ "./node_modules/tone/build/esm/source/oscillator/LFO.js");
/* harmony import */ var _core_context_Gain__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../core/context/Gain */ "./node_modules/tone/build/esm/core/context/Gain.js");
/* harmony import */ var _signal_Signal__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../signal/Signal */ "./node_modules/tone/build/esm/signal/Signal.js");
/* harmony import */ var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../core/util/Defaults */ "./node_modules/tone/build/esm/core/util/Defaults.js");
/* harmony import */ var _core_util_Interface__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../core/util/Interface */ "./node_modules/tone/build/esm/core/util/Interface.js");
;





/**
 * Tremolo modulates the amplitude of an incoming signal using an [[LFO]].
 * The effect is a stereo effect where the modulation phase is inverted in each channel.
 *
 * @example
 * // create a tremolo and start it's LFO
 * const tremolo = new Tone.Tremolo(9, 0.75).toDestination().start();
 * // route an oscillator through the tremolo and start it
 * const oscillator = new Tone.Oscillator().connect(tremolo).start();
 *
 * @category Effect
 */
class Tremolo extends _StereoEffect__WEBPACK_IMPORTED_MODULE_0__.StereoEffect {
    constructor() {
        super((0,_core_util_Defaults__WEBPACK_IMPORTED_MODULE_4__.optionsFromArguments)(Tremolo.getDefaults(), arguments, ["frequency", "depth"]));
        this.name = "Tremolo";
        const options = (0,_core_util_Defaults__WEBPACK_IMPORTED_MODULE_4__.optionsFromArguments)(Tremolo.getDefaults(), arguments, ["frequency", "depth"]);
        this._lfoL = new _source_oscillator_LFO__WEBPACK_IMPORTED_MODULE_1__.LFO({
            context: this.context,
            type: options.type,
            min: 1,
            max: 0,
        });
        this._lfoR = new _source_oscillator_LFO__WEBPACK_IMPORTED_MODULE_1__.LFO({
            context: this.context,
            type: options.type,
            min: 1,
            max: 0,
        });
        this._amplitudeL = new _core_context_Gain__WEBPACK_IMPORTED_MODULE_2__.Gain({ context: this.context });
        this._amplitudeR = new _core_context_Gain__WEBPACK_IMPORTED_MODULE_2__.Gain({ context: this.context });
        this.frequency = new _signal_Signal__WEBPACK_IMPORTED_MODULE_3__.Signal({
            context: this.context,
            value: options.frequency,
            units: "frequency",
        });
        this.depth = new _signal_Signal__WEBPACK_IMPORTED_MODULE_3__.Signal({
            context: this.context,
            value: options.depth,
            units: "normalRange",
        });
        (0,_core_util_Interface__WEBPACK_IMPORTED_MODULE_5__.readOnly)(this, ["frequency", "depth"]);
        this.connectEffectLeft(this._amplitudeL);
        this.connectEffectRight(this._amplitudeR);
        this._lfoL.connect(this._amplitudeL.gain);
        this._lfoR.connect(this._amplitudeR.gain);
        this.frequency.fan(this._lfoL.frequency, this._lfoR.frequency);
        this.depth.fan(this._lfoR.amplitude, this._lfoL.amplitude);
        this.spread = options.spread;
    }
    static getDefaults() {
        return Object.assign(_StereoEffect__WEBPACK_IMPORTED_MODULE_0__.StereoEffect.getDefaults(), {
            frequency: 10,
            type: "sine",
            depth: 0.5,
            spread: 180,
        });
    }
    /**
     * Start the tremolo.
     */
    start(time) {
        this._lfoL.start(time);
        this._lfoR.start(time);
        return this;
    }
    /**
     * Stop the tremolo.
     */
    stop(time) {
        this._lfoL.stop(time);
        this._lfoR.stop(time);
        return this;
    }
    /**
     * Sync the effect to the transport.
     */
    sync() {
        this._lfoL.sync();
        this._lfoR.sync();
        this.context.transport.syncSignal(this.frequency);
        return this;
    }
    /**
     * Unsync the filter from the transport
     */
    unsync() {
        this._lfoL.unsync();
        this._lfoR.unsync();
        this.context.transport.unsyncSignal(this.frequency);
        return this;
    }
    /**
     * The oscillator type.
     */
    get type() {
        return this._lfoL.type;
    }
    set type(type) {
        this._lfoL.type = type;
        this._lfoR.type = type;
    }
    /**
     * Amount of stereo spread. When set to 0, both LFO's will be panned centrally.
     * When set to 180, LFO's will be panned hard left and right respectively.
     */
    get spread() {
        return this._lfoR.phase - this._lfoL.phase; // 180
    }
    set spread(spread) {
        this._lfoL.phase = 90 - (spread / 2);
        this._lfoR.phase = (spread / 2) + 90;
    }
    dispose() {
        super.dispose();
        this._lfoL.dispose();
        this._lfoR.dispose();
        this._amplitudeL.dispose();
        this._amplitudeR.dispose();
        this.frequency.dispose();
        this.depth.dispose();
        return this;
    }
}
//# sourceMappingURL=Tremolo.js.map

/***/ }),

/***/ "./node_modules/tone/build/esm/effect/Vibrato.js":
/*!*******************************************************!*\
  !*** ./node_modules/tone/build/esm/effect/Vibrato.js ***!
  \*******************************************************/
/*! namespace exports */
/*! export Vibrato [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Vibrato": () => /* binding */ Vibrato
/* harmony export */ });
/* harmony import */ var _Effect__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Effect */ "./node_modules/tone/build/esm/effect/Effect.js");
/* harmony import */ var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../core/util/Defaults */ "./node_modules/tone/build/esm/core/util/Defaults.js");
/* harmony import */ var _source_oscillator_LFO__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../source/oscillator/LFO */ "./node_modules/tone/build/esm/source/oscillator/LFO.js");
/* harmony import */ var _core_context_Delay__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../core/context/Delay */ "./node_modules/tone/build/esm/core/context/Delay.js");
/* harmony import */ var _core_util_Interface__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../core/util/Interface */ "./node_modules/tone/build/esm/core/util/Interface.js");
;




/**
 * A Vibrato effect composed of a Tone.Delay and a Tone.LFO. The LFO
 * modulates the delayTime of the delay, causing the pitch to rise and fall.
 * @category Effect
 */
class Vibrato extends _Effect__WEBPACK_IMPORTED_MODULE_0__.Effect {
    constructor() {
        super((0,_core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__.optionsFromArguments)(Vibrato.getDefaults(), arguments, ["frequency", "depth"]));
        this.name = "Vibrato";
        const options = (0,_core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__.optionsFromArguments)(Vibrato.getDefaults(), arguments, ["frequency", "depth"]);
        this._delayNode = new _core_context_Delay__WEBPACK_IMPORTED_MODULE_3__.Delay({
            context: this.context,
            delayTime: 0,
            maxDelay: options.maxDelay,
        });
        this._lfo = new _source_oscillator_LFO__WEBPACK_IMPORTED_MODULE_2__.LFO({
            context: this.context,
            type: options.type,
            min: 0,
            max: options.maxDelay,
            frequency: options.frequency,
            phase: -90 // offse the phase so the resting position is in the center
        }).start().connect(this._delayNode.delayTime);
        this.frequency = this._lfo.frequency;
        this.depth = this._lfo.amplitude;
        this.depth.value = options.depth;
        (0,_core_util_Interface__WEBPACK_IMPORTED_MODULE_4__.readOnly)(this, ["frequency", "depth"]);
        this.effectSend.chain(this._delayNode, this.effectReturn);
    }
    static getDefaults() {
        return Object.assign(_Effect__WEBPACK_IMPORTED_MODULE_0__.Effect.getDefaults(), {
            maxDelay: 0.005,
            frequency: 5,
            depth: 0.1,
            type: "sine"
        });
    }
    /**
     * Type of oscillator attached to the Vibrato.
     */
    get type() {
        return this._lfo.type;
    }
    set type(type) {
        this._lfo.type = type;
    }
    dispose() {
        super.dispose();
        this._delayNode.dispose();
        this._lfo.dispose();
        this.frequency.dispose();
        this.depth.dispose();
        return this;
    }
}
//# sourceMappingURL=Vibrato.js.map

/***/ }),

/***/ "./node_modules/tone/build/esm/effect/index.js":
/*!*****************************************************!*\
  !*** ./node_modules/tone/build/esm/effect/index.js ***!
  \*****************************************************/
/*! namespace exports */
/*! export AutoFilter [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/effect/AutoFilter.js .AutoFilter */
/*! export AutoPanner [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/effect/AutoPanner.js .AutoPanner */
/*! export AutoWah [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/effect/AutoWah.js .AutoWah */
/*! export BitCrusher [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/effect/BitCrusher.js .BitCrusher */
/*! export Chebyshev [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/effect/Chebyshev.js .Chebyshev */
/*! export Chorus [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/effect/Chorus.js .Chorus */
/*! export Distortion [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/effect/Distortion.js .Distortion */
/*! export FeedbackDelay [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/effect/FeedbackDelay.js .FeedbackDelay */
/*! export Freeverb [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/effect/Freeverb.js .Freeverb */
/*! export FrequencyShifter [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/effect/FrequencyShifter.js .FrequencyShifter */
/*! export JCReverb [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/effect/JCReverb.js .JCReverb */
/*! export Phaser [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/effect/Phaser.js .Phaser */
/*! export PingPongDelay [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/effect/PingPongDelay.js .PingPongDelay */
/*! export PitchShift [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/effect/PitchShift.js .PitchShift */
/*! export Reverb [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/effect/Reverb.js .Reverb */
/*! export StereoWidener [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/effect/StereoWidener.js .StereoWidener */
/*! export Tremolo [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/effect/Tremolo.js .Tremolo */
/*! export Vibrato [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/effect/Vibrato.js .Vibrato */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_exports__, __webpack_require__.d, __webpack_require__.r, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "AutoFilter": () => /* reexport safe */ _AutoFilter__WEBPACK_IMPORTED_MODULE_0__.AutoFilter,
/* harmony export */   "AutoPanner": () => /* reexport safe */ _AutoPanner__WEBPACK_IMPORTED_MODULE_1__.AutoPanner,
/* harmony export */   "AutoWah": () => /* reexport safe */ _AutoWah__WEBPACK_IMPORTED_MODULE_2__.AutoWah,
/* harmony export */   "BitCrusher": () => /* reexport safe */ _BitCrusher__WEBPACK_IMPORTED_MODULE_3__.BitCrusher,
/* harmony export */   "Chebyshev": () => /* reexport safe */ _Chebyshev__WEBPACK_IMPORTED_MODULE_4__.Chebyshev,
/* harmony export */   "Chorus": () => /* reexport safe */ _Chorus__WEBPACK_IMPORTED_MODULE_5__.Chorus,
/* harmony export */   "Distortion": () => /* reexport safe */ _Distortion__WEBPACK_IMPORTED_MODULE_6__.Distortion,
/* harmony export */   "FeedbackDelay": () => /* reexport safe */ _FeedbackDelay__WEBPACK_IMPORTED_MODULE_7__.FeedbackDelay,
/* harmony export */   "FrequencyShifter": () => /* reexport safe */ _FrequencyShifter__WEBPACK_IMPORTED_MODULE_8__.FrequencyShifter,
/* harmony export */   "Freeverb": () => /* reexport safe */ _Freeverb__WEBPACK_IMPORTED_MODULE_9__.Freeverb,
/* harmony export */   "JCReverb": () => /* reexport safe */ _JCReverb__WEBPACK_IMPORTED_MODULE_10__.JCReverb,
/* harmony export */   "PingPongDelay": () => /* reexport safe */ _PingPongDelay__WEBPACK_IMPORTED_MODULE_11__.PingPongDelay,
/* harmony export */   "PitchShift": () => /* reexport safe */ _PitchShift__WEBPACK_IMPORTED_MODULE_12__.PitchShift,
/* harmony export */   "Phaser": () => /* reexport safe */ _Phaser__WEBPACK_IMPORTED_MODULE_13__.Phaser,
/* harmony export */   "Reverb": () => /* reexport safe */ _Reverb__WEBPACK_IMPORTED_MODULE_14__.Reverb,
/* harmony export */   "StereoWidener": () => /* reexport safe */ _StereoWidener__WEBPACK_IMPORTED_MODULE_15__.StereoWidener,
/* harmony export */   "Tremolo": () => /* reexport safe */ _Tremolo__WEBPACK_IMPORTED_MODULE_16__.Tremolo,
/* harmony export */   "Vibrato": () => /* reexport safe */ _Vibrato__WEBPACK_IMPORTED_MODULE_17__.Vibrato
/* harmony export */ });
/* harmony import */ var _AutoFilter__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./AutoFilter */ "./node_modules/tone/build/esm/effect/AutoFilter.js");
/* harmony import */ var _AutoPanner__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./AutoPanner */ "./node_modules/tone/build/esm/effect/AutoPanner.js");
/* harmony import */ var _AutoWah__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./AutoWah */ "./node_modules/tone/build/esm/effect/AutoWah.js");
/* harmony import */ var _BitCrusher__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./BitCrusher */ "./node_modules/tone/build/esm/effect/BitCrusher.js");
/* harmony import */ var _Chebyshev__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./Chebyshev */ "./node_modules/tone/build/esm/effect/Chebyshev.js");
/* harmony import */ var _Chorus__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./Chorus */ "./node_modules/tone/build/esm/effect/Chorus.js");
/* harmony import */ var _Distortion__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./Distortion */ "./node_modules/tone/build/esm/effect/Distortion.js");
/* harmony import */ var _FeedbackDelay__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./FeedbackDelay */ "./node_modules/tone/build/esm/effect/FeedbackDelay.js");
/* harmony import */ var _FrequencyShifter__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./FrequencyShifter */ "./node_modules/tone/build/esm/effect/FrequencyShifter.js");
/* harmony import */ var _Freeverb__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./Freeverb */ "./node_modules/tone/build/esm/effect/Freeverb.js");
/* harmony import */ var _JCReverb__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./JCReverb */ "./node_modules/tone/build/esm/effect/JCReverb.js");
/* harmony import */ var _PingPongDelay__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./PingPongDelay */ "./node_modules/tone/build/esm/effect/PingPongDelay.js");
/* harmony import */ var _PitchShift__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./PitchShift */ "./node_modules/tone/build/esm/effect/PitchShift.js");
/* harmony import */ var _Phaser__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./Phaser */ "./node_modules/tone/build/esm/effect/Phaser.js");
/* harmony import */ var _Reverb__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./Reverb */ "./node_modules/tone/build/esm/effect/Reverb.js");
/* harmony import */ var _StereoWidener__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./StereoWidener */ "./node_modules/tone/build/esm/effect/StereoWidener.js");
/* harmony import */ var _Tremolo__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./Tremolo */ "./node_modules/tone/build/esm/effect/Tremolo.js");
/* harmony import */ var _Vibrato__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./Vibrato */ "./node_modules/tone/build/esm/effect/Vibrato.js");


















//# sourceMappingURL=index.js.map

/***/ }),

/***/ "./node_modules/tone/build/esm/event/Loop.js":
/*!***************************************************!*\
  !*** ./node_modules/tone/build/esm/event/Loop.js ***!
  \***************************************************/
/*! namespace exports */
/*! export Loop [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Loop": () => /* binding */ Loop
/* harmony export */ });
/* harmony import */ var _ToneEvent__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ToneEvent */ "./node_modules/tone/build/esm/event/ToneEvent.js");
/* harmony import */ var _core_context_ToneWithContext__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../core/context/ToneWithContext */ "./node_modules/tone/build/esm/core/context/ToneWithContext.js");
/* harmony import */ var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../core/util/Defaults */ "./node_modules/tone/build/esm/core/util/Defaults.js");
/* harmony import */ var _core_util_Interface__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../core/util/Interface */ "./node_modules/tone/build/esm/core/util/Interface.js");
;



/**
 * Loop creates a looped callback at the
 * specified interval. The callback can be
 * started, stopped and scheduled along
 * the Transport's timeline.
 * @example
 * const loop = new Tone.Loop((time) => {
 * 	// triggered every eighth note.
 * 	console.log(time);
 * }, "8n").start(0);
 * Tone.Transport.start();
 * @category Event
 */
class Loop extends _core_context_ToneWithContext__WEBPACK_IMPORTED_MODULE_1__.ToneWithContext {
    constructor() {
        super((0,_core_util_Defaults__WEBPACK_IMPORTED_MODULE_2__.optionsFromArguments)(Loop.getDefaults(), arguments, ["callback", "interval"]));
        this.name = "Loop";
        const options = (0,_core_util_Defaults__WEBPACK_IMPORTED_MODULE_2__.optionsFromArguments)(Loop.getDefaults(), arguments, ["callback", "interval"]);
        this._event = new _ToneEvent__WEBPACK_IMPORTED_MODULE_0__.ToneEvent({
            context: this.context,
            callback: this._tick.bind(this),
            loop: true,
            loopEnd: options.interval,
            playbackRate: options.playbackRate,
            probability: options.probability
        });
        this.callback = options.callback;
        // set the iterations
        this.iterations = options.iterations;
    }
    static getDefaults() {
        return Object.assign(_core_context_ToneWithContext__WEBPACK_IMPORTED_MODULE_1__.ToneWithContext.getDefaults(), {
            interval: "4n",
            callback: _core_util_Interface__WEBPACK_IMPORTED_MODULE_3__.noOp,
            playbackRate: 1,
            iterations: Infinity,
            probability: 1,
            mute: false,
            humanize: false
        });
    }
    /**
     * Start the loop at the specified time along the Transport's timeline.
     * @param  time  When to start the Loop.
     */
    start(time) {
        this._event.start(time);
        return this;
    }
    /**
     * Stop the loop at the given time.
     * @param  time  When to stop the Loop.
     */
    stop(time) {
        this._event.stop(time);
        return this;
    }
    /**
     * Cancel all scheduled events greater than or equal to the given time
     * @param  time  The time after which events will be cancel.
     */
    cancel(time) {
        this._event.cancel(time);
        return this;
    }
    /**
     * Internal function called when the notes should be called
     * @param time  The time the event occurs
     */
    _tick(time) {
        this.callback(time);
    }
    /**
     * The state of the Loop, either started or stopped.
     */
    get state() {
        return this._event.state;
    }
    /**
     * The progress of the loop as a value between 0-1. 0, when the loop is stopped or done iterating.
     */
    get progress() {
        return this._event.progress;
    }
    /**
     * The time between successive callbacks.
     * @example
     * const loop = new Tone.Loop();
     * loop.interval = "8n"; // loop every 8n
     */
    get interval() {
        return this._event.loopEnd;
    }
    set interval(interval) {
        this._event.loopEnd = interval;
    }
    /**
     * The playback rate of the loop. The normal playback rate is 1 (no change).
     * A `playbackRate` of 2 would be twice as fast.
     */
    get playbackRate() {
        return this._event.playbackRate;
    }
    set playbackRate(rate) {
        this._event.playbackRate = rate;
    }
    /**
     * Random variation +/-0.01s to the scheduled time.
     * Or give it a time value which it will randomize by.
     */
    get humanize() {
        return this._event.humanize;
    }
    set humanize(variation) {
        this._event.humanize = variation;
    }
    /**
     * The probably of the callback being invoked.
     */
    get probability() {
        return this._event.probability;
    }
    set probability(prob) {
        this._event.probability = prob;
    }
    /**
     * Muting the Loop means that no callbacks are invoked.
     */
    get mute() {
        return this._event.mute;
    }
    set mute(mute) {
        this._event.mute = mute;
    }
    /**
     * The number of iterations of the loop. The default value is `Infinity` (loop forever).
     */
    get iterations() {
        if (this._event.loop === true) {
            return Infinity;
        }
        else {
            return this._event.loop;
        }
    }
    set iterations(iters) {
        if (iters === Infinity) {
            this._event.loop = true;
        }
        else {
            this._event.loop = iters;
        }
    }
    dispose() {
        super.dispose();
        this._event.dispose();
        return this;
    }
}
//# sourceMappingURL=Loop.js.map

/***/ }),

/***/ "./node_modules/tone/build/esm/event/Part.js":
/*!***************************************************!*\
  !*** ./node_modules/tone/build/esm/event/Part.js ***!
  \***************************************************/
/*! namespace exports */
/*! export Part [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Part": () => /* binding */ Part
/* harmony export */ });
/* harmony import */ var _core_type_Ticks__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../core/type/Ticks */ "./node_modules/tone/build/esm/core/type/Ticks.js");
/* harmony import */ var _core_type_TransportTime__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../core/type/TransportTime */ "./node_modules/tone/build/esm/core/type/TransportTime.js");
/* harmony import */ var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../core/util/Defaults */ "./node_modules/tone/build/esm/core/util/Defaults.js");
/* harmony import */ var _core_util_StateTimeline__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../core/util/StateTimeline */ "./node_modules/tone/build/esm/core/util/StateTimeline.js");
/* harmony import */ var _core_util_TypeCheck__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../core/util/TypeCheck */ "./node_modules/tone/build/esm/core/util/TypeCheck.js");
/* harmony import */ var _ToneEvent__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./ToneEvent */ "./node_modules/tone/build/esm/event/ToneEvent.js");
;





/**
 * Part is a collection ToneEvents which can be started/stopped and looped as a single unit.
 *
 * @example
 * const synth = new Tone.Synth().toDestination();
 * const part = new Tone.Part(((time, note) => {
 * 	// the notes given as the second element in the array
 * 	// will be passed in as the second argument
 * 	synth.triggerAttackRelease(note, "8n", time);
 * }), [[0, "C2"], ["0:2", "C3"], ["0:3:2", "G2"]]);
 * Tone.Transport.start();
 * @example
 * const synth = new Tone.Synth().toDestination();
 * // use an array of objects as long as the object has a "time" attribute
 * const part = new Tone.Part(((time, value) => {
 * 	// the value is an object which contains both the note and the velocity
 * 	synth.triggerAttackRelease(value.note, "8n", time, value.velocity);
 * }), [{ time: 0, note: "C3", velocity: 0.9 },
 * 	{ time: "0:2", note: "C4", velocity: 0.5 }
 * ]).start(0);
 * Tone.Transport.start();
 * @category Event
 */
class Part extends _ToneEvent__WEBPACK_IMPORTED_MODULE_5__.ToneEvent {
    constructor() {
        super((0,_core_util_Defaults__WEBPACK_IMPORTED_MODULE_2__.optionsFromArguments)(Part.getDefaults(), arguments, ["callback", "events"]));
        this.name = "Part";
        /**
         * Tracks the scheduled events
         */
        this._state = new _core_util_StateTimeline__WEBPACK_IMPORTED_MODULE_3__.StateTimeline("stopped");
        /**
         * The events that belong to this part
         */
        this._events = new Set();
        const options = (0,_core_util_Defaults__WEBPACK_IMPORTED_MODULE_2__.optionsFromArguments)(Part.getDefaults(), arguments, ["callback", "events"]);
        // make sure things are assigned in the right order
        this._state.increasing = true;
        // add the events
        options.events.forEach(event => {
            if ((0,_core_util_TypeCheck__WEBPACK_IMPORTED_MODULE_4__.isArray)(event)) {
                this.add(event[0], event[1]);
            }
            else {
                this.add(event);
            }
        });
    }
    static getDefaults() {
        return Object.assign(_ToneEvent__WEBPACK_IMPORTED_MODULE_5__.ToneEvent.getDefaults(), {
            events: [],
        });
    }
    /**
     * Start the part at the given time.
     * @param  time    When to start the part.
     * @param  offset  The offset from the start of the part to begin playing at.
     */
    start(time, offset) {
        const ticks = this.toTicks(time);
        if (this._state.getValueAtTime(ticks) !== "started") {
            offset = (0,_core_util_Defaults__WEBPACK_IMPORTED_MODULE_2__.defaultArg)(offset, this._loop ? this._loopStart : 0);
            if (this._loop) {
                offset = (0,_core_util_Defaults__WEBPACK_IMPORTED_MODULE_2__.defaultArg)(offset, this._loopStart);
            }
            else {
                offset = (0,_core_util_Defaults__WEBPACK_IMPORTED_MODULE_2__.defaultArg)(offset, 0);
            }
            const computedOffset = this.toTicks(offset);
            this._state.add({
                id: -1,
                offset: computedOffset,
                state: "started",
                time: ticks,
            });
            this._forEach(event => {
                this._startNote(event, ticks, computedOffset);
            });
        }
        return this;
    }
    /**
     * Start the event in the given event at the correct time given
     * the ticks and offset and looping.
     * @param  event
     * @param  ticks
     * @param  offset
     */
    _startNote(event, ticks, offset) {
        ticks -= offset;
        if (this._loop) {
            if (event.startOffset >= this._loopStart && event.startOffset < this._loopEnd) {
                if (event.startOffset < offset) {
                    // start it on the next loop
                    ticks += this._getLoopDuration();
                }
                event.start(new _core_type_Ticks__WEBPACK_IMPORTED_MODULE_0__.TicksClass(this.context, ticks));
            }
            else if (event.startOffset < this._loopStart && event.startOffset >= offset) {
                event.loop = false;
                event.start(new _core_type_Ticks__WEBPACK_IMPORTED_MODULE_0__.TicksClass(this.context, ticks));
            }
        }
        else if (event.startOffset >= offset) {
            event.start(new _core_type_Ticks__WEBPACK_IMPORTED_MODULE_0__.TicksClass(this.context, ticks));
        }
    }
    get startOffset() {
        return this._startOffset;
    }
    set startOffset(offset) {
        this._startOffset = offset;
        this._forEach(event => {
            event.startOffset += this._startOffset;
        });
    }
    /**
     * Stop the part at the given time.
     * @param  time  When to stop the part.
     */
    stop(time) {
        const ticks = this.toTicks(time);
        this._state.cancel(ticks);
        this._state.setStateAtTime("stopped", ticks);
        this._forEach(event => {
            event.stop(time);
        });
        return this;
    }
    /**
     * Get/Set an Event's value at the given time.
     * If a value is passed in and no event exists at
     * the given time, one will be created with that value.
     * If two events are at the same time, the first one will
     * be returned.
     * @example
     * const part = new Tone.Part();
     * part.at("1m"); // returns the part at the first measure
     * part.at("2m", "C2"); // set the value at "2m" to C2.
     * // if an event didn't exist at that time, it will be created.
     * @param time The time of the event to get or set.
     * @param value If a value is passed in, the value of the event at the given time will be set to it.
     */
    at(time, value) {
        const timeInTicks = new _core_type_TransportTime__WEBPACK_IMPORTED_MODULE_1__.TransportTimeClass(this.context, time).toTicks();
        const tickTime = new _core_type_Ticks__WEBPACK_IMPORTED_MODULE_0__.TicksClass(this.context, 1).toSeconds();
        const iterator = this._events.values();
        let result = iterator.next();
        while (!result.done) {
            const event = result.value;
            if (Math.abs(timeInTicks - event.startOffset) < tickTime) {
                if ((0,_core_util_TypeCheck__WEBPACK_IMPORTED_MODULE_4__.isDefined)(value)) {
                    event.value = value;
                }
                return event;
            }
            result = iterator.next();
        }
        // if there was no event at that time, create one
        if ((0,_core_util_TypeCheck__WEBPACK_IMPORTED_MODULE_4__.isDefined)(value)) {
            this.add(time, value);
            // return the new event
            return this.at(time);
        }
        else {
            return null;
        }
    }
    add(time, value) {
        // extract the parameters
        if (time instanceof Object && Reflect.has(time, "time")) {
            value = time;
            time = value.time;
        }
        const ticks = this.toTicks(time);
        let event;
        if (value instanceof _ToneEvent__WEBPACK_IMPORTED_MODULE_5__.ToneEvent) {
            event = value;
            event.callback = this._tick.bind(this);
        }
        else {
            event = new _ToneEvent__WEBPACK_IMPORTED_MODULE_5__.ToneEvent({
                callback: this._tick.bind(this),
                context: this.context,
                value,
            });
        }
        // the start offset
        event.startOffset = ticks;
        // initialize the values
        event.set({
            humanize: this.humanize,
            loop: this.loop,
            loopEnd: this.loopEnd,
            loopStart: this.loopStart,
            playbackRate: this.playbackRate,
            probability: this.probability,
        });
        this._events.add(event);
        // start the note if it should be played right now
        this._restartEvent(event);
        return this;
    }
    /**
     * Restart the given event
     */
    _restartEvent(event) {
        this._state.forEach((stateEvent) => {
            if (stateEvent.state === "started") {
                this._startNote(event, stateEvent.time, stateEvent.offset);
            }
            else {
                // stop the note
                event.stop(new _core_type_Ticks__WEBPACK_IMPORTED_MODULE_0__.TicksClass(this.context, stateEvent.time));
            }
        });
    }
    remove(time, value) {
        // extract the parameters
        if ((0,_core_util_TypeCheck__WEBPACK_IMPORTED_MODULE_4__.isObject)(time) && time.hasOwnProperty("time")) {
            value = time;
            time = value.time;
        }
        time = this.toTicks(time);
        this._events.forEach(event => {
            if (event.startOffset === time) {
                if ((0,_core_util_TypeCheck__WEBPACK_IMPORTED_MODULE_4__.isUndef)(value) || ((0,_core_util_TypeCheck__WEBPACK_IMPORTED_MODULE_4__.isDefined)(value) && event.value === value)) {
                    this._events.delete(event);
                    event.dispose();
                }
            }
        });
        return this;
    }
    /**
     * Remove all of the notes from the group.
     */
    clear() {
        this._forEach(event => event.dispose());
        this._events.clear();
        return this;
    }
    /**
     * Cancel scheduled state change events: i.e. "start" and "stop".
     * @param after The time after which to cancel the scheduled events.
     */
    cancel(after) {
        this._forEach(event => event.cancel(after));
        this._state.cancel(this.toTicks(after));
        return this;
    }
    /**
     * Iterate over all of the events
     */
    _forEach(callback) {
        if (this._events) {
            this._events.forEach(event => {
                if (event instanceof Part) {
                    event._forEach(callback);
                }
                else {
                    callback(event);
                }
            });
        }
        return this;
    }
    /**
     * Set the attribute of all of the events
     * @param  attr  the attribute to set
     * @param  value      The value to set it to
     */
    _setAll(attr, value) {
        this._forEach(event => {
            event[attr] = value;
        });
    }
    /**
     * Internal tick method
     * @param  time  The time of the event in seconds
     */
    _tick(time, value) {
        if (!this.mute) {
            this.callback(time, value);
        }
    }
    /**
     * Determine if the event should be currently looping
     * given the loop boundries of this Part.
     * @param  event  The event to test
     */
    _testLoopBoundries(event) {
        if (this._loop && (event.startOffset < this._loopStart || event.startOffset >= this._loopEnd)) {
            event.cancel(0);
        }
        else if (event.state === "stopped") {
            // reschedule it if it's stopped
            this._restartEvent(event);
        }
    }
    get probability() {
        return this._probability;
    }
    set probability(prob) {
        this._probability = prob;
        this._setAll("probability", prob);
    }
    get humanize() {
        return this._humanize;
    }
    set humanize(variation) {
        this._humanize = variation;
        this._setAll("humanize", variation);
    }
    /**
     * If the part should loop or not
     * between Part.loopStart and
     * Part.loopEnd. If set to true,
     * the part will loop indefinitely,
     * if set to a number greater than 1
     * it will play a specific number of
     * times, if set to false, 0 or 1, the
     * part will only play once.
     * @example
     * const part = new Tone.Part();
     * // loop the part 8 times
     * part.loop = 8;
     */
    get loop() {
        return this._loop;
    }
    set loop(loop) {
        this._loop = loop;
        this._forEach(event => {
            event.loopStart = this.loopStart;
            event.loopEnd = this.loopEnd;
            event.loop = loop;
            this._testLoopBoundries(event);
        });
    }
    /**
     * The loopEnd point determines when it will
     * loop if Part.loop is true.
     */
    get loopEnd() {
        return new _core_type_Ticks__WEBPACK_IMPORTED_MODULE_0__.TicksClass(this.context, this._loopEnd).toSeconds();
    }
    set loopEnd(loopEnd) {
        this._loopEnd = this.toTicks(loopEnd);
        if (this._loop) {
            this._forEach(event => {
                event.loopEnd = loopEnd;
                this._testLoopBoundries(event);
            });
        }
    }
    /**
     * The loopStart point determines when it will
     * loop if Part.loop is true.
     */
    get loopStart() {
        return new _core_type_Ticks__WEBPACK_IMPORTED_MODULE_0__.TicksClass(this.context, this._loopStart).toSeconds();
    }
    set loopStart(loopStart) {
        this._loopStart = this.toTicks(loopStart);
        if (this._loop) {
            this._forEach(event => {
                event.loopStart = this.loopStart;
                this._testLoopBoundries(event);
            });
        }
    }
    /**
     * The playback rate of the part
     */
    get playbackRate() {
        return this._playbackRate;
    }
    set playbackRate(rate) {
        this._playbackRate = rate;
        this._setAll("playbackRate", rate);
    }
    /**
     * The number of scheduled notes in the part.
     */
    get length() {
        return this._events.size;
    }
    dispose() {
        super.dispose();
        this.clear();
        return this;
    }
}
//# sourceMappingURL=Part.js.map

/***/ }),

/***/ "./node_modules/tone/build/esm/event/Pattern.js":
/*!******************************************************!*\
  !*** ./node_modules/tone/build/esm/event/Pattern.js ***!
  \******************************************************/
/*! namespace exports */
/*! export Pattern [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Pattern": () => /* binding */ Pattern
/* harmony export */ });
/* harmony import */ var _Loop__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Loop */ "./node_modules/tone/build/esm/event/Loop.js");
/* harmony import */ var _PatternGenerator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./PatternGenerator */ "./node_modules/tone/build/esm/event/PatternGenerator.js");
/* harmony import */ var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../core/util/Defaults */ "./node_modules/tone/build/esm/core/util/Defaults.js");
/* harmony import */ var _core_util_Interface__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../core/util/Interface */ "./node_modules/tone/build/esm/core/util/Interface.js");
;



/**
 * Pattern arpeggiates between the given notes
 * in a number of patterns.
 * @example
 * const pattern = new Tone.Pattern((time, note) => {
 * 	// the order of the notes passed in depends on the pattern
 * }, ["C2", "D4", "E5", "A6"], "upDown");
 * @category Event
 */
class Pattern extends _Loop__WEBPACK_IMPORTED_MODULE_0__.Loop {
    constructor() {
        super((0,_core_util_Defaults__WEBPACK_IMPORTED_MODULE_2__.optionsFromArguments)(Pattern.getDefaults(), arguments, ["callback", "values", "pattern"]));
        this.name = "Pattern";
        const options = (0,_core_util_Defaults__WEBPACK_IMPORTED_MODULE_2__.optionsFromArguments)(Pattern.getDefaults(), arguments, ["callback", "values", "pattern"]);
        this.callback = options.callback;
        this._values = options.values;
        this._pattern = (0,_PatternGenerator__WEBPACK_IMPORTED_MODULE_1__.PatternGenerator)(options.values, options.pattern);
        this._type = options.pattern;
    }
    static getDefaults() {
        return Object.assign(_Loop__WEBPACK_IMPORTED_MODULE_0__.Loop.getDefaults(), {
            pattern: "up",
            values: [],
            callback: _core_util_Interface__WEBPACK_IMPORTED_MODULE_3__.noOp,
        });
    }
    /**
     * Internal function called when the notes should be called
     */
    _tick(time) {
        const value = this._pattern.next();
        this._value = value.value;
        this.callback(time, this._value);
    }
    /**
     * The array of events.
     */
    get values() {
        return this._values;
    }
    set values(val) {
        this._values = val;
        // reset the pattern
        this.pattern = this._type;
    }
    /**
     * The current value of the pattern.
     */
    get value() {
        return this._value;
    }
    /**
     * The pattern type. See Tone.CtrlPattern for the full list of patterns.
     */
    get pattern() {
        return this._type;
    }
    set pattern(pattern) {
        this._type = pattern;
        this._pattern = (0,_PatternGenerator__WEBPACK_IMPORTED_MODULE_1__.PatternGenerator)(this._values, this._type);
    }
}
//# sourceMappingURL=Pattern.js.map

/***/ }),

/***/ "./node_modules/tone/build/esm/event/PatternGenerator.js":
/*!***************************************************************!*\
  !*** ./node_modules/tone/build/esm/event/PatternGenerator.js ***!
  \***************************************************************/
/*! namespace exports */
/*! export PatternGenerator [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "PatternGenerator": () => /* binding */ PatternGenerator
/* harmony export */ });
/* harmony import */ var _core_util_Debug__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../core/util/Debug */ "./node_modules/tone/build/esm/core/util/Debug.js");
/* harmony import */ var _core_util_Math__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../core/util/Math */ "./node_modules/tone/build/esm/core/util/Math.js");
;

/**
 * Start at the first value and go up to the last
 */
function* upPatternGen(values) {
    let index = 0;
    while (index < values.length) {
        index = clampToArraySize(index, values);
        yield values[index];
        index++;
    }
}
/**
 * Start at the last value and go down to 0
 */
function* downPatternGen(values) {
    let index = values.length - 1;
    while (index >= 0) {
        index = clampToArraySize(index, values);
        yield values[index];
        index--;
    }
}
/**
 * Infinitely yield the generator
 */
function* infiniteGen(values, gen) {
    while (true) {
        yield* gen(values);
    }
}
/**
 * Make sure that the index is in the given range
 */
function clampToArraySize(index, values) {
    return (0,_core_util_Math__WEBPACK_IMPORTED_MODULE_1__.clamp)(index, 0, values.length - 1);
}
/**
 * Alternate between two generators
 */
function* alternatingGenerator(values, directionUp) {
    let index = directionUp ? 0 : values.length - 1;
    while (true) {
        index = clampToArraySize(index, values);
        yield values[index];
        if (directionUp) {
            index++;
            if (index >= values.length - 1) {
                directionUp = false;
            }
        }
        else {
            index--;
            if (index <= 0) {
                directionUp = true;
            }
        }
    }
}
/**
 * Starting from the bottom move up 2, down 1
 */
function* jumpUp(values) {
    let index = 0;
    let stepIndex = 0;
    while (index < values.length) {
        index = clampToArraySize(index, values);
        yield values[index];
        stepIndex++;
        index += (stepIndex % 2 ? 2 : -1);
    }
}
/**
 * Starting from the top move down 2, up 1
 */
function* jumpDown(values) {
    let index = values.length - 1;
    let stepIndex = 0;
    while (index >= 0) {
        index = clampToArraySize(index, values);
        yield values[index];
        stepIndex++;
        index += (stepIndex % 2 ? -2 : 1);
    }
}
/**
 * Choose a random index each time
 */
function* randomGen(values) {
    while (true) {
        const randomIndex = Math.floor(Math.random() * values.length);
        yield values[randomIndex];
    }
}
/**
 * Randomly go through all of the values once before choosing a new random order
 */
function* randomOnce(values) {
    // create an array of indices
    const copy = [];
    for (let i = 0; i < values.length; i++) {
        copy.push(i);
    }
    while (copy.length > 0) {
        // random choose an index, and then remove it so it's not chosen again
        const randVal = copy.splice(Math.floor(copy.length * Math.random()), 1);
        const index = clampToArraySize(randVal[0], values);
        yield values[index];
    }
}
/**
 * Randomly choose to walk up or down 1 index in the values array
 */
function* randomWalk(values) {
    // randomly choose a starting index in the values array
    let index = Math.floor(Math.random() * values.length);
    while (true) {
        if (index === 0) {
            index++; // at bottom of array, so force upward step
        }
        else if (index === values.length - 1) {
            index--; // at top of array, so force downward step
        }
        else if (Math.random() < 0.5) { // else choose random downward or upward step
            index--;
        }
        else {
            index++;
        }
        yield values[index];
    }
}
/**
 * PatternGenerator returns a generator which will iterate over the given array
 * of values and yield the items according to the passed in pattern
 * @param values An array of values to iterate over
 * @param pattern The name of the pattern use when iterating over
 * @param index Where to start in the offset of the values array
 */
function* PatternGenerator(values, pattern = "up", index = 0) {
    // safeguards
    (0,_core_util_Debug__WEBPACK_IMPORTED_MODULE_0__.assert)(values.length > 0, "The array must have more than one value in it");
    switch (pattern) {
        case "up":
            yield* infiniteGen(values, upPatternGen);
        case "down":
            yield* infiniteGen(values, downPatternGen);
        case "upDown":
            yield* alternatingGenerator(values, true);
        case "downUp":
            yield* alternatingGenerator(values, false);
        case "alternateUp":
            yield* infiniteGen(values, jumpUp);
        case "alternateDown":
            yield* infiniteGen(values, jumpDown);
        case "random":
            yield* randomGen(values);
        case "randomOnce":
            yield* infiniteGen(values, randomOnce);
        case "randomWalk":
            yield* randomWalk(values);
    }
}
//# sourceMappingURL=PatternGenerator.js.map

/***/ }),

/***/ "./node_modules/tone/build/esm/event/Sequence.js":
/*!*******************************************************!*\
  !*** ./node_modules/tone/build/esm/event/Sequence.js ***!
  \*******************************************************/
/*! namespace exports */
/*! export Sequence [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Sequence": () => /* binding */ Sequence
/* harmony export */ });
/* harmony import */ var _core_type_Ticks__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../core/type/Ticks */ "./node_modules/tone/build/esm/core/type/Ticks.js");
/* harmony import */ var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../core/util/Defaults */ "./node_modules/tone/build/esm/core/util/Defaults.js");
/* harmony import */ var _core_util_TypeCheck__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../core/util/TypeCheck */ "./node_modules/tone/build/esm/core/util/TypeCheck.js");
/* harmony import */ var _Part__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Part */ "./node_modules/tone/build/esm/event/Part.js");
/* harmony import */ var _ToneEvent__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./ToneEvent */ "./node_modules/tone/build/esm/event/ToneEvent.js");
;




/**
 * A sequence is an alternate notation of a part. Instead
 * of passing in an array of [time, event] pairs, pass
 * in an array of events which will be spaced at the
 * given subdivision. Sub-arrays will subdivide that beat
 * by the number of items are in the array.
 * Sequence notation inspiration from [Tidal](http://yaxu.org/tidal/)
 * @example
 * const synth = new Tone.Synth().toDestination();
 * const seq = new Tone.Sequence((time, note) => {
 * 	synth.triggerAttackRelease(note, 0.1, time);
 * 	// subdivisions are given as subarrays
 * }, ["C4", ["E4", "D4", "E4"], "G4", ["A4", "G4"]]).start(0);
 * Tone.Transport.start();
 * @category Event
 */
class Sequence extends _ToneEvent__WEBPACK_IMPORTED_MODULE_4__.ToneEvent {
    constructor() {
        super((0,_core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__.optionsFromArguments)(Sequence.getDefaults(), arguments, ["callback", "events", "subdivision"]));
        this.name = "Sequence";
        /**
         * The object responsible for scheduling all of the events
         */
        this._part = new _Part__WEBPACK_IMPORTED_MODULE_3__.Part({
            callback: this._seqCallback.bind(this),
            context: this.context,
        });
        /**
         * private reference to all of the sequence proxies
         */
        this._events = [];
        /**
         * The proxied array
         */
        this._eventsArray = [];
        const options = (0,_core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__.optionsFromArguments)(Sequence.getDefaults(), arguments, ["callback", "events", "subdivision"]);
        this._subdivision = this.toTicks(options.subdivision);
        this.events = options.events;
        // set all of the values
        this.loop = options.loop;
        this.loopStart = options.loopStart;
        this.loopEnd = options.loopEnd;
        this.playbackRate = options.playbackRate;
        this.probability = options.probability;
        this.humanize = options.humanize;
        this.mute = options.mute;
        this.playbackRate = options.playbackRate;
    }
    static getDefaults() {
        return Object.assign((0,_core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__.omitFromObject)(_ToneEvent__WEBPACK_IMPORTED_MODULE_4__.ToneEvent.getDefaults(), ["value"]), {
            events: [],
            loop: true,
            loopEnd: 0,
            loopStart: 0,
            subdivision: "8n",
        });
    }
    /**
     * The internal callback for when an event is invoked
     */
    _seqCallback(time, value) {
        if (value !== null) {
            this.callback(time, value);
        }
    }
    /**
     * The sequence
     */
    get events() {
        return this._events;
    }
    set events(s) {
        this.clear();
        this._eventsArray = s;
        this._events = this._createSequence(this._eventsArray);
        this._eventsUpdated();
    }
    /**
     * Start the part at the given time.
     * @param  time    When to start the part.
     * @param  offset  The offset index to start at
     */
    start(time, offset) {
        this._part.start(time, offset ? this._indexTime(offset) : offset);
        return this;
    }
    /**
     * Stop the part at the given time.
     * @param  time  When to stop the part.
     */
    stop(time) {
        this._part.stop(time);
        return this;
    }
    /**
     * The subdivision of the sequence. This can only be
     * set in the constructor. The subdivision is the
     * interval between successive steps.
     */
    get subdivision() {
        return new _core_type_Ticks__WEBPACK_IMPORTED_MODULE_0__.TicksClass(this.context, this._subdivision).toSeconds();
    }
    /**
     * Create a sequence proxy which can be monitored to create subsequences
     */
    _createSequence(array) {
        return new Proxy(array, {
            get: (target, property) => {
                // property is index in this case
                return target[property];
            },
            set: (target, property, value) => {
                if ((0,_core_util_TypeCheck__WEBPACK_IMPORTED_MODULE_2__.isString)(property) && isFinite(parseInt(property, 10))) {
                    if ((0,_core_util_TypeCheck__WEBPACK_IMPORTED_MODULE_2__.isArray)(value)) {
                        target[property] = this._createSequence(value);
                    }
                    else {
                        target[property] = value;
                    }
                }
                else {
                    target[property] = value;
                }
                this._eventsUpdated();
                // return true to accept the changes
                return true;
            },
        });
    }
    /**
     * When the sequence has changed, all of the events need to be recreated
     */
    _eventsUpdated() {
        this._part.clear();
        this._rescheduleSequence(this._eventsArray, this._subdivision, this.startOffset);
        // update the loopEnd
        this.loopEnd = this.loopEnd;
    }
    /**
     * reschedule all of the events that need to be rescheduled
     */
    _rescheduleSequence(sequence, subdivision, startOffset) {
        sequence.forEach((value, index) => {
            const eventOffset = index * (subdivision) + startOffset;
            if ((0,_core_util_TypeCheck__WEBPACK_IMPORTED_MODULE_2__.isArray)(value)) {
                this._rescheduleSequence(value, subdivision / value.length, eventOffset);
            }
            else {
                const startTime = new _core_type_Ticks__WEBPACK_IMPORTED_MODULE_0__.TicksClass(this.context, eventOffset, "i").toSeconds();
                this._part.add(startTime, value);
            }
        });
    }
    /**
     * Get the time of the index given the Sequence's subdivision
     * @param  index
     * @return The time of that index
     */
    _indexTime(index) {
        return new _core_type_Ticks__WEBPACK_IMPORTED_MODULE_0__.TicksClass(this.context, index * (this._subdivision) + this.startOffset).toSeconds();
    }
    /**
     * Clear all of the events
     */
    clear() {
        this._part.clear();
        return this;
    }
    dispose() {
        super.dispose();
        this._part.dispose();
        return this;
    }
    //-------------------------------------
    // PROXY CALLS
    //-------------------------------------
    get loop() {
        return this._part.loop;
    }
    set loop(l) {
        this._part.loop = l;
    }
    /**
     * The index at which the sequence should start looping
     */
    get loopStart() {
        return this._loopStart;
    }
    set loopStart(index) {
        this._loopStart = index;
        this._part.loopStart = this._indexTime(index);
    }
    /**
     * The index at which the sequence should end looping
     */
    get loopEnd() {
        return this._loopEnd;
    }
    set loopEnd(index) {
        this._loopEnd = index;
        if (index === 0) {
            this._part.loopEnd = this._indexTime(this._eventsArray.length);
        }
        else {
            this._part.loopEnd = this._indexTime(index);
        }
    }
    get startOffset() {
        return this._part.startOffset;
    }
    set startOffset(start) {
        this._part.startOffset = start;
    }
    get playbackRate() {
        return this._part.playbackRate;
    }
    set playbackRate(rate) {
        this._part.playbackRate = rate;
    }
    get probability() {
        return this._part.probability;
    }
    set probability(prob) {
        this._part.probability = prob;
    }
    get progress() {
        return this._part.progress;
    }
    get humanize() {
        return this._part.humanize;
    }
    set humanize(variation) {
        this._part.humanize = variation;
    }
    /**
     * The number of scheduled events
     */
    get length() {
        return this._part.length;
    }
}
//# sourceMappingURL=Sequence.js.map

/***/ }),

/***/ "./node_modules/tone/build/esm/event/ToneEvent.js":
/*!********************************************************!*\
  !*** ./node_modules/tone/build/esm/event/ToneEvent.js ***!
  \********************************************************/
/*! namespace exports */
/*! export ToneEvent [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ToneEvent": () => /* binding */ ToneEvent
/* harmony export */ });
/* harmony import */ var _core_clock_Transport__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../core/clock/Transport */ "./node_modules/tone/build/esm/core/clock/Transport.js");
/* harmony import */ var _core_context_ToneWithContext__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../core/context/ToneWithContext */ "./node_modules/tone/build/esm/core/context/ToneWithContext.js");
/* harmony import */ var _core_type_Ticks__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../core/type/Ticks */ "./node_modules/tone/build/esm/core/type/Ticks.js");
/* harmony import */ var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../core/util/Defaults */ "./node_modules/tone/build/esm/core/util/Defaults.js");
/* harmony import */ var _core_util_Interface__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../core/util/Interface */ "./node_modules/tone/build/esm/core/util/Interface.js");
/* harmony import */ var _core_util_StateTimeline__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../core/util/StateTimeline */ "./node_modules/tone/build/esm/core/util/StateTimeline.js");
/* harmony import */ var _core_util_TypeCheck__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../core/util/TypeCheck */ "./node_modules/tone/build/esm/core/util/TypeCheck.js");
;






/**
 * ToneEvent abstracts away this.context.transport.schedule and provides a schedulable
 * callback for a single or repeatable events along the timeline.
 *
 * @example
 * const synth = new Tone.PolySynth().toDestination();
 * const chordEvent = new Tone.ToneEvent(((time, chord) => {
 * 	// the chord as well as the exact time of the event
 * 	// are passed in as arguments to the callback function
 * 	synth.triggerAttackRelease(chord, 0.5, time);
 * }), ["D4", "E4", "F4"]);
 * // start the chord at the beginning of the transport timeline
 * chordEvent.start();
 * // loop it every measure for 8 measures
 * chordEvent.loop = 8;
 * chordEvent.loopEnd = "1m";
 * @category Event
 */
class ToneEvent extends _core_context_ToneWithContext__WEBPACK_IMPORTED_MODULE_1__.ToneWithContext {
    constructor() {
        super((0,_core_util_Defaults__WEBPACK_IMPORTED_MODULE_3__.optionsFromArguments)(ToneEvent.getDefaults(), arguments, ["callback", "value"]));
        this.name = "ToneEvent";
        /**
         * Tracks the scheduled events
         */
        this._state = new _core_util_StateTimeline__WEBPACK_IMPORTED_MODULE_5__.StateTimeline("stopped");
        /**
         * A delay time from when the event is scheduled to start
         */
        this._startOffset = 0;
        const options = (0,_core_util_Defaults__WEBPACK_IMPORTED_MODULE_3__.optionsFromArguments)(ToneEvent.getDefaults(), arguments, ["callback", "value"]);
        this._loop = options.loop;
        this.callback = options.callback;
        this.value = options.value;
        this._loopStart = this.toTicks(options.loopStart);
        this._loopEnd = this.toTicks(options.loopEnd);
        this._playbackRate = options.playbackRate;
        this._probability = options.probability;
        this._humanize = options.humanize;
        this.mute = options.mute;
        this._playbackRate = options.playbackRate;
        this._state.increasing = true;
        // schedule the events for the first time
        this._rescheduleEvents();
    }
    static getDefaults() {
        return Object.assign(_core_context_ToneWithContext__WEBPACK_IMPORTED_MODULE_1__.ToneWithContext.getDefaults(), {
            callback: _core_util_Interface__WEBPACK_IMPORTED_MODULE_4__.noOp,
            humanize: false,
            loop: false,
            loopEnd: "1m",
            loopStart: 0,
            mute: false,
            playbackRate: 1,
            probability: 1,
            value: null,
        });
    }
    /**
     * Reschedule all of the events along the timeline
     * with the updated values.
     * @param after Only reschedules events after the given time.
     */
    _rescheduleEvents(after = -1) {
        // if no argument is given, schedules all of the events
        this._state.forEachFrom(after, event => {
            let duration;
            if (event.state === "started") {
                if (event.id !== -1) {
                    this.context.transport.clear(event.id);
                }
                const startTick = event.time + Math.round(this.startOffset / this._playbackRate);
                if (this._loop === true || (0,_core_util_TypeCheck__WEBPACK_IMPORTED_MODULE_6__.isNumber)(this._loop) && this._loop > 1) {
                    duration = Infinity;
                    if ((0,_core_util_TypeCheck__WEBPACK_IMPORTED_MODULE_6__.isNumber)(this._loop)) {
                        duration = (this._loop) * this._getLoopDuration();
                    }
                    const nextEvent = this._state.getAfter(startTick);
                    if (nextEvent !== null) {
                        duration = Math.min(duration, nextEvent.time - startTick);
                    }
                    if (duration !== Infinity) {
                        // schedule a stop since it's finite duration
                        this._state.setStateAtTime("stopped", startTick + duration + 1, { id: -1 });
                        duration = new _core_type_Ticks__WEBPACK_IMPORTED_MODULE_2__.TicksClass(this.context, duration);
                    }
                    const interval = new _core_type_Ticks__WEBPACK_IMPORTED_MODULE_2__.TicksClass(this.context, this._getLoopDuration());
                    event.id = this.context.transport.scheduleRepeat(this._tick.bind(this), interval, new _core_type_Ticks__WEBPACK_IMPORTED_MODULE_2__.TicksClass(this.context, startTick), duration);
                }
                else {
                    event.id = this.context.transport.schedule(this._tick.bind(this), new _core_type_Ticks__WEBPACK_IMPORTED_MODULE_2__.TicksClass(this.context, startTick));
                }
            }
        });
    }
    /**
     * Returns the playback state of the note, either "started" or "stopped".
     */
    get state() {
        return this._state.getValueAtTime(this.context.transport.ticks);
    }
    /**
     * The start from the scheduled start time.
     */
    get startOffset() {
        return this._startOffset;
    }
    set startOffset(offset) {
        this._startOffset = offset;
    }
    /**
     * The probability of the notes being triggered.
     */
    get probability() {
        return this._probability;
    }
    set probability(prob) {
        this._probability = prob;
    }
    /**
     * If set to true, will apply small random variation
     * to the callback time. If the value is given as a time, it will randomize
     * by that amount.
     * @example
     * const event = new Tone.ToneEvent();
     * event.humanize = true;
     */
    get humanize() {
        return this._humanize;
    }
    set humanize(variation) {
        this._humanize = variation;
    }
    /**
     * Start the note at the given time.
     * @param  time  When the event should start.
     */
    start(time) {
        const ticks = this.toTicks(time);
        if (this._state.getValueAtTime(ticks) === "stopped") {
            this._state.add({
                id: -1,
                state: "started",
                time: ticks,
            });
            this._rescheduleEvents(ticks);
        }
        return this;
    }
    /**
     * Stop the Event at the given time.
     * @param  time  When the event should stop.
     */
    stop(time) {
        this.cancel(time);
        const ticks = this.toTicks(time);
        if (this._state.getValueAtTime(ticks) === "started") {
            this._state.setStateAtTime("stopped", ticks, { id: -1 });
            const previousEvent = this._state.getBefore(ticks);
            let reschedulTime = ticks;
            if (previousEvent !== null) {
                reschedulTime = previousEvent.time;
            }
            this._rescheduleEvents(reschedulTime);
        }
        return this;
    }
    /**
     * Cancel all scheduled events greater than or equal to the given time
     * @param  time  The time after which events will be cancel.
     */
    cancel(time) {
        time = (0,_core_util_Defaults__WEBPACK_IMPORTED_MODULE_3__.defaultArg)(time, -Infinity);
        const ticks = this.toTicks(time);
        this._state.forEachFrom(ticks, event => {
            this.context.transport.clear(event.id);
        });
        this._state.cancel(ticks);
        return this;
    }
    /**
     * The callback function invoker. Also
     * checks if the Event is done playing
     * @param  time  The time of the event in seconds
     */
    _tick(time) {
        const ticks = this.context.transport.getTicksAtTime(time);
        if (!this.mute && this._state.getValueAtTime(ticks) === "started") {
            if (this.probability < 1 && Math.random() > this.probability) {
                return;
            }
            if (this.humanize) {
                let variation = 0.02;
                if (!(0,_core_util_TypeCheck__WEBPACK_IMPORTED_MODULE_6__.isBoolean)(this.humanize)) {
                    variation = this.toSeconds(this.humanize);
                }
                time += (Math.random() * 2 - 1) * variation;
            }
            this.callback(time, this.value);
        }
    }
    /**
     * Get the duration of the loop.
     */
    _getLoopDuration() {
        return Math.round((this._loopEnd - this._loopStart) / this._playbackRate);
    }
    /**
     * If the note should loop or not
     * between ToneEvent.loopStart and
     * ToneEvent.loopEnd. If set to true,
     * the event will loop indefinitely,
     * if set to a number greater than 1
     * it will play a specific number of
     * times, if set to false, 0 or 1, the
     * part will only play once.
     */
    get loop() {
        return this._loop;
    }
    set loop(loop) {
        this._loop = loop;
        this._rescheduleEvents();
    }
    /**
     * The playback rate of the note. Defaults to 1.
     * @example
     * const note = new Tone.ToneEvent();
     * note.loop = true;
     * // repeat the note twice as fast
     * note.playbackRate = 2;
     */
    get playbackRate() {
        return this._playbackRate;
    }
    set playbackRate(rate) {
        this._playbackRate = rate;
        this._rescheduleEvents();
    }
    /**
     * The loopEnd point is the time the event will loop
     * if ToneEvent.loop is true.
     */
    get loopEnd() {
        return new _core_type_Ticks__WEBPACK_IMPORTED_MODULE_2__.TicksClass(this.context, this._loopEnd).toSeconds();
    }
    set loopEnd(loopEnd) {
        this._loopEnd = this.toTicks(loopEnd);
        if (this._loop) {
            this._rescheduleEvents();
        }
    }
    /**
     * The time when the loop should start.
     */
    get loopStart() {
        return new _core_type_Ticks__WEBPACK_IMPORTED_MODULE_2__.TicksClass(this.context, this._loopStart).toSeconds();
    }
    set loopStart(loopStart) {
        this._loopStart = this.toTicks(loopStart);
        if (this._loop) {
            this._rescheduleEvents();
        }
    }
    /**
     * The current progress of the loop interval.
     * Returns 0 if the event is not started yet or
     * it is not set to loop.
     */
    get progress() {
        if (this._loop) {
            const ticks = this.context.transport.ticks;
            const lastEvent = this._state.get(ticks);
            if (lastEvent !== null && lastEvent.state === "started") {
                const loopDuration = this._getLoopDuration();
                const progress = (ticks - lastEvent.time) % loopDuration;
                return progress / loopDuration;
            }
            else {
                return 0;
            }
        }
        else {
            return 0;
        }
    }
    dispose() {
        super.dispose();
        this.cancel();
        this._state.dispose();
        return this;
    }
}
//# sourceMappingURL=ToneEvent.js.map

/***/ }),

/***/ "./node_modules/tone/build/esm/event/index.js":
/*!****************************************************!*\
  !*** ./node_modules/tone/build/esm/event/index.js ***!
  \****************************************************/
/*! namespace exports */
/*! export Loop [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/event/Loop.js .Loop */
/*! export Part [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/event/Part.js .Part */
/*! export Pattern [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/event/Pattern.js .Pattern */
/*! export Sequence [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/event/Sequence.js .Sequence */
/*! export ToneEvent [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/event/ToneEvent.js .ToneEvent */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_exports__, __webpack_require__.d, __webpack_require__.r, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Loop": () => /* reexport safe */ _Loop__WEBPACK_IMPORTED_MODULE_0__.Loop,
/* harmony export */   "Part": () => /* reexport safe */ _Part__WEBPACK_IMPORTED_MODULE_1__.Part,
/* harmony export */   "Pattern": () => /* reexport safe */ _Pattern__WEBPACK_IMPORTED_MODULE_2__.Pattern,
/* harmony export */   "Sequence": () => /* reexport safe */ _Sequence__WEBPACK_IMPORTED_MODULE_3__.Sequence,
/* harmony export */   "ToneEvent": () => /* reexport safe */ _ToneEvent__WEBPACK_IMPORTED_MODULE_4__.ToneEvent
/* harmony export */ });
/* harmony import */ var _Loop__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Loop */ "./node_modules/tone/build/esm/event/Loop.js");
/* harmony import */ var _Part__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Part */ "./node_modules/tone/build/esm/event/Part.js");
/* harmony import */ var _Pattern__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Pattern */ "./node_modules/tone/build/esm/event/Pattern.js");
/* harmony import */ var _Sequence__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Sequence */ "./node_modules/tone/build/esm/event/Sequence.js");
/* harmony import */ var _ToneEvent__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./ToneEvent */ "./node_modules/tone/build/esm/event/ToneEvent.js");





//# sourceMappingURL=index.js.map

/***/ }),

/***/ "./node_modules/tone/build/esm/index.js":
/*!**********************************************!*\
  !*** ./node_modules/tone/build/esm/index.js ***!
  \**********************************************/
/*! namespace exports */
/*! export AMOscillator [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/source/oscillator/AMOscillator.js .AMOscillator */
/*! export AMSynth [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/instrument/AMSynth.js .AMSynth */
/*! export Abs [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/signal/Abs.js .Abs */
/*! export Add [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/signal/Add.js .Add */
/*! export AmplitudeEnvelope [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/component/envelope/AmplitudeEnvelope.js .AmplitudeEnvelope */
/*! export Analyser [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/component/analysis/Analyser.js .Analyser */
/*! export AudioToGain [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/signal/AudioToGain.js .AudioToGain */
/*! export AutoFilter [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/effect/AutoFilter.js .AutoFilter */
/*! export AutoPanner [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/effect/AutoPanner.js .AutoPanner */
/*! export AutoWah [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/effect/AutoWah.js .AutoWah */
/*! export BaseContext [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/core/context/BaseContext.js .BaseContext */
/*! export BiquadFilter [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/component/filter/BiquadFilter.js .BiquadFilter */
/*! export BitCrusher [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/effect/BitCrusher.js .BitCrusher */
/*! export Buffer [provided] [no usage info] [missing usage info prevents renaming] */
/*! export BufferSource [provided] [no usage info] [missing usage info prevents renaming] */
/*! export Buffers [provided] [no usage info] [missing usage info prevents renaming] */
/*! export Channel [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/component/channel/Channel.js .Channel */
/*! export Chebyshev [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/effect/Chebyshev.js .Chebyshev */
/*! export Chorus [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/effect/Chorus.js .Chorus */
/*! export Clock [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/core/clock/Clock.js .Clock */
/*! export Compressor [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/component/dynamics/Compressor.js .Compressor */
/*! export Context [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/core/context/Context.js .Context */
/*! export Convolver [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/component/filter/Convolver.js .Convolver */
/*! export CrossFade [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/component/channel/CrossFade.js .CrossFade */
/*! export DCMeter [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/component/analysis/DCMeter.js .DCMeter */
/*! export Delay [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/core/context/Delay.js .Delay */
/*! export Destination [provided] [no usage info] [missing usage info prevents renaming] */
/*! export Distortion [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/effect/Distortion.js .Distortion */
/*! export Draw [provided] [no usage info] [missing usage info prevents renaming] */
/*! export DuoSynth [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/instrument/DuoSynth.js .DuoSynth */
/*! export EQ3 [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/component/filter/EQ3.js .EQ3 */
/*! export Emitter [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/core/util/Emitter.js .Emitter */
/*! export Envelope [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/component/envelope/Envelope.js .Envelope */
/*! export FFT [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/component/analysis/FFT.js .FFT */
/*! export FMOscillator [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/source/oscillator/FMOscillator.js .FMOscillator */
/*! export FMSynth [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/instrument/FMSynth.js .FMSynth */
/*! export FatOscillator [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/source/oscillator/FatOscillator.js .FatOscillator */
/*! export FeedbackCombFilter [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/component/filter/FeedbackCombFilter.js .FeedbackCombFilter */
/*! export FeedbackDelay [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/effect/FeedbackDelay.js .FeedbackDelay */
/*! export Filter [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/component/filter/Filter.js .Filter */
/*! export Follower [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/component/analysis/Follower.js .Follower */
/*! export Freeverb [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/effect/Freeverb.js .Freeverb */
/*! export Frequency [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/core/type/Frequency.js .Frequency */
/*! export FrequencyClass [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/core/type/Frequency.js .FrequencyClass */
/*! export FrequencyEnvelope [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/component/envelope/FrequencyEnvelope.js .FrequencyEnvelope */
/*! export FrequencyShifter [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/effect/FrequencyShifter.js .FrequencyShifter */
/*! export Gain [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/core/context/Gain.js .Gain */
/*! export GainToAudio [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/signal/GainToAudio.js .GainToAudio */
/*! export Gate [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/component/dynamics/Gate.js .Gate */
/*! export GrainPlayer [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/source/buffer/GrainPlayer.js .GrainPlayer */
/*! export GreaterThan [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/signal/GreaterThan.js .GreaterThan */
/*! export GreaterThanZero [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/signal/GreaterThanZero.js .GreaterThanZero */
/*! export IntervalTimeline [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/core/util/IntervalTimeline.js .IntervalTimeline */
/*! export JCReverb [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/effect/JCReverb.js .JCReverb */
/*! export LFO [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/source/oscillator/LFO.js .LFO */
/*! export Limiter [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/component/dynamics/Limiter.js .Limiter */
/*! export Listener [provided] [no usage info] [missing usage info prevents renaming] */
/*! export Loop [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/event/Loop.js .Loop */
/*! export LowpassCombFilter [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/component/filter/LowpassCombFilter.js .LowpassCombFilter */
/*! export Master [provided] [no usage info] [missing usage info prevents renaming] */
/*! export MembraneSynth [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/instrument/MembraneSynth.js .MembraneSynth */
/*! export Merge [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/component/channel/Merge.js .Merge */
/*! export MetalSynth [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/instrument/MetalSynth.js .MetalSynth */
/*! export Meter [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/component/analysis/Meter.js .Meter */
/*! export MidSideCompressor [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/component/dynamics/MidSideCompressor.js .MidSideCompressor */
/*! export MidSideMerge [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/component/channel/MidSideMerge.js .MidSideMerge */
/*! export MidSideSplit [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/component/channel/MidSideSplit.js .MidSideSplit */
/*! export Midi [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/core/type/Midi.js .Midi */
/*! export MidiClass [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/core/type/Midi.js .MidiClass */
/*! export MonoSynth [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/instrument/MonoSynth.js .MonoSynth */
/*! export MultibandCompressor [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/component/dynamics/MultibandCompressor.js .MultibandCompressor */
/*! export MultibandSplit [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/component/channel/MultibandSplit.js .MultibandSplit */
/*! export Multiply [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/signal/Multiply.js .Multiply */
/*! export Negate [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/signal/Negate.js .Negate */
/*! export Noise [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/source/Noise.js .Noise */
/*! export NoiseSynth [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/instrument/NoiseSynth.js .NoiseSynth */
/*! export Offline [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/core/context/Offline.js .Offline */
/*! export OfflineContext [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/core/context/OfflineContext.js .OfflineContext */
/*! export OmniOscillator [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/source/oscillator/OmniOscillator.js .OmniOscillator */
/*! export OnePoleFilter [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/component/filter/OnePoleFilter.js .OnePoleFilter */
/*! export Oscillator [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/source/oscillator/Oscillator.js .Oscillator */
/*! export PWMOscillator [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/source/oscillator/PWMOscillator.js .PWMOscillator */
/*! export PanVol [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/component/channel/PanVol.js .PanVol */
/*! export Panner [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/component/channel/Panner.js .Panner */
/*! export Panner3D [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/component/channel/Panner3D.js .Panner3D */
/*! export Param [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/core/context/Param.js .Param */
/*! export Part [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/event/Part.js .Part */
/*! export Pattern [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/event/Pattern.js .Pattern */
/*! export Phaser [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/effect/Phaser.js .Phaser */
/*! export PingPongDelay [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/effect/PingPongDelay.js .PingPongDelay */
/*! export PitchShift [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/effect/PitchShift.js .PitchShift */
/*! export Player [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/source/buffer/Player.js .Player */
/*! export Players [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/source/buffer/Players.js .Players */
/*! export PluckSynth [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/instrument/PluckSynth.js .PluckSynth */
/*! export PolySynth [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/instrument/PolySynth.js .PolySynth */
/*! export Pow [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/signal/Pow.js .Pow */
/*! export PulseOscillator [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/source/oscillator/PulseOscillator.js .PulseOscillator */
/*! export Recorder [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/component/channel/Recorder.js .Recorder */
/*! export Reverb [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/effect/Reverb.js .Reverb */
/*! export Sampler [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/instrument/Sampler.js .Sampler */
/*! export Scale [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/signal/Scale.js .Scale */
/*! export ScaleExp [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/signal/ScaleExp.js .ScaleExp */
/*! export Sequence [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/event/Sequence.js .Sequence */
/*! export Signal [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/signal/Signal.js .Signal */
/*! export Solo [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/component/channel/Solo.js .Solo */
/*! export Split [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/component/channel/Split.js .Split */
/*! export StateTimeline [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/core/util/StateTimeline.js .StateTimeline */
/*! export StereoWidener [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/effect/StereoWidener.js .StereoWidener */
/*! export Subtract [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/signal/Subtract.js .Subtract */
/*! export SyncedSignal [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/signal/SyncedSignal.js .SyncedSignal */
/*! export Synth [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/instrument/Synth.js .Synth */
/*! export Ticks [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/core/type/Ticks.js .Ticks */
/*! export TicksClass [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/core/type/Ticks.js .TicksClass */
/*! export Time [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/core/type/Time.js .Time */
/*! export TimeClass [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/core/type/Time.js .TimeClass */
/*! export Timeline [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/core/util/Timeline.js .Timeline */
/*! export ToneAudioBuffer [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/core/context/ToneAudioBuffer.js .ToneAudioBuffer */
/*! export ToneAudioBuffers [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/core/context/ToneAudioBuffers.js .ToneAudioBuffers */
/*! export ToneAudioNode [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/core/context/ToneAudioNode.js .ToneAudioNode */
/*! export ToneBufferSource [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/source/buffer/ToneBufferSource.js .ToneBufferSource */
/*! export ToneEvent [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/event/ToneEvent.js .ToneEvent */
/*! export ToneOscillatorNode [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/source/oscillator/ToneOscillatorNode.js .ToneOscillatorNode */
/*! export Transport [provided] [no usage info] [missing usage info prevents renaming] */
/*! export TransportTime [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/core/type/TransportTime.js .TransportTime */
/*! export TransportTimeClass [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/core/type/TransportTime.js .TransportTimeClass */
/*! export Tremolo [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/effect/Tremolo.js .Tremolo */
/*! export Unit [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/core/type/Units.js */
/*!   exports [not provided] [no usage info] */
/*! export UserMedia [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/source/UserMedia.js .UserMedia */
/*! export Vibrato [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/effect/Vibrato.js .Vibrato */
/*! export Volume [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/component/channel/Volume.js .Volume */
/*! export WaveShaper [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/signal/WaveShaper.js .WaveShaper */
/*! export Waveform [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/component/analysis/Waveform.js .Waveform */
/*! export Zero [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/signal/Zero.js .Zero */
/*! export connect [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/core/context/ToneAudioNode.js .connect */
/*! export connectSeries [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/core/context/ToneAudioNode.js .connectSeries */
/*! export connectSignal [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/signal/Signal.js .connectSignal */
/*! export context [provided] [no usage info] [missing usage info prevents renaming] */
/*! export dbToGain [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/core/type/Conversions.js .dbToGain */
/*! export debug [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/core/util/Debug.js */
/*!   export assert [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export assertContextRunning [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export assertRange [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export log [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export setLogger [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export warn [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export defaultArg [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/core/util/Defaults.js .defaultArg */
/*! export disconnect [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/core/context/ToneAudioNode.js .disconnect */
/*! export ftom [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/core/type/Conversions.js .ftom */
/*! export gainToDb [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/core/type/Conversions.js .gainToDb */
/*! export getContext [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/core/Global.js .getContext */
/*! export getDestination [provided] [no usage info] [missing usage info prevents renaming] */
/*! export getDraw [provided] [no usage info] [missing usage info prevents renaming] */
/*! export getListener [provided] [no usage info] [missing usage info prevents renaming] */
/*! export getTransport [provided] [no usage info] [missing usage info prevents renaming] */
/*! export immediate [provided] [no usage info] [missing usage info prevents renaming] */
/*! export intervalToFrequencyRatio [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/core/type/Conversions.js .intervalToFrequencyRatio */
/*! export isArray [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/core/util/TypeCheck.js .isArray */
/*! export isBoolean [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/core/util/TypeCheck.js .isBoolean */
/*! export isDefined [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/core/util/TypeCheck.js .isDefined */
/*! export isFunction [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/core/util/TypeCheck.js .isFunction */
/*! export isNote [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/core/util/TypeCheck.js .isNote */
/*! export isNumber [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/core/util/TypeCheck.js .isNumber */
/*! export isObject [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/core/util/TypeCheck.js .isObject */
/*! export isString [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/core/util/TypeCheck.js .isString */
/*! export isUndef [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/core/util/TypeCheck.js .isUndef */
/*! export loaded [provided] [no usage info] [missing usage info prevents renaming] */
/*! export mtof [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/core/type/Conversions.js .mtof */
/*! export now [provided] [no usage info] [missing usage info prevents renaming] */
/*! export optionsFromArguments [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/core/util/Defaults.js .optionsFromArguments */
/*! export setContext [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/core/Global.js .setContext */
/*! export start [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/core/Global.js .start */
/*! export supported [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/standardized-audio-context/build/es2019/module.js .isSupported */
/*! export version [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/version.js .version */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_exports__, __webpack_require__.d, __webpack_require__.r, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "getContext": () => /* reexport safe */ _core_Global__WEBPACK_IMPORTED_MODULE_0__.getContext,
/* harmony export */   "setContext": () => /* reexport safe */ _core_Global__WEBPACK_IMPORTED_MODULE_0__.setContext,
/* harmony export */   "AMOscillator": () => /* reexport safe */ _classes__WEBPACK_IMPORTED_MODULE_1__.AMOscillator,
/* harmony export */   "AMSynth": () => /* reexport safe */ _classes__WEBPACK_IMPORTED_MODULE_1__.AMSynth,
/* harmony export */   "Abs": () => /* reexport safe */ _classes__WEBPACK_IMPORTED_MODULE_1__.Abs,
/* harmony export */   "Add": () => /* reexport safe */ _classes__WEBPACK_IMPORTED_MODULE_1__.Add,
/* harmony export */   "AmplitudeEnvelope": () => /* reexport safe */ _classes__WEBPACK_IMPORTED_MODULE_1__.AmplitudeEnvelope,
/* harmony export */   "Analyser": () => /* reexport safe */ _classes__WEBPACK_IMPORTED_MODULE_1__.Analyser,
/* harmony export */   "AudioToGain": () => /* reexport safe */ _classes__WEBPACK_IMPORTED_MODULE_1__.AudioToGain,
/* harmony export */   "AutoFilter": () => /* reexport safe */ _classes__WEBPACK_IMPORTED_MODULE_1__.AutoFilter,
/* harmony export */   "AutoPanner": () => /* reexport safe */ _classes__WEBPACK_IMPORTED_MODULE_1__.AutoPanner,
/* harmony export */   "AutoWah": () => /* reexport safe */ _classes__WEBPACK_IMPORTED_MODULE_1__.AutoWah,
/* harmony export */   "BaseContext": () => /* reexport safe */ _classes__WEBPACK_IMPORTED_MODULE_1__.BaseContext,
/* harmony export */   "BiquadFilter": () => /* reexport safe */ _classes__WEBPACK_IMPORTED_MODULE_1__.BiquadFilter,
/* harmony export */   "BitCrusher": () => /* reexport safe */ _classes__WEBPACK_IMPORTED_MODULE_1__.BitCrusher,
/* harmony export */   "Channel": () => /* reexport safe */ _classes__WEBPACK_IMPORTED_MODULE_1__.Channel,
/* harmony export */   "Chebyshev": () => /* reexport safe */ _classes__WEBPACK_IMPORTED_MODULE_1__.Chebyshev,
/* harmony export */   "Chorus": () => /* reexport safe */ _classes__WEBPACK_IMPORTED_MODULE_1__.Chorus,
/* harmony export */   "Clock": () => /* reexport safe */ _classes__WEBPACK_IMPORTED_MODULE_1__.Clock,
/* harmony export */   "Compressor": () => /* reexport safe */ _classes__WEBPACK_IMPORTED_MODULE_1__.Compressor,
/* harmony export */   "Context": () => /* reexport safe */ _classes__WEBPACK_IMPORTED_MODULE_1__.Context,
/* harmony export */   "Convolver": () => /* reexport safe */ _classes__WEBPACK_IMPORTED_MODULE_1__.Convolver,
/* harmony export */   "CrossFade": () => /* reexport safe */ _classes__WEBPACK_IMPORTED_MODULE_1__.CrossFade,
/* harmony export */   "DCMeter": () => /* reexport safe */ _classes__WEBPACK_IMPORTED_MODULE_1__.DCMeter,
/* harmony export */   "Delay": () => /* reexport safe */ _classes__WEBPACK_IMPORTED_MODULE_1__.Delay,
/* harmony export */   "Distortion": () => /* reexport safe */ _classes__WEBPACK_IMPORTED_MODULE_1__.Distortion,
/* harmony export */   "DuoSynth": () => /* reexport safe */ _classes__WEBPACK_IMPORTED_MODULE_1__.DuoSynth,
/* harmony export */   "EQ3": () => /* reexport safe */ _classes__WEBPACK_IMPORTED_MODULE_1__.EQ3,
/* harmony export */   "Emitter": () => /* reexport safe */ _classes__WEBPACK_IMPORTED_MODULE_1__.Emitter,
/* harmony export */   "Envelope": () => /* reexport safe */ _classes__WEBPACK_IMPORTED_MODULE_1__.Envelope,
/* harmony export */   "FFT": () => /* reexport safe */ _classes__WEBPACK_IMPORTED_MODULE_1__.FFT,
/* harmony export */   "FMOscillator": () => /* reexport safe */ _classes__WEBPACK_IMPORTED_MODULE_1__.FMOscillator,
/* harmony export */   "FMSynth": () => /* reexport safe */ _classes__WEBPACK_IMPORTED_MODULE_1__.FMSynth,
/* harmony export */   "FatOscillator": () => /* reexport safe */ _classes__WEBPACK_IMPORTED_MODULE_1__.FatOscillator,
/* harmony export */   "FeedbackCombFilter": () => /* reexport safe */ _classes__WEBPACK_IMPORTED_MODULE_1__.FeedbackCombFilter,
/* harmony export */   "FeedbackDelay": () => /* reexport safe */ _classes__WEBPACK_IMPORTED_MODULE_1__.FeedbackDelay,
/* harmony export */   "Filter": () => /* reexport safe */ _classes__WEBPACK_IMPORTED_MODULE_1__.Filter,
/* harmony export */   "Follower": () => /* reexport safe */ _classes__WEBPACK_IMPORTED_MODULE_1__.Follower,
/* harmony export */   "Freeverb": () => /* reexport safe */ _classes__WEBPACK_IMPORTED_MODULE_1__.Freeverb,
/* harmony export */   "Frequency": () => /* reexport safe */ _classes__WEBPACK_IMPORTED_MODULE_1__.Frequency,
/* harmony export */   "FrequencyClass": () => /* reexport safe */ _classes__WEBPACK_IMPORTED_MODULE_1__.FrequencyClass,
/* harmony export */   "FrequencyEnvelope": () => /* reexport safe */ _classes__WEBPACK_IMPORTED_MODULE_1__.FrequencyEnvelope,
/* harmony export */   "FrequencyShifter": () => /* reexport safe */ _classes__WEBPACK_IMPORTED_MODULE_1__.FrequencyShifter,
/* harmony export */   "Gain": () => /* reexport safe */ _classes__WEBPACK_IMPORTED_MODULE_1__.Gain,
/* harmony export */   "GainToAudio": () => /* reexport safe */ _classes__WEBPACK_IMPORTED_MODULE_1__.GainToAudio,
/* harmony export */   "Gate": () => /* reexport safe */ _classes__WEBPACK_IMPORTED_MODULE_1__.Gate,
/* harmony export */   "GrainPlayer": () => /* reexport safe */ _classes__WEBPACK_IMPORTED_MODULE_1__.GrainPlayer,
/* harmony export */   "GreaterThan": () => /* reexport safe */ _classes__WEBPACK_IMPORTED_MODULE_1__.GreaterThan,
/* harmony export */   "GreaterThanZero": () => /* reexport safe */ _classes__WEBPACK_IMPORTED_MODULE_1__.GreaterThanZero,
/* harmony export */   "IntervalTimeline": () => /* reexport safe */ _classes__WEBPACK_IMPORTED_MODULE_1__.IntervalTimeline,
/* harmony export */   "JCReverb": () => /* reexport safe */ _classes__WEBPACK_IMPORTED_MODULE_1__.JCReverb,
/* harmony export */   "LFO": () => /* reexport safe */ _classes__WEBPACK_IMPORTED_MODULE_1__.LFO,
/* harmony export */   "Limiter": () => /* reexport safe */ _classes__WEBPACK_IMPORTED_MODULE_1__.Limiter,
/* harmony export */   "Loop": () => /* reexport safe */ _classes__WEBPACK_IMPORTED_MODULE_1__.Loop,
/* harmony export */   "LowpassCombFilter": () => /* reexport safe */ _classes__WEBPACK_IMPORTED_MODULE_1__.LowpassCombFilter,
/* harmony export */   "MembraneSynth": () => /* reexport safe */ _classes__WEBPACK_IMPORTED_MODULE_1__.MembraneSynth,
/* harmony export */   "Merge": () => /* reexport safe */ _classes__WEBPACK_IMPORTED_MODULE_1__.Merge,
/* harmony export */   "MetalSynth": () => /* reexport safe */ _classes__WEBPACK_IMPORTED_MODULE_1__.MetalSynth,
/* harmony export */   "Meter": () => /* reexport safe */ _classes__WEBPACK_IMPORTED_MODULE_1__.Meter,
/* harmony export */   "MidSideCompressor": () => /* reexport safe */ _classes__WEBPACK_IMPORTED_MODULE_1__.MidSideCompressor,
/* harmony export */   "MidSideMerge": () => /* reexport safe */ _classes__WEBPACK_IMPORTED_MODULE_1__.MidSideMerge,
/* harmony export */   "MidSideSplit": () => /* reexport safe */ _classes__WEBPACK_IMPORTED_MODULE_1__.MidSideSplit,
/* harmony export */   "Midi": () => /* reexport safe */ _classes__WEBPACK_IMPORTED_MODULE_1__.Midi,
/* harmony export */   "MidiClass": () => /* reexport safe */ _classes__WEBPACK_IMPORTED_MODULE_1__.MidiClass,
/* harmony export */   "MonoSynth": () => /* reexport safe */ _classes__WEBPACK_IMPORTED_MODULE_1__.MonoSynth,
/* harmony export */   "MultibandCompressor": () => /* reexport safe */ _classes__WEBPACK_IMPORTED_MODULE_1__.MultibandCompressor,
/* harmony export */   "MultibandSplit": () => /* reexport safe */ _classes__WEBPACK_IMPORTED_MODULE_1__.MultibandSplit,
/* harmony export */   "Multiply": () => /* reexport safe */ _classes__WEBPACK_IMPORTED_MODULE_1__.Multiply,
/* harmony export */   "Negate": () => /* reexport safe */ _classes__WEBPACK_IMPORTED_MODULE_1__.Negate,
/* harmony export */   "Noise": () => /* reexport safe */ _classes__WEBPACK_IMPORTED_MODULE_1__.Noise,
/* harmony export */   "NoiseSynth": () => /* reexport safe */ _classes__WEBPACK_IMPORTED_MODULE_1__.NoiseSynth,
/* harmony export */   "Offline": () => /* reexport safe */ _classes__WEBPACK_IMPORTED_MODULE_1__.Offline,
/* harmony export */   "OfflineContext": () => /* reexport safe */ _classes__WEBPACK_IMPORTED_MODULE_1__.OfflineContext,
/* harmony export */   "OmniOscillator": () => /* reexport safe */ _classes__WEBPACK_IMPORTED_MODULE_1__.OmniOscillator,
/* harmony export */   "OnePoleFilter": () => /* reexport safe */ _classes__WEBPACK_IMPORTED_MODULE_1__.OnePoleFilter,
/* harmony export */   "Oscillator": () => /* reexport safe */ _classes__WEBPACK_IMPORTED_MODULE_1__.Oscillator,
/* harmony export */   "PWMOscillator": () => /* reexport safe */ _classes__WEBPACK_IMPORTED_MODULE_1__.PWMOscillator,
/* harmony export */   "PanVol": () => /* reexport safe */ _classes__WEBPACK_IMPORTED_MODULE_1__.PanVol,
/* harmony export */   "Panner": () => /* reexport safe */ _classes__WEBPACK_IMPORTED_MODULE_1__.Panner,
/* harmony export */   "Panner3D": () => /* reexport safe */ _classes__WEBPACK_IMPORTED_MODULE_1__.Panner3D,
/* harmony export */   "Param": () => /* reexport safe */ _classes__WEBPACK_IMPORTED_MODULE_1__.Param,
/* harmony export */   "Part": () => /* reexport safe */ _classes__WEBPACK_IMPORTED_MODULE_1__.Part,
/* harmony export */   "Pattern": () => /* reexport safe */ _classes__WEBPACK_IMPORTED_MODULE_1__.Pattern,
/* harmony export */   "Phaser": () => /* reexport safe */ _classes__WEBPACK_IMPORTED_MODULE_1__.Phaser,
/* harmony export */   "PingPongDelay": () => /* reexport safe */ _classes__WEBPACK_IMPORTED_MODULE_1__.PingPongDelay,
/* harmony export */   "PitchShift": () => /* reexport safe */ _classes__WEBPACK_IMPORTED_MODULE_1__.PitchShift,
/* harmony export */   "Player": () => /* reexport safe */ _classes__WEBPACK_IMPORTED_MODULE_1__.Player,
/* harmony export */   "Players": () => /* reexport safe */ _classes__WEBPACK_IMPORTED_MODULE_1__.Players,
/* harmony export */   "PluckSynth": () => /* reexport safe */ _classes__WEBPACK_IMPORTED_MODULE_1__.PluckSynth,
/* harmony export */   "PolySynth": () => /* reexport safe */ _classes__WEBPACK_IMPORTED_MODULE_1__.PolySynth,
/* harmony export */   "Pow": () => /* reexport safe */ _classes__WEBPACK_IMPORTED_MODULE_1__.Pow,
/* harmony export */   "PulseOscillator": () => /* reexport safe */ _classes__WEBPACK_IMPORTED_MODULE_1__.PulseOscillator,
/* harmony export */   "Recorder": () => /* reexport safe */ _classes__WEBPACK_IMPORTED_MODULE_1__.Recorder,
/* harmony export */   "Reverb": () => /* reexport safe */ _classes__WEBPACK_IMPORTED_MODULE_1__.Reverb,
/* harmony export */   "Sampler": () => /* reexport safe */ _classes__WEBPACK_IMPORTED_MODULE_1__.Sampler,
/* harmony export */   "Scale": () => /* reexport safe */ _classes__WEBPACK_IMPORTED_MODULE_1__.Scale,
/* harmony export */   "ScaleExp": () => /* reexport safe */ _classes__WEBPACK_IMPORTED_MODULE_1__.ScaleExp,
/* harmony export */   "Sequence": () => /* reexport safe */ _classes__WEBPACK_IMPORTED_MODULE_1__.Sequence,
/* harmony export */   "Signal": () => /* reexport safe */ _classes__WEBPACK_IMPORTED_MODULE_1__.Signal,
/* harmony export */   "Solo": () => /* reexport safe */ _classes__WEBPACK_IMPORTED_MODULE_1__.Solo,
/* harmony export */   "Split": () => /* reexport safe */ _classes__WEBPACK_IMPORTED_MODULE_1__.Split,
/* harmony export */   "StateTimeline": () => /* reexport safe */ _classes__WEBPACK_IMPORTED_MODULE_1__.StateTimeline,
/* harmony export */   "StereoWidener": () => /* reexport safe */ _classes__WEBPACK_IMPORTED_MODULE_1__.StereoWidener,
/* harmony export */   "Subtract": () => /* reexport safe */ _classes__WEBPACK_IMPORTED_MODULE_1__.Subtract,
/* harmony export */   "SyncedSignal": () => /* reexport safe */ _classes__WEBPACK_IMPORTED_MODULE_1__.SyncedSignal,
/* harmony export */   "Synth": () => /* reexport safe */ _classes__WEBPACK_IMPORTED_MODULE_1__.Synth,
/* harmony export */   "Ticks": () => /* reexport safe */ _classes__WEBPACK_IMPORTED_MODULE_1__.Ticks,
/* harmony export */   "TicksClass": () => /* reexport safe */ _classes__WEBPACK_IMPORTED_MODULE_1__.TicksClass,
/* harmony export */   "Time": () => /* reexport safe */ _classes__WEBPACK_IMPORTED_MODULE_1__.Time,
/* harmony export */   "TimeClass": () => /* reexport safe */ _classes__WEBPACK_IMPORTED_MODULE_1__.TimeClass,
/* harmony export */   "Timeline": () => /* reexport safe */ _classes__WEBPACK_IMPORTED_MODULE_1__.Timeline,
/* harmony export */   "ToneAudioBuffer": () => /* reexport safe */ _classes__WEBPACK_IMPORTED_MODULE_1__.ToneAudioBuffer,
/* harmony export */   "ToneAudioBuffers": () => /* reexport safe */ _classes__WEBPACK_IMPORTED_MODULE_1__.ToneAudioBuffers,
/* harmony export */   "ToneAudioNode": () => /* reexport safe */ _classes__WEBPACK_IMPORTED_MODULE_1__.ToneAudioNode,
/* harmony export */   "ToneBufferSource": () => /* reexport safe */ _classes__WEBPACK_IMPORTED_MODULE_1__.ToneBufferSource,
/* harmony export */   "ToneEvent": () => /* reexport safe */ _classes__WEBPACK_IMPORTED_MODULE_1__.ToneEvent,
/* harmony export */   "ToneOscillatorNode": () => /* reexport safe */ _classes__WEBPACK_IMPORTED_MODULE_1__.ToneOscillatorNode,
/* harmony export */   "TransportTime": () => /* reexport safe */ _classes__WEBPACK_IMPORTED_MODULE_1__.TransportTime,
/* harmony export */   "TransportTimeClass": () => /* reexport safe */ _classes__WEBPACK_IMPORTED_MODULE_1__.TransportTimeClass,
/* harmony export */   "Tremolo": () => /* reexport safe */ _classes__WEBPACK_IMPORTED_MODULE_1__.Tremolo,
/* harmony export */   "Unit": () => /* reexport safe */ _classes__WEBPACK_IMPORTED_MODULE_1__.Unit,
/* harmony export */   "UserMedia": () => /* reexport safe */ _classes__WEBPACK_IMPORTED_MODULE_1__.UserMedia,
/* harmony export */   "Vibrato": () => /* reexport safe */ _classes__WEBPACK_IMPORTED_MODULE_1__.Vibrato,
/* harmony export */   "Volume": () => /* reexport safe */ _classes__WEBPACK_IMPORTED_MODULE_1__.Volume,
/* harmony export */   "WaveShaper": () => /* reexport safe */ _classes__WEBPACK_IMPORTED_MODULE_1__.WaveShaper,
/* harmony export */   "Waveform": () => /* reexport safe */ _classes__WEBPACK_IMPORTED_MODULE_1__.Waveform,
/* harmony export */   "Zero": () => /* reexport safe */ _classes__WEBPACK_IMPORTED_MODULE_1__.Zero,
/* harmony export */   "connect": () => /* reexport safe */ _classes__WEBPACK_IMPORTED_MODULE_1__.connect,
/* harmony export */   "connectSeries": () => /* reexport safe */ _classes__WEBPACK_IMPORTED_MODULE_1__.connectSeries,
/* harmony export */   "connectSignal": () => /* reexport safe */ _classes__WEBPACK_IMPORTED_MODULE_1__.connectSignal,
/* harmony export */   "dbToGain": () => /* reexport safe */ _classes__WEBPACK_IMPORTED_MODULE_1__.dbToGain,
/* harmony export */   "debug": () => /* reexport safe */ _classes__WEBPACK_IMPORTED_MODULE_1__.debug,
/* harmony export */   "defaultArg": () => /* reexport safe */ _classes__WEBPACK_IMPORTED_MODULE_1__.defaultArg,
/* harmony export */   "disconnect": () => /* reexport safe */ _classes__WEBPACK_IMPORTED_MODULE_1__.disconnect,
/* harmony export */   "ftom": () => /* reexport safe */ _classes__WEBPACK_IMPORTED_MODULE_1__.ftom,
/* harmony export */   "gainToDb": () => /* reexport safe */ _classes__WEBPACK_IMPORTED_MODULE_1__.gainToDb,
/* harmony export */   "intervalToFrequencyRatio": () => /* reexport safe */ _classes__WEBPACK_IMPORTED_MODULE_1__.intervalToFrequencyRatio,
/* harmony export */   "isArray": () => /* reexport safe */ _classes__WEBPACK_IMPORTED_MODULE_1__.isArray,
/* harmony export */   "isBoolean": () => /* reexport safe */ _classes__WEBPACK_IMPORTED_MODULE_1__.isBoolean,
/* harmony export */   "isDefined": () => /* reexport safe */ _classes__WEBPACK_IMPORTED_MODULE_1__.isDefined,
/* harmony export */   "isFunction": () => /* reexport safe */ _classes__WEBPACK_IMPORTED_MODULE_1__.isFunction,
/* harmony export */   "isNote": () => /* reexport safe */ _classes__WEBPACK_IMPORTED_MODULE_1__.isNote,
/* harmony export */   "isNumber": () => /* reexport safe */ _classes__WEBPACK_IMPORTED_MODULE_1__.isNumber,
/* harmony export */   "isObject": () => /* reexport safe */ _classes__WEBPACK_IMPORTED_MODULE_1__.isObject,
/* harmony export */   "isString": () => /* reexport safe */ _classes__WEBPACK_IMPORTED_MODULE_1__.isString,
/* harmony export */   "isUndef": () => /* reexport safe */ _classes__WEBPACK_IMPORTED_MODULE_1__.isUndef,
/* harmony export */   "mtof": () => /* reexport safe */ _classes__WEBPACK_IMPORTED_MODULE_1__.mtof,
/* harmony export */   "optionsFromArguments": () => /* reexport safe */ _classes__WEBPACK_IMPORTED_MODULE_1__.optionsFromArguments,
/* harmony export */   "version": () => /* reexport safe */ _version__WEBPACK_IMPORTED_MODULE_2__.version,
/* harmony export */   "start": () => /* reexport safe */ _core_Global__WEBPACK_IMPORTED_MODULE_0__.start,
/* harmony export */   "supported": () => /* reexport safe */ _core_context_AudioContext__WEBPACK_IMPORTED_MODULE_4__.supported,
/* harmony export */   "now": () => /* binding */ now,
/* harmony export */   "immediate": () => /* binding */ immediate,
/* harmony export */   "Transport": () => /* binding */ Transport,
/* harmony export */   "getTransport": () => /* binding */ getTransport,
/* harmony export */   "Destination": () => /* binding */ Destination,
/* harmony export */   "Master": () => /* binding */ Master,
/* harmony export */   "getDestination": () => /* binding */ getDestination,
/* harmony export */   "Listener": () => /* binding */ Listener,
/* harmony export */   "getListener": () => /* binding */ getListener,
/* harmony export */   "Draw": () => /* binding */ Draw,
/* harmony export */   "getDraw": () => /* binding */ getDraw,
/* harmony export */   "context": () => /* binding */ context,
/* harmony export */   "loaded": () => /* binding */ loaded,
/* harmony export */   "Buffer": () => /* binding */ Buffer,
/* harmony export */   "Buffers": () => /* binding */ Buffers,
/* harmony export */   "BufferSource": () => /* binding */ BufferSource
/* harmony export */ });
/* harmony import */ var _core_Global__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./core/Global */ "./node_modules/tone/build/esm/core/Global.js");
/* harmony import */ var _classes__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./classes */ "./node_modules/tone/build/esm/classes.js");
/* harmony import */ var _version__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./version */ "./node_modules/tone/build/esm/version.js");
/* harmony import */ var _core_context_ToneAudioBuffer__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./core/context/ToneAudioBuffer */ "./node_modules/tone/build/esm/core/context/ToneAudioBuffer.js");
/* harmony import */ var _core_context_AudioContext__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./core/context/AudioContext */ "./node_modules/tone/build/esm/core/context/AudioContext.js");
/* harmony import */ var _core_context_ToneAudioBuffers__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./core/context/ToneAudioBuffers */ "./node_modules/tone/build/esm/core/context/ToneAudioBuffers.js");
/* harmony import */ var _source_buffer_ToneBufferSource__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./source/buffer/ToneBufferSource */ "./node_modules/tone/build/esm/source/buffer/ToneBufferSource.js");







/**
 * The current audio context time of the global [[Context]].
 * See [[Context.now]]
 * @category Core
 */
function now() {
    return (0,_core_Global__WEBPACK_IMPORTED_MODULE_0__.getContext)().now();
}
/**
 * The current audio context time of the global [[Context]] without the [[Context.lookAhead]]
 * See [[Context.immediate]]
 * @category Core
 */
function immediate() {
    return (0,_core_Global__WEBPACK_IMPORTED_MODULE_0__.getContext)().immediate();
}
/**
 * The Transport object belonging to the global Tone.js Context.
 * See [[Transport]]
 * @category Core
 */
const Transport = (0,_core_Global__WEBPACK_IMPORTED_MODULE_0__.getContext)().transport;
/**
 * The Transport object belonging to the global Tone.js Context.
 * See [[Transport]]
 * @category Core
 */
function getTransport() {
    return (0,_core_Global__WEBPACK_IMPORTED_MODULE_0__.getContext)().transport;
}
/**
 * The Destination (output) belonging to the global Tone.js Context.
 * See [[Destination]]
 * @category Core
 */
const Destination = (0,_core_Global__WEBPACK_IMPORTED_MODULE_0__.getContext)().destination;
/**
 * @deprecated Use [[Destination]]
 */
const Master = (0,_core_Global__WEBPACK_IMPORTED_MODULE_0__.getContext)().destination;
/**
 * The Destination (output) belonging to the global Tone.js Context.
 * See [[Destination]]
 * @category Core
 */
function getDestination() {
    return (0,_core_Global__WEBPACK_IMPORTED_MODULE_0__.getContext)().destination;
}
/**
 * The [[Listener]] belonging to the global Tone.js Context.
 * @category Core
 */
const Listener = (0,_core_Global__WEBPACK_IMPORTED_MODULE_0__.getContext)().listener;
/**
 * The [[Listener]] belonging to the global Tone.js Context.
 * @category Core
 */
function getListener() {
    return (0,_core_Global__WEBPACK_IMPORTED_MODULE_0__.getContext)().listener;
}
/**
 * Draw is used to synchronize the draw frame with the Transport's callbacks.
 * See [[Draw]]
 * @category Core
 */
const Draw = (0,_core_Global__WEBPACK_IMPORTED_MODULE_0__.getContext)().draw;
/**
 * Get the singleton attached to the global context.
 * Draw is used to synchronize the draw frame with the Transport's callbacks.
 * See [[Draw]]
 * @category Core
 */
function getDraw() {
    return (0,_core_Global__WEBPACK_IMPORTED_MODULE_0__.getContext)().draw;
}
/**
 * A reference to the global context
 * See [[Context]]
 */
const context = (0,_core_Global__WEBPACK_IMPORTED_MODULE_0__.getContext)();
/**
 * Promise which resolves when all of the loading promises are resolved.
 * Alias for static [[ToneAudioBuffer.loaded]] method.
 * @category Core
 */
function loaded() {
    return _core_context_ToneAudioBuffer__WEBPACK_IMPORTED_MODULE_3__.ToneAudioBuffer.loaded();
}
// this fills in name changes from 13.x to 14.x


const Buffer = _core_context_ToneAudioBuffer__WEBPACK_IMPORTED_MODULE_3__.ToneAudioBuffer;
const Buffers = _core_context_ToneAudioBuffers__WEBPACK_IMPORTED_MODULE_5__.ToneAudioBuffers;
const BufferSource = _source_buffer_ToneBufferSource__WEBPACK_IMPORTED_MODULE_6__.ToneBufferSource;
//# sourceMappingURL=index.js.map

/***/ }),

/***/ "./node_modules/tone/build/esm/instrument/AMSynth.js":
/*!***********************************************************!*\
  !*** ./node_modules/tone/build/esm/instrument/AMSynth.js ***!
  \***********************************************************/
/*! namespace exports */
/*! export AMSynth [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "AMSynth": () => /* binding */ AMSynth
/* harmony export */ });
/* harmony import */ var _signal_AudioToGain__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../signal/AudioToGain */ "./node_modules/tone/build/esm/signal/AudioToGain.js");
/* harmony import */ var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../core/util/Defaults */ "./node_modules/tone/build/esm/core/util/Defaults.js");
/* harmony import */ var _ModulationSynth__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./ModulationSynth */ "./node_modules/tone/build/esm/instrument/ModulationSynth.js");
;


/**
 * AMSynth uses the output of one Tone.Synth to modulate the
 * amplitude of another Tone.Synth. The harmonicity (the ratio between
 * the two signals) affects the timbre of the output signal greatly.
 * Read more about Amplitude Modulation Synthesis on
 * [SoundOnSound](https://web.archive.org/web/20160404103653/http://www.soundonsound.com:80/sos/mar00/articles/synthsecrets.htm).
 *
 * @example
 * const synth = new Tone.AMSynth().toDestination();
 * synth.triggerAttackRelease("C4", "4n");
 *
 * @category Instrument
 */
class AMSynth extends _ModulationSynth__WEBPACK_IMPORTED_MODULE_2__.ModulationSynth {
    constructor() {
        super((0,_core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__.optionsFromArguments)(AMSynth.getDefaults(), arguments));
        this.name = "AMSynth";
        this._modulationScale = new _signal_AudioToGain__WEBPACK_IMPORTED_MODULE_0__.AudioToGain({
            context: this.context,
        });
        // control the two voices frequency
        this.frequency.connect(this._carrier.frequency);
        this.frequency.chain(this.harmonicity, this._modulator.frequency);
        this.detune.fan(this._carrier.detune, this._modulator.detune);
        this._modulator.chain(this._modulationScale, this._modulationNode.gain);
        this._carrier.chain(this._modulationNode, this.output);
    }
    dispose() {
        super.dispose();
        this._modulationScale.dispose();
        return this;
    }
}
//# sourceMappingURL=AMSynth.js.map

/***/ }),

/***/ "./node_modules/tone/build/esm/instrument/DuoSynth.js":
/*!************************************************************!*\
  !*** ./node_modules/tone/build/esm/instrument/DuoSynth.js ***!
  \************************************************************/
/*! namespace exports */
/*! export DuoSynth [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "DuoSynth": () => /* binding */ DuoSynth
/* harmony export */ });
/* harmony import */ var _Monophonic__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Monophonic */ "./node_modules/tone/build/esm/instrument/Monophonic.js");
/* harmony import */ var _MonoSynth__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./MonoSynth */ "./node_modules/tone/build/esm/instrument/MonoSynth.js");
/* harmony import */ var _signal_Signal__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../signal/Signal */ "./node_modules/tone/build/esm/signal/Signal.js");
/* harmony import */ var _core_util_Interface__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../core/util/Interface */ "./node_modules/tone/build/esm/core/util/Interface.js");
/* harmony import */ var _source_oscillator_LFO__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../source/oscillator/LFO */ "./node_modules/tone/build/esm/source/oscillator/LFO.js");
/* harmony import */ var _core_context_Gain__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../core/context/Gain */ "./node_modules/tone/build/esm/core/context/Gain.js");
/* harmony import */ var _signal_Multiply__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../signal/Multiply */ "./node_modules/tone/build/esm/signal/Multiply.js");
/* harmony import */ var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../core/util/Defaults */ "./node_modules/tone/build/esm/core/util/Defaults.js");
;







/**
 * DuoSynth is a monophonic synth composed of two [[MonoSynths]] run in parallel with control over the
 * frequency ratio between the two voices and vibrato effect.
 * @example
 * const duoSynth = new Tone.DuoSynth().toDestination();
 * duoSynth.triggerAttackRelease("C4", "2n");
 * @category Instrument
 */
class DuoSynth extends _Monophonic__WEBPACK_IMPORTED_MODULE_0__.Monophonic {
    constructor() {
        super((0,_core_util_Defaults__WEBPACK_IMPORTED_MODULE_7__.optionsFromArguments)(DuoSynth.getDefaults(), arguments));
        this.name = "DuoSynth";
        const options = (0,_core_util_Defaults__WEBPACK_IMPORTED_MODULE_7__.optionsFromArguments)(DuoSynth.getDefaults(), arguments);
        this.voice0 = new _MonoSynth__WEBPACK_IMPORTED_MODULE_1__.MonoSynth(Object.assign(options.voice0, {
            context: this.context,
            onsilence: () => this.onsilence(this)
        }));
        this.voice1 = new _MonoSynth__WEBPACK_IMPORTED_MODULE_1__.MonoSynth(Object.assign(options.voice1, {
            context: this.context,
        }));
        this.harmonicity = new _signal_Multiply__WEBPACK_IMPORTED_MODULE_6__.Multiply({
            context: this.context,
            units: "positive",
            value: options.harmonicity,
        });
        this._vibrato = new _source_oscillator_LFO__WEBPACK_IMPORTED_MODULE_4__.LFO({
            frequency: options.vibratoRate,
            context: this.context,
            min: -50,
            max: 50
        });
        // start the vibrato immediately
        this._vibrato.start();
        this.vibratoRate = this._vibrato.frequency;
        this._vibratoGain = new _core_context_Gain__WEBPACK_IMPORTED_MODULE_5__.Gain({
            context: this.context,
            units: "normalRange",
            gain: options.vibratoAmount
        });
        this.vibratoAmount = this._vibratoGain.gain;
        this.frequency = new _signal_Signal__WEBPACK_IMPORTED_MODULE_2__.Signal({
            context: this.context,
            units: "frequency",
            value: 440
        });
        this.detune = new _signal_Signal__WEBPACK_IMPORTED_MODULE_2__.Signal({
            context: this.context,
            units: "cents",
            value: options.detune
        });
        // control the two voices frequency
        this.frequency.connect(this.voice0.frequency);
        this.frequency.chain(this.harmonicity, this.voice1.frequency);
        this._vibrato.connect(this._vibratoGain);
        this._vibratoGain.fan(this.voice0.detune, this.voice1.detune);
        this.detune.fan(this.voice0.detune, this.voice1.detune);
        this.voice0.connect(this.output);
        this.voice1.connect(this.output);
        (0,_core_util_Interface__WEBPACK_IMPORTED_MODULE_3__.readOnly)(this, ["voice0", "voice1", "frequency", "vibratoAmount", "vibratoRate"]);
    }
    getLevelAtTime(time) {
        time = this.toSeconds(time);
        return this.voice0.envelope.getValueAtTime(time) + this.voice1.envelope.getValueAtTime(time);
    }
    static getDefaults() {
        return (0,_core_util_Defaults__WEBPACK_IMPORTED_MODULE_7__.deepMerge)(_Monophonic__WEBPACK_IMPORTED_MODULE_0__.Monophonic.getDefaults(), {
            vibratoAmount: 0.5,
            vibratoRate: 5,
            harmonicity: 1.5,
            voice0: (0,_core_util_Defaults__WEBPACK_IMPORTED_MODULE_7__.deepMerge)((0,_core_util_Defaults__WEBPACK_IMPORTED_MODULE_7__.omitFromObject)(_MonoSynth__WEBPACK_IMPORTED_MODULE_1__.MonoSynth.getDefaults(), Object.keys(_Monophonic__WEBPACK_IMPORTED_MODULE_0__.Monophonic.getDefaults())), {
                filterEnvelope: {
                    attack: 0.01,
                    decay: 0.0,
                    sustain: 1,
                    release: 0.5
                },
                envelope: {
                    attack: 0.01,
                    decay: 0.0,
                    sustain: 1,
                    release: 0.5
                }
            }),
            voice1: (0,_core_util_Defaults__WEBPACK_IMPORTED_MODULE_7__.deepMerge)((0,_core_util_Defaults__WEBPACK_IMPORTED_MODULE_7__.omitFromObject)(_MonoSynth__WEBPACK_IMPORTED_MODULE_1__.MonoSynth.getDefaults(), Object.keys(_Monophonic__WEBPACK_IMPORTED_MODULE_0__.Monophonic.getDefaults())), {
                filterEnvelope: {
                    attack: 0.01,
                    decay: 0.0,
                    sustain: 1,
                    release: 0.5
                },
                envelope: {
                    attack: 0.01,
                    decay: 0.0,
                    sustain: 1,
                    release: 0.5
                }
            }),
        });
    }
    /**
     * Trigger the attack portion of the note
     */
    _triggerEnvelopeAttack(time, velocity) {
        // @ts-ignore
        this.voice0._triggerEnvelopeAttack(time, velocity);
        // @ts-ignore
        this.voice1._triggerEnvelopeAttack(time, velocity);
    }
    /**
     * Trigger the release portion of the note
     */
    _triggerEnvelopeRelease(time) {
        // @ts-ignore
        this.voice0._triggerEnvelopeRelease(time);
        // @ts-ignore
        this.voice1._triggerEnvelopeRelease(time);
        return this;
    }
    dispose() {
        super.dispose();
        this.voice0.dispose();
        this.voice1.dispose();
        this.frequency.dispose();
        this.detune.dispose();
        this._vibrato.dispose();
        this.vibratoRate.dispose();
        this._vibratoGain.dispose();
        this.harmonicity.dispose();
        return this;
    }
}
//# sourceMappingURL=DuoSynth.js.map

/***/ }),

/***/ "./node_modules/tone/build/esm/instrument/FMSynth.js":
/*!***********************************************************!*\
  !*** ./node_modules/tone/build/esm/instrument/FMSynth.js ***!
  \***********************************************************/
/*! namespace exports */
/*! export FMSynth [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "FMSynth": () => /* binding */ FMSynth
/* harmony export */ });
/* harmony import */ var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../core/util/Defaults */ "./node_modules/tone/build/esm/core/util/Defaults.js");
/* harmony import */ var _signal_Multiply__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../signal/Multiply */ "./node_modules/tone/build/esm/signal/Multiply.js");
/* harmony import */ var _ModulationSynth__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./ModulationSynth */ "./node_modules/tone/build/esm/instrument/ModulationSynth.js");
;


/**
 * FMSynth is composed of two Tone.Synths where one Tone.Synth modulates
 * the frequency of a second Tone.Synth. A lot of spectral content
 * can be explored using the modulationIndex parameter. Read more about
 * frequency modulation synthesis on Sound On Sound: [Part 1](https://web.archive.org/web/20160403123704/http://www.soundonsound.com/sos/apr00/articles/synthsecrets.htm), [Part 2](https://web.archive.org/web/20160403115835/http://www.soundonsound.com/sos/may00/articles/synth.htm).
 *
 * @example
 * const fmSynth = new Tone.FMSynth().toDestination();
 * fmSynth.triggerAttackRelease("C5", "4n");
 *
 * @category Instrument
 */
class FMSynth extends _ModulationSynth__WEBPACK_IMPORTED_MODULE_2__.ModulationSynth {
    constructor() {
        super((0,_core_util_Defaults__WEBPACK_IMPORTED_MODULE_0__.optionsFromArguments)(FMSynth.getDefaults(), arguments));
        this.name = "FMSynth";
        const options = (0,_core_util_Defaults__WEBPACK_IMPORTED_MODULE_0__.optionsFromArguments)(FMSynth.getDefaults(), arguments);
        this.modulationIndex = new _signal_Multiply__WEBPACK_IMPORTED_MODULE_1__.Multiply({
            context: this.context,
            value: options.modulationIndex,
        });
        // control the two voices frequency
        this.frequency.connect(this._carrier.frequency);
        this.frequency.chain(this.harmonicity, this._modulator.frequency);
        this.frequency.chain(this.modulationIndex, this._modulationNode);
        this.detune.fan(this._carrier.detune, this._modulator.detune);
        this._modulator.connect(this._modulationNode.gain);
        this._modulationNode.connect(this._carrier.frequency);
        this._carrier.connect(this.output);
    }
    static getDefaults() {
        return Object.assign(_ModulationSynth__WEBPACK_IMPORTED_MODULE_2__.ModulationSynth.getDefaults(), {
            modulationIndex: 10,
        });
    }
    dispose() {
        super.dispose();
        this.modulationIndex.dispose();
        return this;
    }
}
//# sourceMappingURL=FMSynth.js.map

/***/ }),

/***/ "./node_modules/tone/build/esm/instrument/Instrument.js":
/*!**************************************************************!*\
  !*** ./node_modules/tone/build/esm/instrument/Instrument.js ***!
  \**************************************************************/
/*! namespace exports */
/*! export Instrument [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Instrument": () => /* binding */ Instrument
/* harmony export */ });
/* harmony import */ var _component_channel_Volume__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../component/channel/Volume */ "./node_modules/tone/build/esm/component/channel/Volume.js");
/* harmony import */ var _core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../core/context/ToneAudioNode */ "./node_modules/tone/build/esm/core/context/ToneAudioNode.js");
/* harmony import */ var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../core/util/Defaults */ "./node_modules/tone/build/esm/core/util/Defaults.js");
/* harmony import */ var _core_util_Interface__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../core/util/Interface */ "./node_modules/tone/build/esm/core/util/Interface.js");
;



/**
 * Base-class for all instruments
 */
class Instrument extends _core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_1__.ToneAudioNode {
    constructor() {
        super((0,_core_util_Defaults__WEBPACK_IMPORTED_MODULE_2__.optionsFromArguments)(Instrument.getDefaults(), arguments));
        /**
         * Keep track of all events scheduled to the transport
         * when the instrument is 'synced'
         */
        this._scheduledEvents = [];
        /**
         * If the instrument is currently synced
         */
        this._synced = false;
        this._original_triggerAttack = this.triggerAttack;
        this._original_triggerRelease = this.triggerRelease;
        const options = (0,_core_util_Defaults__WEBPACK_IMPORTED_MODULE_2__.optionsFromArguments)(Instrument.getDefaults(), arguments);
        this._volume = this.output = new _component_channel_Volume__WEBPACK_IMPORTED_MODULE_0__.Volume({
            context: this.context,
            volume: options.volume,
        });
        this.volume = this._volume.volume;
        (0,_core_util_Interface__WEBPACK_IMPORTED_MODULE_3__.readOnly)(this, "volume");
    }
    static getDefaults() {
        return Object.assign(_core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_1__.ToneAudioNode.getDefaults(), {
            volume: 0,
        });
    }
    /**
     * Sync the instrument to the Transport. All subsequent calls of
     * [[triggerAttack]] and [[triggerRelease]] will be scheduled along the transport.
     * @example
     * const fmSynth = new Tone.FMSynth().toDestination();
     * fmSynth.volume.value = -6;
     * fmSynth.sync();
     * // schedule 3 notes when the transport first starts
     * fmSynth.triggerAttackRelease("C4", "8n", 0);
     * fmSynth.triggerAttackRelease("E4", "8n", "8n");
     * fmSynth.triggerAttackRelease("G4", "8n", "4n");
     * // start the transport to hear the notes
     * Tone.Transport.start();
     */
    sync() {
        if (this._syncState()) {
            this._syncMethod("triggerAttack", 1);
            this._syncMethod("triggerRelease", 0);
        }
        return this;
    }
    /**
     * set _sync
     */
    _syncState() {
        let changed = false;
        if (!this._synced) {
            this._synced = true;
            changed = true;
        }
        return changed;
    }
    /**
     * Wrap the given method so that it can be synchronized
     * @param method Which method to wrap and sync
     * @param  timePosition What position the time argument appears in
     */
    _syncMethod(method, timePosition) {
        const originalMethod = this["_original_" + method] = this[method];
        this[method] = (...args) => {
            const time = args[timePosition];
            const id = this.context.transport.schedule((t) => {
                args[timePosition] = t;
                originalMethod.apply(this, args);
            }, time);
            this._scheduledEvents.push(id);
        };
    }
    /**
     * Unsync the instrument from the Transport
     */
    unsync() {
        this._scheduledEvents.forEach(id => this.context.transport.clear(id));
        this._scheduledEvents = [];
        if (this._synced) {
            this._synced = false;
            this.triggerAttack = this._original_triggerAttack;
            this.triggerRelease = this._original_triggerRelease;
        }
        return this;
    }
    /**
     * Trigger the attack and then the release after the duration.
     * @param  note     The note to trigger.
     * @param  duration How long the note should be held for before
     *                         triggering the release. This value must be greater than 0.
     * @param time  When the note should be triggered.
     * @param  velocity The velocity the note should be triggered at.
     * @example
     * const synth = new Tone.Synth().toDestination();
     * // trigger "C4" for the duration of an 8th note
     * synth.triggerAttackRelease("C4", "8n");
     */
    triggerAttackRelease(note, duration, time, velocity) {
        const computedTime = this.toSeconds(time);
        const computedDuration = this.toSeconds(duration);
        this.triggerAttack(note, computedTime, velocity);
        this.triggerRelease(computedTime + computedDuration);
        return this;
    }
    /**
     * clean up
     * @returns {Instrument} this
     */
    dispose() {
        super.dispose();
        this._volume.dispose();
        this.unsync();
        this._scheduledEvents = [];
        return this;
    }
}
//# sourceMappingURL=Instrument.js.map

/***/ }),

/***/ "./node_modules/tone/build/esm/instrument/MembraneSynth.js":
/*!*****************************************************************!*\
  !*** ./node_modules/tone/build/esm/instrument/MembraneSynth.js ***!
  \*****************************************************************/
/*! namespace exports */
/*! export MembraneSynth [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "MembraneSynth": () => /* binding */ MembraneSynth
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! tslib */ "./node_modules/tone/node_modules/tslib/tslib.es6.js");
/* harmony import */ var _core_type_Frequency__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../core/type/Frequency */ "./node_modules/tone/build/esm/core/type/Frequency.js");
/* harmony import */ var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../core/util/Defaults */ "./node_modules/tone/build/esm/core/util/Defaults.js");
/* harmony import */ var _core_util_Interface__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../core/util/Interface */ "./node_modules/tone/build/esm/core/util/Interface.js");
/* harmony import */ var _Monophonic__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Monophonic */ "./node_modules/tone/build/esm/instrument/Monophonic.js");
/* harmony import */ var _Synth__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./Synth */ "./node_modules/tone/build/esm/instrument/Synth.js");
/* harmony import */ var _core_util_Decorator__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../core/util/Decorator */ "./node_modules/tone/build/esm/core/util/Decorator.js");
;






/**
 * MembraneSynth makes kick and tom sounds using a single oscillator
 * with an amplitude envelope and frequency ramp. A Tone.OmniOscillator
 * is routed through a Tone.AmplitudeEnvelope to the output. The drum
 * quality of the sound comes from the frequency envelope applied
 * during MembraneSynth.triggerAttack(note). The frequency envelope
 * starts at <code>note * .octaves</code> and ramps to <code>note</code>
 * over the duration of <code>.pitchDecay</code>.
 * @example
 * const synth = new Tone.MembraneSynth().toDestination();
 * synth.triggerAttackRelease("C2", "8n");
 * @category Instrument
 */
class MembraneSynth extends _Synth__WEBPACK_IMPORTED_MODULE_4__.Synth {
    constructor() {
        super((0,_core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__.optionsFromArguments)(MembraneSynth.getDefaults(), arguments));
        this.name = "MembraneSynth";
        /**
         * Portamento is ignored in this synth. use pitch decay instead.
         */
        this.portamento = 0;
        const options = (0,_core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__.optionsFromArguments)(MembraneSynth.getDefaults(), arguments);
        this.pitchDecay = options.pitchDecay;
        this.octaves = options.octaves;
        (0,_core_util_Interface__WEBPACK_IMPORTED_MODULE_2__.readOnly)(this, ["oscillator", "envelope"]);
    }
    static getDefaults() {
        return (0,_core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__.deepMerge)(_Monophonic__WEBPACK_IMPORTED_MODULE_3__.Monophonic.getDefaults(), _Synth__WEBPACK_IMPORTED_MODULE_4__.Synth.getDefaults(), {
            envelope: {
                attack: 0.001,
                attackCurve: "exponential",
                decay: 0.4,
                release: 1.4,
                sustain: 0.01,
            },
            octaves: 10,
            oscillator: {
                type: "sine",
            },
            pitchDecay: 0.05,
        });
    }
    setNote(note, time) {
        const seconds = this.toSeconds(time);
        const hertz = this.toFrequency(note instanceof _core_type_Frequency__WEBPACK_IMPORTED_MODULE_0__.FrequencyClass ? note.toFrequency() : note);
        const maxNote = hertz * this.octaves;
        this.oscillator.frequency.setValueAtTime(maxNote, seconds);
        this.oscillator.frequency.exponentialRampToValueAtTime(hertz, seconds + this.toSeconds(this.pitchDecay));
        return this;
    }
    dispose() {
        super.dispose();
        return this;
    }
}
(0,tslib__WEBPACK_IMPORTED_MODULE_6__.__decorate)([
    (0,_core_util_Decorator__WEBPACK_IMPORTED_MODULE_5__.range)(0)
], MembraneSynth.prototype, "octaves", void 0);
(0,tslib__WEBPACK_IMPORTED_MODULE_6__.__decorate)([
    (0,_core_util_Decorator__WEBPACK_IMPORTED_MODULE_5__.timeRange)(0)
], MembraneSynth.prototype, "pitchDecay", void 0);
//# sourceMappingURL=MembraneSynth.js.map

/***/ }),

/***/ "./node_modules/tone/build/esm/instrument/MetalSynth.js":
/*!**************************************************************!*\
  !*** ./node_modules/tone/build/esm/instrument/MetalSynth.js ***!
  \**************************************************************/
/*! namespace exports */
/*! export MetalSynth [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "MetalSynth": () => /* binding */ MetalSynth
/* harmony export */ });
/* harmony import */ var _component_envelope_Envelope__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../component/envelope/Envelope */ "./node_modules/tone/build/esm/component/envelope/Envelope.js");
/* harmony import */ var _component_filter_Filter__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../component/filter/Filter */ "./node_modules/tone/build/esm/component/filter/Filter.js");
/* harmony import */ var _core_context_Gain__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../core/context/Gain */ "./node_modules/tone/build/esm/core/context/Gain.js");
/* harmony import */ var _core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../core/context/ToneAudioNode */ "./node_modules/tone/build/esm/core/context/ToneAudioNode.js");
/* harmony import */ var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../core/util/Defaults */ "./node_modules/tone/build/esm/core/util/Defaults.js");
/* harmony import */ var _core_util_Interface__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../core/util/Interface */ "./node_modules/tone/build/esm/core/util/Interface.js");
/* harmony import */ var _signal_Multiply__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../signal/Multiply */ "./node_modules/tone/build/esm/signal/Multiply.js");
/* harmony import */ var _signal_Scale__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../signal/Scale */ "./node_modules/tone/build/esm/signal/Scale.js");
/* harmony import */ var _signal_Signal__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../signal/Signal */ "./node_modules/tone/build/esm/signal/Signal.js");
/* harmony import */ var _source_oscillator_FMOscillator__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../source/oscillator/FMOscillator */ "./node_modules/tone/build/esm/source/oscillator/FMOscillator.js");
/* harmony import */ var _Monophonic__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./Monophonic */ "./node_modules/tone/build/esm/instrument/Monophonic.js");
;










/**
 * Inharmonic ratio of frequencies based on the Roland TR-808
 * Taken from https://ccrma.stanford.edu/papers/tr-808-cymbal-physically-informed-circuit-bendable-digital-model
 */
const inharmRatios = [1.0, 1.483, 1.932, 2.546, 2.630, 3.897];
/**
 * A highly inharmonic and spectrally complex source with a highpass filter
 * and amplitude envelope which is good for making metallophone sounds.
 * Based on CymbalSynth by [@polyrhythmatic](https://github.com/polyrhythmatic).
 * Inspiration from [Sound on Sound](https://shorturl.at/rSZ12).
 * @category Instrument
 */
class MetalSynth extends _Monophonic__WEBPACK_IMPORTED_MODULE_10__.Monophonic {
    constructor() {
        super((0,_core_util_Defaults__WEBPACK_IMPORTED_MODULE_4__.optionsFromArguments)(MetalSynth.getDefaults(), arguments));
        this.name = "MetalSynth";
        /**
         * The array of FMOscillators
         */
        this._oscillators = [];
        /**
         * The frequency multipliers
         */
        this._freqMultipliers = [];
        const options = (0,_core_util_Defaults__WEBPACK_IMPORTED_MODULE_4__.optionsFromArguments)(MetalSynth.getDefaults(), arguments);
        this.detune = new _signal_Signal__WEBPACK_IMPORTED_MODULE_8__.Signal({
            context: this.context,
            units: "cents",
            value: options.detune,
        });
        this.frequency = new _signal_Signal__WEBPACK_IMPORTED_MODULE_8__.Signal({
            context: this.context,
            units: "frequency",
        });
        this._amplitude = new _core_context_Gain__WEBPACK_IMPORTED_MODULE_2__.Gain({
            context: this.context,
            gain: 0,
        }).connect(this.output);
        this._highpass = new _component_filter_Filter__WEBPACK_IMPORTED_MODULE_1__.Filter({
            // Q: -3.0102999566398125,
            Q: 0,
            context: this.context,
            type: "highpass",
        }).connect(this._amplitude);
        for (let i = 0; i < inharmRatios.length; i++) {
            const osc = new _source_oscillator_FMOscillator__WEBPACK_IMPORTED_MODULE_9__.FMOscillator({
                context: this.context,
                harmonicity: options.harmonicity,
                modulationIndex: options.modulationIndex,
                modulationType: "square",
                onstop: i === 0 ? () => this.onsilence(this) : _core_util_Interface__WEBPACK_IMPORTED_MODULE_5__.noOp,
                type: "square",
            });
            osc.connect(this._highpass);
            this._oscillators[i] = osc;
            const mult = new _signal_Multiply__WEBPACK_IMPORTED_MODULE_6__.Multiply({
                context: this.context,
                value: inharmRatios[i],
            });
            this._freqMultipliers[i] = mult;
            this.frequency.chain(mult, osc.frequency);
            this.detune.connect(osc.detune);
        }
        this._filterFreqScaler = new _signal_Scale__WEBPACK_IMPORTED_MODULE_7__.Scale({
            context: this.context,
            max: 7000,
            min: this.toFrequency(options.resonance),
        });
        this.envelope = new _component_envelope_Envelope__WEBPACK_IMPORTED_MODULE_0__.Envelope({
            attack: options.envelope.attack,
            attackCurve: "linear",
            context: this.context,
            decay: options.envelope.decay,
            release: options.envelope.release,
            sustain: 0,
        });
        this.envelope.chain(this._filterFreqScaler, this._highpass.frequency);
        this.envelope.connect(this._amplitude.gain);
        // set the octaves
        this._octaves = options.octaves;
        this.octaves = options.octaves;
    }
    static getDefaults() {
        return (0,_core_util_Defaults__WEBPACK_IMPORTED_MODULE_4__.deepMerge)(_Monophonic__WEBPACK_IMPORTED_MODULE_10__.Monophonic.getDefaults(), {
            envelope: Object.assign((0,_core_util_Defaults__WEBPACK_IMPORTED_MODULE_4__.omitFromObject)(_component_envelope_Envelope__WEBPACK_IMPORTED_MODULE_0__.Envelope.getDefaults(), Object.keys(_core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_3__.ToneAudioNode.getDefaults())), {
                attack: 0.001,
                decay: 1.4,
                release: 0.2,
            }),
            harmonicity: 5.1,
            modulationIndex: 32,
            octaves: 1.5,
            resonance: 4000,
        });
    }
    /**
     * Trigger the attack.
     * @param time When the attack should be triggered.
     * @param velocity The velocity that the envelope should be triggered at.
     */
    _triggerEnvelopeAttack(time, velocity = 1) {
        this.envelope.triggerAttack(time, velocity);
        this._oscillators.forEach(osc => osc.start(time));
        if (this.envelope.sustain === 0) {
            this._oscillators.forEach(osc => {
                osc.stop(time + this.toSeconds(this.envelope.attack) + this.toSeconds(this.envelope.decay));
            });
        }
        return this;
    }
    /**
     * Trigger the release of the envelope.
     * @param time When the release should be triggered.
     */
    _triggerEnvelopeRelease(time) {
        this.envelope.triggerRelease(time);
        this._oscillators.forEach(osc => osc.stop(time + this.toSeconds(this.envelope.release)));
        return this;
    }
    getLevelAtTime(time) {
        time = this.toSeconds(time);
        return this.envelope.getValueAtTime(time);
    }
    /**
     * The modulationIndex of the oscillators which make up the source.
     * see [[FMOscillator.modulationIndex]]
     * @min 1
     * @max 100
     */
    get modulationIndex() {
        return this._oscillators[0].modulationIndex.value;
    }
    set modulationIndex(val) {
        this._oscillators.forEach(osc => (osc.modulationIndex.value = val));
    }
    /**
     * The harmonicity of the oscillators which make up the source.
     * see Tone.FMOscillator.harmonicity
     * @min 0.1
     * @max 10
     */
    get harmonicity() {
        return this._oscillators[0].harmonicity.value;
    }
    set harmonicity(val) {
        this._oscillators.forEach(osc => (osc.harmonicity.value = val));
    }
    /**
     * The lower level of the highpass filter which is attached to the envelope.
     * This value should be between [0, 7000]
     * @min 0
     * @max 7000
     */
    get resonance() {
        return this._filterFreqScaler.min;
    }
    set resonance(val) {
        this._filterFreqScaler.min = this.toFrequency(val);
        this.octaves = this._octaves;
    }
    /**
     * The number of octaves above the "resonance" frequency
     * that the filter ramps during the attack/decay envelope
     * @min 0
     * @max 8
     */
    get octaves() {
        return this._octaves;
    }
    set octaves(val) {
        this._octaves = val;
        this._filterFreqScaler.max = this._filterFreqScaler.min * Math.pow(2, val);
    }
    dispose() {
        super.dispose();
        this._oscillators.forEach(osc => osc.dispose());
        this._freqMultipliers.forEach(freqMult => freqMult.dispose());
        this.frequency.dispose();
        this.detune.dispose();
        this._filterFreqScaler.dispose();
        this._amplitude.dispose();
        this.envelope.dispose();
        this._highpass.dispose();
        return this;
    }
}
//# sourceMappingURL=MetalSynth.js.map

/***/ }),

/***/ "./node_modules/tone/build/esm/instrument/ModulationSynth.js":
/*!*******************************************************************!*\
  !*** ./node_modules/tone/build/esm/instrument/ModulationSynth.js ***!
  \*******************************************************************/
/*! namespace exports */
/*! export ModulationSynth [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ModulationSynth": () => /* binding */ ModulationSynth
/* harmony export */ });
/* harmony import */ var _signal_Signal__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../signal/Signal */ "./node_modules/tone/build/esm/signal/Signal.js");
/* harmony import */ var _signal_Multiply__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../signal/Multiply */ "./node_modules/tone/build/esm/signal/Multiply.js");
/* harmony import */ var _core_context_Gain__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../core/context/Gain */ "./node_modules/tone/build/esm/core/context/Gain.js");
/* harmony import */ var _component_envelope_Envelope__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../component/envelope/Envelope */ "./node_modules/tone/build/esm/component/envelope/Envelope.js");
/* harmony import */ var _core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../core/context/ToneAudioNode */ "./node_modules/tone/build/esm/core/context/ToneAudioNode.js");
/* harmony import */ var _Monophonic__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./Monophonic */ "./node_modules/tone/build/esm/instrument/Monophonic.js");
/* harmony import */ var _source_oscillator_OmniOscillator__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../source/oscillator/OmniOscillator */ "./node_modules/tone/build/esm/source/oscillator/OmniOscillator.js");
/* harmony import */ var _source_Source__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../source/Source */ "./node_modules/tone/build/esm/source/Source.js");
/* harmony import */ var _Synth__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./Synth */ "./node_modules/tone/build/esm/instrument/Synth.js");
/* harmony import */ var _core_util_Interface__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../core/util/Interface */ "./node_modules/tone/build/esm/core/util/Interface.js");
/* harmony import */ var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../core/util/Defaults */ "./node_modules/tone/build/esm/core/util/Defaults.js");
;










/**
 * Base class for both AM and FM synths
 */
class ModulationSynth extends _Monophonic__WEBPACK_IMPORTED_MODULE_5__.Monophonic {
    constructor() {
        super((0,_core_util_Defaults__WEBPACK_IMPORTED_MODULE_10__.optionsFromArguments)(ModulationSynth.getDefaults(), arguments));
        this.name = "ModulationSynth";
        const options = (0,_core_util_Defaults__WEBPACK_IMPORTED_MODULE_10__.optionsFromArguments)(ModulationSynth.getDefaults(), arguments);
        this._carrier = new _Synth__WEBPACK_IMPORTED_MODULE_8__.Synth({
            context: this.context,
            oscillator: options.oscillator,
            envelope: options.envelope,
            onsilence: () => this.onsilence(this),
            volume: -10,
        });
        this._modulator = new _Synth__WEBPACK_IMPORTED_MODULE_8__.Synth({
            context: this.context,
            oscillator: options.modulation,
            envelope: options.modulationEnvelope,
            volume: -10,
        });
        this.oscillator = this._carrier.oscillator;
        this.envelope = this._carrier.envelope;
        this.modulation = this._modulator.oscillator;
        this.modulationEnvelope = this._modulator.envelope;
        this.frequency = new _signal_Signal__WEBPACK_IMPORTED_MODULE_0__.Signal({
            context: this.context,
            units: "frequency",
        });
        this.detune = new _signal_Signal__WEBPACK_IMPORTED_MODULE_0__.Signal({
            context: this.context,
            value: options.detune,
            units: "cents"
        });
        this.harmonicity = new _signal_Multiply__WEBPACK_IMPORTED_MODULE_1__.Multiply({
            context: this.context,
            value: options.harmonicity,
            minValue: 0,
        });
        this._modulationNode = new _core_context_Gain__WEBPACK_IMPORTED_MODULE_2__.Gain({
            context: this.context,
            gain: 0,
        });
        (0,_core_util_Interface__WEBPACK_IMPORTED_MODULE_9__.readOnly)(this, ["frequency", "harmonicity", "oscillator", "envelope", "modulation", "modulationEnvelope", "detune"]);
    }
    static getDefaults() {
        return Object.assign(_Monophonic__WEBPACK_IMPORTED_MODULE_5__.Monophonic.getDefaults(), {
            harmonicity: 3,
            oscillator: Object.assign((0,_core_util_Defaults__WEBPACK_IMPORTED_MODULE_10__.omitFromObject)(_source_oscillator_OmniOscillator__WEBPACK_IMPORTED_MODULE_6__.OmniOscillator.getDefaults(), [
                ...Object.keys(_source_Source__WEBPACK_IMPORTED_MODULE_7__.Source.getDefaults()),
                "frequency",
                "detune"
            ]), {
                type: "sine"
            }),
            envelope: Object.assign((0,_core_util_Defaults__WEBPACK_IMPORTED_MODULE_10__.omitFromObject)(_component_envelope_Envelope__WEBPACK_IMPORTED_MODULE_3__.Envelope.getDefaults(), Object.keys(_core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_4__.ToneAudioNode.getDefaults())), {
                attack: 0.01,
                decay: 0.01,
                sustain: 1,
                release: 0.5
            }),
            modulation: Object.assign((0,_core_util_Defaults__WEBPACK_IMPORTED_MODULE_10__.omitFromObject)(_source_oscillator_OmniOscillator__WEBPACK_IMPORTED_MODULE_6__.OmniOscillator.getDefaults(), [
                ...Object.keys(_source_Source__WEBPACK_IMPORTED_MODULE_7__.Source.getDefaults()),
                "frequency",
                "detune"
            ]), {
                type: "square"
            }),
            modulationEnvelope: Object.assign((0,_core_util_Defaults__WEBPACK_IMPORTED_MODULE_10__.omitFromObject)(_component_envelope_Envelope__WEBPACK_IMPORTED_MODULE_3__.Envelope.getDefaults(), Object.keys(_core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_4__.ToneAudioNode.getDefaults())), {
                attack: 0.5,
                decay: 0.0,
                sustain: 1,
                release: 0.5
            })
        });
    }
    /**
     * Trigger the attack portion of the note
     */
    _triggerEnvelopeAttack(time, velocity) {
        // @ts-ignore
        this._carrier._triggerEnvelopeAttack(time, velocity);
        // @ts-ignore
        this._modulator._triggerEnvelopeAttack(time, velocity);
    }
    /**
     * Trigger the release portion of the note
     */
    _triggerEnvelopeRelease(time) {
        // @ts-ignore
        this._carrier._triggerEnvelopeRelease(time);
        // @ts-ignore
        this._modulator._triggerEnvelopeRelease(time);
        return this;
    }
    getLevelAtTime(time) {
        time = this.toSeconds(time);
        return this.envelope.getValueAtTime(time);
    }
    dispose() {
        super.dispose();
        this._carrier.dispose();
        this._modulator.dispose();
        this.frequency.dispose();
        this.detune.dispose();
        this.harmonicity.dispose();
        this._modulationNode.dispose();
        return this;
    }
}
//# sourceMappingURL=ModulationSynth.js.map

/***/ }),

/***/ "./node_modules/tone/build/esm/instrument/MonoSynth.js":
/*!*************************************************************!*\
  !*** ./node_modules/tone/build/esm/instrument/MonoSynth.js ***!
  \*************************************************************/
/*! namespace exports */
/*! export MonoSynth [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "MonoSynth": () => /* binding */ MonoSynth
/* harmony export */ });
/* harmony import */ var _component_envelope_AmplitudeEnvelope__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../component/envelope/AmplitudeEnvelope */ "./node_modules/tone/build/esm/component/envelope/AmplitudeEnvelope.js");
/* harmony import */ var _component_envelope_Envelope__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../component/envelope/Envelope */ "./node_modules/tone/build/esm/component/envelope/Envelope.js");
/* harmony import */ var _component_filter_Filter__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../component/filter/Filter */ "./node_modules/tone/build/esm/component/filter/Filter.js");
/* harmony import */ var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../core/util/Defaults */ "./node_modules/tone/build/esm/core/util/Defaults.js");
/* harmony import */ var _core_util_Interface__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../core/util/Interface */ "./node_modules/tone/build/esm/core/util/Interface.js");
/* harmony import */ var _instrument_Monophonic__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../instrument/Monophonic */ "./node_modules/tone/build/esm/instrument/Monophonic.js");
/* harmony import */ var _source_oscillator_OmniOscillator__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../source/oscillator/OmniOscillator */ "./node_modules/tone/build/esm/source/oscillator/OmniOscillator.js");
/* harmony import */ var _source_Source__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../source/Source */ "./node_modules/tone/build/esm/source/Source.js");
/* harmony import */ var _component_envelope_FrequencyEnvelope__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../component/envelope/FrequencyEnvelope */ "./node_modules/tone/build/esm/component/envelope/FrequencyEnvelope.js");
/* harmony import */ var _core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../core/context/ToneAudioNode */ "./node_modules/tone/build/esm/core/context/ToneAudioNode.js");
;









/**
 * MonoSynth is composed of one `oscillator`, one `filter`, and two `envelopes`.
 * The amplitude of the Oscillator and the cutoff frequency of the
 * Filter are controlled by Envelopes.
 * <img src="https://docs.google.com/drawings/d/1gaY1DF9_Hzkodqf8JI1Cg2VZfwSElpFQfI94IQwad38/pub?w=924&h=240">
 * @example
 * const synth = new Tone.MonoSynth({
 * 	oscillator: {
 * 		type: "square"
 * 	},
 * 	envelope: {
 * 		attack: 0.1
 * 	}
 * }).toDestination();
 * synth.triggerAttackRelease("C4", "8n");
 * @category Instrument
 */
class MonoSynth extends _instrument_Monophonic__WEBPACK_IMPORTED_MODULE_5__.Monophonic {
    constructor() {
        super((0,_core_util_Defaults__WEBPACK_IMPORTED_MODULE_3__.optionsFromArguments)(MonoSynth.getDefaults(), arguments));
        this.name = "MonoSynth";
        const options = (0,_core_util_Defaults__WEBPACK_IMPORTED_MODULE_3__.optionsFromArguments)(MonoSynth.getDefaults(), arguments);
        this.oscillator = new _source_oscillator_OmniOscillator__WEBPACK_IMPORTED_MODULE_6__.OmniOscillator(Object.assign(options.oscillator, {
            context: this.context,
            detune: options.detune,
            onstop: () => this.onsilence(this),
        }));
        this.frequency = this.oscillator.frequency;
        this.detune = this.oscillator.detune;
        this.filter = new _component_filter_Filter__WEBPACK_IMPORTED_MODULE_2__.Filter(Object.assign(options.filter, { context: this.context }));
        this.filterEnvelope = new _component_envelope_FrequencyEnvelope__WEBPACK_IMPORTED_MODULE_8__.FrequencyEnvelope(Object.assign(options.filterEnvelope, { context: this.context }));
        this.envelope = new _component_envelope_AmplitudeEnvelope__WEBPACK_IMPORTED_MODULE_0__.AmplitudeEnvelope(Object.assign(options.envelope, { context: this.context }));
        // connect the oscillators to the output
        this.oscillator.chain(this.filter, this.envelope, this.output);
        // connect the filter envelope
        this.filterEnvelope.connect(this.filter.frequency);
        (0,_core_util_Interface__WEBPACK_IMPORTED_MODULE_4__.readOnly)(this, ["oscillator", "frequency", "detune", "filter", "filterEnvelope", "envelope"]);
    }
    static getDefaults() {
        return Object.assign(_instrument_Monophonic__WEBPACK_IMPORTED_MODULE_5__.Monophonic.getDefaults(), {
            envelope: Object.assign((0,_core_util_Defaults__WEBPACK_IMPORTED_MODULE_3__.omitFromObject)(_component_envelope_Envelope__WEBPACK_IMPORTED_MODULE_1__.Envelope.getDefaults(), Object.keys(_core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_9__.ToneAudioNode.getDefaults())), {
                attack: 0.005,
                decay: 0.1,
                release: 1,
                sustain: 0.9,
            }),
            filter: Object.assign((0,_core_util_Defaults__WEBPACK_IMPORTED_MODULE_3__.omitFromObject)(_component_filter_Filter__WEBPACK_IMPORTED_MODULE_2__.Filter.getDefaults(), Object.keys(_core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_9__.ToneAudioNode.getDefaults())), {
                Q: 1,
                rolloff: -12,
                type: "lowpass",
            }),
            filterEnvelope: Object.assign((0,_core_util_Defaults__WEBPACK_IMPORTED_MODULE_3__.omitFromObject)(_component_envelope_FrequencyEnvelope__WEBPACK_IMPORTED_MODULE_8__.FrequencyEnvelope.getDefaults(), Object.keys(_core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_9__.ToneAudioNode.getDefaults())), {
                attack: 0.6,
                baseFrequency: 200,
                decay: 0.2,
                exponent: 2,
                octaves: 3,
                release: 2,
                sustain: 0.5,
            }),
            oscillator: Object.assign((0,_core_util_Defaults__WEBPACK_IMPORTED_MODULE_3__.omitFromObject)(_source_oscillator_OmniOscillator__WEBPACK_IMPORTED_MODULE_6__.OmniOscillator.getDefaults(), Object.keys(_source_Source__WEBPACK_IMPORTED_MODULE_7__.Source.getDefaults())), {
                type: "sawtooth",
            }),
        });
    }
    /**
     * start the attack portion of the envelope
     * @param time the time the attack should start
     * @param velocity the velocity of the note (0-1)
     */
    _triggerEnvelopeAttack(time, velocity = 1) {
        this.envelope.triggerAttack(time, velocity);
        this.filterEnvelope.triggerAttack(time);
        this.oscillator.start(time);
        if (this.envelope.sustain === 0) {
            const computedAttack = this.toSeconds(this.envelope.attack);
            const computedDecay = this.toSeconds(this.envelope.decay);
            this.oscillator.stop(time + computedAttack + computedDecay);
        }
    }
    /**
     * start the release portion of the envelope
     * @param time the time the release should start
     */
    _triggerEnvelopeRelease(time) {
        this.envelope.triggerRelease(time);
        this.filterEnvelope.triggerRelease(time);
        this.oscillator.stop(time + this.toSeconds(this.envelope.release));
    }
    getLevelAtTime(time) {
        time = this.toSeconds(time);
        return this.envelope.getValueAtTime(time);
    }
    dispose() {
        super.dispose();
        this.oscillator.dispose();
        this.envelope.dispose();
        this.filterEnvelope.dispose();
        this.filter.dispose();
        return this;
    }
}
//# sourceMappingURL=MonoSynth.js.map

/***/ }),

/***/ "./node_modules/tone/build/esm/instrument/Monophonic.js":
/*!**************************************************************!*\
  !*** ./node_modules/tone/build/esm/instrument/Monophonic.js ***!
  \**************************************************************/
/*! namespace exports */
/*! export Monophonic [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Monophonic": () => /* binding */ Monophonic
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! tslib */ "./node_modules/tone/node_modules/tslib/tslib.es6.js");
/* harmony import */ var _core_type_Frequency__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../core/type/Frequency */ "./node_modules/tone/build/esm/core/type/Frequency.js");
/* harmony import */ var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../core/util/Defaults */ "./node_modules/tone/build/esm/core/util/Defaults.js");
/* harmony import */ var _core_util_Interface__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../core/util/Interface */ "./node_modules/tone/build/esm/core/util/Interface.js");
/* harmony import */ var _instrument_Instrument__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../instrument/Instrument */ "./node_modules/tone/build/esm/instrument/Instrument.js");
/* harmony import */ var _core_util_Decorator__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../core/util/Decorator */ "./node_modules/tone/build/esm/core/util/Decorator.js");
;





/**
 * Abstract base class for other monophonic instruments to extend.
 */
class Monophonic extends _instrument_Instrument__WEBPACK_IMPORTED_MODULE_3__.Instrument {
    constructor() {
        super((0,_core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__.optionsFromArguments)(Monophonic.getDefaults(), arguments));
        const options = (0,_core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__.optionsFromArguments)(Monophonic.getDefaults(), arguments);
        this.portamento = options.portamento;
        this.onsilence = options.onsilence;
    }
    static getDefaults() {
        return Object.assign(_instrument_Instrument__WEBPACK_IMPORTED_MODULE_3__.Instrument.getDefaults(), {
            detune: 0,
            onsilence: _core_util_Interface__WEBPACK_IMPORTED_MODULE_2__.noOp,
            portamento: 0,
        });
    }
    /**
     * Trigger the attack of the note optionally with a given velocity.
     * @param  note The note to trigger.
     * @param  time When the note should start.
     * @param  velocity The velocity scaler determines how "loud" the note will be triggered.
     * @example
     * const synth = new Tone.Synth().toDestination();
     * // trigger the note a half second from now at half velocity
     * synth.triggerAttack("C4", "+0.5", 0.5);
     */
    triggerAttack(note, time, velocity = 1) {
        this.log("triggerAttack", note, time, velocity);
        const seconds = this.toSeconds(time);
        this._triggerEnvelopeAttack(seconds, velocity);
        this.setNote(note, seconds);
        return this;
    }
    /**
     * Trigger the release portion of the envelope
     * @param  time If no time is given, the release happens immediatly
     * @example
     * const synth = new Tone.Synth().toDestination();
     * synth.triggerAttack("C4");
     * // trigger the release a second from now
     * synth.triggerRelease("+1");
     */
    triggerRelease(time) {
        this.log("triggerRelease", time);
        const seconds = this.toSeconds(time);
        this._triggerEnvelopeRelease(seconds);
        return this;
    }
    /**
     * Set the note at the given time. If no time is given, the note
     * will set immediately.
     * @param note The note to change to.
     * @param  time The time when the note should be set.
     * @example
     * const synth = new Tone.Synth().toDestination();
     * synth.triggerAttack("C4");
     * // change to F#6 in one quarter note from now.
     * synth.setNote("F#6", "+4n");
     */
    setNote(note, time) {
        const computedTime = this.toSeconds(time);
        const computedFrequency = note instanceof _core_type_Frequency__WEBPACK_IMPORTED_MODULE_0__.FrequencyClass ? note.toFrequency() : note;
        if (this.portamento > 0 && this.getLevelAtTime(computedTime) > 0.05) {
            const portTime = this.toSeconds(this.portamento);
            this.frequency.exponentialRampTo(computedFrequency, portTime, computedTime);
        }
        else {
            this.frequency.setValueAtTime(computedFrequency, computedTime);
        }
        return this;
    }
}
(0,tslib__WEBPACK_IMPORTED_MODULE_5__.__decorate)([
    (0,_core_util_Decorator__WEBPACK_IMPORTED_MODULE_4__.timeRange)(0)
], Monophonic.prototype, "portamento", void 0);
//# sourceMappingURL=Monophonic.js.map

/***/ }),

/***/ "./node_modules/tone/build/esm/instrument/NoiseSynth.js":
/*!**************************************************************!*\
  !*** ./node_modules/tone/build/esm/instrument/NoiseSynth.js ***!
  \**************************************************************/
/*! namespace exports */
/*! export NoiseSynth [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "NoiseSynth": () => /* binding */ NoiseSynth
/* harmony export */ });
/* harmony import */ var _component_envelope_AmplitudeEnvelope__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../component/envelope/AmplitudeEnvelope */ "./node_modules/tone/build/esm/component/envelope/AmplitudeEnvelope.js");
/* harmony import */ var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../core/util/Defaults */ "./node_modules/tone/build/esm/core/util/Defaults.js");
/* harmony import */ var _source_Noise__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../source/Noise */ "./node_modules/tone/build/esm/source/Noise.js");
/* harmony import */ var _Instrument__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Instrument */ "./node_modules/tone/build/esm/instrument/Instrument.js");
/* harmony import */ var _core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../core/context/ToneAudioNode */ "./node_modules/tone/build/esm/core/context/ToneAudioNode.js");
/* harmony import */ var _component_envelope_Envelope__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../component/envelope/Envelope */ "./node_modules/tone/build/esm/component/envelope/Envelope.js");
/* harmony import */ var _source_Source__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../source/Source */ "./node_modules/tone/build/esm/source/Source.js");
;






/**
 * Tone.NoiseSynth is composed of [[Noise]] through an [[AmplitudeEnvelope]].
 * ```
 * +-------+   +-------------------+
 * | Noise +>--> AmplitudeEnvelope +>--> Output
 * +-------+   +-------------------+
 * ```
 * @example
 * const noiseSynth = new Tone.NoiseSynth().toDestination();
 * noiseSynth.triggerAttackRelease("8n", 0.05);
 * @category Instrument
 */
class NoiseSynth extends _Instrument__WEBPACK_IMPORTED_MODULE_3__.Instrument {
    constructor() {
        super((0,_core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__.optionsFromArguments)(NoiseSynth.getDefaults(), arguments));
        this.name = "NoiseSynth";
        const options = (0,_core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__.optionsFromArguments)(NoiseSynth.getDefaults(), arguments);
        this.noise = new _source_Noise__WEBPACK_IMPORTED_MODULE_2__.Noise(Object.assign({
            context: this.context,
        }, options.noise));
        this.envelope = new _component_envelope_AmplitudeEnvelope__WEBPACK_IMPORTED_MODULE_0__.AmplitudeEnvelope(Object.assign({
            context: this.context,
        }, options.envelope));
        // connect the noise to the output
        this.noise.chain(this.envelope, this.output);
    }
    static getDefaults() {
        return Object.assign(_Instrument__WEBPACK_IMPORTED_MODULE_3__.Instrument.getDefaults(), {
            envelope: Object.assign((0,_core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__.omitFromObject)(_component_envelope_Envelope__WEBPACK_IMPORTED_MODULE_5__.Envelope.getDefaults(), Object.keys(_core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_4__.ToneAudioNode.getDefaults())), {
                decay: 0.1,
                sustain: 0.0,
            }),
            noise: Object.assign((0,_core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__.omitFromObject)(_source_Noise__WEBPACK_IMPORTED_MODULE_2__.Noise.getDefaults(), Object.keys(_source_Source__WEBPACK_IMPORTED_MODULE_6__.Source.getDefaults())), {
                type: "white",
            }),
        });
    }
    /**
     * Start the attack portion of the envelopes. Unlike other
     * instruments, Tone.NoiseSynth doesn't have a note.
     * @example
     * const noiseSynth = new Tone.NoiseSynth().toDestination();
     * noiseSynth.triggerAttack();
     */
    triggerAttack(time, velocity = 1) {
        time = this.toSeconds(time);
        // the envelopes
        this.envelope.triggerAttack(time, velocity);
        // start the noise
        this.noise.start(time);
        if (this.envelope.sustain === 0) {
            this.noise.stop(time + this.toSeconds(this.envelope.attack) + this.toSeconds(this.envelope.decay));
        }
        return this;
    }
    /**
     * Start the release portion of the envelopes.
     */
    triggerRelease(time) {
        time = this.toSeconds(time);
        this.envelope.triggerRelease(time);
        this.noise.stop(time + this.toSeconds(this.envelope.release));
        return this;
    }
    sync() {
        if (this._syncState()) {
            this._syncMethod("triggerAttack", 0);
            this._syncMethod("triggerRelease", 0);
        }
        return this;
    }
    triggerAttackRelease(duration, time, velocity = 1) {
        time = this.toSeconds(time);
        duration = this.toSeconds(duration);
        this.triggerAttack(time, velocity);
        this.triggerRelease(time + duration);
        return this;
    }
    dispose() {
        super.dispose();
        this.noise.dispose();
        this.envelope.dispose();
        return this;
    }
}
//# sourceMappingURL=NoiseSynth.js.map

/***/ }),

/***/ "./node_modules/tone/build/esm/instrument/PluckSynth.js":
/*!**************************************************************!*\
  !*** ./node_modules/tone/build/esm/instrument/PluckSynth.js ***!
  \**************************************************************/
/*! namespace exports */
/*! export PluckSynth [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "PluckSynth": () => /* binding */ PluckSynth
/* harmony export */ });
/* harmony import */ var _component_filter_LowpassCombFilter__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../component/filter/LowpassCombFilter */ "./node_modules/tone/build/esm/component/filter/LowpassCombFilter.js");
/* harmony import */ var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../core/util/Defaults */ "./node_modules/tone/build/esm/core/util/Defaults.js");
/* harmony import */ var _source_Noise__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../source/Noise */ "./node_modules/tone/build/esm/source/Noise.js");
/* harmony import */ var _Instrument__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Instrument */ "./node_modules/tone/build/esm/instrument/Instrument.js");
;




/**
 * Karplus-String string synthesis.
 * @example
 * const plucky = new Tone.PluckSynth().toDestination();
 * plucky.triggerAttack("C4", "+0.5");
 * plucky.triggerAttack("C3", "+1");
 * plucky.triggerAttack("C2", "+1.5");
 * plucky.triggerAttack("C1", "+2");
 * @category Instrument
 */
class PluckSynth extends _Instrument__WEBPACK_IMPORTED_MODULE_3__.Instrument {
    constructor() {
        super((0,_core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__.optionsFromArguments)(PluckSynth.getDefaults(), arguments));
        this.name = "PluckSynth";
        const options = (0,_core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__.optionsFromArguments)(PluckSynth.getDefaults(), arguments);
        this._noise = new _source_Noise__WEBPACK_IMPORTED_MODULE_2__.Noise({
            context: this.context,
            type: "pink"
        });
        this.attackNoise = options.attackNoise;
        this._lfcf = new _component_filter_LowpassCombFilter__WEBPACK_IMPORTED_MODULE_0__.LowpassCombFilter({
            context: this.context,
            dampening: options.dampening,
            resonance: options.resonance,
        });
        this.resonance = options.resonance;
        this.release = options.release;
        this._noise.connect(this._lfcf);
        this._lfcf.connect(this.output);
    }
    static getDefaults() {
        return (0,_core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__.deepMerge)(_Instrument__WEBPACK_IMPORTED_MODULE_3__.Instrument.getDefaults(), {
            attackNoise: 1,
            dampening: 4000,
            resonance: 0.7,
            release: 1,
        });
    }
    /**
     * The dampening control. i.e. the lowpass filter frequency of the comb filter
     * @min 0
     * @max 7000
     */
    get dampening() {
        return this._lfcf.dampening;
    }
    set dampening(fq) {
        this._lfcf.dampening = fq;
    }
    triggerAttack(note, time) {
        const freq = this.toFrequency(note);
        time = this.toSeconds(time);
        const delayAmount = 1 / freq;
        this._lfcf.delayTime.setValueAtTime(delayAmount, time);
        this._noise.start(time);
        this._noise.stop(time + delayAmount * this.attackNoise);
        this._lfcf.resonance.cancelScheduledValues(time);
        this._lfcf.resonance.setValueAtTime(this.resonance, time);
        return this;
    }
    /**
     * Ramp down the [[resonance]] to 0 over the duration of the release time.
     */
    triggerRelease(time) {
        this._lfcf.resonance.linearRampTo(0, this.release, time);
        return this;
    }
    dispose() {
        super.dispose();
        this._noise.dispose();
        this._lfcf.dispose();
        return this;
    }
}
//# sourceMappingURL=PluckSynth.js.map

/***/ }),

/***/ "./node_modules/tone/build/esm/instrument/PolySynth.js":
/*!*************************************************************!*\
  !*** ./node_modules/tone/build/esm/instrument/PolySynth.js ***!
  \*************************************************************/
/*! namespace exports */
/*! export PolySynth [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "PolySynth": () => /* binding */ PolySynth
/* harmony export */ });
/* harmony import */ var _core_type_Midi__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../core/type/Midi */ "./node_modules/tone/build/esm/core/type/Midi.js");
/* harmony import */ var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../core/util/Defaults */ "./node_modules/tone/build/esm/core/util/Defaults.js");
/* harmony import */ var _core_util_TypeCheck__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../core/util/TypeCheck */ "./node_modules/tone/build/esm/core/util/TypeCheck.js");
/* harmony import */ var _Instrument__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Instrument */ "./node_modules/tone/build/esm/instrument/Instrument.js");
/* harmony import */ var _Synth__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./Synth */ "./node_modules/tone/build/esm/instrument/Synth.js");
/* harmony import */ var _core_util_Debug__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../core/util/Debug */ "./node_modules/tone/build/esm/core/util/Debug.js");
;





/**
 * PolySynth handles voice creation and allocation for any
 * instruments passed in as the second paramter. PolySynth is
 * not a synthesizer by itself, it merely manages voices of
 * one of the other types of synths, allowing any of the
 * monophonic synthesizers to be polyphonic.
 *
 * @example
 * const synth = new Tone.PolySynth().toDestination();
 * // set the attributes across all the voices using 'set'
 * synth.set({ detune: -1200 });
 * // play a chord
 * synth.triggerAttackRelease(["C4", "E4", "A4"], 1);
 * @category Instrument
 */
class PolySynth extends _Instrument__WEBPACK_IMPORTED_MODULE_3__.Instrument {
    constructor() {
        super((0,_core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__.optionsFromArguments)(PolySynth.getDefaults(), arguments, ["voice", "options"]));
        this.name = "PolySynth";
        /**
         * The voices which are not currently in use
         */
        this._availableVoices = [];
        /**
         * The currently active voices
         */
        this._activeVoices = [];
        /**
         * All of the allocated voices for this synth.
         */
        this._voices = [];
        /**
         * The GC timeout. Held so that it could be cancelled when the node is disposed.
         */
        this._gcTimeout = -1;
        /**
         * A moving average of the number of active voices
         */
        this._averageActiveVoices = 0;
        const options = (0,_core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__.optionsFromArguments)(PolySynth.getDefaults(), arguments, ["voice", "options"]);
        // check against the old API (pre 14.3.0)
        (0,_core_util_Debug__WEBPACK_IMPORTED_MODULE_5__.assert)(!(0,_core_util_TypeCheck__WEBPACK_IMPORTED_MODULE_2__.isNumber)(options.voice), "DEPRECATED: The polyphony count is no longer the first argument.");
        const defaults = options.voice.getDefaults();
        this.options = Object.assign(defaults, options.options);
        this.voice = options.voice;
        this.maxPolyphony = options.maxPolyphony;
        // create the first voice
        this._dummyVoice = this._getNextAvailableVoice();
        // remove it from the voices list
        const index = this._voices.indexOf(this._dummyVoice);
        this._voices.splice(index, 1);
        // kick off the GC interval
        this._gcTimeout = this.context.setInterval(this._collectGarbage.bind(this), 1);
    }
    static getDefaults() {
        return Object.assign(_Instrument__WEBPACK_IMPORTED_MODULE_3__.Instrument.getDefaults(), {
            maxPolyphony: 32,
            options: {},
            voice: _Synth__WEBPACK_IMPORTED_MODULE_4__.Synth,
        });
    }
    /**
     * The number of active voices.
     */
    get activeVoices() {
        return this._activeVoices.length;
    }
    /**
     * Invoked when the source is done making sound, so that it can be
     * readded to the pool of available voices
     */
    _makeVoiceAvailable(voice) {
        this._availableVoices.push(voice);
        // remove the midi note from 'active voices'
        const activeVoiceIndex = this._activeVoices.findIndex((e) => e.voice === voice);
        this._activeVoices.splice(activeVoiceIndex, 1);
    }
    /**
     * Get an available voice from the pool of available voices.
     * If one is not available and the maxPolyphony limit is reached,
     * steal a voice, otherwise return null.
     */
    _getNextAvailableVoice() {
        // if there are available voices, return the first one
        if (this._availableVoices.length) {
            return this._availableVoices.shift();
        }
        else if (this._voices.length < this.maxPolyphony) {
            // otherwise if there is still more maxPolyphony, make a new voice
            const voice = new this.voice(Object.assign(this.options, {
                context: this.context,
                onsilence: this._makeVoiceAvailable.bind(this),
            }));
            voice.connect(this.output);
            this._voices.push(voice);
            return voice;
        }
        else {
            (0,_core_util_Debug__WEBPACK_IMPORTED_MODULE_5__.warn)("Max polyphony exceeded. Note dropped.");
        }
    }
    /**
     * Occasionally check if there are any allocated voices which can be cleaned up.
     */
    _collectGarbage() {
        this._averageActiveVoices = Math.max(this._averageActiveVoices * 0.95, this.activeVoices);
        if (this._availableVoices.length && this._voices.length > Math.ceil(this._averageActiveVoices + 1)) {
            // take off an available note
            const firstAvail = this._availableVoices.shift();
            const index = this._voices.indexOf(firstAvail);
            this._voices.splice(index, 1);
            if (!this.context.isOffline) {
                firstAvail.dispose();
            }
        }
    }
    /**
     * Internal method which triggers the attack
     */
    _triggerAttack(notes, time, velocity) {
        notes.forEach(note => {
            const midiNote = new _core_type_Midi__WEBPACK_IMPORTED_MODULE_0__.MidiClass(this.context, note).toMidi();
            const voice = this._getNextAvailableVoice();
            if (voice) {
                voice.triggerAttack(note, time, velocity);
                this._activeVoices.push({
                    midi: midiNote, voice, released: false,
                });
                this.log("triggerAttack", note, time);
            }
        });
    }
    /**
     * Internal method which triggers the release
     */
    _triggerRelease(notes, time) {
        notes.forEach(note => {
            const midiNote = new _core_type_Midi__WEBPACK_IMPORTED_MODULE_0__.MidiClass(this.context, note).toMidi();
            const event = this._activeVoices.find(({ midi, released }) => midi === midiNote && !released);
            if (event) {
                // trigger release on that note
                event.voice.triggerRelease(time);
                // mark it as released
                event.released = true;
                this.log("triggerRelease", note, time);
            }
        });
    }
    /**
     * Schedule the attack/release events. If the time is in the future, then it should set a timeout
     * to wait for just-in-time scheduling
     */
    _scheduleEvent(type, notes, time, velocity) {
        (0,_core_util_Debug__WEBPACK_IMPORTED_MODULE_5__.assert)(!this.disposed, "Synth was already disposed");
        // if the notes are greater than this amount of time in the future, they should be scheduled with setTimeout
        if (time <= this.now()) {
            // do it immediately
            if (type === "attack") {
                this._triggerAttack(notes, time, velocity);
            }
            else {
                this._triggerRelease(notes, time);
            }
        }
        else {
            // schedule it to start in the future
            this.context.setTimeout(() => {
                this._scheduleEvent(type, notes, time, velocity);
            }, time - this.now());
        }
    }
    /**
     * Trigger the attack portion of the note
     * @param  notes The notes to play. Accepts a single Frequency or an array of frequencies.
     * @param  time  The start time of the note.
     * @param velocity The velocity of the note.
     * @example
     * const synth = new Tone.PolySynth(Tone.FMSynth).toDestination();
     * // trigger a chord immediately with a velocity of 0.2
     * synth.triggerAttack(["Ab3", "C4", "F5"], Tone.now(), 0.2);
     */
    triggerAttack(notes, time, velocity) {
        if (!Array.isArray(notes)) {
            notes = [notes];
        }
        const computedTime = this.toSeconds(time);
        this._scheduleEvent("attack", notes, computedTime, velocity);
        return this;
    }
    /**
     * Trigger the release of the note. Unlike monophonic instruments,
     * a note (or array of notes) needs to be passed in as the first argument.
     * @param  notes The notes to play. Accepts a single Frequency or an array of frequencies.
     * @param  time  When the release will be triggered.
     * @example
     * @example
     * const poly = new Tone.PolySynth(Tone.AMSynth).toDestination();
     * poly.triggerAttack(["Ab3", "C4", "F5"]);
     * // trigger the release of the given notes.
     * poly.triggerRelease(["Ab3", "C4"], "+1");
     * poly.triggerRelease("F5", "+3");
     */
    triggerRelease(notes, time) {
        if (!Array.isArray(notes)) {
            notes = [notes];
        }
        const computedTime = this.toSeconds(time);
        this._scheduleEvent("release", notes, computedTime);
        return this;
    }
    /**
     * Trigger the attack and release after the specified duration
     * @param  notes The notes to play. Accepts a single  Frequency or an array of frequencies.
     * @param  duration the duration of the note
     * @param  time  if no time is given, defaults to now
     * @param  velocity the velocity of the attack (0-1)
     * @example
     * const poly = new Tone.PolySynth(Tone.AMSynth).toDestination();
     * // can pass in an array of durations as well
     * poly.triggerAttackRelease(["Eb3", "G4", "Bb4", "D5"], [4, 3, 2, 1]);
     */
    triggerAttackRelease(notes, duration, time, velocity) {
        const computedTime = this.toSeconds(time);
        this.triggerAttack(notes, computedTime, velocity);
        if ((0,_core_util_TypeCheck__WEBPACK_IMPORTED_MODULE_2__.isArray)(duration)) {
            (0,_core_util_Debug__WEBPACK_IMPORTED_MODULE_5__.assert)((0,_core_util_TypeCheck__WEBPACK_IMPORTED_MODULE_2__.isArray)(notes), "If the duration is an array, the notes must also be an array");
            notes = notes;
            for (let i = 0; i < notes.length; i++) {
                const d = duration[Math.min(i, duration.length - 1)];
                const durationSeconds = this.toSeconds(d);
                (0,_core_util_Debug__WEBPACK_IMPORTED_MODULE_5__.assert)(durationSeconds > 0, "The duration must be greater than 0");
                this.triggerRelease(notes[i], computedTime + durationSeconds);
            }
        }
        else {
            const durationSeconds = this.toSeconds(duration);
            (0,_core_util_Debug__WEBPACK_IMPORTED_MODULE_5__.assert)(durationSeconds > 0, "The duration must be greater than 0");
            this.triggerRelease(notes, computedTime + durationSeconds);
        }
        return this;
    }
    sync() {
        if (this._syncState()) {
            this._syncMethod("triggerAttack", 1);
            this._syncMethod("triggerRelease", 1);
        }
        return this;
    }
    /**
     * Set a member/attribute of the voices
     * @example
     * const poly = new Tone.PolySynth().toDestination();
     * // set all of the voices using an options object for the synth type
     * poly.set({
     * 	envelope: {
     * 		attack: 0.25
     * 	}
     * });
     * poly.triggerAttackRelease("Bb3", 0.2);
     */
    set(options) {
        // remove options which are controlled by the PolySynth
        const sanitizedOptions = (0,_core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__.omitFromObject)(options, ["onsilence", "context"]);
        // store all of the options
        this.options = (0,_core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__.deepMerge)(this.options, sanitizedOptions);
        this._voices.forEach(voice => voice.set(sanitizedOptions));
        this._dummyVoice.set(sanitizedOptions);
        return this;
    }
    get() {
        return this._dummyVoice.get();
    }
    /**
     * Trigger the release portion of all the currently active voices immediately.
     * Useful for silencing the synth.
     */
    releaseAll(time) {
        const computedTime = this.toSeconds(time);
        this._activeVoices.forEach(({ voice }) => {
            voice.triggerRelease(computedTime);
        });
        return this;
    }
    dispose() {
        super.dispose();
        this._dummyVoice.dispose();
        this._voices.forEach(v => v.dispose());
        this._activeVoices = [];
        this._availableVoices = [];
        this.context.clearInterval(this._gcTimeout);
        return this;
    }
}
//# sourceMappingURL=PolySynth.js.map

/***/ }),

/***/ "./node_modules/tone/build/esm/instrument/Sampler.js":
/*!***********************************************************!*\
  !*** ./node_modules/tone/build/esm/instrument/Sampler.js ***!
  \***********************************************************/
/*! namespace exports */
/*! export Sampler [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Sampler": () => /* binding */ Sampler
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! tslib */ "./node_modules/tone/node_modules/tslib/tslib.es6.js");
/* harmony import */ var _core_context_ToneAudioBuffers__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../core/context/ToneAudioBuffers */ "./node_modules/tone/build/esm/core/context/ToneAudioBuffers.js");
/* harmony import */ var _core_type_Conversions__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../core/type/Conversions */ "./node_modules/tone/build/esm/core/type/Conversions.js");
/* harmony import */ var _core_type_Frequency__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../core/type/Frequency */ "./node_modules/tone/build/esm/core/type/Frequency.js");
/* harmony import */ var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../core/util/Defaults */ "./node_modules/tone/build/esm/core/util/Defaults.js");
/* harmony import */ var _core_util_Interface__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../core/util/Interface */ "./node_modules/tone/build/esm/core/util/Interface.js");
/* harmony import */ var _core_util_TypeCheck__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../core/util/TypeCheck */ "./node_modules/tone/build/esm/core/util/TypeCheck.js");
/* harmony import */ var _instrument_Instrument__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../instrument/Instrument */ "./node_modules/tone/build/esm/instrument/Instrument.js");
/* harmony import */ var _source_buffer_ToneBufferSource__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../source/buffer/ToneBufferSource */ "./node_modules/tone/build/esm/source/buffer/ToneBufferSource.js");
/* harmony import */ var _core_util_Decorator__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../core/util/Decorator */ "./node_modules/tone/build/esm/core/util/Decorator.js");
/* harmony import */ var _core_util_Debug__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../core/util/Debug */ "./node_modules/tone/build/esm/core/util/Debug.js");
;










/**
 * Pass in an object which maps the note's pitch or midi value to the url,
 * then you can trigger the attack and release of that note like other instruments.
 * By automatically repitching the samples, it is possible to play pitches which
 * were not explicitly included which can save loading time.
 *
 * For sample or buffer playback where repitching is not necessary,
 * use [[Player]].
 * @example
 * const sampler = new Tone.Sampler({
 * 	urls: {
 * 		A1: "A1.mp3",
 * 		A2: "A2.mp3",
 * 	},
 * 	baseUrl: "https://tonejs.github.io/audio/casio/",
 * 	onload: () => {
 * 		sampler.triggerAttackRelease(["C1", "E1", "G1", "B1"], 0.5);
 * 	}
 * }).toDestination();
 * @category Instrument
 */
class Sampler extends _instrument_Instrument__WEBPACK_IMPORTED_MODULE_6__.Instrument {
    constructor() {
        super((0,_core_util_Defaults__WEBPACK_IMPORTED_MODULE_3__.optionsFromArguments)(Sampler.getDefaults(), arguments, ["urls", "onload", "baseUrl"], "urls"));
        this.name = "Sampler";
        /**
         * The object of all currently playing BufferSources
         */
        this._activeSources = new Map();
        const options = (0,_core_util_Defaults__WEBPACK_IMPORTED_MODULE_3__.optionsFromArguments)(Sampler.getDefaults(), arguments, ["urls", "onload", "baseUrl"], "urls");
        const urlMap = {};
        Object.keys(options.urls).forEach((note) => {
            const noteNumber = parseInt(note, 10);
            (0,_core_util_Debug__WEBPACK_IMPORTED_MODULE_9__.assert)((0,_core_util_TypeCheck__WEBPACK_IMPORTED_MODULE_5__.isNote)(note)
                || ((0,_core_util_TypeCheck__WEBPACK_IMPORTED_MODULE_5__.isNumber)(noteNumber) && isFinite(noteNumber)), `url key is neither a note or midi pitch: ${note}`);
            if ((0,_core_util_TypeCheck__WEBPACK_IMPORTED_MODULE_5__.isNote)(note)) {
                // convert the note name to MIDI
                const mid = new _core_type_Frequency__WEBPACK_IMPORTED_MODULE_2__.FrequencyClass(this.context, note).toMidi();
                urlMap[mid] = options.urls[note];
            }
            else if ((0,_core_util_TypeCheck__WEBPACK_IMPORTED_MODULE_5__.isNumber)(noteNumber) && isFinite(noteNumber)) {
                // otherwise if it's numbers assume it's midi
                urlMap[noteNumber] = options.urls[noteNumber];
            }
        });
        this._buffers = new _core_context_ToneAudioBuffers__WEBPACK_IMPORTED_MODULE_0__.ToneAudioBuffers({
            urls: urlMap,
            onload: options.onload,
            baseUrl: options.baseUrl,
            onerror: options.onerror,
        });
        this.attack = options.attack;
        this.release = options.release;
        this.curve = options.curve;
        // invoke the callback if it's already loaded
        if (this._buffers.loaded) {
            // invoke onload deferred
            Promise.resolve().then(options.onload);
        }
    }
    static getDefaults() {
        return Object.assign(_instrument_Instrument__WEBPACK_IMPORTED_MODULE_6__.Instrument.getDefaults(), {
            attack: 0,
            baseUrl: "",
            curve: "exponential",
            onload: _core_util_Interface__WEBPACK_IMPORTED_MODULE_4__.noOp,
            onerror: _core_util_Interface__WEBPACK_IMPORTED_MODULE_4__.noOp,
            release: 0.1,
            urls: {},
        });
    }
    /**
     * Returns the difference in steps between the given midi note at the closets sample.
     */
    _findClosest(midi) {
        // searches within 8 octaves of the given midi note
        const MAX_INTERVAL = 96;
        let interval = 0;
        while (interval < MAX_INTERVAL) {
            // check above and below
            if (this._buffers.has(midi + interval)) {
                return -interval;
            }
            else if (this._buffers.has(midi - interval)) {
                return interval;
            }
            interval++;
        }
        throw new Error(`No available buffers for note: ${midi}`);
    }
    /**
     * @param  notes	The note to play, or an array of notes.
     * @param  time     When to play the note
     * @param  velocity The velocity to play the sample back.
     */
    triggerAttack(notes, time, velocity = 1) {
        this.log("triggerAttack", notes, time, velocity);
        if (!Array.isArray(notes)) {
            notes = [notes];
        }
        notes.forEach(note => {
            const midiFloat = (0,_core_type_Conversions__WEBPACK_IMPORTED_MODULE_1__.ftomf)(new _core_type_Frequency__WEBPACK_IMPORTED_MODULE_2__.FrequencyClass(this.context, note).toFrequency());
            const midi = Math.round(midiFloat);
            const remainder = midiFloat - midi;
            // find the closest note pitch
            const difference = this._findClosest(midi);
            const closestNote = midi - difference;
            const buffer = this._buffers.get(closestNote);
            const playbackRate = (0,_core_type_Conversions__WEBPACK_IMPORTED_MODULE_1__.intervalToFrequencyRatio)(difference + remainder);
            // play that note
            const source = new _source_buffer_ToneBufferSource__WEBPACK_IMPORTED_MODULE_7__.ToneBufferSource({
                url: buffer,
                context: this.context,
                curve: this.curve,
                fadeIn: this.attack,
                fadeOut: this.release,
                playbackRate,
            }).connect(this.output);
            source.start(time, 0, buffer.duration / playbackRate, velocity);
            // add it to the active sources
            if (!(0,_core_util_TypeCheck__WEBPACK_IMPORTED_MODULE_5__.isArray)(this._activeSources.get(midi))) {
                this._activeSources.set(midi, []);
            }
            this._activeSources.get(midi).push(source);
            // remove it when it's done
            source.onended = () => {
                if (this._activeSources && this._activeSources.has(midi)) {
                    const sources = this._activeSources.get(midi);
                    const index = sources.indexOf(source);
                    if (index !== -1) {
                        sources.splice(index, 1);
                    }
                }
            };
        });
        return this;
    }
    /**
     * @param  notes	The note to release, or an array of notes.
     * @param  time     	When to release the note.
     */
    triggerRelease(notes, time) {
        this.log("triggerRelease", notes, time);
        if (!Array.isArray(notes)) {
            notes = [notes];
        }
        notes.forEach(note => {
            const midi = new _core_type_Frequency__WEBPACK_IMPORTED_MODULE_2__.FrequencyClass(this.context, note).toMidi();
            // find the note
            if (this._activeSources.has(midi) && this._activeSources.get(midi).length) {
                const sources = this._activeSources.get(midi);
                time = this.toSeconds(time);
                sources.forEach(source => {
                    source.stop(time);
                });
                this._activeSources.set(midi, []);
            }
        });
        return this;
    }
    /**
     * Release all currently active notes.
     * @param  time     	When to release the notes.
     */
    releaseAll(time) {
        const computedTime = this.toSeconds(time);
        this._activeSources.forEach(sources => {
            while (sources.length) {
                const source = sources.shift();
                source.stop(computedTime);
            }
        });
        return this;
    }
    sync() {
        if (this._syncState()) {
            this._syncMethod("triggerAttack", 1);
            this._syncMethod("triggerRelease", 1);
        }
        return this;
    }
    /**
     * Invoke the attack phase, then after the duration, invoke the release.
     * @param  notes	The note to play and release, or an array of notes.
     * @param  duration The time the note should be held
     * @param  time     When to start the attack
     * @param  velocity The velocity of the attack
     */
    triggerAttackRelease(notes, duration, time, velocity = 1) {
        const computedTime = this.toSeconds(time);
        this.triggerAttack(notes, computedTime, velocity);
        if ((0,_core_util_TypeCheck__WEBPACK_IMPORTED_MODULE_5__.isArray)(duration)) {
            (0,_core_util_Debug__WEBPACK_IMPORTED_MODULE_9__.assert)((0,_core_util_TypeCheck__WEBPACK_IMPORTED_MODULE_5__.isArray)(notes), "notes must be an array when duration is array");
            notes.forEach((note, index) => {
                const d = duration[Math.min(index, duration.length - 1)];
                this.triggerRelease(note, computedTime + this.toSeconds(d));
            });
        }
        else {
            this.triggerRelease(notes, computedTime + this.toSeconds(duration));
        }
        return this;
    }
    /**
     * Add a note to the sampler.
     * @param  note      The buffer's pitch.
     * @param  url  Either the url of the buffer, or a buffer which will be added with the given name.
     * @param  callback  The callback to invoke when the url is loaded.
     */
    add(note, url, callback) {
        (0,_core_util_Debug__WEBPACK_IMPORTED_MODULE_9__.assert)((0,_core_util_TypeCheck__WEBPACK_IMPORTED_MODULE_5__.isNote)(note) || isFinite(note), `note must be a pitch or midi: ${note}`);
        if ((0,_core_util_TypeCheck__WEBPACK_IMPORTED_MODULE_5__.isNote)(note)) {
            // convert the note name to MIDI
            const mid = new _core_type_Frequency__WEBPACK_IMPORTED_MODULE_2__.FrequencyClass(this.context, note).toMidi();
            this._buffers.add(mid, url, callback);
        }
        else {
            // otherwise if it's numbers assume it's midi
            this._buffers.add(note, url, callback);
        }
        return this;
    }
    /**
     * If the buffers are loaded or not
     */
    get loaded() {
        return this._buffers.loaded;
    }
    /**
     * Clean up
     */
    dispose() {
        super.dispose();
        this._buffers.dispose();
        this._activeSources.forEach(sources => {
            sources.forEach(source => source.dispose());
        });
        this._activeSources.clear();
        return this;
    }
}
(0,tslib__WEBPACK_IMPORTED_MODULE_10__.__decorate)([
    (0,_core_util_Decorator__WEBPACK_IMPORTED_MODULE_8__.timeRange)(0)
], Sampler.prototype, "attack", void 0);
(0,tslib__WEBPACK_IMPORTED_MODULE_10__.__decorate)([
    (0,_core_util_Decorator__WEBPACK_IMPORTED_MODULE_8__.timeRange)(0)
], Sampler.prototype, "release", void 0);
//# sourceMappingURL=Sampler.js.map

/***/ }),

/***/ "./node_modules/tone/build/esm/instrument/Synth.js":
/*!*********************************************************!*\
  !*** ./node_modules/tone/build/esm/instrument/Synth.js ***!
  \*********************************************************/
/*! namespace exports */
/*! export Synth [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Synth": () => /* binding */ Synth
/* harmony export */ });
/* harmony import */ var _component_envelope_AmplitudeEnvelope__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../component/envelope/AmplitudeEnvelope */ "./node_modules/tone/build/esm/component/envelope/AmplitudeEnvelope.js");
/* harmony import */ var _component_envelope_Envelope__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../component/envelope/Envelope */ "./node_modules/tone/build/esm/component/envelope/Envelope.js");
/* harmony import */ var _core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../core/context/ToneAudioNode */ "./node_modules/tone/build/esm/core/context/ToneAudioNode.js");
/* harmony import */ var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../core/util/Defaults */ "./node_modules/tone/build/esm/core/util/Defaults.js");
/* harmony import */ var _core_util_Interface__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../core/util/Interface */ "./node_modules/tone/build/esm/core/util/Interface.js");
/* harmony import */ var _source_oscillator_OmniOscillator__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../source/oscillator/OmniOscillator */ "./node_modules/tone/build/esm/source/oscillator/OmniOscillator.js");
/* harmony import */ var _source_Source__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../source/Source */ "./node_modules/tone/build/esm/source/Source.js");
/* harmony import */ var _Monophonic__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./Monophonic */ "./node_modules/tone/build/esm/instrument/Monophonic.js");
;







/**
 * Synth is composed simply of a [[OmniOscillator]] routed through an [[AmplitudeEnvelope]].
 * ```
 * +----------------+   +-------------------+
 * | OmniOscillator +>--> AmplitudeEnvelope +>--> Output
 * +----------------+   +-------------------+
 * ```
 * @example
 * const synth = new Tone.Synth().toDestination();
 * synth.triggerAttackRelease("C4", "8n");
 * @category Instrument
 */
class Synth extends _Monophonic__WEBPACK_IMPORTED_MODULE_7__.Monophonic {
    constructor() {
        super((0,_core_util_Defaults__WEBPACK_IMPORTED_MODULE_3__.optionsFromArguments)(Synth.getDefaults(), arguments));
        this.name = "Synth";
        const options = (0,_core_util_Defaults__WEBPACK_IMPORTED_MODULE_3__.optionsFromArguments)(Synth.getDefaults(), arguments);
        this.oscillator = new _source_oscillator_OmniOscillator__WEBPACK_IMPORTED_MODULE_5__.OmniOscillator(Object.assign({
            context: this.context,
            detune: options.detune,
            onstop: () => this.onsilence(this),
        }, options.oscillator));
        this.frequency = this.oscillator.frequency;
        this.detune = this.oscillator.detune;
        this.envelope = new _component_envelope_AmplitudeEnvelope__WEBPACK_IMPORTED_MODULE_0__.AmplitudeEnvelope(Object.assign({
            context: this.context,
        }, options.envelope));
        // connect the oscillators to the output
        this.oscillator.chain(this.envelope, this.output);
        (0,_core_util_Interface__WEBPACK_IMPORTED_MODULE_4__.readOnly)(this, ["oscillator", "frequency", "detune", "envelope"]);
    }
    static getDefaults() {
        return Object.assign(_Monophonic__WEBPACK_IMPORTED_MODULE_7__.Monophonic.getDefaults(), {
            envelope: Object.assign((0,_core_util_Defaults__WEBPACK_IMPORTED_MODULE_3__.omitFromObject)(_component_envelope_Envelope__WEBPACK_IMPORTED_MODULE_1__.Envelope.getDefaults(), Object.keys(_core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_2__.ToneAudioNode.getDefaults())), {
                attack: 0.005,
                decay: 0.1,
                release: 1,
                sustain: 0.3,
            }),
            oscillator: Object.assign((0,_core_util_Defaults__WEBPACK_IMPORTED_MODULE_3__.omitFromObject)(_source_oscillator_OmniOscillator__WEBPACK_IMPORTED_MODULE_5__.OmniOscillator.getDefaults(), [...Object.keys(_source_Source__WEBPACK_IMPORTED_MODULE_6__.Source.getDefaults()), "frequency", "detune"]), {
                type: "triangle",
            }),
        });
    }
    /**
     * start the attack portion of the envelope
     * @param time the time the attack should start
     * @param velocity the velocity of the note (0-1)
     */
    _triggerEnvelopeAttack(time, velocity) {
        // the envelopes
        this.envelope.triggerAttack(time, velocity);
        this.oscillator.start(time);
        // if there is no release portion, stop the oscillator
        if (this.envelope.sustain === 0) {
            const computedAttack = this.toSeconds(this.envelope.attack);
            const computedDecay = this.toSeconds(this.envelope.decay);
            this.oscillator.stop(time + computedAttack + computedDecay);
        }
    }
    /**
     * start the release portion of the envelope
     * @param time the time the release should start
     */
    _triggerEnvelopeRelease(time) {
        this.envelope.triggerRelease(time);
        this.oscillator.stop(time + this.toSeconds(this.envelope.release));
    }
    getLevelAtTime(time) {
        time = this.toSeconds(time);
        return this.envelope.getValueAtTime(time);
    }
    /**
     * clean up
     */
    dispose() {
        super.dispose();
        this.oscillator.dispose();
        this.envelope.dispose();
        return this;
    }
}
//# sourceMappingURL=Synth.js.map

/***/ }),

/***/ "./node_modules/tone/build/esm/instrument/index.js":
/*!*********************************************************!*\
  !*** ./node_modules/tone/build/esm/instrument/index.js ***!
  \*********************************************************/
/*! namespace exports */
/*! export AMSynth [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/instrument/AMSynth.js .AMSynth */
/*! export DuoSynth [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/instrument/DuoSynth.js .DuoSynth */
/*! export FMSynth [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/instrument/FMSynth.js .FMSynth */
/*! export MembraneSynth [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/instrument/MembraneSynth.js .MembraneSynth */
/*! export MetalSynth [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/instrument/MetalSynth.js .MetalSynth */
/*! export MonoSynth [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/instrument/MonoSynth.js .MonoSynth */
/*! export NoiseSynth [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/instrument/NoiseSynth.js .NoiseSynth */
/*! export PluckSynth [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/instrument/PluckSynth.js .PluckSynth */
/*! export PolySynth [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/instrument/PolySynth.js .PolySynth */
/*! export Sampler [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/instrument/Sampler.js .Sampler */
/*! export Synth [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/instrument/Synth.js .Synth */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_exports__, __webpack_require__.d, __webpack_require__.r, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "AMSynth": () => /* reexport safe */ _AMSynth__WEBPACK_IMPORTED_MODULE_0__.AMSynth,
/* harmony export */   "DuoSynth": () => /* reexport safe */ _DuoSynth__WEBPACK_IMPORTED_MODULE_1__.DuoSynth,
/* harmony export */   "FMSynth": () => /* reexport safe */ _FMSynth__WEBPACK_IMPORTED_MODULE_2__.FMSynth,
/* harmony export */   "MetalSynth": () => /* reexport safe */ _MetalSynth__WEBPACK_IMPORTED_MODULE_3__.MetalSynth,
/* harmony export */   "MembraneSynth": () => /* reexport safe */ _MembraneSynth__WEBPACK_IMPORTED_MODULE_4__.MembraneSynth,
/* harmony export */   "MonoSynth": () => /* reexport safe */ _MonoSynth__WEBPACK_IMPORTED_MODULE_5__.MonoSynth,
/* harmony export */   "NoiseSynth": () => /* reexport safe */ _NoiseSynth__WEBPACK_IMPORTED_MODULE_6__.NoiseSynth,
/* harmony export */   "PluckSynth": () => /* reexport safe */ _PluckSynth__WEBPACK_IMPORTED_MODULE_7__.PluckSynth,
/* harmony export */   "PolySynth": () => /* reexport safe */ _PolySynth__WEBPACK_IMPORTED_MODULE_8__.PolySynth,
/* harmony export */   "Sampler": () => /* reexport safe */ _Sampler__WEBPACK_IMPORTED_MODULE_9__.Sampler,
/* harmony export */   "Synth": () => /* reexport safe */ _Synth__WEBPACK_IMPORTED_MODULE_10__.Synth
/* harmony export */ });
/* harmony import */ var _AMSynth__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./AMSynth */ "./node_modules/tone/build/esm/instrument/AMSynth.js");
/* harmony import */ var _DuoSynth__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./DuoSynth */ "./node_modules/tone/build/esm/instrument/DuoSynth.js");
/* harmony import */ var _FMSynth__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./FMSynth */ "./node_modules/tone/build/esm/instrument/FMSynth.js");
/* harmony import */ var _MetalSynth__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./MetalSynth */ "./node_modules/tone/build/esm/instrument/MetalSynth.js");
/* harmony import */ var _MembraneSynth__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./MembraneSynth */ "./node_modules/tone/build/esm/instrument/MembraneSynth.js");
/* harmony import */ var _MonoSynth__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./MonoSynth */ "./node_modules/tone/build/esm/instrument/MonoSynth.js");
/* harmony import */ var _NoiseSynth__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./NoiseSynth */ "./node_modules/tone/build/esm/instrument/NoiseSynth.js");
/* harmony import */ var _PluckSynth__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./PluckSynth */ "./node_modules/tone/build/esm/instrument/PluckSynth.js");
/* harmony import */ var _PolySynth__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./PolySynth */ "./node_modules/tone/build/esm/instrument/PolySynth.js");
/* harmony import */ var _Sampler__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./Sampler */ "./node_modules/tone/build/esm/instrument/Sampler.js");
/* harmony import */ var _Synth__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./Synth */ "./node_modules/tone/build/esm/instrument/Synth.js");











//# sourceMappingURL=index.js.map

/***/ }),

/***/ "./node_modules/tone/build/esm/signal/Abs.js":
/*!***************************************************!*\
  !*** ./node_modules/tone/build/esm/signal/Abs.js ***!
  \***************************************************/
/*! namespace exports */
/*! export Abs [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Abs": () => /* binding */ Abs
/* harmony export */ });
/* harmony import */ var _SignalOperator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./SignalOperator */ "./node_modules/tone/build/esm/signal/SignalOperator.js");
/* harmony import */ var _WaveShaper__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./WaveShaper */ "./node_modules/tone/build/esm/signal/WaveShaper.js");
;

/**
 * Return the absolute value of an incoming signal.
 *
 * @example
 * return Tone.Offline(() => {
 * 	const abs = new Tone.Abs().toDestination();
 * 	const signal = new Tone.Signal(1);
 * 	signal.rampTo(-1, 0.5);
 * 	signal.connect(abs);
 * }, 0.5, 1);
 * @category Signal
 */
class Abs extends _SignalOperator__WEBPACK_IMPORTED_MODULE_0__.SignalOperator {
    constructor() {
        super(...arguments);
        this.name = "Abs";
        /**
         * The node which converts the audio ranges
         */
        this._abs = new _WaveShaper__WEBPACK_IMPORTED_MODULE_1__.WaveShaper({
            context: this.context,
            mapping: val => {
                if (Math.abs(val) < 0.001) {
                    return 0;
                }
                else {
                    return Math.abs(val);
                }
            },
        });
        /**
         * The AudioRange input [-1, 1]
         */
        this.input = this._abs;
        /**
         * The output range [0, 1]
         */
        this.output = this._abs;
    }
    /**
     * clean up
     */
    dispose() {
        super.dispose();
        this._abs.dispose();
        return this;
    }
}
//# sourceMappingURL=Abs.js.map

/***/ }),

/***/ "./node_modules/tone/build/esm/signal/Add.js":
/*!***************************************************!*\
  !*** ./node_modules/tone/build/esm/signal/Add.js ***!
  \***************************************************/
/*! namespace exports */
/*! export Add [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Add": () => /* binding */ Add
/* harmony export */ });
/* harmony import */ var _core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../core/context/ToneAudioNode */ "./node_modules/tone/build/esm/core/context/ToneAudioNode.js");
/* harmony import */ var _core_context_Gain__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../core/context/Gain */ "./node_modules/tone/build/esm/core/context/Gain.js");
/* harmony import */ var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../core/util/Defaults */ "./node_modules/tone/build/esm/core/util/Defaults.js");
/* harmony import */ var _Signal__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Signal */ "./node_modules/tone/build/esm/signal/Signal.js");
;



/**
 * Add a signal and a number or two signals. When no value is
 * passed into the constructor, Tone.Add will sum input and `addend`
 * If a value is passed into the constructor, the it will be added to the input.
 *
 * @example
 * return Tone.Offline(() => {
 * 	const add = new Tone.Add(2).toDestination();
 * 	add.addend.setValueAtTime(1, 0.2);
 * 	const signal = new Tone.Signal(2);
 * 	// add a signal and a scalar
 * 	signal.connect(add);
 * 	signal.setValueAtTime(1, 0.1);
 * }, 0.5, 1);
 * @category Signal
 */
class Add extends _Signal__WEBPACK_IMPORTED_MODULE_3__.Signal {
    constructor() {
        super(Object.assign((0,_core_util_Defaults__WEBPACK_IMPORTED_MODULE_2__.optionsFromArguments)(Add.getDefaults(), arguments, ["value"])));
        this.override = false;
        this.name = "Add";
        /**
         * the summing node
         */
        this._sum = new _core_context_Gain__WEBPACK_IMPORTED_MODULE_1__.Gain({ context: this.context });
        this.input = this._sum;
        this.output = this._sum;
        /**
         * The value which is added to the input signal
         */
        this.addend = this._param;
        (0,_core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_0__.connectSeries)(this._constantSource, this._sum);
    }
    static getDefaults() {
        return Object.assign(_Signal__WEBPACK_IMPORTED_MODULE_3__.Signal.getDefaults(), {
            value: 0,
        });
    }
    dispose() {
        super.dispose();
        this._sum.dispose();
        return this;
    }
}
//# sourceMappingURL=Add.js.map

/***/ }),

/***/ "./node_modules/tone/build/esm/signal/AudioToGain.js":
/*!***********************************************************!*\
  !*** ./node_modules/tone/build/esm/signal/AudioToGain.js ***!
  \***********************************************************/
/*! namespace exports */
/*! export AudioToGain [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "AudioToGain": () => /* binding */ AudioToGain
/* harmony export */ });
/* harmony import */ var _SignalOperator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./SignalOperator */ "./node_modules/tone/build/esm/signal/SignalOperator.js");
/* harmony import */ var _WaveShaper__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./WaveShaper */ "./node_modules/tone/build/esm/signal/WaveShaper.js");
;

/**
 * AudioToGain converts an input in AudioRange [-1,1] to NormalRange [0,1].
 * See [[GainToAudio]].
 * @category Signal
 */
class AudioToGain extends _SignalOperator__WEBPACK_IMPORTED_MODULE_0__.SignalOperator {
    constructor() {
        super(...arguments);
        this.name = "AudioToGain";
        /**
         * The node which converts the audio ranges
         */
        this._norm = new _WaveShaper__WEBPACK_IMPORTED_MODULE_1__.WaveShaper({
            context: this.context,
            mapping: x => (x + 1) / 2,
        });
        /**
         * The AudioRange input [-1, 1]
         */
        this.input = this._norm;
        /**
         * The GainRange output [0, 1]
         */
        this.output = this._norm;
    }
    /**
     * clean up
     */
    dispose() {
        super.dispose();
        this._norm.dispose();
        return this;
    }
}
//# sourceMappingURL=AudioToGain.js.map

/***/ }),

/***/ "./node_modules/tone/build/esm/signal/GainToAudio.js":
/*!***********************************************************!*\
  !*** ./node_modules/tone/build/esm/signal/GainToAudio.js ***!
  \***********************************************************/
/*! namespace exports */
/*! export GainToAudio [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "GainToAudio": () => /* binding */ GainToAudio
/* harmony export */ });
/* harmony import */ var _SignalOperator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./SignalOperator */ "./node_modules/tone/build/esm/signal/SignalOperator.js");
/* harmony import */ var _WaveShaper__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./WaveShaper */ "./node_modules/tone/build/esm/signal/WaveShaper.js");
;

/**
 * GainToAudio converts an input in NormalRange [0,1] to AudioRange [-1,1].
 * See [[AudioToGain]].
 * @category Signal
 */
class GainToAudio extends _SignalOperator__WEBPACK_IMPORTED_MODULE_0__.SignalOperator {
    constructor() {
        super(...arguments);
        this.name = "GainToAudio";
        /**
         * The node which converts the audio ranges
         */
        this._norm = new _WaveShaper__WEBPACK_IMPORTED_MODULE_1__.WaveShaper({
            context: this.context,
            mapping: x => Math.abs(x) * 2 - 1,
        });
        /**
         * The NormalRange input [0, 1]
         */
        this.input = this._norm;
        /**
         * The AudioRange output [-1, 1]
         */
        this.output = this._norm;
    }
    /**
     * clean up
     */
    dispose() {
        super.dispose();
        this._norm.dispose();
        return this;
    }
}
//# sourceMappingURL=GainToAudio.js.map

/***/ }),

/***/ "./node_modules/tone/build/esm/signal/GreaterThan.js":
/*!***********************************************************!*\
  !*** ./node_modules/tone/build/esm/signal/GreaterThan.js ***!
  \***********************************************************/
/*! namespace exports */
/*! export GreaterThan [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "GreaterThan": () => /* binding */ GreaterThan
/* harmony export */ });
/* harmony import */ var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../core/util/Defaults */ "./node_modules/tone/build/esm/core/util/Defaults.js");
/* harmony import */ var _Subtract__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Subtract */ "./node_modules/tone/build/esm/signal/Subtract.js");
/* harmony import */ var _Signal__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Signal */ "./node_modules/tone/build/esm/signal/Signal.js");
/* harmony import */ var _GreaterThanZero__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./GreaterThanZero */ "./node_modules/tone/build/esm/signal/GreaterThanZero.js");
/* harmony import */ var _core_util_Interface__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../core/util/Interface */ "./node_modules/tone/build/esm/core/util/Interface.js");
;




/**
 * Output 1 if the signal is greater than the value, otherwise outputs 0.
 * can compare two signals or a signal and a number.
 *
 * @example
 * return Tone.Offline(() => {
 * 	const gt = new Tone.GreaterThan(2).toDestination();
 * 	const sig = new Tone.Signal(4).connect(gt);
 * }, 0.1, 1);
 * @category Signal
 */
class GreaterThan extends _Signal__WEBPACK_IMPORTED_MODULE_2__.Signal {
    constructor() {
        super(Object.assign((0,_core_util_Defaults__WEBPACK_IMPORTED_MODULE_0__.optionsFromArguments)(GreaterThan.getDefaults(), arguments, ["value"])));
        this.name = "GreaterThan";
        this.override = false;
        const options = (0,_core_util_Defaults__WEBPACK_IMPORTED_MODULE_0__.optionsFromArguments)(GreaterThan.getDefaults(), arguments, ["value"]);
        this._subtract = this.input = new _Subtract__WEBPACK_IMPORTED_MODULE_1__.Subtract({
            context: this.context,
            value: options.value
        });
        this._gtz = this.output = new _GreaterThanZero__WEBPACK_IMPORTED_MODULE_3__.GreaterThanZero({ context: this.context });
        this.comparator = this._param = this._subtract.subtrahend;
        (0,_core_util_Interface__WEBPACK_IMPORTED_MODULE_4__.readOnly)(this, "comparator");
        // connect
        this._subtract.connect(this._gtz);
    }
    static getDefaults() {
        return Object.assign(_Signal__WEBPACK_IMPORTED_MODULE_2__.Signal.getDefaults(), {
            value: 0,
        });
    }
    dispose() {
        super.dispose();
        this._gtz.dispose();
        this._subtract.dispose();
        this.comparator.dispose();
        return this;
    }
}
//# sourceMappingURL=GreaterThan.js.map

/***/ }),

/***/ "./node_modules/tone/build/esm/signal/GreaterThanZero.js":
/*!***************************************************************!*\
  !*** ./node_modules/tone/build/esm/signal/GreaterThanZero.js ***!
  \***************************************************************/
/*! namespace exports */
/*! export GreaterThanZero [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "GreaterThanZero": () => /* binding */ GreaterThanZero
/* harmony export */ });
/* harmony import */ var _SignalOperator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./SignalOperator */ "./node_modules/tone/build/esm/signal/SignalOperator.js");
/* harmony import */ var _Multiply__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Multiply */ "./node_modules/tone/build/esm/signal/Multiply.js");
/* harmony import */ var _WaveShaper__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./WaveShaper */ "./node_modules/tone/build/esm/signal/WaveShaper.js");
/* harmony import */ var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../core/util/Defaults */ "./node_modules/tone/build/esm/core/util/Defaults.js");
;



/**
 * GreaterThanZero outputs 1 when the input is strictly greater than zero
 * @example
 * return Tone.Offline(() => {
 * 	const gt0 = new Tone.GreaterThanZero().toDestination();
 * 	const sig = new Tone.Signal(0.5).connect(gt0);
 * 	sig.setValueAtTime(-1, 0.05);
 * }, 0.1, 1);
 * @category Signal
 */
class GreaterThanZero extends _SignalOperator__WEBPACK_IMPORTED_MODULE_0__.SignalOperator {
    constructor() {
        super(Object.assign((0,_core_util_Defaults__WEBPACK_IMPORTED_MODULE_3__.optionsFromArguments)(GreaterThanZero.getDefaults(), arguments)));
        this.name = "GreaterThanZero";
        this._thresh = this.output = new _WaveShaper__WEBPACK_IMPORTED_MODULE_2__.WaveShaper({
            context: this.context,
            length: 127,
            mapping: (val) => {
                if (val <= 0) {
                    return 0;
                }
                else {
                    return 1;
                }
            },
        });
        this._scale = this.input = new _Multiply__WEBPACK_IMPORTED_MODULE_1__.Multiply({
            context: this.context,
            value: 10000
        });
        // connections
        this._scale.connect(this._thresh);
    }
    dispose() {
        super.dispose();
        this._scale.dispose();
        this._thresh.dispose();
        return this;
    }
}
//# sourceMappingURL=GreaterThanZero.js.map

/***/ }),

/***/ "./node_modules/tone/build/esm/signal/Multiply.js":
/*!********************************************************!*\
  !*** ./node_modules/tone/build/esm/signal/Multiply.js ***!
  \********************************************************/
/*! namespace exports */
/*! export Multiply [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Multiply": () => /* binding */ Multiply
/* harmony export */ });
/* harmony import */ var _core_context_Gain__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../core/context/Gain */ "./node_modules/tone/build/esm/core/context/Gain.js");
/* harmony import */ var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../core/util/Defaults */ "./node_modules/tone/build/esm/core/util/Defaults.js");
/* harmony import */ var _Signal__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Signal */ "./node_modules/tone/build/esm/signal/Signal.js");
;


/**
 * Multiply two incoming signals. Or, if a number is given in the constructor,
 * multiplies the incoming signal by that value.
 *
 * @example
 * // multiply two signals
 * const mult = new Tone.Multiply();
 * const sigA = new Tone.Signal(3);
 * const sigB = new Tone.Signal(4);
 * sigA.connect(mult);
 * sigB.connect(mult.factor);
 * // output of mult is 12.
 * @example
 * // multiply a signal and a number
 * const mult = new Tone.Multiply(10);
 * const sig = new Tone.Signal(2).connect(mult);
 * // the output of mult is 20.
 * @category Signal
 */
class Multiply extends _Signal__WEBPACK_IMPORTED_MODULE_2__.Signal {
    constructor() {
        super(Object.assign((0,_core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__.optionsFromArguments)(Multiply.getDefaults(), arguments, ["value"])));
        this.name = "Multiply";
        /**
         * Indicates if the value should be overridden on connection
         */
        this.override = false;
        const options = (0,_core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__.optionsFromArguments)(Multiply.getDefaults(), arguments, ["value"]);
        this._mult = this.input = this.output = new _core_context_Gain__WEBPACK_IMPORTED_MODULE_0__.Gain({
            context: this.context,
            minValue: options.minValue,
            maxValue: options.maxValue,
        });
        this.factor = this._param = this._mult.gain;
        this.factor.setValueAtTime(options.value, 0);
    }
    static getDefaults() {
        return Object.assign(_Signal__WEBPACK_IMPORTED_MODULE_2__.Signal.getDefaults(), {
            value: 0,
        });
    }
    dispose() {
        super.dispose();
        this._mult.dispose();
        return this;
    }
}
//# sourceMappingURL=Multiply.js.map

/***/ }),

/***/ "./node_modules/tone/build/esm/signal/Negate.js":
/*!******************************************************!*\
  !*** ./node_modules/tone/build/esm/signal/Negate.js ***!
  \******************************************************/
/*! namespace exports */
/*! export Negate [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Negate": () => /* binding */ Negate
/* harmony export */ });
/* harmony import */ var _Multiply__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Multiply */ "./node_modules/tone/build/esm/signal/Multiply.js");
/* harmony import */ var _SignalOperator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./SignalOperator */ "./node_modules/tone/build/esm/signal/SignalOperator.js");
;

/**
 * Negate the incoming signal. i.e. an input signal of 10 will output -10
 *
 * @example
 * const neg = new Tone.Negate();
 * const sig = new Tone.Signal(-2).connect(neg);
 * // output of neg is positive 2.
 * @category Signal
 */
class Negate extends _SignalOperator__WEBPACK_IMPORTED_MODULE_1__.SignalOperator {
    constructor() {
        super(...arguments);
        this.name = "Negate";
        /**
         * negation is done by multiplying by -1
         */
        this._multiply = new _Multiply__WEBPACK_IMPORTED_MODULE_0__.Multiply({
            context: this.context,
            value: -1,
        });
        /**
         * The input and output are equal to the multiply node
         */
        this.input = this._multiply;
        this.output = this._multiply;
    }
    /**
     * clean up
     * @returns {Negate} this
     */
    dispose() {
        super.dispose();
        this._multiply.dispose();
        return this;
    }
}
//# sourceMappingURL=Negate.js.map

/***/ }),

/***/ "./node_modules/tone/build/esm/signal/Pow.js":
/*!***************************************************!*\
  !*** ./node_modules/tone/build/esm/signal/Pow.js ***!
  \***************************************************/
/*! namespace exports */
/*! export Pow [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Pow": () => /* binding */ Pow
/* harmony export */ });
/* harmony import */ var _WaveShaper__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./WaveShaper */ "./node_modules/tone/build/esm/signal/WaveShaper.js");
/* harmony import */ var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../core/util/Defaults */ "./node_modules/tone/build/esm/core/util/Defaults.js");
/* harmony import */ var _SignalOperator__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./SignalOperator */ "./node_modules/tone/build/esm/signal/SignalOperator.js");
;


/**
 * Pow applies an exponent to the incoming signal. The incoming signal must be AudioRange [-1, 1]
 *
 * @example
 * const pow = new Tone.Pow(2);
 * const sig = new Tone.Signal(0.5).connect(pow);
 * // output of pow is 0.25.
 * @category Signal
 */
class Pow extends _SignalOperator__WEBPACK_IMPORTED_MODULE_2__.SignalOperator {
    constructor() {
        super(Object.assign((0,_core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__.optionsFromArguments)(Pow.getDefaults(), arguments, ["value"])));
        this.name = "Pow";
        const options = (0,_core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__.optionsFromArguments)(Pow.getDefaults(), arguments, ["value"]);
        this._exponentScaler = this.input = this.output = new _WaveShaper__WEBPACK_IMPORTED_MODULE_0__.WaveShaper({
            context: this.context,
            mapping: this._expFunc(options.value),
            length: 8192,
        });
        this._exponent = options.value;
    }
    static getDefaults() {
        return Object.assign(_SignalOperator__WEBPACK_IMPORTED_MODULE_2__.SignalOperator.getDefaults(), {
            value: 1,
        });
    }
    /**
     * the function which maps the waveshaper
     * @param exponent exponent value
     */
    _expFunc(exponent) {
        return (val) => {
            return Math.pow(Math.abs(val), exponent);
        };
    }
    /**
     * The value of the exponent.
     */
    get value() {
        return this._exponent;
    }
    set value(exponent) {
        this._exponent = exponent;
        this._exponentScaler.setMap(this._expFunc(this._exponent));
    }
    /**
     * Clean up.
     */
    dispose() {
        super.dispose();
        this._exponentScaler.dispose();
        return this;
    }
}
//# sourceMappingURL=Pow.js.map

/***/ }),

/***/ "./node_modules/tone/build/esm/signal/Scale.js":
/*!*****************************************************!*\
  !*** ./node_modules/tone/build/esm/signal/Scale.js ***!
  \*****************************************************/
/*! namespace exports */
/*! export Scale [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Scale": () => /* binding */ Scale
/* harmony export */ });
/* harmony import */ var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../core/util/Defaults */ "./node_modules/tone/build/esm/core/util/Defaults.js");
/* harmony import */ var _Add__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Add */ "./node_modules/tone/build/esm/signal/Add.js");
/* harmony import */ var _Multiply__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Multiply */ "./node_modules/tone/build/esm/signal/Multiply.js");
/* harmony import */ var _SignalOperator__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./SignalOperator */ "./node_modules/tone/build/esm/signal/SignalOperator.js");
;



/**
 * Performs a linear scaling on an input signal.
 * Scales a NormalRange input to between
 * outputMin and outputMax.
 *
 * @example
 * const scale = new Tone.Scale(50, 100);
 * const signal = new Tone.Signal(0.5).connect(scale);
 * // the output of scale equals 75
 * @category Signal
 */
class Scale extends _SignalOperator__WEBPACK_IMPORTED_MODULE_3__.SignalOperator {
    constructor() {
        super(Object.assign((0,_core_util_Defaults__WEBPACK_IMPORTED_MODULE_0__.optionsFromArguments)(Scale.getDefaults(), arguments, ["min", "max"])));
        this.name = "Scale";
        const options = (0,_core_util_Defaults__WEBPACK_IMPORTED_MODULE_0__.optionsFromArguments)(Scale.getDefaults(), arguments, ["min", "max"]);
        this._mult = this.input = new _Multiply__WEBPACK_IMPORTED_MODULE_2__.Multiply({
            context: this.context,
            value: options.max - options.min,
        });
        this._add = this.output = new _Add__WEBPACK_IMPORTED_MODULE_1__.Add({
            context: this.context,
            value: options.min,
        });
        this._min = options.min;
        this._max = options.max;
        this.input.connect(this.output);
    }
    static getDefaults() {
        return Object.assign(_SignalOperator__WEBPACK_IMPORTED_MODULE_3__.SignalOperator.getDefaults(), {
            max: 1,
            min: 0,
        });
    }
    /**
     * The minimum output value. This number is output when the value input value is 0.
     */
    get min() {
        return this._min;
    }
    set min(min) {
        this._min = min;
        this._setRange();
    }
    /**
     * The maximum output value. This number is output when the value input value is 1.
     */
    get max() {
        return this._max;
    }
    set max(max) {
        this._max = max;
        this._setRange();
    }
    /**
     * set the values
     */
    _setRange() {
        this._add.value = this._min;
        this._mult.value = this._max - this._min;
    }
    dispose() {
        super.dispose();
        this._add.dispose();
        this._mult.dispose();
        return this;
    }
}
//# sourceMappingURL=Scale.js.map

/***/ }),

/***/ "./node_modules/tone/build/esm/signal/ScaleExp.js":
/*!********************************************************!*\
  !*** ./node_modules/tone/build/esm/signal/ScaleExp.js ***!
  \********************************************************/
/*! namespace exports */
/*! export ScaleExp [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ScaleExp": () => /* binding */ ScaleExp
/* harmony export */ });
/* harmony import */ var _Scale__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Scale */ "./node_modules/tone/build/esm/signal/Scale.js");
/* harmony import */ var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../core/util/Defaults */ "./node_modules/tone/build/esm/core/util/Defaults.js");
/* harmony import */ var _Pow__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Pow */ "./node_modules/tone/build/esm/signal/Pow.js");
;


/**
 * Performs an exponential scaling on an input signal.
 * Scales a NormalRange value [0,1] exponentially
 * to the output range of outputMin to outputMax.
 * @example
 * const scaleExp = new Tone.ScaleExp(0, 100, 2);
 * const signal = new Tone.Signal(0.5).connect(scaleExp);
 * @category Signal
 */
class ScaleExp extends _Scale__WEBPACK_IMPORTED_MODULE_0__.Scale {
    constructor() {
        super(Object.assign((0,_core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__.optionsFromArguments)(ScaleExp.getDefaults(), arguments, ["min", "max", "exponent"])));
        this.name = "ScaleExp";
        const options = (0,_core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__.optionsFromArguments)(ScaleExp.getDefaults(), arguments, ["min", "max", "exponent"]);
        this.input = this._exp = new _Pow__WEBPACK_IMPORTED_MODULE_2__.Pow({
            context: this.context,
            value: options.exponent,
        });
        this._exp.connect(this._mult);
    }
    static getDefaults() {
        return Object.assign(_Scale__WEBPACK_IMPORTED_MODULE_0__.Scale.getDefaults(), {
            exponent: 1,
        });
    }
    /**
     * Instead of interpolating linearly between the [[min]] and
     * [[max]] values, setting the exponent will interpolate between
     * the two values with an exponential curve.
     */
    get exponent() {
        return this._exp.value;
    }
    set exponent(exp) {
        this._exp.value = exp;
    }
    dispose() {
        super.dispose();
        this._exp.dispose();
        return this;
    }
}
//# sourceMappingURL=ScaleExp.js.map

/***/ }),

/***/ "./node_modules/tone/build/esm/signal/Signal.js":
/*!******************************************************!*\
  !*** ./node_modules/tone/build/esm/signal/Signal.js ***!
  \******************************************************/
/*! namespace exports */
/*! export Signal [provided] [no usage info] [missing usage info prevents renaming] */
/*! export connectSignal [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Signal": () => /* binding */ Signal,
/* harmony export */   "connectSignal": () => /* binding */ connectSignal
/* harmony export */ });
/* harmony import */ var _core_context_Param__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../core/context/Param */ "./node_modules/tone/build/esm/core/context/Param.js");
/* harmony import */ var _core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../core/context/ToneAudioNode */ "./node_modules/tone/build/esm/core/context/ToneAudioNode.js");
/* harmony import */ var _core_util_AdvancedTypeCheck__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../core/util/AdvancedTypeCheck */ "./node_modules/tone/build/esm/core/util/AdvancedTypeCheck.js");
/* harmony import */ var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../core/util/Defaults */ "./node_modules/tone/build/esm/core/util/Defaults.js");
/* harmony import */ var _ToneConstantSource__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./ToneConstantSource */ "./node_modules/tone/build/esm/signal/ToneConstantSource.js");
;





/**
 * A signal is an audio-rate value. Tone.Signal is a core component of the library.
 * Unlike a number, Signals can be scheduled with sample-level accuracy. Tone.Signal
 * has all of the methods available to native Web Audio
 * [AudioParam](http://webaudio.github.io/web-audio-api/#the-audioparam-interface)
 * as well as additional conveniences. Read more about working with signals
 * [here](https://github.com/Tonejs/Tone.js/wiki/Signals).
 *
 * @example
 * const osc = new Tone.Oscillator().toDestination().start();
 * // a scheduleable signal which can be connected to control an AudioParam or another Signal
 * const signal = new Tone.Signal({
 * 	value: "C4",
 * 	units: "frequency"
 * }).connect(osc.frequency);
 * // the scheduled ramp controls the connected signal
 * signal.rampTo("C2", 4, "+0.5");
 * @category Signal
 */
class Signal extends _core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_1__.ToneAudioNode {
    constructor() {
        super((0,_core_util_Defaults__WEBPACK_IMPORTED_MODULE_3__.optionsFromArguments)(Signal.getDefaults(), arguments, ["value", "units"]));
        this.name = "Signal";
        /**
         * Indicates if the value should be overridden on connection.
         */
        this.override = true;
        const options = (0,_core_util_Defaults__WEBPACK_IMPORTED_MODULE_3__.optionsFromArguments)(Signal.getDefaults(), arguments, ["value", "units"]);
        this.output = this._constantSource = new _ToneConstantSource__WEBPACK_IMPORTED_MODULE_4__.ToneConstantSource({
            context: this.context,
            convert: options.convert,
            offset: options.value,
            units: options.units,
            minValue: options.minValue,
            maxValue: options.maxValue,
        });
        this._constantSource.start(0);
        this.input = this._param = this._constantSource.offset;
    }
    static getDefaults() {
        return Object.assign(_core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_1__.ToneAudioNode.getDefaults(), {
            convert: true,
            units: "number",
            value: 0,
        });
    }
    connect(destination, outputNum = 0, inputNum = 0) {
        // start it only when connected to something
        connectSignal(this, destination, outputNum, inputNum);
        return this;
    }
    dispose() {
        super.dispose();
        this._param.dispose();
        this._constantSource.dispose();
        return this;
    }
    //-------------------------------------
    // ABSTRACT PARAM INTERFACE
    // just a proxy for the ConstantSourceNode's offset AudioParam
    // all docs are generated from AbstractParam.ts
    //-------------------------------------
    setValueAtTime(value, time) {
        this._param.setValueAtTime(value, time);
        return this;
    }
    getValueAtTime(time) {
        return this._param.getValueAtTime(time);
    }
    setRampPoint(time) {
        this._param.setRampPoint(time);
        return this;
    }
    linearRampToValueAtTime(value, time) {
        this._param.linearRampToValueAtTime(value, time);
        return this;
    }
    exponentialRampToValueAtTime(value, time) {
        this._param.exponentialRampToValueAtTime(value, time);
        return this;
    }
    exponentialRampTo(value, rampTime, startTime) {
        this._param.exponentialRampTo(value, rampTime, startTime);
        return this;
    }
    linearRampTo(value, rampTime, startTime) {
        this._param.linearRampTo(value, rampTime, startTime);
        return this;
    }
    targetRampTo(value, rampTime, startTime) {
        this._param.targetRampTo(value, rampTime, startTime);
        return this;
    }
    exponentialApproachValueAtTime(value, time, rampTime) {
        this._param.exponentialApproachValueAtTime(value, time, rampTime);
        return this;
    }
    setTargetAtTime(value, startTime, timeConstant) {
        this._param.setTargetAtTime(value, startTime, timeConstant);
        return this;
    }
    setValueCurveAtTime(values, startTime, duration, scaling) {
        this._param.setValueCurveAtTime(values, startTime, duration, scaling);
        return this;
    }
    cancelScheduledValues(time) {
        this._param.cancelScheduledValues(time);
        return this;
    }
    cancelAndHoldAtTime(time) {
        this._param.cancelAndHoldAtTime(time);
        return this;
    }
    rampTo(value, rampTime, startTime) {
        this._param.rampTo(value, rampTime, startTime);
        return this;
    }
    get value() {
        return this._param.value;
    }
    set value(value) {
        this._param.value = value;
    }
    get convert() {
        return this._param.convert;
    }
    set convert(convert) {
        this._param.convert = convert;
    }
    get units() {
        return this._param.units;
    }
    get overridden() {
        return this._param.overridden;
    }
    set overridden(overridden) {
        this._param.overridden = overridden;
    }
    get maxValue() {
        return this._param.maxValue;
    }
    get minValue() {
        return this._param.minValue;
    }
    /**
     * See [[Param.apply]].
     */
    apply(param) {
        this._param.apply(param);
        return this;
    }
}
/**
 * When connecting from a signal, it's necessary to zero out the node destination
 * node if that node is also a signal. If the destination is not 0, then the values
 * will be summed. This method insures that the output of the destination signal will
 * be the same as the source signal, making the destination signal a pass through node.
 * @param signal The output signal to connect from
 * @param destination the destination to connect to
 * @param outputNum the optional output number
 * @param inputNum the input number
 */
function connectSignal(signal, destination, outputNum, inputNum) {
    if (destination instanceof _core_context_Param__WEBPACK_IMPORTED_MODULE_0__.Param || (0,_core_util_AdvancedTypeCheck__WEBPACK_IMPORTED_MODULE_2__.isAudioParam)(destination) ||
        (destination instanceof Signal && destination.override)) {
        // cancel changes
        destination.cancelScheduledValues(0);
        // reset the value
        destination.setValueAtTime(0, 0);
        // mark the value as overridden
        if (destination instanceof Signal) {
            destination.overridden = true;
        }
    }
    (0,_core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_1__.connect)(signal, destination, outputNum, inputNum);
}
//# sourceMappingURL=Signal.js.map

/***/ }),

/***/ "./node_modules/tone/build/esm/signal/SignalOperator.js":
/*!**************************************************************!*\
  !*** ./node_modules/tone/build/esm/signal/SignalOperator.js ***!
  \**************************************************************/
/*! namespace exports */
/*! export SignalOperator [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "SignalOperator": () => /* binding */ SignalOperator
/* harmony export */ });
/* harmony import */ var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../core/util/Defaults */ "./node_modules/tone/build/esm/core/util/Defaults.js");
/* harmony import */ var _core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../core/context/ToneAudioNode */ "./node_modules/tone/build/esm/core/context/ToneAudioNode.js");
/* harmony import */ var _Signal__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Signal */ "./node_modules/tone/build/esm/signal/Signal.js");
;


/**
 * A signal operator has an input and output and modifies the signal.
 */
class SignalOperator extends _core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_1__.ToneAudioNode {
    constructor() {
        super(Object.assign((0,_core_util_Defaults__WEBPACK_IMPORTED_MODULE_0__.optionsFromArguments)(SignalOperator.getDefaults(), arguments, ["context"])));
    }
    connect(destination, outputNum = 0, inputNum = 0) {
        (0,_Signal__WEBPACK_IMPORTED_MODULE_2__.connectSignal)(this, destination, outputNum, inputNum);
        return this;
    }
}
//# sourceMappingURL=SignalOperator.js.map

/***/ }),

/***/ "./node_modules/tone/build/esm/signal/Subtract.js":
/*!********************************************************!*\
  !*** ./node_modules/tone/build/esm/signal/Subtract.js ***!
  \********************************************************/
/*! namespace exports */
/*! export Subtract [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Subtract": () => /* binding */ Subtract
/* harmony export */ });
/* harmony import */ var _core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../core/context/ToneAudioNode */ "./node_modules/tone/build/esm/core/context/ToneAudioNode.js");
/* harmony import */ var _core_context_Gain__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../core/context/Gain */ "./node_modules/tone/build/esm/core/context/Gain.js");
/* harmony import */ var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../core/util/Defaults */ "./node_modules/tone/build/esm/core/util/Defaults.js");
/* harmony import */ var _signal_Negate__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../signal/Negate */ "./node_modules/tone/build/esm/signal/Negate.js");
/* harmony import */ var _signal_Signal__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../signal/Signal */ "./node_modules/tone/build/esm/signal/Signal.js");
;




/**
 * Subtract the signal connected to the input is subtracted from the signal connected
 * The subtrahend.
 *
 * @example
 * // subtract a scalar from a signal
 * const sub = new Tone.Subtract(1);
 * const sig = new Tone.Signal(4).connect(sub);
 * // the output of sub is 3.
 * @example
 * // subtract two signals
 * const sub = new Tone.Subtract();
 * const sigA = new Tone.Signal(10);
 * const sigB = new Tone.Signal(2.5);
 * sigA.connect(sub);
 * sigB.connect(sub.subtrahend);
 * // output of sub is 7.5
 * @category Signal
 */
class Subtract extends _signal_Signal__WEBPACK_IMPORTED_MODULE_4__.Signal {
    constructor() {
        super(Object.assign((0,_core_util_Defaults__WEBPACK_IMPORTED_MODULE_2__.optionsFromArguments)(Subtract.getDefaults(), arguments, ["value"])));
        this.override = false;
        this.name = "Subtract";
        /**
         * the summing node
         */
        this._sum = new _core_context_Gain__WEBPACK_IMPORTED_MODULE_1__.Gain({ context: this.context });
        this.input = this._sum;
        this.output = this._sum;
        /**
         * Negate the input of the second input before connecting it to the summing node.
         */
        this._neg = new _signal_Negate__WEBPACK_IMPORTED_MODULE_3__.Negate({ context: this.context });
        /**
         * The value which is subtracted from the main signal
         */
        this.subtrahend = this._param;
        (0,_core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_0__.connectSeries)(this._constantSource, this._neg, this._sum);
    }
    static getDefaults() {
        return Object.assign(_signal_Signal__WEBPACK_IMPORTED_MODULE_4__.Signal.getDefaults(), {
            value: 0,
        });
    }
    dispose() {
        super.dispose();
        this._neg.dispose();
        this._sum.dispose();
        return this;
    }
}
//# sourceMappingURL=Subtract.js.map

/***/ }),

/***/ "./node_modules/tone/build/esm/signal/SyncedSignal.js":
/*!************************************************************!*\
  !*** ./node_modules/tone/build/esm/signal/SyncedSignal.js ***!
  \************************************************************/
/*! namespace exports */
/*! export SyncedSignal [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "SyncedSignal": () => /* binding */ SyncedSignal
/* harmony export */ });
/* harmony import */ var _Signal__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Signal */ "./node_modules/tone/build/esm/signal/Signal.js");
/* harmony import */ var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../core/util/Defaults */ "./node_modules/tone/build/esm/core/util/Defaults.js");
/* harmony import */ var _core_type_TransportTime__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../core/type/TransportTime */ "./node_modules/tone/build/esm/core/type/TransportTime.js");
/* harmony import */ var _ToneConstantSource__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./ToneConstantSource */ "./node_modules/tone/build/esm/signal/ToneConstantSource.js");
;



/**
 * Adds the ability to synchronize the signal to the [[Transport]]
 */
class SyncedSignal extends _Signal__WEBPACK_IMPORTED_MODULE_0__.Signal {
    constructor() {
        super((0,_core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__.optionsFromArguments)(_Signal__WEBPACK_IMPORTED_MODULE_0__.Signal.getDefaults(), arguments, ["value", "units"]));
        this.name = "SyncedSignal";
        /**
         * Don't override when something is connected to the input
         */
        this.override = false;
        const options = (0,_core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__.optionsFromArguments)(_Signal__WEBPACK_IMPORTED_MODULE_0__.Signal.getDefaults(), arguments, ["value", "units"]);
        this._lastVal = options.value;
        this._synced = this.context.transport.scheduleRepeat(this._onTick.bind(this), "1i");
        this._syncedCallback = this._anchorValue.bind(this);
        this.context.transport.on("start", this._syncedCallback);
        this.context.transport.on("pause", this._syncedCallback);
        this.context.transport.on("stop", this._syncedCallback);
        // disconnect the constant source from the output and replace it with another one
        this._constantSource.disconnect();
        this._constantSource.stop(0);
        // create a new one
        this._constantSource = this.output = new _ToneConstantSource__WEBPACK_IMPORTED_MODULE_3__.ToneConstantSource({
            context: this.context,
            offset: options.value,
            units: options.units,
        }).start(0);
        this.setValueAtTime(options.value, 0);
    }
    /**
     * Callback which is invoked every tick.
     */
    _onTick(time) {
        const val = super.getValueAtTime(this.context.transport.seconds);
        // approximate ramp curves with linear ramps
        if (this._lastVal !== val) {
            this._lastVal = val;
            this._constantSource.offset.setValueAtTime(val, time);
        }
    }
    /**
     * Anchor the value at the start and stop of the Transport
     */
    _anchorValue(time) {
        const val = super.getValueAtTime(this.context.transport.seconds);
        this._lastVal = val;
        this._constantSource.offset.cancelAndHoldAtTime(time);
        this._constantSource.offset.setValueAtTime(val, time);
    }
    getValueAtTime(time) {
        const computedTime = new _core_type_TransportTime__WEBPACK_IMPORTED_MODULE_2__.TransportTimeClass(this.context, time).toSeconds();
        return super.getValueAtTime(computedTime);
    }
    setValueAtTime(value, time) {
        const computedTime = new _core_type_TransportTime__WEBPACK_IMPORTED_MODULE_2__.TransportTimeClass(this.context, time).toSeconds();
        super.setValueAtTime(value, computedTime);
        return this;
    }
    linearRampToValueAtTime(value, time) {
        const computedTime = new _core_type_TransportTime__WEBPACK_IMPORTED_MODULE_2__.TransportTimeClass(this.context, time).toSeconds();
        super.linearRampToValueAtTime(value, computedTime);
        return this;
    }
    exponentialRampToValueAtTime(value, time) {
        const computedTime = new _core_type_TransportTime__WEBPACK_IMPORTED_MODULE_2__.TransportTimeClass(this.context, time).toSeconds();
        super.exponentialRampToValueAtTime(value, computedTime);
        return this;
    }
    setTargetAtTime(value, startTime, timeConstant) {
        const computedTime = new _core_type_TransportTime__WEBPACK_IMPORTED_MODULE_2__.TransportTimeClass(this.context, startTime).toSeconds();
        super.setTargetAtTime(value, computedTime, timeConstant);
        return this;
    }
    cancelScheduledValues(startTime) {
        const computedTime = new _core_type_TransportTime__WEBPACK_IMPORTED_MODULE_2__.TransportTimeClass(this.context, startTime).toSeconds();
        super.cancelScheduledValues(computedTime);
        return this;
    }
    setValueCurveAtTime(values, startTime, duration, scaling) {
        const computedTime = new _core_type_TransportTime__WEBPACK_IMPORTED_MODULE_2__.TransportTimeClass(this.context, startTime).toSeconds();
        duration = this.toSeconds(duration);
        super.setValueCurveAtTime(values, computedTime, duration, scaling);
        return this;
    }
    cancelAndHoldAtTime(time) {
        const computedTime = new _core_type_TransportTime__WEBPACK_IMPORTED_MODULE_2__.TransportTimeClass(this.context, time).toSeconds();
        super.cancelAndHoldAtTime(computedTime);
        return this;
    }
    setRampPoint(time) {
        const computedTime = new _core_type_TransportTime__WEBPACK_IMPORTED_MODULE_2__.TransportTimeClass(this.context, time).toSeconds();
        super.setRampPoint(computedTime);
        return this;
    }
    exponentialRampTo(value, rampTime, startTime) {
        const computedTime = new _core_type_TransportTime__WEBPACK_IMPORTED_MODULE_2__.TransportTimeClass(this.context, startTime).toSeconds();
        super.exponentialRampTo(value, rampTime, computedTime);
        return this;
    }
    linearRampTo(value, rampTime, startTime) {
        const computedTime = new _core_type_TransportTime__WEBPACK_IMPORTED_MODULE_2__.TransportTimeClass(this.context, startTime).toSeconds();
        super.linearRampTo(value, rampTime, computedTime);
        return this;
    }
    targetRampTo(value, rampTime, startTime) {
        const computedTime = new _core_type_TransportTime__WEBPACK_IMPORTED_MODULE_2__.TransportTimeClass(this.context, startTime).toSeconds();
        super.targetRampTo(value, rampTime, computedTime);
        return this;
    }
    dispose() {
        super.dispose();
        this.context.transport.clear(this._synced);
        this.context.transport.off("start", this._syncedCallback);
        this.context.transport.off("pause", this._syncedCallback);
        this.context.transport.off("stop", this._syncedCallback);
        this._constantSource.dispose();
        return this;
    }
}
//# sourceMappingURL=SyncedSignal.js.map

/***/ }),

/***/ "./node_modules/tone/build/esm/signal/ToneConstantSource.js":
/*!******************************************************************!*\
  !*** ./node_modules/tone/build/esm/signal/ToneConstantSource.js ***!
  \******************************************************************/
/*! namespace exports */
/*! export ToneConstantSource [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ToneConstantSource": () => /* binding */ ToneConstantSource
/* harmony export */ });
/* harmony import */ var _core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../core/context/ToneAudioNode */ "./node_modules/tone/build/esm/core/context/ToneAudioNode.js");
/* harmony import */ var _core_context_Param__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../core/context/Param */ "./node_modules/tone/build/esm/core/context/Param.js");
/* harmony import */ var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../core/util/Defaults */ "./node_modules/tone/build/esm/core/util/Defaults.js");
/* harmony import */ var _source_OneShotSource__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../source/OneShotSource */ "./node_modules/tone/build/esm/source/OneShotSource.js");
;



/**
 * Wrapper around the native fire-and-forget ConstantSource.
 * Adds the ability to reschedule the stop method.
 * @category Signal
 */
class ToneConstantSource extends _source_OneShotSource__WEBPACK_IMPORTED_MODULE_3__.OneShotSource {
    constructor() {
        super((0,_core_util_Defaults__WEBPACK_IMPORTED_MODULE_2__.optionsFromArguments)(ToneConstantSource.getDefaults(), arguments, ["offset"]));
        this.name = "ToneConstantSource";
        /**
         * The signal generator
         */
        this._source = this.context.createConstantSource();
        const options = (0,_core_util_Defaults__WEBPACK_IMPORTED_MODULE_2__.optionsFromArguments)(ToneConstantSource.getDefaults(), arguments, ["offset"]);
        (0,_core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_0__.connect)(this._source, this._gainNode);
        this.offset = new _core_context_Param__WEBPACK_IMPORTED_MODULE_1__.Param({
            context: this.context,
            convert: options.convert,
            param: this._source.offset,
            units: options.units,
            value: options.offset,
            minValue: options.minValue,
            maxValue: options.maxValue,
        });
    }
    static getDefaults() {
        return Object.assign(_source_OneShotSource__WEBPACK_IMPORTED_MODULE_3__.OneShotSource.getDefaults(), {
            convert: true,
            offset: 1,
            units: "number",
        });
    }
    /**
     * Start the source node at the given time
     * @param  time When to start the source
     */
    start(time) {
        const computedTime = this.toSeconds(time);
        this.log("start", computedTime);
        this._startGain(computedTime);
        this._source.start(computedTime);
        return this;
    }
    _stopSource(time) {
        this._source.stop(time);
    }
    dispose() {
        super.dispose();
        if (this.state === "started") {
            this.stop();
        }
        this._source.disconnect();
        this.offset.dispose();
        return this;
    }
}
//# sourceMappingURL=ToneConstantSource.js.map

/***/ }),

/***/ "./node_modules/tone/build/esm/signal/WaveShaper.js":
/*!**********************************************************!*\
  !*** ./node_modules/tone/build/esm/signal/WaveShaper.js ***!
  \**********************************************************/
/*! namespace exports */
/*! export WaveShaper [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "WaveShaper": () => /* binding */ WaveShaper
/* harmony export */ });
/* harmony import */ var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../core/util/Defaults */ "./node_modules/tone/build/esm/core/util/Defaults.js");
/* harmony import */ var _core_util_TypeCheck__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../core/util/TypeCheck */ "./node_modules/tone/build/esm/core/util/TypeCheck.js");
/* harmony import */ var _core_util_Debug__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../core/util/Debug */ "./node_modules/tone/build/esm/core/util/Debug.js");
/* harmony import */ var _Signal__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Signal */ "./node_modules/tone/build/esm/signal/Signal.js");
/* harmony import */ var _SignalOperator__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./SignalOperator */ "./node_modules/tone/build/esm/signal/SignalOperator.js");
;




/**
 * Wraps the native Web Audio API
 * [WaveShaperNode](http://webaudio.github.io/web-audio-api/#the-waveshapernode-interface).
 *
 * @example
 * const osc = new Tone.Oscillator().toDestination().start();
 * // multiply the output of the signal by 2 using the waveshaper's function
 * const timesTwo = new Tone.WaveShaper((val) => val * 2, 2048).connect(osc.frequency);
 * const signal = new Tone.Signal(440).connect(timesTwo);
 * @category Signal
 */
class WaveShaper extends _SignalOperator__WEBPACK_IMPORTED_MODULE_4__.SignalOperator {
    constructor() {
        super(Object.assign((0,_core_util_Defaults__WEBPACK_IMPORTED_MODULE_0__.optionsFromArguments)(WaveShaper.getDefaults(), arguments, ["mapping", "length"])));
        this.name = "WaveShaper";
        /**
         * the waveshaper node
         */
        this._shaper = this.context.createWaveShaper();
        /**
         * The input to the waveshaper node.
         */
        this.input = this._shaper;
        /**
         * The output from the waveshaper node
         */
        this.output = this._shaper;
        const options = (0,_core_util_Defaults__WEBPACK_IMPORTED_MODULE_0__.optionsFromArguments)(WaveShaper.getDefaults(), arguments, ["mapping", "length"]);
        if ((0,_core_util_TypeCheck__WEBPACK_IMPORTED_MODULE_1__.isArray)(options.mapping) || options.mapping instanceof Float32Array) {
            this.curve = Float32Array.from(options.mapping);
        }
        else if ((0,_core_util_TypeCheck__WEBPACK_IMPORTED_MODULE_1__.isFunction)(options.mapping)) {
            this.setMap(options.mapping, options.length);
        }
    }
    static getDefaults() {
        return Object.assign(_Signal__WEBPACK_IMPORTED_MODULE_3__.Signal.getDefaults(), {
            length: 1024,
        });
    }
    /**
     * Uses a mapping function to set the value of the curve.
     * @param mapping The function used to define the values.
     *                The mapping function take two arguments:
     *                the first is the value at the current position
     *                which goes from -1 to 1 over the number of elements
     *                in the curve array. The second argument is the array position.
     * @example
     * const shaper = new Tone.WaveShaper();
     * // map the input signal from [-1, 1] to [0, 10]
     * shaper.setMap((val, index) => (val + 1) * 5);
     */
    setMap(mapping, length = 1024) {
        const array = new Float32Array(length);
        for (let i = 0, len = length; i < len; i++) {
            const normalized = (i / (len - 1)) * 2 - 1;
            array[i] = mapping(normalized, i);
        }
        this.curve = array;
        return this;
    }
    /**
     * The array to set as the waveshaper curve. For linear curves
     * array length does not make much difference, but for complex curves
     * longer arrays will provide smoother interpolation.
     */
    get curve() {
        return this._shaper.curve;
    }
    set curve(mapping) {
        this._shaper.curve = mapping;
    }
    /**
     * Specifies what type of oversampling (if any) should be used when
     * applying the shaping curve. Can either be "none", "2x" or "4x".
     */
    get oversample() {
        return this._shaper.oversample;
    }
    set oversample(oversampling) {
        const isOverSampleType = ["none", "2x", "4x"].some(str => str.includes(oversampling));
        (0,_core_util_Debug__WEBPACK_IMPORTED_MODULE_2__.assert)(isOverSampleType, "oversampling must be either 'none', '2x', or '4x'");
        this._shaper.oversample = oversampling;
    }
    /**
     * Clean up.
     */
    dispose() {
        super.dispose();
        this._shaper.disconnect();
        return this;
    }
}
//# sourceMappingURL=WaveShaper.js.map

/***/ }),

/***/ "./node_modules/tone/build/esm/signal/Zero.js":
/*!****************************************************!*\
  !*** ./node_modules/tone/build/esm/signal/Zero.js ***!
  \****************************************************/
/*! namespace exports */
/*! export Zero [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Zero": () => /* binding */ Zero
/* harmony export */ });
/* harmony import */ var _core_context_Gain__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../core/context/Gain */ "./node_modules/tone/build/esm/core/context/Gain.js");
/* harmony import */ var _core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../core/context/ToneAudioNode */ "./node_modules/tone/build/esm/core/context/ToneAudioNode.js");
/* harmony import */ var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../core/util/Defaults */ "./node_modules/tone/build/esm/core/util/Defaults.js");
/* harmony import */ var _SignalOperator__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./SignalOperator */ "./node_modules/tone/build/esm/signal/SignalOperator.js");
;



/**
 * Tone.Zero outputs 0's at audio-rate. The reason this has to be
 * it's own class is that many browsers optimize out Tone.Signal
 * with a value of 0 and will not process nodes further down the graph.
 * @category Signal
 */
class Zero extends _SignalOperator__WEBPACK_IMPORTED_MODULE_3__.SignalOperator {
    constructor() {
        super(Object.assign((0,_core_util_Defaults__WEBPACK_IMPORTED_MODULE_2__.optionsFromArguments)(Zero.getDefaults(), arguments)));
        this.name = "Zero";
        /**
         * The gain node which connects the constant source to the output
         */
        this._gain = new _core_context_Gain__WEBPACK_IMPORTED_MODULE_0__.Gain({ context: this.context });
        /**
         * Only outputs 0
         */
        this.output = this._gain;
        /**
         * no input node
         */
        this.input = undefined;
        (0,_core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_1__.connect)(this.context.getConstant(0), this._gain);
    }
    /**
     * clean up
     */
    dispose() {
        super.dispose();
        (0,_core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_1__.disconnect)(this.context.getConstant(0), this._gain);
        return this;
    }
}
//# sourceMappingURL=Zero.js.map

/***/ }),

/***/ "./node_modules/tone/build/esm/signal/index.js":
/*!*****************************************************!*\
  !*** ./node_modules/tone/build/esm/signal/index.js ***!
  \*****************************************************/
/*! namespace exports */
/*! export Abs [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/signal/Abs.js .Abs */
/*! export Add [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/signal/Add.js .Add */
/*! export AudioToGain [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/signal/AudioToGain.js .AudioToGain */
/*! export GainToAudio [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/signal/GainToAudio.js .GainToAudio */
/*! export GreaterThan [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/signal/GreaterThan.js .GreaterThan */
/*! export GreaterThanZero [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/signal/GreaterThanZero.js .GreaterThanZero */
/*! export Multiply [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/signal/Multiply.js .Multiply */
/*! export Negate [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/signal/Negate.js .Negate */
/*! export Pow [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/signal/Pow.js .Pow */
/*! export Scale [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/signal/Scale.js .Scale */
/*! export ScaleExp [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/signal/ScaleExp.js .ScaleExp */
/*! export Signal [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/signal/Signal.js .Signal */
/*! export Subtract [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/signal/Subtract.js .Subtract */
/*! export SyncedSignal [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/signal/SyncedSignal.js .SyncedSignal */
/*! export WaveShaper [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/signal/WaveShaper.js .WaveShaper */
/*! export Zero [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/signal/Zero.js .Zero */
/*! export connectSignal [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/signal/Signal.js .connectSignal */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_exports__, __webpack_require__.d, __webpack_require__.r, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Add": () => /* reexport safe */ _Add__WEBPACK_IMPORTED_MODULE_0__.Add,
/* harmony export */   "Abs": () => /* reexport safe */ _Abs__WEBPACK_IMPORTED_MODULE_1__.Abs,
/* harmony export */   "AudioToGain": () => /* reexport safe */ _AudioToGain__WEBPACK_IMPORTED_MODULE_2__.AudioToGain,
/* harmony export */   "GainToAudio": () => /* reexport safe */ _GainToAudio__WEBPACK_IMPORTED_MODULE_3__.GainToAudio,
/* harmony export */   "GreaterThan": () => /* reexport safe */ _GreaterThan__WEBPACK_IMPORTED_MODULE_4__.GreaterThan,
/* harmony export */   "GreaterThanZero": () => /* reexport safe */ _GreaterThanZero__WEBPACK_IMPORTED_MODULE_5__.GreaterThanZero,
/* harmony export */   "Multiply": () => /* reexport safe */ _Multiply__WEBPACK_IMPORTED_MODULE_6__.Multiply,
/* harmony export */   "Negate": () => /* reexport safe */ _Negate__WEBPACK_IMPORTED_MODULE_7__.Negate,
/* harmony export */   "Pow": () => /* reexport safe */ _Pow__WEBPACK_IMPORTED_MODULE_8__.Pow,
/* harmony export */   "Signal": () => /* reexport safe */ _Signal__WEBPACK_IMPORTED_MODULE_9__.Signal,
/* harmony export */   "connectSignal": () => /* reexport safe */ _Signal__WEBPACK_IMPORTED_MODULE_9__.connectSignal,
/* harmony export */   "Scale": () => /* reexport safe */ _Scale__WEBPACK_IMPORTED_MODULE_10__.Scale,
/* harmony export */   "ScaleExp": () => /* reexport safe */ _ScaleExp__WEBPACK_IMPORTED_MODULE_11__.ScaleExp,
/* harmony export */   "Subtract": () => /* reexport safe */ _Subtract__WEBPACK_IMPORTED_MODULE_12__.Subtract,
/* harmony export */   "SyncedSignal": () => /* reexport safe */ _SyncedSignal__WEBPACK_IMPORTED_MODULE_13__.SyncedSignal,
/* harmony export */   "WaveShaper": () => /* reexport safe */ _WaveShaper__WEBPACK_IMPORTED_MODULE_14__.WaveShaper,
/* harmony export */   "Zero": () => /* reexport safe */ _Zero__WEBPACK_IMPORTED_MODULE_15__.Zero
/* harmony export */ });
/* harmony import */ var _Add__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Add */ "./node_modules/tone/build/esm/signal/Add.js");
/* harmony import */ var _Abs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Abs */ "./node_modules/tone/build/esm/signal/Abs.js");
/* harmony import */ var _AudioToGain__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./AudioToGain */ "./node_modules/tone/build/esm/signal/AudioToGain.js");
/* harmony import */ var _GainToAudio__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./GainToAudio */ "./node_modules/tone/build/esm/signal/GainToAudio.js");
/* harmony import */ var _GreaterThan__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./GreaterThan */ "./node_modules/tone/build/esm/signal/GreaterThan.js");
/* harmony import */ var _GreaterThanZero__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./GreaterThanZero */ "./node_modules/tone/build/esm/signal/GreaterThanZero.js");
/* harmony import */ var _Multiply__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./Multiply */ "./node_modules/tone/build/esm/signal/Multiply.js");
/* harmony import */ var _Negate__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./Negate */ "./node_modules/tone/build/esm/signal/Negate.js");
/* harmony import */ var _Pow__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./Pow */ "./node_modules/tone/build/esm/signal/Pow.js");
/* harmony import */ var _Signal__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./Signal */ "./node_modules/tone/build/esm/signal/Signal.js");
/* harmony import */ var _Scale__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./Scale */ "./node_modules/tone/build/esm/signal/Scale.js");
/* harmony import */ var _ScaleExp__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./ScaleExp */ "./node_modules/tone/build/esm/signal/ScaleExp.js");
/* harmony import */ var _Subtract__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./Subtract */ "./node_modules/tone/build/esm/signal/Subtract.js");
/* harmony import */ var _SyncedSignal__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./SyncedSignal */ "./node_modules/tone/build/esm/signal/SyncedSignal.js");
/* harmony import */ var _WaveShaper__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./WaveShaper */ "./node_modules/tone/build/esm/signal/WaveShaper.js");
/* harmony import */ var _Zero__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./Zero */ "./node_modules/tone/build/esm/signal/Zero.js");
















//# sourceMappingURL=index.js.map

/***/ }),

/***/ "./node_modules/tone/build/esm/source/Noise.js":
/*!*****************************************************!*\
  !*** ./node_modules/tone/build/esm/source/Noise.js ***!
  \*****************************************************/
/*! namespace exports */
/*! export Noise [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Noise": () => /* binding */ Noise
/* harmony export */ });
/* harmony import */ var _core_context_ToneAudioBuffer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../core/context/ToneAudioBuffer */ "./node_modules/tone/build/esm/core/context/ToneAudioBuffer.js");
/* harmony import */ var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../core/util/Defaults */ "./node_modules/tone/build/esm/core/util/Defaults.js");
/* harmony import */ var _core_util_Debug__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../core/util/Debug */ "./node_modules/tone/build/esm/core/util/Debug.js");
/* harmony import */ var _source_Source__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../source/Source */ "./node_modules/tone/build/esm/source/Source.js");
/* harmony import */ var _buffer_ToneBufferSource__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./buffer/ToneBufferSource */ "./node_modules/tone/build/esm/source/buffer/ToneBufferSource.js");
;




/**
 * Noise is a noise generator. It uses looped noise buffers to save on performance.
 * Noise supports the noise types: "pink", "white", and "brown". Read more about
 * colors of noise on [Wikipedia](https://en.wikipedia.org/wiki/Colors_of_noise).
 *
 * @example
 * // initialize the noise and start
 * const noise = new Tone.Noise("pink").start();
 * // make an autofilter to shape the noise
 * const autoFilter = new Tone.AutoFilter({
 * 	frequency: "8n",
 * 	baseFrequency: 200,
 * 	octaves: 8
 * }).toDestination().start();
 * // connect the noise
 * noise.connect(autoFilter);
 * // start the autofilter LFO
 * autoFilter.start();
 * @category Source
 */
class Noise extends _source_Source__WEBPACK_IMPORTED_MODULE_3__.Source {
    constructor() {
        super((0,_core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__.optionsFromArguments)(Noise.getDefaults(), arguments, ["type"]));
        this.name = "Noise";
        /**
         * Private reference to the source
         */
        this._source = null;
        const options = (0,_core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__.optionsFromArguments)(Noise.getDefaults(), arguments, ["type"]);
        this._playbackRate = options.playbackRate;
        this.type = options.type;
        this._fadeIn = options.fadeIn;
        this._fadeOut = options.fadeOut;
    }
    static getDefaults() {
        return Object.assign(_source_Source__WEBPACK_IMPORTED_MODULE_3__.Source.getDefaults(), {
            fadeIn: 0,
            fadeOut: 0,
            playbackRate: 1,
            type: "white",
        });
    }
    /**
     * The type of the noise. Can be "white", "brown", or "pink".
     * @example
     * const noise = new Tone.Noise().toDestination().start();
     * noise.type = "brown";
     */
    get type() {
        return this._type;
    }
    set type(type) {
        (0,_core_util_Debug__WEBPACK_IMPORTED_MODULE_2__.assert)(type in _noiseBuffers, "Noise: invalid type: " + type);
        if (this._type !== type) {
            this._type = type;
            // if it's playing, stop and restart it
            if (this.state === "started") {
                const now = this.now();
                this._stop(now);
                this._start(now);
            }
        }
    }
    /**
     * The playback rate of the noise. Affects
     * the "frequency" of the noise.
     */
    get playbackRate() {
        return this._playbackRate;
    }
    set playbackRate(rate) {
        this._playbackRate = rate;
        if (this._source) {
            this._source.playbackRate.value = rate;
        }
    }
    /**
     * internal start method
     */
    _start(time) {
        const buffer = _noiseBuffers[this._type];
        this._source = new _buffer_ToneBufferSource__WEBPACK_IMPORTED_MODULE_4__.ToneBufferSource({
            url: buffer,
            context: this.context,
            fadeIn: this._fadeIn,
            fadeOut: this._fadeOut,
            loop: true,
            onended: () => this.onstop(this),
            playbackRate: this._playbackRate,
        }).connect(this.output);
        this._source.start(this.toSeconds(time), Math.random() * (buffer.duration - 0.001));
    }
    /**
     * internal stop method
     */
    _stop(time) {
        if (this._source) {
            this._source.stop(this.toSeconds(time));
            this._source = null;
        }
    }
    /**
     * The fadeIn time of the amplitude envelope.
     */
    get fadeIn() {
        return this._fadeIn;
    }
    set fadeIn(time) {
        this._fadeIn = time;
        if (this._source) {
            this._source.fadeIn = this._fadeIn;
        }
    }
    /**
     * The fadeOut time of the amplitude envelope.
     */
    get fadeOut() {
        return this._fadeOut;
    }
    set fadeOut(time) {
        this._fadeOut = time;
        if (this._source) {
            this._source.fadeOut = this._fadeOut;
        }
    }
    _restart(time) {
        // TODO could be optimized by cancelling the buffer source 'stop'
        this._stop(time);
        this._start(time);
    }
    /**
     * Clean up.
     */
    dispose() {
        super.dispose();
        if (this._source) {
            this._source.disconnect();
        }
        return this;
    }
}
//--------------------
// THE NOISE BUFFERS
//--------------------
// Noise buffer stats
const BUFFER_LENGTH = 44100 * 5;
const NUM_CHANNELS = 2;
/**
 * Cache the noise buffers
 */
const _noiseCache = {
    brown: null,
    pink: null,
    white: null,
};
/**
 * The noise arrays. Generated on initialization.
 * borrowed heavily from https://github.com/zacharydenton/noise.js
 * (c) 2013 Zach Denton (MIT)
 */
const _noiseBuffers = {
    get brown() {
        if (!_noiseCache.brown) {
            const buffer = [];
            for (let channelNum = 0; channelNum < NUM_CHANNELS; channelNum++) {
                const channel = new Float32Array(BUFFER_LENGTH);
                buffer[channelNum] = channel;
                let lastOut = 0.0;
                for (let i = 0; i < BUFFER_LENGTH; i++) {
                    const white = Math.random() * 2 - 1;
                    channel[i] = (lastOut + (0.02 * white)) / 1.02;
                    lastOut = channel[i];
                    channel[i] *= 3.5; // (roughly) compensate for gain
                }
            }
            _noiseCache.brown = new _core_context_ToneAudioBuffer__WEBPACK_IMPORTED_MODULE_0__.ToneAudioBuffer().fromArray(buffer);
        }
        return _noiseCache.brown;
    },
    get pink() {
        if (!_noiseCache.pink) {
            const buffer = [];
            for (let channelNum = 0; channelNum < NUM_CHANNELS; channelNum++) {
                const channel = new Float32Array(BUFFER_LENGTH);
                buffer[channelNum] = channel;
                let b0, b1, b2, b3, b4, b5, b6;
                b0 = b1 = b2 = b3 = b4 = b5 = b6 = 0.0;
                for (let i = 0; i < BUFFER_LENGTH; i++) {
                    const white = Math.random() * 2 - 1;
                    b0 = 0.99886 * b0 + white * 0.0555179;
                    b1 = 0.99332 * b1 + white * 0.0750759;
                    b2 = 0.96900 * b2 + white * 0.1538520;
                    b3 = 0.86650 * b3 + white * 0.3104856;
                    b4 = 0.55000 * b4 + white * 0.5329522;
                    b5 = -0.7616 * b5 - white * 0.0168980;
                    channel[i] = b0 + b1 + b2 + b3 + b4 + b5 + b6 + white * 0.5362;
                    channel[i] *= 0.11; // (roughly) compensate for gain
                    b6 = white * 0.115926;
                }
            }
            _noiseCache.pink = new _core_context_ToneAudioBuffer__WEBPACK_IMPORTED_MODULE_0__.ToneAudioBuffer().fromArray(buffer);
        }
        return _noiseCache.pink;
    },
    get white() {
        if (!_noiseCache.white) {
            const buffer = [];
            for (let channelNum = 0; channelNum < NUM_CHANNELS; channelNum++) {
                const channel = new Float32Array(BUFFER_LENGTH);
                buffer[channelNum] = channel;
                for (let i = 0; i < BUFFER_LENGTH; i++) {
                    channel[i] = Math.random() * 2 - 1;
                }
            }
            _noiseCache.white = new _core_context_ToneAudioBuffer__WEBPACK_IMPORTED_MODULE_0__.ToneAudioBuffer().fromArray(buffer);
        }
        return _noiseCache.white;
    },
};
//# sourceMappingURL=Noise.js.map

/***/ }),

/***/ "./node_modules/tone/build/esm/source/OneShotSource.js":
/*!*************************************************************!*\
  !*** ./node_modules/tone/build/esm/source/OneShotSource.js ***!
  \*************************************************************/
/*! namespace exports */
/*! export OneShotSource [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "OneShotSource": () => /* binding */ OneShotSource
/* harmony export */ });
/* harmony import */ var _core_context_Gain__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../core/context/Gain */ "./node_modules/tone/build/esm/core/context/Gain.js");
/* harmony import */ var _core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../core/context/ToneAudioNode */ "./node_modules/tone/build/esm/core/context/ToneAudioNode.js");
/* harmony import */ var _core_util_Interface__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../core/util/Interface */ "./node_modules/tone/build/esm/core/util/Interface.js");
/* harmony import */ var _core_util_Debug__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../core/util/Debug */ "./node_modules/tone/build/esm/core/util/Debug.js");
;



/**
 * Base class for fire-and-forget nodes
 */
class OneShotSource extends _core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_1__.ToneAudioNode {
    constructor(options) {
        super(options);
        /**
         * The callback to invoke after the
         * source is done playing.
         */
        this.onended = _core_util_Interface__WEBPACK_IMPORTED_MODULE_2__.noOp;
        /**
         * The start time
         */
        this._startTime = -1;
        /**
         * The stop time
         */
        this._stopTime = -1;
        /**
         * The id of the timeout
         */
        this._timeout = -1;
        /**
         * The public output node
         */
        this.output = new _core_context_Gain__WEBPACK_IMPORTED_MODULE_0__.Gain({
            context: this.context,
            gain: 0,
        });
        /**
         * The output gain node.
         */
        this._gainNode = this.output;
        /**
         * Get the playback state at the given time
         */
        this.getStateAtTime = function (time) {
            const computedTime = this.toSeconds(time);
            if (this._startTime !== -1 &&
                computedTime >= this._startTime &&
                (this._stopTime === -1 || computedTime <= this._stopTime)) {
                return "started";
            }
            else {
                return "stopped";
            }
        };
        this._fadeIn = options.fadeIn;
        this._fadeOut = options.fadeOut;
        this._curve = options.curve;
        this.onended = options.onended;
    }
    static getDefaults() {
        return Object.assign(_core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_1__.ToneAudioNode.getDefaults(), {
            curve: "linear",
            fadeIn: 0,
            fadeOut: 0,
            onended: _core_util_Interface__WEBPACK_IMPORTED_MODULE_2__.noOp,
        });
    }
    /**
     * Start the source at the given time
     * @param  time When to start the source
     */
    _startGain(time, gain = 1) {
        (0,_core_util_Debug__WEBPACK_IMPORTED_MODULE_3__.assert)(this._startTime === -1, "Source cannot be started more than once");
        // apply a fade in envelope
        const fadeInTime = this.toSeconds(this._fadeIn);
        // record the start time
        this._startTime = time + fadeInTime;
        this._startTime = Math.max(this._startTime, this.context.currentTime);
        // schedule the envelope
        if (fadeInTime > 0) {
            this._gainNode.gain.setValueAtTime(0, time);
            if (this._curve === "linear") {
                this._gainNode.gain.linearRampToValueAtTime(gain, time + fadeInTime);
            }
            else {
                this._gainNode.gain.exponentialApproachValueAtTime(gain, time, fadeInTime);
            }
        }
        else {
            this._gainNode.gain.setValueAtTime(gain, time);
        }
        return this;
    }
    /**
     * Stop the source node at the given time.
     * @param time When to stop the source
     */
    stop(time) {
        this.log("stop", time);
        this._stopGain(this.toSeconds(time));
        return this;
    }
    /**
     * Stop the source at the given time
     * @param  time When to stop the source
     */
    _stopGain(time) {
        (0,_core_util_Debug__WEBPACK_IMPORTED_MODULE_3__.assert)(this._startTime !== -1, "'start' must be called before 'stop'");
        // cancel the previous stop
        this.cancelStop();
        // the fadeOut time
        const fadeOutTime = this.toSeconds(this._fadeOut);
        // schedule the stop callback
        this._stopTime = this.toSeconds(time) + fadeOutTime;
        this._stopTime = Math.max(this._stopTime, this.context.currentTime);
        if (fadeOutTime > 0) {
            // start the fade out curve at the given time
            if (this._curve === "linear") {
                this._gainNode.gain.linearRampTo(0, fadeOutTime, time);
            }
            else {
                this._gainNode.gain.targetRampTo(0, fadeOutTime, time);
            }
        }
        else {
            // stop any ongoing ramps, and set the value to 0
            this._gainNode.gain.cancelAndHoldAtTime(time);
            this._gainNode.gain.setValueAtTime(0, time);
        }
        this.context.clearTimeout(this._timeout);
        this._timeout = this.context.setTimeout(() => {
            // allow additional time for the exponential curve to fully decay
            const additionalTail = this._curve === "exponential" ? fadeOutTime * 2 : 0;
            this._stopSource(this.now() + additionalTail);
            this._onended();
        }, this._stopTime - this.context.currentTime);
        return this;
    }
    /**
     * Invoke the onended callback
     */
    _onended() {
        if (this.onended !== _core_util_Interface__WEBPACK_IMPORTED_MODULE_2__.noOp) {
            this.onended(this);
            // overwrite onended to make sure it only is called once
            this.onended = _core_util_Interface__WEBPACK_IMPORTED_MODULE_2__.noOp;
            // dispose when it's ended to free up for garbage collection only in the online context
            if (!this.context.isOffline) {
                const disposeCallback = () => this.dispose();
                // @ts-ignore
                if (typeof window.requestIdleCallback !== "undefined") {
                    // @ts-ignore
                    window.requestIdleCallback(disposeCallback);
                }
                else {
                    setTimeout(disposeCallback, 1000);
                }
            }
        }
    }
    /**
     * Get the playback state at the current time
     */
    get state() {
        return this.getStateAtTime(this.now());
    }
    /**
     * Cancel a scheduled stop event
     */
    cancelStop() {
        this.log("cancelStop");
        (0,_core_util_Debug__WEBPACK_IMPORTED_MODULE_3__.assert)(this._startTime !== -1, "Source is not started");
        // cancel the stop envelope
        this._gainNode.gain.cancelScheduledValues(this._startTime + this.sampleTime);
        this.context.clearTimeout(this._timeout);
        this._stopTime = -1;
        return this;
    }
    dispose() {
        super.dispose();
        this._gainNode.disconnect();
        return this;
    }
}
//# sourceMappingURL=OneShotSource.js.map

/***/ }),

/***/ "./node_modules/tone/build/esm/source/Source.js":
/*!******************************************************!*\
  !*** ./node_modules/tone/build/esm/source/Source.js ***!
  \******************************************************/
/*! namespace exports */
/*! export Source [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Source": () => /* binding */ Source
/* harmony export */ });
/* harmony import */ var _component_channel_Volume__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../component/channel/Volume */ "./node_modules/tone/build/esm/component/channel/Volume.js");
/* harmony import */ var _core_context_Destination__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../core/context/Destination */ "./node_modules/tone/build/esm/core/context/Destination.js");
/* harmony import */ var _core_clock_Transport__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../core/clock/Transport */ "./node_modules/tone/build/esm/core/clock/Transport.js");
/* harmony import */ var _core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../core/context/ToneAudioNode */ "./node_modules/tone/build/esm/core/context/ToneAudioNode.js");
/* harmony import */ var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../core/util/Defaults */ "./node_modules/tone/build/esm/core/util/Defaults.js");
/* harmony import */ var _core_util_Interface__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../core/util/Interface */ "./node_modules/tone/build/esm/core/util/Interface.js");
/* harmony import */ var _core_util_StateTimeline__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../core/util/StateTimeline */ "./node_modules/tone/build/esm/core/util/StateTimeline.js");
/* harmony import */ var _core_util_TypeCheck__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../core/util/TypeCheck */ "./node_modules/tone/build/esm/core/util/TypeCheck.js");
/* harmony import */ var _core_util_Debug__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../core/util/Debug */ "./node_modules/tone/build/esm/core/util/Debug.js");
/* harmony import */ var _core_util_Math__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../core/util/Math */ "./node_modules/tone/build/esm/core/util/Math.js");
;









/**
 * Base class for sources.
 * start/stop of this.context.transport.
 *
 * ```
 * // Multiple state change events can be chained together,
 * // but must be set in the correct order and with ascending times
 * // OK
 * state.start().stop("+0.2");
 * // OK
 * state.start().stop("+0.2").start("+0.4").stop("+0.7")
 * // BAD
 * state.stop("+0.2").start();
 * // BAD
 * state.start("+0.3").stop("+0.2");
 * ```
 */
class Source extends _core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_3__.ToneAudioNode {
    constructor(options) {
        super(options);
        /**
         * Sources have no inputs
         */
        this.input = undefined;
        /**
         * Keep track of the scheduled state.
         */
        this._state = new _core_util_StateTimeline__WEBPACK_IMPORTED_MODULE_6__.StateTimeline("stopped");
        /**
         * The synced `start` callback function from the transport
         */
        this._synced = false;
        /**
         * Keep track of all of the scheduled event ids
         */
        this._scheduled = [];
        /**
         * Placeholder functions for syncing/unsyncing to transport
         */
        this._syncedStart = _core_util_Interface__WEBPACK_IMPORTED_MODULE_5__.noOp;
        this._syncedStop = _core_util_Interface__WEBPACK_IMPORTED_MODULE_5__.noOp;
        this._state.memory = 100;
        this._state.increasing = true;
        this._volume = this.output = new _component_channel_Volume__WEBPACK_IMPORTED_MODULE_0__.Volume({
            context: this.context,
            mute: options.mute,
            volume: options.volume,
        });
        this.volume = this._volume.volume;
        (0,_core_util_Interface__WEBPACK_IMPORTED_MODULE_5__.readOnly)(this, "volume");
        this.onstop = options.onstop;
    }
    static getDefaults() {
        return Object.assign(_core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_3__.ToneAudioNode.getDefaults(), {
            mute: false,
            onstop: _core_util_Interface__WEBPACK_IMPORTED_MODULE_5__.noOp,
            volume: 0,
        });
    }
    /**
     * Returns the playback state of the source, either "started" or "stopped".
     * @example
     * const player = new Tone.Player("https://tonejs.github.io/audio/berklee/ahntone_c3.mp3", () => {
     * 	player.start();
     * 	console.log(player.state);
     * }).toDestination();
     */
    get state() {
        if (this._synced) {
            if (this.context.transport.state === "started") {
                return this._state.getValueAtTime(this.context.transport.seconds);
            }
            else {
                return "stopped";
            }
        }
        else {
            return this._state.getValueAtTime(this.now());
        }
    }
    /**
     * Mute the output.
     * @example
     * const osc = new Tone.Oscillator().toDestination().start();
     * // mute the output
     * osc.mute = true;
     */
    get mute() {
        return this._volume.mute;
    }
    set mute(mute) {
        this._volume.mute = mute;
    }
    /**
     * Ensure that the scheduled time is not before the current time.
     * Should only be used when scheduled unsynced.
     */
    _clampToCurrentTime(time) {
        if (this._synced) {
            return time;
        }
        else {
            return Math.max(time, this.context.currentTime);
        }
    }
    /**
     * Start the source at the specified time. If no time is given,
     * start the source now.
     * @param  time When the source should be started.
     * @example
     * const source = new Tone.Oscillator().toDestination();
     * source.start("+0.5"); // starts the source 0.5 seconds from now
     */
    start(time, offset, duration) {
        let computedTime = (0,_core_util_TypeCheck__WEBPACK_IMPORTED_MODULE_7__.isUndef)(time) && this._synced ? this.context.transport.seconds : this.toSeconds(time);
        computedTime = this._clampToCurrentTime(computedTime);
        // if it's started, stop it and restart it
        if (!this._synced && this._state.getValueAtTime(computedTime) === "started") {
            // time should be strictly greater than the previous start time
            (0,_core_util_Debug__WEBPACK_IMPORTED_MODULE_8__.assert)((0,_core_util_Math__WEBPACK_IMPORTED_MODULE_9__.GT)(computedTime, this._state.get(computedTime).time), "Start time must be strictly greater than previous start time");
            this._state.cancel(computedTime);
            this._state.setStateAtTime("started", computedTime);
            this.log("restart", computedTime);
            this.restart(computedTime, offset, duration);
        }
        else {
            this.log("start", computedTime);
            this._state.setStateAtTime("started", computedTime);
            if (this._synced) {
                // add the offset time to the event
                const event = this._state.get(computedTime);
                if (event) {
                    event.offset = this.toSeconds((0,_core_util_Defaults__WEBPACK_IMPORTED_MODULE_4__.defaultArg)(offset, 0));
                    event.duration = duration ? this.toSeconds(duration) : undefined;
                }
                const sched = this.context.transport.schedule(t => {
                    this._start(t, offset, duration);
                }, computedTime);
                this._scheduled.push(sched);
                // if the transport is already started
                // and the time is greater than where the transport is
                if (this.context.transport.state === "started" &&
                    this.context.transport.getSecondsAtTime(this.immediate()) > computedTime) {
                    this._syncedStart(this.now(), this.context.transport.seconds);
                }
            }
            else {
                (0,_core_util_Debug__WEBPACK_IMPORTED_MODULE_8__.assertContextRunning)(this.context);
                this._start(computedTime, offset, duration);
            }
        }
        return this;
    }
    /**
     * Stop the source at the specified time. If no time is given,
     * stop the source now.
     * @param  time When the source should be stopped.
     * @example
     * const source = new Tone.Oscillator().toDestination();
     * source.start();
     * source.stop("+0.5"); // stops the source 0.5 seconds from now
     */
    stop(time) {
        let computedTime = (0,_core_util_TypeCheck__WEBPACK_IMPORTED_MODULE_7__.isUndef)(time) && this._synced ? this.context.transport.seconds : this.toSeconds(time);
        computedTime = this._clampToCurrentTime(computedTime);
        if (this._state.getValueAtTime(computedTime) === "started" || (0,_core_util_TypeCheck__WEBPACK_IMPORTED_MODULE_7__.isDefined)(this._state.getNextState("started", computedTime))) {
            this.log("stop", computedTime);
            if (!this._synced) {
                this._stop(computedTime);
            }
            else {
                const sched = this.context.transport.schedule(this._stop.bind(this), computedTime);
                this._scheduled.push(sched);
            }
            this._state.cancel(computedTime);
            this._state.setStateAtTime("stopped", computedTime);
        }
        return this;
    }
    /**
     * Restart the source.
     */
    restart(time, offset, duration) {
        time = this.toSeconds(time);
        if (this._state.getValueAtTime(time) === "started") {
            this._state.cancel(time);
            this._restart(time, offset, duration);
        }
        return this;
    }
    /**
     * Sync the source to the Transport so that all subsequent
     * calls to `start` and `stop` are synced to the TransportTime
     * instead of the AudioContext time.
     *
     * @example
     * const osc = new Tone.Oscillator().toDestination();
     * // sync the source so that it plays between 0 and 0.3 on the Transport's timeline
     * osc.sync().start(0).stop(0.3);
     * // start the transport.
     * Tone.Transport.start();
     * // set it to loop once a second
     * Tone.Transport.loop = true;
     * Tone.Transport.loopEnd = 1;
     */
    sync() {
        if (!this._synced) {
            this._synced = true;
            this._syncedStart = (time, offset) => {
                if (offset > 0) {
                    // get the playback state at that time
                    const stateEvent = this._state.get(offset);
                    // listen for start events which may occur in the middle of the sync'ed time
                    if (stateEvent && stateEvent.state === "started" && stateEvent.time !== offset) {
                        // get the offset
                        const startOffset = offset - this.toSeconds(stateEvent.time);
                        let duration;
                        if (stateEvent.duration) {
                            duration = this.toSeconds(stateEvent.duration) - startOffset;
                        }
                        this._start(time, this.toSeconds(stateEvent.offset) + startOffset, duration);
                    }
                }
            };
            this._syncedStop = time => {
                const seconds = this.context.transport.getSecondsAtTime(Math.max(time - this.sampleTime, 0));
                if (this._state.getValueAtTime(seconds) === "started") {
                    this._stop(time);
                }
            };
            this.context.transport.on("start", this._syncedStart);
            this.context.transport.on("loopStart", this._syncedStart);
            this.context.transport.on("stop", this._syncedStop);
            this.context.transport.on("pause", this._syncedStop);
            this.context.transport.on("loopEnd", this._syncedStop);
        }
        return this;
    }
    /**
     * Unsync the source to the Transport. See Source.sync
     */
    unsync() {
        if (this._synced) {
            this.context.transport.off("stop", this._syncedStop);
            this.context.transport.off("pause", this._syncedStop);
            this.context.transport.off("loopEnd", this._syncedStop);
            this.context.transport.off("start", this._syncedStart);
            this.context.transport.off("loopStart", this._syncedStart);
        }
        this._synced = false;
        // clear all of the scheduled ids
        this._scheduled.forEach(id => this.context.transport.clear(id));
        this._scheduled = [];
        this._state.cancel(0);
        // stop it also
        this._stop(0);
        return this;
    }
    /**
     * Clean up.
     */
    dispose() {
        super.dispose();
        this.onstop = _core_util_Interface__WEBPACK_IMPORTED_MODULE_5__.noOp;
        this.unsync();
        this._volume.dispose();
        this._state.dispose();
        return this;
    }
}
//# sourceMappingURL=Source.js.map

/***/ }),

/***/ "./node_modules/tone/build/esm/source/UserMedia.js":
/*!*********************************************************!*\
  !*** ./node_modules/tone/build/esm/source/UserMedia.js ***!
  \*********************************************************/
/*! namespace exports */
/*! export UserMedia [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "UserMedia": () => /* binding */ UserMedia
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! tslib */ "./node_modules/tone/node_modules/tslib/tslib.es6.js");
/* harmony import */ var _core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../core/context/ToneAudioNode */ "./node_modules/tone/build/esm/core/context/ToneAudioNode.js");
/* harmony import */ var _component_channel_Volume__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../component/channel/Volume */ "./node_modules/tone/build/esm/component/channel/Volume.js");
/* harmony import */ var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../core/util/Defaults */ "./node_modules/tone/build/esm/core/util/Defaults.js");
/* harmony import */ var _core_util_Debug__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../core/util/Debug */ "./node_modules/tone/build/esm/core/util/Debug.js");
/* harmony import */ var _core_util_Interface__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../core/util/Interface */ "./node_modules/tone/build/esm/core/util/Interface.js");
/* harmony import */ var _core_util_TypeCheck__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../core/util/TypeCheck */ "./node_modules/tone/build/esm/core/util/TypeCheck.js");
;






/**
 * UserMedia uses MediaDevices.getUserMedia to open up and external microphone or audio input.
 * Check [MediaDevices API Support](https://developer.mozilla.org/en-US/docs/Web/API/MediaDevices/getUserMedia)
 * to see which browsers are supported. Access to an external input
 * is limited to secure (HTTPS) connections.
 * @example
 * const meter = new Tone.Meter();
 * const mic = new Tone.UserMedia().connect(meter);
 * mic.open().then(() => {
 * 	// promise resolves when input is available
 * 	console.log("mic open");
 * 	// print the incoming mic levels in decibels
 * 	setInterval(() => console.log(meter.getValue()), 100);
 * }).catch(e => {
 * 	// promise is rejected when the user doesn't have or allow mic access
 * 	console.log("mic not open");
 * });
 * @category Source
 */
class UserMedia extends _core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_0__.ToneAudioNode {
    constructor() {
        super((0,_core_util_Defaults__WEBPACK_IMPORTED_MODULE_2__.optionsFromArguments)(UserMedia.getDefaults(), arguments, ["volume"]));
        this.name = "UserMedia";
        const options = (0,_core_util_Defaults__WEBPACK_IMPORTED_MODULE_2__.optionsFromArguments)(UserMedia.getDefaults(), arguments, ["volume"]);
        this._volume = this.output = new _component_channel_Volume__WEBPACK_IMPORTED_MODULE_1__.Volume({
            context: this.context,
            volume: options.volume,
        });
        this.volume = this._volume.volume;
        (0,_core_util_Interface__WEBPACK_IMPORTED_MODULE_4__.readOnly)(this, "volume");
        this.mute = options.mute;
    }
    static getDefaults() {
        return Object.assign(_core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_0__.ToneAudioNode.getDefaults(), {
            mute: false,
            volume: 0
        });
    }
    /**
     * Open the media stream. If a string is passed in, it is assumed
     * to be the label or id of the stream, if a number is passed in,
     * it is the input number of the stream.
     * @param  labelOrId The label or id of the audio input media device.
     *                   With no argument, the default stream is opened.
     * @return The promise is resolved when the stream is open.
     */
    open(labelOrId) {
        return (0,tslib__WEBPACK_IMPORTED_MODULE_6__.__awaiter)(this, void 0, void 0, function* () {
            (0,_core_util_Debug__WEBPACK_IMPORTED_MODULE_3__.assert)(UserMedia.supported, "UserMedia is not supported");
            // close the previous stream
            if (this.state === "started") {
                this.close();
            }
            const devices = yield UserMedia.enumerateDevices();
            if ((0,_core_util_TypeCheck__WEBPACK_IMPORTED_MODULE_5__.isNumber)(labelOrId)) {
                this._device = devices[labelOrId];
            }
            else {
                this._device = devices.find((device) => {
                    return device.label === labelOrId || device.deviceId === labelOrId;
                });
                // didn't find a matching device
                if (!this._device && devices.length > 0) {
                    this._device = devices[0];
                }
                (0,_core_util_Debug__WEBPACK_IMPORTED_MODULE_3__.assert)((0,_core_util_TypeCheck__WEBPACK_IMPORTED_MODULE_5__.isDefined)(this._device), `No matching device ${labelOrId}`);
            }
            // do getUserMedia
            const constraints = {
                audio: {
                    echoCancellation: false,
                    sampleRate: this.context.sampleRate,
                    noiseSuppression: false,
                    mozNoiseSuppression: false,
                }
            };
            if (this._device) {
                // @ts-ignore
                constraints.audio.deviceId = this._device.deviceId;
            }
            const stream = yield navigator.mediaDevices.getUserMedia(constraints);
            // start a new source only if the previous one is closed
            if (!this._stream) {
                this._stream = stream;
                // Wrap a MediaStreamSourceNode around the live input stream.
                const mediaStreamNode = this.context.createMediaStreamSource(stream);
                // Connect the MediaStreamSourceNode to a gate gain node
                (0,_core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_0__.connect)(mediaStreamNode, this.output);
                this._mediaStream = mediaStreamNode;
            }
            return this;
        });
    }
    /**
     * Close the media stream
     */
    close() {
        if (this._stream && this._mediaStream) {
            this._stream.getAudioTracks().forEach((track) => {
                track.stop();
            });
            this._stream = undefined;
            // remove the old media stream
            this._mediaStream.disconnect();
            this._mediaStream = undefined;
        }
        this._device = undefined;
        return this;
    }
    /**
     * Returns a promise which resolves with the list of audio input devices available.
     * @return The promise that is resolved with the devices
     * @example
     * Tone.UserMedia.enumerateDevices().then((devices) => {
     * 	// print the device labels
     * 	console.log(devices.map(device => device.label));
     * });
     */
    static enumerateDevices() {
        return (0,tslib__WEBPACK_IMPORTED_MODULE_6__.__awaiter)(this, void 0, void 0, function* () {
            const allDevices = yield navigator.mediaDevices.enumerateDevices();
            return allDevices.filter(device => {
                return device.kind === "audioinput";
            });
        });
    }
    /**
     * Returns the playback state of the source, "started" when the microphone is open
     * and "stopped" when the mic is closed.
     */
    get state() {
        return this._stream && this._stream.active ? "started" : "stopped";
    }
    /**
     * Returns an identifier for the represented device that is
     * persisted across sessions. It is un-guessable by other applications and
     * unique to the origin of the calling application. It is reset when the
     * user clears cookies (for Private Browsing, a different identifier is
     * used that is not persisted across sessions). Returns undefined when the
     * device is not open.
     */
    get deviceId() {
        if (this._device) {
            return this._device.deviceId;
        }
        else {
            return undefined;
        }
    }
    /**
     * Returns a group identifier. Two devices have the
     * same group identifier if they belong to the same physical device.
     * Returns null  when the device is not open.
     */
    get groupId() {
        if (this._device) {
            return this._device.groupId;
        }
        else {
            return undefined;
        }
    }
    /**
     * Returns a label describing this device (for example "Built-in Microphone").
     * Returns undefined when the device is not open or label is not available
     * because of permissions.
     */
    get label() {
        if (this._device) {
            return this._device.label;
        }
        else {
            return undefined;
        }
    }
    /**
     * Mute the output.
     * @example
     * const mic = new Tone.UserMedia();
     * mic.open().then(() => {
     * 	// promise resolves when input is available
     * });
     * // mute the output
     * mic.mute = true;
     */
    get mute() {
        return this._volume.mute;
    }
    set mute(mute) {
        this._volume.mute = mute;
    }
    dispose() {
        super.dispose();
        this.close();
        this._volume.dispose();
        this.volume.dispose();
        return this;
    }
    /**
     * If getUserMedia is supported by the browser.
     */
    static get supported() {
        return (0,_core_util_TypeCheck__WEBPACK_IMPORTED_MODULE_5__.isDefined)(navigator.mediaDevices) &&
            (0,_core_util_TypeCheck__WEBPACK_IMPORTED_MODULE_5__.isDefined)(navigator.mediaDevices.getUserMedia);
    }
}
//# sourceMappingURL=UserMedia.js.map

/***/ }),

/***/ "./node_modules/tone/build/esm/source/buffer/GrainPlayer.js":
/*!******************************************************************!*\
  !*** ./node_modules/tone/build/esm/source/buffer/GrainPlayer.js ***!
  \******************************************************************/
/*! namespace exports */
/*! export GrainPlayer [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "GrainPlayer": () => /* binding */ GrainPlayer
/* harmony export */ });
/* harmony import */ var _Source__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Source */ "./node_modules/tone/build/esm/source/Source.js");
/* harmony import */ var _core_util_Interface__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core/util/Interface */ "./node_modules/tone/build/esm/core/util/Interface.js");
/* harmony import */ var _core_context_ToneAudioBuffer__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/context/ToneAudioBuffer */ "./node_modules/tone/build/esm/core/context/ToneAudioBuffer.js");
/* harmony import */ var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/util/Defaults */ "./node_modules/tone/build/esm/core/util/Defaults.js");
/* harmony import */ var _core_clock_Clock__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../core/clock/Clock */ "./node_modules/tone/build/esm/core/clock/Clock.js");
/* harmony import */ var _ToneBufferSource__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./ToneBufferSource */ "./node_modules/tone/build/esm/source/buffer/ToneBufferSource.js");
/* harmony import */ var _core_type_Conversions__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../core/type/Conversions */ "./node_modules/tone/build/esm/core/type/Conversions.js");
/* harmony import */ var _core_util_Debug__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../core/util/Debug */ "./node_modules/tone/build/esm/core/util/Debug.js");
;







/**
 * GrainPlayer implements [granular synthesis](https://en.wikipedia.org/wiki/Granular_synthesis).
 * Granular Synthesis enables you to adjust pitch and playback rate independently. The grainSize is the
 * amount of time each small chunk of audio is played for and the overlap is the
 * amount of crossfading transition time between successive grains.
 * @category Source
 */
class GrainPlayer extends _Source__WEBPACK_IMPORTED_MODULE_0__.Source {
    constructor() {
        super((0,_core_util_Defaults__WEBPACK_IMPORTED_MODULE_3__.optionsFromArguments)(GrainPlayer.getDefaults(), arguments, ["url", "onload"]));
        this.name = "GrainPlayer";
        /**
         * Internal loopStart value
         */
        this._loopStart = 0;
        /**
         * Internal loopStart value
         */
        this._loopEnd = 0;
        /**
         * All of the currently playing BufferSources
         */
        this._activeSources = [];
        const options = (0,_core_util_Defaults__WEBPACK_IMPORTED_MODULE_3__.optionsFromArguments)(GrainPlayer.getDefaults(), arguments, ["url", "onload"]);
        this.buffer = new _core_context_ToneAudioBuffer__WEBPACK_IMPORTED_MODULE_2__.ToneAudioBuffer({
            onload: options.onload,
            onerror: options.onerror,
            reverse: options.reverse,
            url: options.url,
        });
        this._clock = new _core_clock_Clock__WEBPACK_IMPORTED_MODULE_4__.Clock({
            context: this.context,
            callback: this._tick.bind(this),
            frequency: 1 / options.grainSize
        });
        this._playbackRate = options.playbackRate;
        this._grainSize = options.grainSize;
        this._overlap = options.overlap;
        this.detune = options.detune;
        // setup
        this.overlap = options.overlap;
        this.loop = options.loop;
        this.playbackRate = options.playbackRate;
        this.grainSize = options.grainSize;
        this.loopStart = options.loopStart;
        this.loopEnd = options.loopEnd;
        this.reverse = options.reverse;
        this._clock.on("stop", this._onstop.bind(this));
    }
    static getDefaults() {
        return Object.assign(_Source__WEBPACK_IMPORTED_MODULE_0__.Source.getDefaults(), {
            onload: _core_util_Interface__WEBPACK_IMPORTED_MODULE_1__.noOp,
            onerror: _core_util_Interface__WEBPACK_IMPORTED_MODULE_1__.noOp,
            overlap: 0.1,
            grainSize: 0.2,
            playbackRate: 1,
            detune: 0,
            loop: false,
            loopStart: 0,
            loopEnd: 0,
            reverse: false
        });
    }
    /**
     * Internal start method
     */
    _start(time, offset, duration) {
        offset = (0,_core_util_Defaults__WEBPACK_IMPORTED_MODULE_3__.defaultArg)(offset, 0);
        offset = this.toSeconds(offset);
        time = this.toSeconds(time);
        const grainSize = 1 / this._clock.frequency.getValueAtTime(time);
        this._clock.start(time, offset / grainSize);
        if (duration) {
            this.stop(time + this.toSeconds(duration));
        }
    }
    /**
     * Stop and then restart the player from the beginning (or offset)
     * @param  time When the player should start.
     * @param  offset The offset from the beginning of the sample to start at.
     * @param  duration How long the sample should play. If no duration is given,
     * 					it will default to the full length of the sample (minus any offset)
     */
    restart(time, offset, duration) {
        super.restart(time, offset, duration);
        return this;
    }
    _restart(time, offset, duration) {
        this._stop(time);
        this._start(time, offset, duration);
    }
    /**
     * Internal stop method
     */
    _stop(time) {
        this._clock.stop(time);
    }
    /**
     * Invoked when the clock is stopped
     */
    _onstop(time) {
        // stop the players
        this._activeSources.forEach((source) => {
            source.fadeOut = 0;
            source.stop(time);
        });
        this.onstop(this);
    }
    /**
     * Invoked on each clock tick. scheduled a new grain at this time.
     */
    _tick(time) {
        // check if it should stop looping
        const ticks = this._clock.getTicksAtTime(time);
        const offset = ticks * this._grainSize;
        this.log("offset", offset);
        if (!this.loop && offset > this.buffer.duration) {
            this.stop(time);
            return;
        }
        // at the beginning of the file, the fade in should be 0
        const fadeIn = offset < this._overlap ? 0 : this._overlap;
        // create a buffer source
        const source = new _ToneBufferSource__WEBPACK_IMPORTED_MODULE_5__.ToneBufferSource({
            context: this.context,
            url: this.buffer,
            fadeIn: fadeIn,
            fadeOut: this._overlap,
            loop: this.loop,
            loopStart: this._loopStart,
            loopEnd: this._loopEnd,
            // compute the playbackRate based on the detune
            playbackRate: (0,_core_type_Conversions__WEBPACK_IMPORTED_MODULE_6__.intervalToFrequencyRatio)(this.detune / 100)
        }).connect(this.output);
        source.start(time, this._grainSize * ticks);
        source.stop(time + this._grainSize / this.playbackRate);
        // add it to the active sources
        this._activeSources.push(source);
        // remove it when it's done
        source.onended = () => {
            const index = this._activeSources.indexOf(source);
            if (index !== -1) {
                this._activeSources.splice(index, 1);
            }
        };
    }
    /**
     * The playback rate of the sample
     */
    get playbackRate() {
        return this._playbackRate;
    }
    set playbackRate(rate) {
        (0,_core_util_Debug__WEBPACK_IMPORTED_MODULE_7__.assertRange)(rate, 0.001);
        this._playbackRate = rate;
        this.grainSize = this._grainSize;
    }
    /**
     * The loop start time.
     */
    get loopStart() {
        return this._loopStart;
    }
    set loopStart(time) {
        if (this.buffer.loaded) {
            (0,_core_util_Debug__WEBPACK_IMPORTED_MODULE_7__.assertRange)(this.toSeconds(time), 0, this.buffer.duration);
        }
        this._loopStart = this.toSeconds(time);
    }
    /**
     * The loop end time.
     */
    get loopEnd() {
        return this._loopEnd;
    }
    set loopEnd(time) {
        if (this.buffer.loaded) {
            (0,_core_util_Debug__WEBPACK_IMPORTED_MODULE_7__.assertRange)(this.toSeconds(time), 0, this.buffer.duration);
        }
        this._loopEnd = this.toSeconds(time);
    }
    /**
     * The direction the buffer should play in
     */
    get reverse() {
        return this.buffer.reverse;
    }
    set reverse(rev) {
        this.buffer.reverse = rev;
    }
    /**
     * The size of each chunk of audio that the
     * buffer is chopped into and played back at.
     */
    get grainSize() {
        return this._grainSize;
    }
    set grainSize(size) {
        this._grainSize = this.toSeconds(size);
        this._clock.frequency.setValueAtTime(this._playbackRate / this._grainSize, this.now());
    }
    /**
     * The duration of the cross-fade between successive grains.
     */
    get overlap() {
        return this._overlap;
    }
    set overlap(time) {
        const computedTime = this.toSeconds(time);
        (0,_core_util_Debug__WEBPACK_IMPORTED_MODULE_7__.assertRange)(computedTime, 0);
        this._overlap = computedTime;
    }
    /**
     * If all the buffer is loaded
     */
    get loaded() {
        return this.buffer.loaded;
    }
    dispose() {
        super.dispose();
        this.buffer.dispose();
        this._clock.dispose();
        this._activeSources.forEach((source) => source.dispose());
        return this;
    }
}
//# sourceMappingURL=GrainPlayer.js.map

/***/ }),

/***/ "./node_modules/tone/build/esm/source/buffer/Player.js":
/*!*************************************************************!*\
  !*** ./node_modules/tone/build/esm/source/buffer/Player.js ***!
  \*************************************************************/
/*! namespace exports */
/*! export Player [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Player": () => /* binding */ Player
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! tslib */ "./node_modules/tone/node_modules/tslib/tslib.es6.js");
/* harmony import */ var _core_context_ToneAudioBuffer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/context/ToneAudioBuffer */ "./node_modules/tone/build/esm/core/context/ToneAudioBuffer.js");
/* harmony import */ var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core/util/Defaults */ "./node_modules/tone/build/esm/core/util/Defaults.js");
/* harmony import */ var _core_util_Interface__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/util/Interface */ "./node_modules/tone/build/esm/core/util/Interface.js");
/* harmony import */ var _core_util_TypeCheck__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/util/TypeCheck */ "./node_modules/tone/build/esm/core/util/TypeCheck.js");
/* harmony import */ var _Source__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../Source */ "./node_modules/tone/build/esm/source/Source.js");
/* harmony import */ var _ToneBufferSource__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./ToneBufferSource */ "./node_modules/tone/build/esm/source/buffer/ToneBufferSource.js");
/* harmony import */ var _core_util_Debug__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../core/util/Debug */ "./node_modules/tone/build/esm/core/util/Debug.js");
/* harmony import */ var _core_util_Decorator__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../core/util/Decorator */ "./node_modules/tone/build/esm/core/util/Decorator.js");
;








/**
 * Player is an audio file player with start, loop, and stop functions.
 * @example
 * const player = new Tone.Player("https://tonejs.github.io/audio/berklee/gong_1.mp3").toDestination();
 * // play as soon as the buffer is loaded
 * player.autostart = true;
 * @category Source
 */
class Player extends _Source__WEBPACK_IMPORTED_MODULE_4__.Source {
    constructor() {
        super((0,_core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__.optionsFromArguments)(Player.getDefaults(), arguments, ["url", "onload"]));
        this.name = "Player";
        /**
         * All of the active buffer source nodes
         */
        this._activeSources = new Set();
        const options = (0,_core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__.optionsFromArguments)(Player.getDefaults(), arguments, ["url", "onload"]);
        this._buffer = new _core_context_ToneAudioBuffer__WEBPACK_IMPORTED_MODULE_0__.ToneAudioBuffer({
            onload: this._onload.bind(this, options.onload),
            onerror: options.onerror,
            reverse: options.reverse,
            url: options.url,
        });
        this.autostart = options.autostart;
        this._loop = options.loop;
        this._loopStart = options.loopStart;
        this._loopEnd = options.loopEnd;
        this._playbackRate = options.playbackRate;
        this.fadeIn = options.fadeIn;
        this.fadeOut = options.fadeOut;
    }
    static getDefaults() {
        return Object.assign(_Source__WEBPACK_IMPORTED_MODULE_4__.Source.getDefaults(), {
            autostart: false,
            fadeIn: 0,
            fadeOut: 0,
            loop: false,
            loopEnd: 0,
            loopStart: 0,
            onload: _core_util_Interface__WEBPACK_IMPORTED_MODULE_2__.noOp,
            onerror: _core_util_Interface__WEBPACK_IMPORTED_MODULE_2__.noOp,
            playbackRate: 1,
            reverse: false,
        });
    }
    /**
     * Load the audio file as an audio buffer.
     * Decodes the audio asynchronously and invokes
     * the callback once the audio buffer loads.
     * Note: this does not need to be called if a url
     * was passed in to the constructor. Only use this
     * if you want to manually load a new url.
     * @param url The url of the buffer to load. Filetype support depends on the browser.
     */
    load(url) {
        return (0,tslib__WEBPACK_IMPORTED_MODULE_8__.__awaiter)(this, void 0, void 0, function* () {
            yield this._buffer.load(url);
            this._onload();
            return this;
        });
    }
    /**
     * Internal callback when the buffer is loaded.
     */
    _onload(callback = _core_util_Interface__WEBPACK_IMPORTED_MODULE_2__.noOp) {
        callback();
        if (this.autostart) {
            this.start();
        }
    }
    /**
     * Internal callback when the buffer is done playing.
     */
    _onSourceEnd(source) {
        // invoke the onstop function
        this.onstop(this);
        // delete the source from the active sources
        this._activeSources.delete(source);
        if (this._activeSources.size === 0 && !this._synced &&
            this._state.getValueAtTime(this.now()) === "started") {
            // remove the 'implicitEnd' event and replace with an explicit end
            this._state.cancel(this.now());
            this._state.setStateAtTime("stopped", this.now());
        }
    }
    /**
     * Play the buffer at the given startTime. Optionally add an offset
     * and/or duration which will play the buffer from a position
     * within the buffer for the given duration.
     *
     * @param  time When the player should start.
     * @param  offset The offset from the beginning of the sample to start at.
     * @param  duration How long the sample should play. If no duration is given, it will default to the full length of the sample (minus any offset)
     */
    start(time, offset, duration) {
        super.start(time, offset, duration);
        return this;
    }
    /**
     * Internal start method
     */
    _start(startTime, offset, duration) {
        // if it's a loop the default offset is the loopStart point
        if (this._loop) {
            offset = (0,_core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__.defaultArg)(offset, this._loopStart);
        }
        else {
            // otherwise the default offset is 0
            offset = (0,_core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__.defaultArg)(offset, 0);
        }
        // compute the values in seconds
        let computedOffset = this.toSeconds(offset);
        // if it's synced, it should factor in the playback rate for computing the offset
        if (this._synced) {
            computedOffset *= this._playbackRate;
        }
        // compute the duration which is either the passed in duration of the buffer.duration - offset
        const origDuration = duration;
        duration = (0,_core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__.defaultArg)(duration, Math.max(this._buffer.duration - computedOffset, 0));
        let computedDuration = this.toSeconds(duration);
        // scale it by the playback rate
        computedDuration = computedDuration / this._playbackRate;
        // get the start time
        startTime = this.toSeconds(startTime);
        // make the source
        const source = new _ToneBufferSource__WEBPACK_IMPORTED_MODULE_5__.ToneBufferSource({
            url: this._buffer,
            context: this.context,
            fadeIn: this.fadeIn,
            fadeOut: this.fadeOut,
            loop: this._loop,
            loopEnd: this._loopEnd,
            loopStart: this._loopStart,
            onended: this._onSourceEnd.bind(this),
            playbackRate: this._playbackRate,
        }).connect(this.output);
        // set the looping properties
        if (!this._loop && !this._synced) {
            // cancel the previous stop
            this._state.cancel(startTime + computedDuration);
            // if it's not looping, set the state change at the end of the sample
            this._state.setStateAtTime("stopped", startTime + computedDuration, {
                implicitEnd: true,
            });
        }
        // add it to the array of active sources
        this._activeSources.add(source);
        // start it
        if (this._loop && (0,_core_util_TypeCheck__WEBPACK_IMPORTED_MODULE_3__.isUndef)(origDuration)) {
            source.start(startTime, computedOffset);
        }
        else {
            // subtract the fade out time
            source.start(startTime, computedOffset, computedDuration - this.toSeconds(this.fadeOut));
        }
    }
    /**
     * Stop playback.
     */
    _stop(time) {
        const computedTime = this.toSeconds(time);
        this._activeSources.forEach(source => source.stop(computedTime));
    }
    /**
     * Stop and then restart the player from the beginning (or offset)
     * @param  time When the player should start.
     * @param  offset The offset from the beginning of the sample to start at.
     * @param  duration How long the sample should play. If no duration is given,
     * 					it will default to the full length of the sample (minus any offset)
     */
    restart(time, offset, duration) {
        super.restart(time, offset, duration);
        return this;
    }
    _restart(time, offset, duration) {
        this._stop(time);
        this._start(time, offset, duration);
    }
    /**
     * Seek to a specific time in the player's buffer. If the
     * source is no longer playing at that time, it will stop.
     * @param offset The time to seek to.
     * @param when The time for the seek event to occur.
     * @example
     * const player = new Tone.Player("https://tonejs.github.io/audio/berklee/gurgling_theremin_1.mp3", () => {
     * 	player.start();
     * 	// seek to the offset in 1 second from now
     * 	player.seek(0.4, "+1");
     * }).toDestination();
     */
    seek(offset, when) {
        const computedTime = this.toSeconds(when);
        if (this._state.getValueAtTime(computedTime) === "started") {
            const computedOffset = this.toSeconds(offset);
            // if it's currently playing, stop it
            this._stop(computedTime);
            // restart it at the given time
            this._start(computedTime, computedOffset);
        }
        return this;
    }
    /**
     * Set the loop start and end. Will only loop if loop is set to true.
     * @param loopStart The loop start time
     * @param loopEnd The loop end time
     * @example
     * const player = new Tone.Player("https://tonejs.github.io/audio/berklee/malevoices_aa2_F3.mp3").toDestination();
     * // loop between the given points
     * player.setLoopPoints(0.2, 0.3);
     * player.loop = true;
     * player.autostart = true;
     */
    setLoopPoints(loopStart, loopEnd) {
        this.loopStart = loopStart;
        this.loopEnd = loopEnd;
        return this;
    }
    /**
     * If loop is true, the loop will start at this position.
     */
    get loopStart() {
        return this._loopStart;
    }
    set loopStart(loopStart) {
        this._loopStart = loopStart;
        if (this.buffer.loaded) {
            (0,_core_util_Debug__WEBPACK_IMPORTED_MODULE_6__.assertRange)(this.toSeconds(loopStart), 0, this.buffer.duration);
        }
        // get the current source
        this._activeSources.forEach(source => {
            source.loopStart = loopStart;
        });
    }
    /**
     * If loop is true, the loop will end at this position.
     */
    get loopEnd() {
        return this._loopEnd;
    }
    set loopEnd(loopEnd) {
        this._loopEnd = loopEnd;
        if (this.buffer.loaded) {
            (0,_core_util_Debug__WEBPACK_IMPORTED_MODULE_6__.assertRange)(this.toSeconds(loopEnd), 0, this.buffer.duration);
        }
        // get the current source
        this._activeSources.forEach(source => {
            source.loopEnd = loopEnd;
        });
    }
    /**
     * The audio buffer belonging to the player.
     */
    get buffer() {
        return this._buffer;
    }
    set buffer(buffer) {
        this._buffer.set(buffer);
    }
    /**
     * If the buffer should loop once it's over.
     * @example
     * const player = new Tone.Player("https://tonejs.github.io/audio/drum-samples/breakbeat.mp3").toDestination();
     * player.loop = true;
     * player.autostart = true;
     */
    get loop() {
        return this._loop;
    }
    set loop(loop) {
        // if no change, do nothing
        if (this._loop === loop) {
            return;
        }
        this._loop = loop;
        // set the loop of all of the sources
        this._activeSources.forEach(source => {
            source.loop = loop;
        });
        if (loop) {
            // remove the next stopEvent
            const stopEvent = this._state.getNextState("stopped", this.now());
            if (stopEvent) {
                this._state.cancel(stopEvent.time);
            }
        }
    }
    /**
     * Normal speed is 1. The pitch will change with the playback rate.
     * @example
     * const player = new Tone.Player("https://tonejs.github.io/audio/berklee/femalevoices_aa2_A5.mp3").toDestination();
     * // play at 1/4 speed
     * player.playbackRate = 0.25;
     * // play as soon as the buffer is loaded
     * player.autostart = true;
     */
    get playbackRate() {
        return this._playbackRate;
    }
    set playbackRate(rate) {
        this._playbackRate = rate;
        const now = this.now();
        // cancel the stop event since it's at a different time now
        const stopEvent = this._state.getNextState("stopped", now);
        if (stopEvent && stopEvent.implicitEnd) {
            this._state.cancel(stopEvent.time);
            this._activeSources.forEach(source => source.cancelStop());
        }
        // set all the sources
        this._activeSources.forEach(source => {
            source.playbackRate.setValueAtTime(rate, now);
        });
    }
    /**
     * If the buffer should be reversed
     * @example
     * const player = new Tone.Player("https://tonejs.github.io/audio/berklee/chime_1.mp3").toDestination();
     * player.autostart = true;
     * player.reverse = true;
     */
    get reverse() {
        return this._buffer.reverse;
    }
    set reverse(rev) {
        this._buffer.reverse = rev;
    }
    /**
     * If the buffer is loaded
     */
    get loaded() {
        return this._buffer.loaded;
    }
    dispose() {
        super.dispose();
        // disconnect all of the players
        this._activeSources.forEach(source => source.dispose());
        this._activeSources.clear();
        this._buffer.dispose();
        return this;
    }
}
(0,tslib__WEBPACK_IMPORTED_MODULE_8__.__decorate)([
    (0,_core_util_Decorator__WEBPACK_IMPORTED_MODULE_7__.timeRange)(0)
], Player.prototype, "fadeIn", void 0);
(0,tslib__WEBPACK_IMPORTED_MODULE_8__.__decorate)([
    (0,_core_util_Decorator__WEBPACK_IMPORTED_MODULE_7__.timeRange)(0)
], Player.prototype, "fadeOut", void 0);
//# sourceMappingURL=Player.js.map

/***/ }),

/***/ "./node_modules/tone/build/esm/source/buffer/Players.js":
/*!**************************************************************!*\
  !*** ./node_modules/tone/build/esm/source/buffer/Players.js ***!
  \**************************************************************/
/*! namespace exports */
/*! export Players [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Players": () => /* binding */ Players
/* harmony export */ });
/* harmony import */ var _component_channel_Volume__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../component/channel/Volume */ "./node_modules/tone/build/esm/component/channel/Volume.js");
/* harmony import */ var _core_context_ToneAudioBuffers__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core/context/ToneAudioBuffers */ "./node_modules/tone/build/esm/core/context/ToneAudioBuffers.js");
/* harmony import */ var _core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/context/ToneAudioNode */ "./node_modules/tone/build/esm/core/context/ToneAudioNode.js");
/* harmony import */ var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/util/Defaults */ "./node_modules/tone/build/esm/core/util/Defaults.js");
/* harmony import */ var _core_util_Debug__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../core/util/Debug */ "./node_modules/tone/build/esm/core/util/Debug.js");
/* harmony import */ var _core_util_Interface__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../core/util/Interface */ "./node_modules/tone/build/esm/core/util/Interface.js");
/* harmony import */ var _Source__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../Source */ "./node_modules/tone/build/esm/source/Source.js");
/* harmony import */ var _Player__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./Player */ "./node_modules/tone/build/esm/source/buffer/Player.js");
;







/**
 * Players combines multiple [[Player]] objects.
 * @category Source
 */
class Players extends _core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_2__.ToneAudioNode {
    constructor() {
        super((0,_core_util_Defaults__WEBPACK_IMPORTED_MODULE_3__.optionsFromArguments)(Players.getDefaults(), arguments, ["urls", "onload"], "urls"));
        this.name = "Players";
        /**
         * Players has no input.
         */
        this.input = undefined;
        /**
         * The container of all of the players
         */
        this._players = new Map();
        const options = (0,_core_util_Defaults__WEBPACK_IMPORTED_MODULE_3__.optionsFromArguments)(Players.getDefaults(), arguments, ["urls", "onload"], "urls");
        /**
         * The output volume node
         */
        this._volume = this.output = new _component_channel_Volume__WEBPACK_IMPORTED_MODULE_0__.Volume({
            context: this.context,
            volume: options.volume,
        });
        this.volume = this._volume.volume;
        (0,_core_util_Interface__WEBPACK_IMPORTED_MODULE_5__.readOnly)(this, "volume");
        this._buffers = new _core_context_ToneAudioBuffers__WEBPACK_IMPORTED_MODULE_1__.ToneAudioBuffers({
            urls: options.urls,
            onload: options.onload,
            baseUrl: options.baseUrl,
            onerror: options.onerror
        });
        // mute initially
        this.mute = options.mute;
        this._fadeIn = options.fadeIn;
        this._fadeOut = options.fadeOut;
    }
    static getDefaults() {
        return Object.assign(_Source__WEBPACK_IMPORTED_MODULE_6__.Source.getDefaults(), {
            baseUrl: "",
            fadeIn: 0,
            fadeOut: 0,
            mute: false,
            onload: _core_util_Interface__WEBPACK_IMPORTED_MODULE_5__.noOp,
            onerror: _core_util_Interface__WEBPACK_IMPORTED_MODULE_5__.noOp,
            urls: {},
            volume: 0,
        });
    }
    /**
     * Mute the output.
     */
    get mute() {
        return this._volume.mute;
    }
    set mute(mute) {
        this._volume.mute = mute;
    }
    /**
     * The fadeIn time of the envelope applied to the source.
     */
    get fadeIn() {
        return this._fadeIn;
    }
    set fadeIn(fadeIn) {
        this._fadeIn = fadeIn;
        this._players.forEach(player => {
            player.fadeIn = fadeIn;
        });
    }
    /**
     * The fadeOut time of the each of the sources.
     */
    get fadeOut() {
        return this._fadeOut;
    }
    set fadeOut(fadeOut) {
        this._fadeOut = fadeOut;
        this._players.forEach(player => {
            player.fadeOut = fadeOut;
        });
    }
    /**
     * The state of the players object. Returns "started" if any of the players are playing.
     */
    get state() {
        const playing = Array.from(this._players).some(([_, player]) => player.state === "started");
        return playing ? "started" : "stopped";
    }
    /**
     * True if the buffers object has a buffer by that name.
     * @param name  The key or index of the buffer.
     */
    has(name) {
        return this._buffers.has(name);
    }
    /**
     * Get a player by name.
     * @param  name  The players name as defined in the constructor object or `add` method.
     */
    player(name) {
        (0,_core_util_Debug__WEBPACK_IMPORTED_MODULE_4__.assert)(this.has(name), `No Player with the name ${name} exists on this object`);
        if (!this._players.has(name)) {
            const player = new _Player__WEBPACK_IMPORTED_MODULE_7__.Player({
                context: this.context,
                fadeIn: this._fadeIn,
                fadeOut: this._fadeOut,
                url: this._buffers.get(name),
            }).connect(this.output);
            this._players.set(name, player);
        }
        return this._players.get(name);
    }
    /**
     * If all the buffers are loaded or not
     */
    get loaded() {
        return this._buffers.loaded;
    }
    /**
     * Add a player by name and url to the Players
     * @param  name A unique name to give the player
     * @param  url  Either the url of the bufer or a buffer which will be added with the given name.
     * @param callback  The callback to invoke when the url is loaded.
     */
    add(name, url, callback) {
        (0,_core_util_Debug__WEBPACK_IMPORTED_MODULE_4__.assert)(!this._buffers.has(name), "A buffer with that name already exists on this object");
        this._buffers.add(name, url, callback);
        return this;
    }
    /**
     * Stop all of the players at the given time
     * @param time The time to stop all of the players.
     */
    stopAll(time) {
        this._players.forEach(player => player.stop(time));
        return this;
    }
    dispose() {
        super.dispose();
        this._volume.dispose();
        this.volume.dispose();
        this._players.forEach(player => player.dispose());
        this._buffers.dispose();
        return this;
    }
}
//# sourceMappingURL=Players.js.map

/***/ }),

/***/ "./node_modules/tone/build/esm/source/buffer/ToneBufferSource.js":
/*!***********************************************************************!*\
  !*** ./node_modules/tone/build/esm/source/buffer/ToneBufferSource.js ***!
  \***********************************************************************/
/*! namespace exports */
/*! export ToneBufferSource [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ToneBufferSource": () => /* binding */ ToneBufferSource
/* harmony export */ });
/* harmony import */ var _core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/context/ToneAudioNode */ "./node_modules/tone/build/esm/core/context/ToneAudioNode.js");
/* harmony import */ var _core_context_Param__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core/context/Param */ "./node_modules/tone/build/esm/core/context/Param.js");
/* harmony import */ var _core_context_ToneAudioBuffer__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/context/ToneAudioBuffer */ "./node_modules/tone/build/esm/core/context/ToneAudioBuffer.js");
/* harmony import */ var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/util/Defaults */ "./node_modules/tone/build/esm/core/util/Defaults.js");
/* harmony import */ var _core_util_Interface__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../core/util/Interface */ "./node_modules/tone/build/esm/core/util/Interface.js");
/* harmony import */ var _core_util_TypeCheck__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../core/util/TypeCheck */ "./node_modules/tone/build/esm/core/util/TypeCheck.js");
/* harmony import */ var _core_util_Debug__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../core/util/Debug */ "./node_modules/tone/build/esm/core/util/Debug.js");
/* harmony import */ var _OneShotSource__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../OneShotSource */ "./node_modules/tone/build/esm/source/OneShotSource.js");
/* harmony import */ var _core_util_Math__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../core/util/Math */ "./node_modules/tone/build/esm/core/util/Math.js");
;








/**
 * Wrapper around the native BufferSourceNode.
 * @category Source
 */
class ToneBufferSource extends _OneShotSource__WEBPACK_IMPORTED_MODULE_7__.OneShotSource {
    constructor() {
        super((0,_core_util_Defaults__WEBPACK_IMPORTED_MODULE_3__.optionsFromArguments)(ToneBufferSource.getDefaults(), arguments, ["url", "onload"]));
        this.name = "ToneBufferSource";
        /**
         * The oscillator
         */
        this._source = this.context.createBufferSource();
        this._internalChannels = [this._source];
        /**
         * indicators if the source has started/stopped
         */
        this._sourceStarted = false;
        this._sourceStopped = false;
        const options = (0,_core_util_Defaults__WEBPACK_IMPORTED_MODULE_3__.optionsFromArguments)(ToneBufferSource.getDefaults(), arguments, ["url", "onload"]);
        (0,_core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_0__.connect)(this._source, this._gainNode);
        this._source.onended = () => this._stopSource();
        /**
         * The playbackRate of the buffer
         */
        this.playbackRate = new _core_context_Param__WEBPACK_IMPORTED_MODULE_1__.Param({
            context: this.context,
            param: this._source.playbackRate,
            units: "positive",
            value: options.playbackRate,
        });
        // set some values initially
        this.loop = options.loop;
        this.loopStart = options.loopStart;
        this.loopEnd = options.loopEnd;
        this._buffer = new _core_context_ToneAudioBuffer__WEBPACK_IMPORTED_MODULE_2__.ToneAudioBuffer(options.url, options.onload, options.onerror);
        this._internalChannels.push(this._source);
    }
    static getDefaults() {
        return Object.assign(_OneShotSource__WEBPACK_IMPORTED_MODULE_7__.OneShotSource.getDefaults(), {
            url: new _core_context_ToneAudioBuffer__WEBPACK_IMPORTED_MODULE_2__.ToneAudioBuffer(),
            loop: false,
            loopEnd: 0,
            loopStart: 0,
            onload: _core_util_Interface__WEBPACK_IMPORTED_MODULE_4__.noOp,
            onerror: _core_util_Interface__WEBPACK_IMPORTED_MODULE_4__.noOp,
            playbackRate: 1,
        });
    }
    /**
     * The fadeIn time of the amplitude envelope.
     */
    get fadeIn() {
        return this._fadeIn;
    }
    set fadeIn(t) {
        this._fadeIn = t;
    }
    /**
     * The fadeOut time of the amplitude envelope.
     */
    get fadeOut() {
        return this._fadeOut;
    }
    set fadeOut(t) {
        this._fadeOut = t;
    }
    /**
     * The curve applied to the fades, either "linear" or "exponential"
     */
    get curve() {
        return this._curve;
    }
    set curve(t) {
        this._curve = t;
    }
    /**
     * Start the buffer
     * @param  time When the player should start.
     * @param  offset The offset from the beginning of the sample to start at.
     * @param  duration How long the sample should play. If no duration is given, it will default to the full length of the sample (minus any offset)
     * @param  gain  The gain to play the buffer back at.
     */
    start(time, offset, duration, gain = 1) {
        (0,_core_util_Debug__WEBPACK_IMPORTED_MODULE_6__.assert)(this.buffer.loaded, "buffer is either not set or not loaded");
        const computedTime = this.toSeconds(time);
        // apply the gain envelope
        this._startGain(computedTime, gain);
        // if it's a loop the default offset is the loopstart point
        if (this.loop) {
            offset = (0,_core_util_Defaults__WEBPACK_IMPORTED_MODULE_3__.defaultArg)(offset, this.loopStart);
        }
        else {
            // otherwise the default offset is 0
            offset = (0,_core_util_Defaults__WEBPACK_IMPORTED_MODULE_3__.defaultArg)(offset, 0);
        }
        // make sure the offset is not less than 0
        let computedOffset = Math.max(this.toSeconds(offset), 0);
        // start the buffer source
        if (this.loop) {
            // modify the offset if it's greater than the loop time
            const loopEnd = this.toSeconds(this.loopEnd) || this.buffer.duration;
            const loopStart = this.toSeconds(this.loopStart);
            const loopDuration = loopEnd - loopStart;
            // move the offset back
            if ((0,_core_util_Math__WEBPACK_IMPORTED_MODULE_8__.GTE)(computedOffset, loopEnd)) {
                computedOffset = ((computedOffset - loopStart) % loopDuration) + loopStart;
            }
            // when the offset is very close to the duration, set it to 0
            if ((0,_core_util_Math__WEBPACK_IMPORTED_MODULE_8__.EQ)(computedOffset, this.buffer.duration)) {
                computedOffset = 0;
            }
        }
        // this.buffer.loaded would have return false if the AudioBuffer was undefined
        this._source.buffer = this.buffer.get();
        this._source.loopEnd = this.toSeconds(this.loopEnd) || this.buffer.duration;
        if ((0,_core_util_Math__WEBPACK_IMPORTED_MODULE_8__.LT)(computedOffset, this.buffer.duration)) {
            this._sourceStarted = true;
            this._source.start(computedTime, computedOffset);
        }
        // if a duration is given, schedule a stop
        if ((0,_core_util_TypeCheck__WEBPACK_IMPORTED_MODULE_5__.isDefined)(duration)) {
            let computedDur = this.toSeconds(duration);
            // make sure it's never negative
            computedDur = Math.max(computedDur, 0);
            this.stop(computedTime + computedDur);
        }
        return this;
    }
    _stopSource(time) {
        if (!this._sourceStopped && this._sourceStarted) {
            this._sourceStopped = true;
            this._source.stop(this.toSeconds(time));
            this._onended();
        }
    }
    /**
     * If loop is true, the loop will start at this position.
     */
    get loopStart() {
        return this._source.loopStart;
    }
    set loopStart(loopStart) {
        this._source.loopStart = this.toSeconds(loopStart);
    }
    /**
     * If loop is true, the loop will end at this position.
     */
    get loopEnd() {
        return this._source.loopEnd;
    }
    set loopEnd(loopEnd) {
        this._source.loopEnd = this.toSeconds(loopEnd);
    }
    /**
     * The audio buffer belonging to the player.
     */
    get buffer() {
        return this._buffer;
    }
    set buffer(buffer) {
        this._buffer.set(buffer);
    }
    /**
     * If the buffer should loop once it's over.
     */
    get loop() {
        return this._source.loop;
    }
    set loop(loop) {
        this._source.loop = loop;
        if (this._sourceStarted) {
            this.cancelStop();
        }
    }
    /**
     * Clean up.
     */
    dispose() {
        super.dispose();
        this._source.onended = null;
        this._source.disconnect();
        this._buffer.dispose();
        this.playbackRate.dispose();
        return this;
    }
}
//# sourceMappingURL=ToneBufferSource.js.map

/***/ }),

/***/ "./node_modules/tone/build/esm/source/index.js":
/*!*****************************************************!*\
  !*** ./node_modules/tone/build/esm/source/index.js ***!
  \*****************************************************/
/*! namespace exports */
/*! export AMOscillator [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/source/oscillator/AMOscillator.js .AMOscillator */
/*! export FMOscillator [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/source/oscillator/FMOscillator.js .FMOscillator */
/*! export FatOscillator [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/source/oscillator/FatOscillator.js .FatOscillator */
/*! export GrainPlayer [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/source/buffer/GrainPlayer.js .GrainPlayer */
/*! export LFO [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/source/oscillator/LFO.js .LFO */
/*! export Noise [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/source/Noise.js .Noise */
/*! export OmniOscillator [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/source/oscillator/OmniOscillator.js .OmniOscillator */
/*! export Oscillator [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/source/oscillator/Oscillator.js .Oscillator */
/*! export PWMOscillator [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/source/oscillator/PWMOscillator.js .PWMOscillator */
/*! export Player [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/source/buffer/Player.js .Player */
/*! export Players [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/source/buffer/Players.js .Players */
/*! export PulseOscillator [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/source/oscillator/PulseOscillator.js .PulseOscillator */
/*! export ToneBufferSource [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/source/buffer/ToneBufferSource.js .ToneBufferSource */
/*! export ToneOscillatorNode [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/source/oscillator/ToneOscillatorNode.js .ToneOscillatorNode */
/*! export UserMedia [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/tone/build/esm/source/UserMedia.js .UserMedia */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_exports__, __webpack_require__.d, __webpack_require__.r, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Noise": () => /* reexport safe */ _Noise__WEBPACK_IMPORTED_MODULE_0__.Noise,
/* harmony export */   "UserMedia": () => /* reexport safe */ _UserMedia__WEBPACK_IMPORTED_MODULE_1__.UserMedia,
/* harmony export */   "Oscillator": () => /* reexport safe */ _oscillator_Oscillator__WEBPACK_IMPORTED_MODULE_2__.Oscillator,
/* harmony export */   "AMOscillator": () => /* reexport safe */ _oscillator_AMOscillator__WEBPACK_IMPORTED_MODULE_3__.AMOscillator,
/* harmony export */   "FMOscillator": () => /* reexport safe */ _oscillator_FMOscillator__WEBPACK_IMPORTED_MODULE_4__.FMOscillator,
/* harmony export */   "PulseOscillator": () => /* reexport safe */ _oscillator_PulseOscillator__WEBPACK_IMPORTED_MODULE_5__.PulseOscillator,
/* harmony export */   "FatOscillator": () => /* reexport safe */ _oscillator_FatOscillator__WEBPACK_IMPORTED_MODULE_6__.FatOscillator,
/* harmony export */   "PWMOscillator": () => /* reexport safe */ _oscillator_PWMOscillator__WEBPACK_IMPORTED_MODULE_7__.PWMOscillator,
/* harmony export */   "OmniOscillator": () => /* reexport safe */ _oscillator_OmniOscillator__WEBPACK_IMPORTED_MODULE_8__.OmniOscillator,
/* harmony export */   "ToneOscillatorNode": () => /* reexport safe */ _oscillator_ToneOscillatorNode__WEBPACK_IMPORTED_MODULE_9__.ToneOscillatorNode,
/* harmony export */   "LFO": () => /* reexport safe */ _oscillator_LFO__WEBPACK_IMPORTED_MODULE_10__.LFO,
/* harmony export */   "ToneBufferSource": () => /* reexport safe */ _buffer_ToneBufferSource__WEBPACK_IMPORTED_MODULE_11__.ToneBufferSource,
/* harmony export */   "Player": () => /* reexport safe */ _buffer_Player__WEBPACK_IMPORTED_MODULE_12__.Player,
/* harmony export */   "Players": () => /* reexport safe */ _buffer_Players__WEBPACK_IMPORTED_MODULE_13__.Players,
/* harmony export */   "GrainPlayer": () => /* reexport safe */ _buffer_GrainPlayer__WEBPACK_IMPORTED_MODULE_14__.GrainPlayer
/* harmony export */ });
/* harmony import */ var _Noise__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Noise */ "./node_modules/tone/build/esm/source/Noise.js");
/* harmony import */ var _UserMedia__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./UserMedia */ "./node_modules/tone/build/esm/source/UserMedia.js");
/* harmony import */ var _oscillator_Oscillator__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./oscillator/Oscillator */ "./node_modules/tone/build/esm/source/oscillator/Oscillator.js");
/* harmony import */ var _oscillator_AMOscillator__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./oscillator/AMOscillator */ "./node_modules/tone/build/esm/source/oscillator/AMOscillator.js");
/* harmony import */ var _oscillator_FMOscillator__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./oscillator/FMOscillator */ "./node_modules/tone/build/esm/source/oscillator/FMOscillator.js");
/* harmony import */ var _oscillator_PulseOscillator__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./oscillator/PulseOscillator */ "./node_modules/tone/build/esm/source/oscillator/PulseOscillator.js");
/* harmony import */ var _oscillator_FatOscillator__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./oscillator/FatOscillator */ "./node_modules/tone/build/esm/source/oscillator/FatOscillator.js");
/* harmony import */ var _oscillator_PWMOscillator__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./oscillator/PWMOscillator */ "./node_modules/tone/build/esm/source/oscillator/PWMOscillator.js");
/* harmony import */ var _oscillator_OmniOscillator__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./oscillator/OmniOscillator */ "./node_modules/tone/build/esm/source/oscillator/OmniOscillator.js");
/* harmony import */ var _oscillator_ToneOscillatorNode__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./oscillator/ToneOscillatorNode */ "./node_modules/tone/build/esm/source/oscillator/ToneOscillatorNode.js");
/* harmony import */ var _oscillator_LFO__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./oscillator/LFO */ "./node_modules/tone/build/esm/source/oscillator/LFO.js");
/* harmony import */ var _buffer_ToneBufferSource__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./buffer/ToneBufferSource */ "./node_modules/tone/build/esm/source/buffer/ToneBufferSource.js");
/* harmony import */ var _buffer_Player__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./buffer/Player */ "./node_modules/tone/build/esm/source/buffer/Player.js");
/* harmony import */ var _buffer_Players__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./buffer/Players */ "./node_modules/tone/build/esm/source/buffer/Players.js");
/* harmony import */ var _buffer_GrainPlayer__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./buffer/GrainPlayer */ "./node_modules/tone/build/esm/source/buffer/GrainPlayer.js");















//# sourceMappingURL=index.js.map

/***/ }),

/***/ "./node_modules/tone/build/esm/source/oscillator/AMOscillator.js":
/*!***********************************************************************!*\
  !*** ./node_modules/tone/build/esm/source/oscillator/AMOscillator.js ***!
  \***********************************************************************/
/*! namespace exports */
/*! export AMOscillator [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "AMOscillator": () => /* binding */ AMOscillator
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! tslib */ "./node_modules/tone/node_modules/tslib/tslib.es6.js");
/* harmony import */ var _core_context_Gain__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/context/Gain */ "./node_modules/tone/build/esm/core/context/Gain.js");
/* harmony import */ var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core/util/Defaults */ "./node_modules/tone/build/esm/core/util/Defaults.js");
/* harmony import */ var _core_util_Interface__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/util/Interface */ "./node_modules/tone/build/esm/core/util/Interface.js");
/* harmony import */ var _signal_AudioToGain__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../signal/AudioToGain */ "./node_modules/tone/build/esm/signal/AudioToGain.js");
/* harmony import */ var _signal_Multiply__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../signal/Multiply */ "./node_modules/tone/build/esm/signal/Multiply.js");
/* harmony import */ var _Source__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../Source */ "./node_modules/tone/build/esm/source/Source.js");
/* harmony import */ var _Oscillator__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./Oscillator */ "./node_modules/tone/build/esm/source/oscillator/Oscillator.js");
/* harmony import */ var _OscillatorInterface__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./OscillatorInterface */ "./node_modules/tone/build/esm/source/oscillator/OscillatorInterface.js");
;








/**
 * An amplitude modulated oscillator node. It is implemented with
 * two oscillators, one which modulators the other's amplitude
 * through a gain node.
 * ```
 *    +-------------+       +----------+
 *    | Carrier Osc +>------> GainNode |
 *    +-------------+       |          +--->Output
 *                      +---> gain     |
 * +---------------+    |   +----------+
 * | Modulator Osc +>---+
 * +---------------+
 * ```
 * @example
 * return Tone.Offline(() => {
 * 	const amOsc = new Tone.AMOscillator(30, "sine", "square").toDestination().start();
 * }, 0.2, 1);
 * @category Source
 */
class AMOscillator extends _Source__WEBPACK_IMPORTED_MODULE_5__.Source {
    constructor() {
        super((0,_core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__.optionsFromArguments)(AMOscillator.getDefaults(), arguments, ["frequency", "type", "modulationType"]));
        this.name = "AMOscillator";
        /**
         * convert the -1,1 output to 0,1
         */
        this._modulationScale = new _signal_AudioToGain__WEBPACK_IMPORTED_MODULE_3__.AudioToGain({ context: this.context });
        /**
         * the node where the modulation happens
         */
        this._modulationNode = new _core_context_Gain__WEBPACK_IMPORTED_MODULE_0__.Gain({
            context: this.context,
        });
        const options = (0,_core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__.optionsFromArguments)(AMOscillator.getDefaults(), arguments, ["frequency", "type", "modulationType"]);
        this._carrier = new _Oscillator__WEBPACK_IMPORTED_MODULE_6__.Oscillator({
            context: this.context,
            detune: options.detune,
            frequency: options.frequency,
            onstop: () => this.onstop(this),
            phase: options.phase,
            type: options.type,
        });
        this.frequency = this._carrier.frequency,
            this.detune = this._carrier.detune;
        this._modulator = new _Oscillator__WEBPACK_IMPORTED_MODULE_6__.Oscillator({
            context: this.context,
            phase: options.phase,
            type: options.modulationType,
        });
        this.harmonicity = new _signal_Multiply__WEBPACK_IMPORTED_MODULE_4__.Multiply({
            context: this.context,
            units: "positive",
            value: options.harmonicity,
        });
        // connections
        this.frequency.chain(this.harmonicity, this._modulator.frequency);
        this._modulator.chain(this._modulationScale, this._modulationNode.gain);
        this._carrier.chain(this._modulationNode, this.output);
        (0,_core_util_Interface__WEBPACK_IMPORTED_MODULE_2__.readOnly)(this, ["frequency", "detune", "harmonicity"]);
    }
    static getDefaults() {
        return Object.assign(_Oscillator__WEBPACK_IMPORTED_MODULE_6__.Oscillator.getDefaults(), {
            harmonicity: 1,
            modulationType: "square",
        });
    }
    /**
     * start the oscillator
     */
    _start(time) {
        this._modulator.start(time);
        this._carrier.start(time);
    }
    /**
     * stop the oscillator
     */
    _stop(time) {
        this._modulator.stop(time);
        this._carrier.stop(time);
    }
    _restart(time) {
        this._modulator.restart(time);
        this._carrier.restart(time);
    }
    /**
     * The type of the carrier oscillator
     */
    get type() {
        return this._carrier.type;
    }
    set type(type) {
        this._carrier.type = type;
    }
    get baseType() {
        return this._carrier.baseType;
    }
    set baseType(baseType) {
        this._carrier.baseType = baseType;
    }
    get partialCount() {
        return this._carrier.partialCount;
    }
    set partialCount(partialCount) {
        this._carrier.partialCount = partialCount;
    }
    /**
     * The type of the modulator oscillator
     */
    get modulationType() {
        return this._modulator.type;
    }
    set modulationType(type) {
        this._modulator.type = type;
    }
    get phase() {
        return this._carrier.phase;
    }
    set phase(phase) {
        this._carrier.phase = phase;
        this._modulator.phase = phase;
    }
    get partials() {
        return this._carrier.partials;
    }
    set partials(partials) {
        this._carrier.partials = partials;
    }
    asArray(length = 1024) {
        return (0,tslib__WEBPACK_IMPORTED_MODULE_8__.__awaiter)(this, void 0, void 0, function* () {
            return (0,_OscillatorInterface__WEBPACK_IMPORTED_MODULE_7__.generateWaveform)(this, length);
        });
    }
    /**
     * Clean up.
     */
    dispose() {
        super.dispose();
        this.frequency.dispose();
        this.detune.dispose();
        this.harmonicity.dispose();
        this._carrier.dispose();
        this._modulator.dispose();
        this._modulationNode.dispose();
        this._modulationScale.dispose();
        return this;
    }
}
//# sourceMappingURL=AMOscillator.js.map

/***/ }),

/***/ "./node_modules/tone/build/esm/source/oscillator/FMOscillator.js":
/*!***********************************************************************!*\
  !*** ./node_modules/tone/build/esm/source/oscillator/FMOscillator.js ***!
  \***********************************************************************/
/*! namespace exports */
/*! export FMOscillator [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "FMOscillator": () => /* binding */ FMOscillator
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! tslib */ "./node_modules/tone/node_modules/tslib/tslib.es6.js");
/* harmony import */ var _core_context_Gain__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/context/Gain */ "./node_modules/tone/build/esm/core/context/Gain.js");
/* harmony import */ var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core/util/Defaults */ "./node_modules/tone/build/esm/core/util/Defaults.js");
/* harmony import */ var _core_util_Interface__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/util/Interface */ "./node_modules/tone/build/esm/core/util/Interface.js");
/* harmony import */ var _signal_Multiply__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../signal/Multiply */ "./node_modules/tone/build/esm/signal/Multiply.js");
/* harmony import */ var _signal_Signal__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../signal/Signal */ "./node_modules/tone/build/esm/signal/Signal.js");
/* harmony import */ var _Source__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../Source */ "./node_modules/tone/build/esm/source/Source.js");
/* harmony import */ var _Oscillator__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./Oscillator */ "./node_modules/tone/build/esm/source/oscillator/Oscillator.js");
/* harmony import */ var _OscillatorInterface__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./OscillatorInterface */ "./node_modules/tone/build/esm/source/oscillator/OscillatorInterface.js");
;








/**
 * FMOscillator implements a frequency modulation synthesis
 * ```
 *                                              +-------------+
 * +---------------+        +-------------+     | Carrier Osc |
 * | Modulator Osc +>-------> GainNode    |     |             +--->Output
 * +---------------+        |             +>----> frequency   |
 *                       +--> gain        |     +-------------+
 *                       |  +-------------+
 * +-----------------+   |
 * | modulationIndex +>--+
 * +-----------------+
 * ```
 *
 * @example
 * return Tone.Offline(() => {
 * 	const fmOsc = new Tone.FMOscillator({
 * 		frequency: 200,
 * 		type: "square",
 * 		modulationType: "triangle",
 * 		harmonicity: 0.2,
 * 		modulationIndex: 3
 * 	}).toDestination().start();
 * }, 0.1, 1);
 * @category Source
 */
class FMOscillator extends _Source__WEBPACK_IMPORTED_MODULE_5__.Source {
    constructor() {
        super((0,_core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__.optionsFromArguments)(FMOscillator.getDefaults(), arguments, ["frequency", "type", "modulationType"]));
        this.name = "FMOscillator";
        /**
         * the node where the modulation happens
         */
        this._modulationNode = new _core_context_Gain__WEBPACK_IMPORTED_MODULE_0__.Gain({
            context: this.context,
            gain: 0,
        });
        const options = (0,_core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__.optionsFromArguments)(FMOscillator.getDefaults(), arguments, ["frequency", "type", "modulationType"]);
        this._carrier = new _Oscillator__WEBPACK_IMPORTED_MODULE_6__.Oscillator({
            context: this.context,
            detune: options.detune,
            frequency: 0,
            onstop: () => this.onstop(this),
            phase: options.phase,
            type: options.type,
        });
        this.detune = this._carrier.detune;
        this.frequency = new _signal_Signal__WEBPACK_IMPORTED_MODULE_4__.Signal({
            context: this.context,
            units: "frequency",
            value: options.frequency,
        });
        this._modulator = new _Oscillator__WEBPACK_IMPORTED_MODULE_6__.Oscillator({
            context: this.context,
            phase: options.phase,
            type: options.modulationType,
        });
        this.harmonicity = new _signal_Multiply__WEBPACK_IMPORTED_MODULE_3__.Multiply({
            context: this.context,
            units: "positive",
            value: options.harmonicity,
        });
        this.modulationIndex = new _signal_Multiply__WEBPACK_IMPORTED_MODULE_3__.Multiply({
            context: this.context,
            units: "positive",
            value: options.modulationIndex,
        });
        // connections
        this.frequency.connect(this._carrier.frequency);
        this.frequency.chain(this.harmonicity, this._modulator.frequency);
        this.frequency.chain(this.modulationIndex, this._modulationNode);
        this._modulator.connect(this._modulationNode.gain);
        this._modulationNode.connect(this._carrier.frequency);
        this._carrier.connect(this.output);
        this.detune.connect(this._modulator.detune);
        (0,_core_util_Interface__WEBPACK_IMPORTED_MODULE_2__.readOnly)(this, ["modulationIndex", "frequency", "detune", "harmonicity"]);
    }
    static getDefaults() {
        return Object.assign(_Oscillator__WEBPACK_IMPORTED_MODULE_6__.Oscillator.getDefaults(), {
            harmonicity: 1,
            modulationIndex: 2,
            modulationType: "square",
        });
    }
    /**
     * start the oscillator
     */
    _start(time) {
        this._modulator.start(time);
        this._carrier.start(time);
    }
    /**
     * stop the oscillator
     */
    _stop(time) {
        this._modulator.stop(time);
        this._carrier.stop(time);
    }
    _restart(time) {
        this._modulator.restart(time);
        this._carrier.restart(time);
        return this;
    }
    get type() {
        return this._carrier.type;
    }
    set type(type) {
        this._carrier.type = type;
    }
    get baseType() {
        return this._carrier.baseType;
    }
    set baseType(baseType) {
        this._carrier.baseType = baseType;
    }
    get partialCount() {
        return this._carrier.partialCount;
    }
    set partialCount(partialCount) {
        this._carrier.partialCount = partialCount;
    }
    /**
     * The type of the modulator oscillator
     */
    get modulationType() {
        return this._modulator.type;
    }
    set modulationType(type) {
        this._modulator.type = type;
    }
    get phase() {
        return this._carrier.phase;
    }
    set phase(phase) {
        this._carrier.phase = phase;
        this._modulator.phase = phase;
    }
    get partials() {
        return this._carrier.partials;
    }
    set partials(partials) {
        this._carrier.partials = partials;
    }
    asArray(length = 1024) {
        return (0,tslib__WEBPACK_IMPORTED_MODULE_8__.__awaiter)(this, void 0, void 0, function* () {
            return (0,_OscillatorInterface__WEBPACK_IMPORTED_MODULE_7__.generateWaveform)(this, length);
        });
    }
    /**
     * Clean up.
     */
    dispose() {
        super.dispose();
        this.frequency.dispose();
        this.harmonicity.dispose();
        this._carrier.dispose();
        this._modulator.dispose();
        this._modulationNode.dispose();
        this.modulationIndex.dispose();
        return this;
    }
}
//# sourceMappingURL=FMOscillator.js.map

/***/ }),

/***/ "./node_modules/tone/build/esm/source/oscillator/FatOscillator.js":
/*!************************************************************************!*\
  !*** ./node_modules/tone/build/esm/source/oscillator/FatOscillator.js ***!
  \************************************************************************/
/*! namespace exports */
/*! export FatOscillator [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "FatOscillator": () => /* binding */ FatOscillator
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! tslib */ "./node_modules/tone/node_modules/tslib/tslib.es6.js");
/* harmony import */ var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/util/Defaults */ "./node_modules/tone/build/esm/core/util/Defaults.js");
/* harmony import */ var _core_util_Interface__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core/util/Interface */ "./node_modules/tone/build/esm/core/util/Interface.js");
/* harmony import */ var _signal_Signal__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../signal/Signal */ "./node_modules/tone/build/esm/signal/Signal.js");
/* harmony import */ var _Source__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../Source */ "./node_modules/tone/build/esm/source/Source.js");
/* harmony import */ var _Oscillator__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./Oscillator */ "./node_modules/tone/build/esm/source/oscillator/Oscillator.js");
/* harmony import */ var _OscillatorInterface__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./OscillatorInterface */ "./node_modules/tone/build/esm/source/oscillator/OscillatorInterface.js");
/* harmony import */ var _core_util_Debug__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../core/util/Debug */ "./node_modules/tone/build/esm/core/util/Debug.js");
;







/**
 * FatOscillator is an array of oscillators with detune spread between the oscillators
 * @example
 * const fatOsc = new Tone.FatOscillator("Ab3", "sawtooth", 40).toDestination().start();
 * @category Source
 */
class FatOscillator extends _Source__WEBPACK_IMPORTED_MODULE_3__.Source {
    constructor() {
        super((0,_core_util_Defaults__WEBPACK_IMPORTED_MODULE_0__.optionsFromArguments)(FatOscillator.getDefaults(), arguments, ["frequency", "type", "spread"]));
        this.name = "FatOscillator";
        /**
         * The array of oscillators
         */
        this._oscillators = [];
        const options = (0,_core_util_Defaults__WEBPACK_IMPORTED_MODULE_0__.optionsFromArguments)(FatOscillator.getDefaults(), arguments, ["frequency", "type", "spread"]);
        this.frequency = new _signal_Signal__WEBPACK_IMPORTED_MODULE_2__.Signal({
            context: this.context,
            units: "frequency",
            value: options.frequency,
        });
        this.detune = new _signal_Signal__WEBPACK_IMPORTED_MODULE_2__.Signal({
            context: this.context,
            units: "cents",
            value: options.detune,
        });
        this._spread = options.spread;
        this._type = options.type;
        this._phase = options.phase;
        this._partials = options.partials;
        this._partialCount = options.partialCount;
        // set the count initially
        this.count = options.count;
        (0,_core_util_Interface__WEBPACK_IMPORTED_MODULE_1__.readOnly)(this, ["frequency", "detune"]);
    }
    static getDefaults() {
        return Object.assign(_Oscillator__WEBPACK_IMPORTED_MODULE_4__.Oscillator.getDefaults(), {
            count: 3,
            spread: 20,
            type: "sawtooth",
        });
    }
    /**
     * start the oscillator
     */
    _start(time) {
        time = this.toSeconds(time);
        this._forEach(osc => osc.start(time));
    }
    /**
     * stop the oscillator
     */
    _stop(time) {
        time = this.toSeconds(time);
        this._forEach(osc => osc.stop(time));
    }
    _restart(time) {
        this._forEach(osc => osc.restart(time));
    }
    /**
     * Iterate over all of the oscillators
     */
    _forEach(iterator) {
        for (let i = 0; i < this._oscillators.length; i++) {
            iterator(this._oscillators[i], i);
        }
    }
    /**
     * The type of the oscillator
     */
    get type() {
        return this._type;
    }
    set type(type) {
        this._type = type;
        this._forEach(osc => osc.type = type);
    }
    /**
     * The detune spread between the oscillators. If "count" is
     * set to 3 oscillators and the "spread" is set to 40,
     * the three oscillators would be detuned like this: [-20, 0, 20]
     * for a total detune spread of 40 cents.
     * @example
     * const fatOsc = new Tone.FatOscillator().toDestination().start();
     * fatOsc.spread = 70;
     */
    get spread() {
        return this._spread;
    }
    set spread(spread) {
        this._spread = spread;
        if (this._oscillators.length > 1) {
            const start = -spread / 2;
            const step = spread / (this._oscillators.length - 1);
            this._forEach((osc, i) => osc.detune.value = start + step * i);
        }
    }
    /**
     * The number of detuned oscillators. Must be an integer greater than 1.
     * @example
     * const fatOsc = new Tone.FatOscillator("C#3", "sawtooth").toDestination().start();
     * // use 4 sawtooth oscillators
     * fatOsc.count = 4;
     */
    get count() {
        return this._oscillators.length;
    }
    set count(count) {
        (0,_core_util_Debug__WEBPACK_IMPORTED_MODULE_6__.assertRange)(count, 1);
        if (this._oscillators.length !== count) {
            // dispose the previous oscillators
            this._forEach(osc => osc.dispose());
            this._oscillators = [];
            for (let i = 0; i < count; i++) {
                const osc = new _Oscillator__WEBPACK_IMPORTED_MODULE_4__.Oscillator({
                    context: this.context,
                    volume: -6 - count * 1.1,
                    type: this._type,
                    phase: this._phase + (i / count) * 360,
                    partialCount: this._partialCount,
                    onstop: i === 0 ? () => this.onstop(this) : _core_util_Interface__WEBPACK_IMPORTED_MODULE_1__.noOp,
                });
                if (this.type === "custom") {
                    osc.partials = this._partials;
                }
                this.frequency.connect(osc.frequency);
                this.detune.connect(osc.detune);
                osc.detune.overridden = false;
                osc.connect(this.output);
                this._oscillators[i] = osc;
            }
            // set the spread
            this.spread = this._spread;
            if (this.state === "started") {
                this._forEach(osc => osc.start());
            }
        }
    }
    get phase() {
        return this._phase;
    }
    set phase(phase) {
        this._phase = phase;
        this._forEach((osc, i) => osc.phase = this._phase + (i / this.count) * 360);
    }
    get baseType() {
        return this._oscillators[0].baseType;
    }
    set baseType(baseType) {
        this._forEach(osc => osc.baseType = baseType);
        this._type = this._oscillators[0].type;
    }
    get partials() {
        return this._oscillators[0].partials;
    }
    set partials(partials) {
        this._partials = partials;
        this._partialCount = this._partials.length;
        if (partials.length) {
            this._type = "custom";
            this._forEach(osc => osc.partials = partials);
        }
    }
    get partialCount() {
        return this._oscillators[0].partialCount;
    }
    set partialCount(partialCount) {
        this._partialCount = partialCount;
        this._forEach(osc => osc.partialCount = partialCount);
        this._type = this._oscillators[0].type;
    }
    asArray(length = 1024) {
        return (0,tslib__WEBPACK_IMPORTED_MODULE_7__.__awaiter)(this, void 0, void 0, function* () {
            return (0,_OscillatorInterface__WEBPACK_IMPORTED_MODULE_5__.generateWaveform)(this, length);
        });
    }
    /**
     * Clean up.
     */
    dispose() {
        super.dispose();
        this.frequency.dispose();
        this.detune.dispose();
        this._forEach(osc => osc.dispose());
        return this;
    }
}
//# sourceMappingURL=FatOscillator.js.map

/***/ }),

/***/ "./node_modules/tone/build/esm/source/oscillator/LFO.js":
/*!**************************************************************!*\
  !*** ./node_modules/tone/build/esm/source/oscillator/LFO.js ***!
  \**************************************************************/
/*! namespace exports */
/*! export LFO [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "LFO": () => /* binding */ LFO
/* harmony export */ });
/* harmony import */ var _core_context_Gain__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/context/Gain */ "./node_modules/tone/build/esm/core/context/Gain.js");
/* harmony import */ var _core_context_Param__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core/context/Param */ "./node_modules/tone/build/esm/core/context/Param.js");
/* harmony import */ var _core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/context/ToneAudioNode */ "./node_modules/tone/build/esm/core/context/ToneAudioNode.js");
/* harmony import */ var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/util/Defaults */ "./node_modules/tone/build/esm/core/util/Defaults.js");
/* harmony import */ var _core_util_Interface__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../core/util/Interface */ "./node_modules/tone/build/esm/core/util/Interface.js");
/* harmony import */ var _signal_AudioToGain__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../signal/AudioToGain */ "./node_modules/tone/build/esm/signal/AudioToGain.js");
/* harmony import */ var _signal_Scale__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../signal/Scale */ "./node_modules/tone/build/esm/signal/Scale.js");
/* harmony import */ var _signal_Signal__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../signal/Signal */ "./node_modules/tone/build/esm/signal/Signal.js");
/* harmony import */ var _signal_Zero__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../signal/Zero */ "./node_modules/tone/build/esm/signal/Zero.js");
/* harmony import */ var _Oscillator__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./Oscillator */ "./node_modules/tone/build/esm/source/oscillator/Oscillator.js");
;









/**
 * LFO stands for low frequency oscillator. LFO produces an output signal
 * which can be attached to an AudioParam or Tone.Signal
 * in order to modulate that parameter with an oscillator. The LFO can
 * also be synced to the transport to start/stop and change when the tempo changes.
 * @example
 * return Tone.Offline(() => {
 * 	const lfo = new Tone.LFO("4n", 400, 4000).start().toDestination();
 * }, 0.5, 1);
 * @category Source
 */
class LFO extends _core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_2__.ToneAudioNode {
    constructor() {
        super((0,_core_util_Defaults__WEBPACK_IMPORTED_MODULE_3__.optionsFromArguments)(LFO.getDefaults(), arguments, ["frequency", "min", "max"]));
        this.name = "LFO";
        /**
         * The value that the LFO outputs when it's stopped
         */
        this._stoppedValue = 0;
        /**
         * A private placeholder for the units
         */
        this._units = "number";
        /**
         * If the input value is converted using the [[units]]
         */
        this.convert = true;
        /**
         * Private methods borrowed from Param
         */
        // @ts-ignore
        this._fromType = _core_context_Param__WEBPACK_IMPORTED_MODULE_1__.Param.prototype._fromType;
        // @ts-ignore
        this._toType = _core_context_Param__WEBPACK_IMPORTED_MODULE_1__.Param.prototype._toType;
        // @ts-ignore
        this._is = _core_context_Param__WEBPACK_IMPORTED_MODULE_1__.Param.prototype._is;
        // @ts-ignore
        this._clampValue = _core_context_Param__WEBPACK_IMPORTED_MODULE_1__.Param.prototype._clampValue;
        const options = (0,_core_util_Defaults__WEBPACK_IMPORTED_MODULE_3__.optionsFromArguments)(LFO.getDefaults(), arguments, ["frequency", "min", "max"]);
        // @ts-ignore
        this._oscillator = new _Oscillator__WEBPACK_IMPORTED_MODULE_9__.Oscillator({
            context: this.context,
            frequency: options.frequency,
            type: options.type,
        });
        this.frequency = this._oscillator.frequency;
        this._amplitudeGain = new _core_context_Gain__WEBPACK_IMPORTED_MODULE_0__.Gain({
            context: this.context,
            gain: options.amplitude,
            units: "normalRange",
        });
        this.amplitude = this._amplitudeGain.gain;
        this._stoppedSignal = new _signal_Signal__WEBPACK_IMPORTED_MODULE_7__.Signal({
            context: this.context,
            units: "audioRange",
            value: 0,
        });
        this._zeros = new _signal_Zero__WEBPACK_IMPORTED_MODULE_8__.Zero({ context: this.context });
        this._a2g = new _signal_AudioToGain__WEBPACK_IMPORTED_MODULE_5__.AudioToGain({ context: this.context });
        this._scaler = this.output = new _signal_Scale__WEBPACK_IMPORTED_MODULE_6__.Scale({
            context: this.context,
            max: options.max,
            min: options.min,
        });
        this.units = options.units;
        this.min = options.min;
        this.max = options.max;
        // connect it up
        this._oscillator.chain(this._a2g, this._amplitudeGain, this._scaler);
        this._zeros.connect(this._a2g);
        this._stoppedSignal.connect(this._a2g);
        (0,_core_util_Interface__WEBPACK_IMPORTED_MODULE_4__.readOnly)(this, ["amplitude", "frequency"]);
        this.phase = options.phase;
    }
    static getDefaults() {
        return Object.assign(_core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_2__.ToneAudioNode.getDefaults(), {
            amplitude: 1,
            frequency: "4n",
            max: 1,
            min: 0,
            phase: 0,
            type: "sine",
            units: "number",
        });
    }
    /**
     * Start the LFO.
     * @param time The time the LFO will start
     */
    start(time) {
        time = this.toSeconds(time);
        this._stoppedSignal.setValueAtTime(0, time);
        this._oscillator.start(time);
        return this;
    }
    /**
     * Stop the LFO.
     * @param  time The time the LFO will stop
     */
    stop(time) {
        time = this.toSeconds(time);
        this._stoppedSignal.setValueAtTime(this._stoppedValue, time);
        this._oscillator.stop(time);
        return this;
    }
    /**
     * Sync the start/stop/pause to the transport
     * and the frequency to the bpm of the transport
     * @example
     * const lfo = new Tone.LFO("8n");
     * lfo.sync().start(0);
     * // the rate of the LFO will always be an eighth note, even as the tempo changes
     */
    sync() {
        this._oscillator.sync();
        this._oscillator.syncFrequency();
        return this;
    }
    /**
     * unsync the LFO from transport control
     */
    unsync() {
        this._oscillator.unsync();
        this._oscillator.unsyncFrequency();
        return this;
    }
    /**
     * The minimum output of the LFO.
     */
    get min() {
        return this._toType(this._scaler.min);
    }
    set min(min) {
        min = this._fromType(min);
        this._scaler.min = min;
    }
    /**
     * The maximum output of the LFO.
     */
    get max() {
        return this._toType(this._scaler.max);
    }
    set max(max) {
        max = this._fromType(max);
        this._scaler.max = max;
    }
    /**
     * The type of the oscillator: See [[Oscillator.type]]
     */
    get type() {
        return this._oscillator.type;
    }
    set type(type) {
        this._oscillator.type = type;
        this._stoppedValue = this._oscillator.getInitialValue();
        this._stoppedSignal.value = this._stoppedValue;
    }
    /**
     * The phase of the LFO.
     */
    get phase() {
        return this._oscillator.phase;
    }
    set phase(phase) {
        this._oscillator.phase = phase;
        this._stoppedValue = this._oscillator.getInitialValue();
        this._stoppedSignal.value = this._stoppedValue;
    }
    /**
     * The output units of the LFO.
     */
    get units() {
        return this._units;
    }
    set units(val) {
        const currentMin = this.min;
        const currentMax = this.max;
        // convert the min and the max
        this._units = val;
        this.min = currentMin;
        this.max = currentMax;
    }
    /**
     * Returns the playback state of the source, either "started" or "stopped".
     */
    get state() {
        return this._oscillator.state;
    }
    /**
     * @param node the destination to connect to
     * @param outputNum the optional output number
     * @param inputNum the input number
     */
    connect(node, outputNum, inputNum) {
        if (node instanceof _core_context_Param__WEBPACK_IMPORTED_MODULE_1__.Param || node instanceof _signal_Signal__WEBPACK_IMPORTED_MODULE_7__.Signal) {
            this.convert = node.convert;
            this.units = node.units;
        }
        (0,_signal_Signal__WEBPACK_IMPORTED_MODULE_7__.connectSignal)(this, node, outputNum, inputNum);
        return this;
    }
    dispose() {
        super.dispose();
        this._oscillator.dispose();
        this._stoppedSignal.dispose();
        this._zeros.dispose();
        this._scaler.dispose();
        this._a2g.dispose();
        this._amplitudeGain.dispose();
        this.amplitude.dispose();
        return this;
    }
}
//# sourceMappingURL=LFO.js.map

/***/ }),

/***/ "./node_modules/tone/build/esm/source/oscillator/OmniOscillator.js":
/*!*************************************************************************!*\
  !*** ./node_modules/tone/build/esm/source/oscillator/OmniOscillator.js ***!
  \*************************************************************************/
/*! namespace exports */
/*! export OmniOscillator [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "OmniOscillator": () => /* binding */ OmniOscillator
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! tslib */ "./node_modules/tone/node_modules/tslib/tslib.es6.js");
/* harmony import */ var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/util/Defaults */ "./node_modules/tone/build/esm/core/util/Defaults.js");
/* harmony import */ var _core_util_Interface__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core/util/Interface */ "./node_modules/tone/build/esm/core/util/Interface.js");
/* harmony import */ var _core_util_TypeCheck__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/util/TypeCheck */ "./node_modules/tone/build/esm/core/util/TypeCheck.js");
/* harmony import */ var _signal_Signal__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../signal/Signal */ "./node_modules/tone/build/esm/signal/Signal.js");
/* harmony import */ var _Source__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../Source */ "./node_modules/tone/build/esm/source/Source.js");
/* harmony import */ var _AMOscillator__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./AMOscillator */ "./node_modules/tone/build/esm/source/oscillator/AMOscillator.js");
/* harmony import */ var _FatOscillator__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./FatOscillator */ "./node_modules/tone/build/esm/source/oscillator/FatOscillator.js");
/* harmony import */ var _FMOscillator__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./FMOscillator */ "./node_modules/tone/build/esm/source/oscillator/FMOscillator.js");
/* harmony import */ var _Oscillator__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./Oscillator */ "./node_modules/tone/build/esm/source/oscillator/Oscillator.js");
/* harmony import */ var _OscillatorInterface__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./OscillatorInterface */ "./node_modules/tone/build/esm/source/oscillator/OscillatorInterface.js");
/* harmony import */ var _PulseOscillator__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./PulseOscillator */ "./node_modules/tone/build/esm/source/oscillator/PulseOscillator.js");
/* harmony import */ var _PWMOscillator__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./PWMOscillator */ "./node_modules/tone/build/esm/source/oscillator/PWMOscillator.js");
;












const OmniOscillatorSourceMap = {
    am: _AMOscillator__WEBPACK_IMPORTED_MODULE_5__.AMOscillator,
    fat: _FatOscillator__WEBPACK_IMPORTED_MODULE_6__.FatOscillator,
    fm: _FMOscillator__WEBPACK_IMPORTED_MODULE_7__.FMOscillator,
    oscillator: _Oscillator__WEBPACK_IMPORTED_MODULE_8__.Oscillator,
    pulse: _PulseOscillator__WEBPACK_IMPORTED_MODULE_10__.PulseOscillator,
    pwm: _PWMOscillator__WEBPACK_IMPORTED_MODULE_11__.PWMOscillator,
};
/**
 * OmniOscillator aggregates all of the oscillator types into one.
 * @example
 * return Tone.Offline(() => {
 * 	const omniOsc = new Tone.OmniOscillator("C#4", "pwm").toDestination().start();
 * }, 0.1, 1);
 * @category Source
 */
class OmniOscillator extends _Source__WEBPACK_IMPORTED_MODULE_4__.Source {
    constructor() {
        super((0,_core_util_Defaults__WEBPACK_IMPORTED_MODULE_0__.optionsFromArguments)(OmniOscillator.getDefaults(), arguments, ["frequency", "type"]));
        this.name = "OmniOscillator";
        const options = (0,_core_util_Defaults__WEBPACK_IMPORTED_MODULE_0__.optionsFromArguments)(OmniOscillator.getDefaults(), arguments, ["frequency", "type"]);
        this.frequency = new _signal_Signal__WEBPACK_IMPORTED_MODULE_3__.Signal({
            context: this.context,
            units: "frequency",
            value: options.frequency,
        });
        this.detune = new _signal_Signal__WEBPACK_IMPORTED_MODULE_3__.Signal({
            context: this.context,
            units: "cents",
            value: options.detune,
        });
        (0,_core_util_Interface__WEBPACK_IMPORTED_MODULE_1__.readOnly)(this, ["frequency", "detune"]);
        // set the options
        this.set(options);
    }
    static getDefaults() {
        return Object.assign(_Oscillator__WEBPACK_IMPORTED_MODULE_8__.Oscillator.getDefaults(), _FMOscillator__WEBPACK_IMPORTED_MODULE_7__.FMOscillator.getDefaults(), _AMOscillator__WEBPACK_IMPORTED_MODULE_5__.AMOscillator.getDefaults(), _FatOscillator__WEBPACK_IMPORTED_MODULE_6__.FatOscillator.getDefaults(), _PulseOscillator__WEBPACK_IMPORTED_MODULE_10__.PulseOscillator.getDefaults(), _PWMOscillator__WEBPACK_IMPORTED_MODULE_11__.PWMOscillator.getDefaults());
    }
    /**
     * start the oscillator
     */
    _start(time) {
        this._oscillator.start(time);
    }
    /**
     * start the oscillator
     */
    _stop(time) {
        this._oscillator.stop(time);
    }
    _restart(time) {
        this._oscillator.restart(time);
        return this;
    }
    /**
     * The type of the oscillator. Can be any of the basic types: sine, square, triangle, sawtooth. Or
     * prefix the basic types with "fm", "am", or "fat" to use the FMOscillator, AMOscillator or FatOscillator
     * types. The oscillator could also be set to "pwm" or "pulse". All of the parameters of the
     * oscillator's class are accessible when the oscillator is set to that type, but throws an error
     * when it's not.
     * @example
     * const omniOsc = new Tone.OmniOscillator().toDestination().start();
     * omniOsc.type = "pwm";
     * // modulationFrequency is parameter which is available
     * // only when the type is "pwm".
     * omniOsc.modulationFrequency.value = 0.5;
     */
    get type() {
        let prefix = "";
        if (["am", "fm", "fat"].some(p => this._sourceType === p)) {
            prefix = this._sourceType;
        }
        return prefix + this._oscillator.type;
    }
    set type(type) {
        if (type.substr(0, 2) === "fm") {
            this._createNewOscillator("fm");
            this._oscillator = this._oscillator;
            this._oscillator.type = type.substr(2);
        }
        else if (type.substr(0, 2) === "am") {
            this._createNewOscillator("am");
            this._oscillator = this._oscillator;
            this._oscillator.type = type.substr(2);
        }
        else if (type.substr(0, 3) === "fat") {
            this._createNewOscillator("fat");
            this._oscillator = this._oscillator;
            this._oscillator.type = type.substr(3);
        }
        else if (type === "pwm") {
            this._createNewOscillator("pwm");
            this._oscillator = this._oscillator;
        }
        else if (type === "pulse") {
            this._createNewOscillator("pulse");
        }
        else {
            this._createNewOscillator("oscillator");
            this._oscillator = this._oscillator;
            this._oscillator.type = type;
        }
    }
    /**
     * The value is an empty array when the type is not "custom".
     * This is not available on "pwm" and "pulse" oscillator types.
     * See [[Oscillator.partials]]
     */
    get partials() {
        return this._oscillator.partials;
    }
    set partials(partials) {
        if (!this._getOscType(this._oscillator, "pulse") && !this._getOscType(this._oscillator, "pwm")) {
            this._oscillator.partials = partials;
        }
    }
    get partialCount() {
        return this._oscillator.partialCount;
    }
    set partialCount(partialCount) {
        if (!this._getOscType(this._oscillator, "pulse") && !this._getOscType(this._oscillator, "pwm")) {
            this._oscillator.partialCount = partialCount;
        }
    }
    set(props) {
        // make sure the type is set first
        if (Reflect.has(props, "type") && props.type) {
            this.type = props.type;
        }
        // then set the rest
        super.set(props);
        return this;
    }
    /**
     * connect the oscillator to the frequency and detune signals
     */
    _createNewOscillator(oscType) {
        if (oscType !== this._sourceType) {
            this._sourceType = oscType;
            const OscConstructor = OmniOscillatorSourceMap[oscType];
            // short delay to avoid clicks on the change
            const now = this.now();
            if (this._oscillator) {
                const oldOsc = this._oscillator;
                oldOsc.stop(now);
                // dispose the old one
                this.context.setTimeout(() => oldOsc.dispose(), this.blockTime);
            }
            this._oscillator = new OscConstructor({
                context: this.context,
            });
            this.frequency.connect(this._oscillator.frequency);
            this.detune.connect(this._oscillator.detune);
            this._oscillator.connect(this.output);
            this._oscillator.onstop = () => this.onstop(this);
            if (this.state === "started") {
                this._oscillator.start(now);
            }
        }
    }
    get phase() {
        return this._oscillator.phase;
    }
    set phase(phase) {
        this._oscillator.phase = phase;
    }
    /**
     * The source type of the oscillator.
     * @example
     * const omniOsc = new Tone.OmniOscillator(440, "fmsquare");
     * console.log(omniOsc.sourceType); // 'fm'
     */
    get sourceType() {
        return this._sourceType;
    }
    set sourceType(sType) {
        // the basetype defaults to sine
        let baseType = "sine";
        if (this._oscillator.type !== "pwm" && this._oscillator.type !== "pulse") {
            baseType = this._oscillator.type;
        }
        // set the type
        if (sType === "fm") {
            this.type = "fm" + baseType;
        }
        else if (sType === "am") {
            this.type = "am" + baseType;
        }
        else if (sType === "fat") {
            this.type = "fat" + baseType;
        }
        else if (sType === "oscillator") {
            this.type = baseType;
        }
        else if (sType === "pulse") {
            this.type = "pulse";
        }
        else if (sType === "pwm") {
            this.type = "pwm";
        }
    }
    _getOscType(osc, sourceType) {
        return osc instanceof OmniOscillatorSourceMap[sourceType];
    }
    /**
     * The base type of the oscillator. See [[Oscillator.baseType]]
     * @example
     * const omniOsc = new Tone.OmniOscillator(440, "fmsquare4");
     * console.log(omniOsc.sourceType, omniOsc.baseType, omniOsc.partialCount);
     */
    get baseType() {
        return this._oscillator.baseType;
    }
    set baseType(baseType) {
        if (!this._getOscType(this._oscillator, "pulse") &&
            !this._getOscType(this._oscillator, "pwm") &&
            baseType !== "pulse" && baseType !== "pwm") {
            this._oscillator.baseType = baseType;
        }
    }
    /**
     * The width of the oscillator when sourceType === "pulse".
     * See [[PWMOscillator.width]]
     */
    get width() {
        if (this._getOscType(this._oscillator, "pulse")) {
            return this._oscillator.width;
        }
        else {
            return undefined;
        }
    }
    /**
     * The number of detuned oscillators when sourceType === "fat".
     * See [[FatOscillator.count]]
     */
    get count() {
        if (this._getOscType(this._oscillator, "fat")) {
            return this._oscillator.count;
        }
        else {
            return undefined;
        }
    }
    set count(count) {
        if (this._getOscType(this._oscillator, "fat") && (0,_core_util_TypeCheck__WEBPACK_IMPORTED_MODULE_2__.isNumber)(count)) {
            this._oscillator.count = count;
        }
    }
    /**
     * The detune spread between the oscillators when sourceType === "fat".
     * See [[FatOscillator.count]]
     */
    get spread() {
        if (this._getOscType(this._oscillator, "fat")) {
            return this._oscillator.spread;
        }
        else {
            return undefined;
        }
    }
    set spread(spread) {
        if (this._getOscType(this._oscillator, "fat") && (0,_core_util_TypeCheck__WEBPACK_IMPORTED_MODULE_2__.isNumber)(spread)) {
            this._oscillator.spread = spread;
        }
    }
    /**
     * The type of the modulator oscillator. Only if the oscillator is set to "am" or "fm" types.
     * See [[AMOscillator]] or [[FMOscillator]]
     */
    get modulationType() {
        if (this._getOscType(this._oscillator, "fm") || this._getOscType(this._oscillator, "am")) {
            return this._oscillator.modulationType;
        }
        else {
            return undefined;
        }
    }
    set modulationType(mType) {
        if ((this._getOscType(this._oscillator, "fm") || this._getOscType(this._oscillator, "am")) && (0,_core_util_TypeCheck__WEBPACK_IMPORTED_MODULE_2__.isString)(mType)) {
            this._oscillator.modulationType = mType;
        }
    }
    /**
     * The modulation index when the sourceType === "fm"
     * See [[FMOscillator]].
     */
    get modulationIndex() {
        if (this._getOscType(this._oscillator, "fm")) {
            return this._oscillator.modulationIndex;
        }
        else {
            return undefined;
        }
    }
    /**
     * Harmonicity is the frequency ratio between the carrier and the modulator oscillators.
     * See [[AMOscillator]] or [[FMOscillator]]
     */
    get harmonicity() {
        if (this._getOscType(this._oscillator, "fm") || this._getOscType(this._oscillator, "am")) {
            return this._oscillator.harmonicity;
        }
        else {
            return undefined;
        }
    }
    /**
     * The modulationFrequency Signal of the oscillator when sourceType === "pwm"
     * see [[PWMOscillator]]
     * @min 0.1
     * @max 5
     */
    get modulationFrequency() {
        if (this._getOscType(this._oscillator, "pwm")) {
            return this._oscillator.modulationFrequency;
        }
        else {
            return undefined;
        }
    }
    asArray(length = 1024) {
        return (0,tslib__WEBPACK_IMPORTED_MODULE_12__.__awaiter)(this, void 0, void 0, function* () {
            return (0,_OscillatorInterface__WEBPACK_IMPORTED_MODULE_9__.generateWaveform)(this, length);
        });
    }
    dispose() {
        super.dispose();
        this.detune.dispose();
        this.frequency.dispose();
        this._oscillator.dispose();
        return this;
    }
}
//# sourceMappingURL=OmniOscillator.js.map

/***/ }),

/***/ "./node_modules/tone/build/esm/source/oscillator/Oscillator.js":
/*!*********************************************************************!*\
  !*** ./node_modules/tone/build/esm/source/oscillator/Oscillator.js ***!
  \*********************************************************************/
/*! namespace exports */
/*! export Oscillator [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Oscillator": () => /* binding */ Oscillator
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! tslib */ "./node_modules/tone/node_modules/tslib/tslib.es6.js");
/* harmony import */ var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/util/Defaults */ "./node_modules/tone/build/esm/core/util/Defaults.js");
/* harmony import */ var _core_util_Interface__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core/util/Interface */ "./node_modules/tone/build/esm/core/util/Interface.js");
/* harmony import */ var _core_util_TypeCheck__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/util/TypeCheck */ "./node_modules/tone/build/esm/core/util/TypeCheck.js");
/* harmony import */ var _signal_Signal__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../signal/Signal */ "./node_modules/tone/build/esm/signal/Signal.js");
/* harmony import */ var _Source__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../Source */ "./node_modules/tone/build/esm/source/Source.js");
/* harmony import */ var _OscillatorInterface__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./OscillatorInterface */ "./node_modules/tone/build/esm/source/oscillator/OscillatorInterface.js");
/* harmony import */ var _ToneOscillatorNode__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./ToneOscillatorNode */ "./node_modules/tone/build/esm/source/oscillator/ToneOscillatorNode.js");
/* harmony import */ var _core_util_Debug__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../core/util/Debug */ "./node_modules/tone/build/esm/core/util/Debug.js");
/* harmony import */ var _core_util_Math__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../core/util/Math */ "./node_modules/tone/build/esm/core/util/Math.js");
;









/**
 * Oscillator supports a number of features including
 * phase rotation, multiple oscillator types (see Oscillator.type),
 * and Transport syncing (see Oscillator.syncFrequency).
 *
 * @example
 * // make and start a 440hz sine tone
 * const osc = new Tone.Oscillator(440, "sine").toDestination().start();
 * @category Source
 */
class Oscillator extends _Source__WEBPACK_IMPORTED_MODULE_4__.Source {
    constructor() {
        super((0,_core_util_Defaults__WEBPACK_IMPORTED_MODULE_0__.optionsFromArguments)(Oscillator.getDefaults(), arguments, ["frequency", "type"]));
        this.name = "Oscillator";
        /**
         * the main oscillator
         */
        this._oscillator = null;
        const options = (0,_core_util_Defaults__WEBPACK_IMPORTED_MODULE_0__.optionsFromArguments)(Oscillator.getDefaults(), arguments, ["frequency", "type"]);
        this.frequency = new _signal_Signal__WEBPACK_IMPORTED_MODULE_3__.Signal({
            context: this.context,
            units: "frequency",
            value: options.frequency,
        });
        (0,_core_util_Interface__WEBPACK_IMPORTED_MODULE_1__.readOnly)(this, "frequency");
        this.detune = new _signal_Signal__WEBPACK_IMPORTED_MODULE_3__.Signal({
            context: this.context,
            units: "cents",
            value: options.detune,
        });
        (0,_core_util_Interface__WEBPACK_IMPORTED_MODULE_1__.readOnly)(this, "detune");
        this._partials = options.partials;
        this._partialCount = options.partialCount;
        this._type = options.type;
        if (options.partialCount && options.type !== "custom") {
            this._type = this.baseType + options.partialCount.toString();
        }
        this.phase = options.phase;
    }
    static getDefaults() {
        return Object.assign(_Source__WEBPACK_IMPORTED_MODULE_4__.Source.getDefaults(), {
            detune: 0,
            frequency: 440,
            partialCount: 0,
            partials: [],
            phase: 0,
            type: "sine",
        });
    }
    /**
     * start the oscillator
     */
    _start(time) {
        const computedTime = this.toSeconds(time);
        // new oscillator with previous values
        const oscillator = new _ToneOscillatorNode__WEBPACK_IMPORTED_MODULE_6__.ToneOscillatorNode({
            context: this.context,
            onended: () => this.onstop(this),
        });
        this._oscillator = oscillator;
        if (this._wave) {
            this._oscillator.setPeriodicWave(this._wave);
        }
        else {
            this._oscillator.type = this._type;
        }
        // connect the control signal to the oscillator frequency & detune
        this._oscillator.connect(this.output);
        this.frequency.connect(this._oscillator.frequency);
        this.detune.connect(this._oscillator.detune);
        // start the oscillator
        this._oscillator.start(computedTime);
    }
    /**
     * stop the oscillator
     */
    _stop(time) {
        const computedTime = this.toSeconds(time);
        if (this._oscillator) {
            this._oscillator.stop(computedTime);
        }
    }
    /**
     * Restart the oscillator. Does not stop the oscillator, but instead
     * just cancels any scheduled 'stop' from being invoked.
     */
    _restart(time) {
        const computedTime = this.toSeconds(time);
        this.log("restart", computedTime);
        if (this._oscillator) {
            this._oscillator.cancelStop();
        }
        this._state.cancel(computedTime);
        return this;
    }
    /**
     * Sync the signal to the Transport's bpm. Any changes to the transports bpm,
     * will also affect the oscillators frequency.
     * @example
     * const osc = new Tone.Oscillator().toDestination().start();
     * osc.frequency.value = 440;
     * // the ratio between the bpm and the frequency will be maintained
     * osc.syncFrequency();
     * // double the tempo
     * Tone.Transport.bpm.value *= 2;
     * // the frequency of the oscillator is doubled to 880
     */
    syncFrequency() {
        this.context.transport.syncSignal(this.frequency);
        return this;
    }
    /**
     * Unsync the oscillator's frequency from the Transport.
     * See Oscillator.syncFrequency
     */
    unsyncFrequency() {
        this.context.transport.unsyncSignal(this.frequency);
        return this;
    }
    /**
     * Get a cached periodic wave. Avoids having to recompute
     * the oscillator values when they have already been computed
     * with the same values.
     */
    _getCachedPeriodicWave() {
        if (this._type === "custom") {
            const oscProps = Oscillator._periodicWaveCache.find(description => {
                return description.phase === this._phase &&
                    (0,_core_util_Defaults__WEBPACK_IMPORTED_MODULE_0__.deepEquals)(description.partials, this._partials);
            });
            return oscProps;
        }
        else {
            const oscProps = Oscillator._periodicWaveCache.find(description => {
                return description.type === this._type &&
                    description.phase === this._phase;
            });
            this._partialCount = oscProps ? oscProps.partialCount : this._partialCount;
            return oscProps;
        }
    }
    get type() {
        return this._type;
    }
    set type(type) {
        this._type = type;
        const isBasicType = ["sine", "square", "sawtooth", "triangle"].indexOf(type) !== -1;
        if (this._phase === 0 && isBasicType) {
            this._wave = undefined;
            this._partialCount = 0;
            // just go with the basic approach
            if (this._oscillator !== null) {
                // already tested that it's a basic type
                this._oscillator.type = type;
            }
        }
        else {
            // first check if the value is cached
            const cache = this._getCachedPeriodicWave();
            if ((0,_core_util_TypeCheck__WEBPACK_IMPORTED_MODULE_2__.isDefined)(cache)) {
                const { partials, wave } = cache;
                this._wave = wave;
                this._partials = partials;
                if (this._oscillator !== null) {
                    this._oscillator.setPeriodicWave(this._wave);
                }
            }
            else {
                const [real, imag] = this._getRealImaginary(type, this._phase);
                const periodicWave = this.context.createPeriodicWave(real, imag);
                this._wave = periodicWave;
                if (this._oscillator !== null) {
                    this._oscillator.setPeriodicWave(this._wave);
                }
                // set the cache
                Oscillator._periodicWaveCache.push({
                    imag,
                    partialCount: this._partialCount,
                    partials: this._partials,
                    phase: this._phase,
                    real,
                    type: this._type,
                    wave: this._wave,
                });
                if (Oscillator._periodicWaveCache.length > 100) {
                    Oscillator._periodicWaveCache.shift();
                }
            }
        }
    }
    get baseType() {
        return this._type.replace(this.partialCount.toString(), "");
    }
    set baseType(baseType) {
        if (this.partialCount && this._type !== "custom" && baseType !== "custom") {
            this.type = baseType + this.partialCount;
        }
        else {
            this.type = baseType;
        }
    }
    get partialCount() {
        return this._partialCount;
    }
    set partialCount(p) {
        (0,_core_util_Debug__WEBPACK_IMPORTED_MODULE_7__.assertRange)(p, 0);
        let type = this._type;
        const partial = /^(sine|triangle|square|sawtooth)(\d+)$/.exec(this._type);
        if (partial) {
            type = partial[1];
        }
        if (this._type !== "custom") {
            if (p === 0) {
                this.type = type;
            }
            else {
                this.type = type + p.toString();
            }
        }
        else {
            // extend or shorten the partials array
            const fullPartials = new Float32Array(p);
            // copy over the partials array
            this._partials.forEach((v, i) => fullPartials[i] = v);
            this._partials = Array.from(fullPartials);
            this.type = this._type;
        }
    }
    /**
     * Returns the real and imaginary components based
     * on the oscillator type.
     * @returns [real: Float32Array, imaginary: Float32Array]
     */
    _getRealImaginary(type, phase) {
        const fftSize = 4096;
        let periodicWaveSize = fftSize / 2;
        const real = new Float32Array(periodicWaveSize);
        const imag = new Float32Array(periodicWaveSize);
        let partialCount = 1;
        if (type === "custom") {
            partialCount = this._partials.length + 1;
            this._partialCount = this._partials.length;
            periodicWaveSize = partialCount;
            // if the partial count is 0, don't bother doing any computation
            if (this._partials.length === 0) {
                return [real, imag];
            }
        }
        else {
            const partial = /^(sine|triangle|square|sawtooth)(\d+)$/.exec(type);
            if (partial) {
                partialCount = parseInt(partial[2], 10) + 1;
                this._partialCount = parseInt(partial[2], 10);
                type = partial[1];
                partialCount = Math.max(partialCount, 2);
                periodicWaveSize = partialCount;
            }
            else {
                this._partialCount = 0;
            }
            this._partials = [];
        }
        for (let n = 1; n < periodicWaveSize; ++n) {
            const piFactor = 2 / (n * Math.PI);
            let b;
            switch (type) {
                case "sine":
                    b = (n <= partialCount) ? 1 : 0;
                    this._partials[n - 1] = b;
                    break;
                case "square":
                    b = (n & 1) ? 2 * piFactor : 0;
                    this._partials[n - 1] = b;
                    break;
                case "sawtooth":
                    b = piFactor * ((n & 1) ? 1 : -1);
                    this._partials[n - 1] = b;
                    break;
                case "triangle":
                    if (n & 1) {
                        b = 2 * (piFactor * piFactor) * ((((n - 1) >> 1) & 1) ? -1 : 1);
                    }
                    else {
                        b = 0;
                    }
                    this._partials[n - 1] = b;
                    break;
                case "custom":
                    b = this._partials[n - 1];
                    break;
                default:
                    throw new TypeError("Oscillator: invalid type: " + type);
            }
            if (b !== 0) {
                real[n] = -b * Math.sin(phase * n);
                imag[n] = b * Math.cos(phase * n);
            }
            else {
                real[n] = 0;
                imag[n] = 0;
            }
        }
        return [real, imag];
    }
    /**
     * Compute the inverse FFT for a given phase.
     */
    _inverseFFT(real, imag, phase) {
        let sum = 0;
        const len = real.length;
        for (let i = 0; i < len; i++) {
            sum += real[i] * Math.cos(i * phase) + imag[i] * Math.sin(i * phase);
        }
        return sum;
    }
    /**
     * Returns the initial value of the oscillator when stopped.
     * E.g. a "sine" oscillator with phase = 90 would return an initial value of -1.
     */
    getInitialValue() {
        const [real, imag] = this._getRealImaginary(this._type, 0);
        let maxValue = 0;
        const twoPi = Math.PI * 2;
        const testPositions = 32;
        // check for peaks in 16 places
        for (let i = 0; i < testPositions; i++) {
            maxValue = Math.max(this._inverseFFT(real, imag, (i / testPositions) * twoPi), maxValue);
        }
        return (0,_core_util_Math__WEBPACK_IMPORTED_MODULE_8__.clamp)(-this._inverseFFT(real, imag, this._phase) / maxValue, -1, 1);
    }
    get partials() {
        return this._partials.slice(0, this.partialCount);
    }
    set partials(partials) {
        this._partials = partials;
        this._partialCount = this._partials.length;
        if (partials.length) {
            this.type = "custom";
        }
    }
    get phase() {
        return this._phase * (180 / Math.PI);
    }
    set phase(phase) {
        this._phase = phase * Math.PI / 180;
        // reset the type
        this.type = this._type;
    }
    asArray(length = 1024) {
        return (0,tslib__WEBPACK_IMPORTED_MODULE_9__.__awaiter)(this, void 0, void 0, function* () {
            return (0,_OscillatorInterface__WEBPACK_IMPORTED_MODULE_5__.generateWaveform)(this, length);
        });
    }
    dispose() {
        super.dispose();
        if (this._oscillator !== null) {
            this._oscillator.dispose();
        }
        this._wave = undefined;
        this.frequency.dispose();
        this.detune.dispose();
        return this;
    }
}
/**
 * Cache the periodic waves to avoid having to redo computations
 */
Oscillator._periodicWaveCache = [];
//# sourceMappingURL=Oscillator.js.map

/***/ }),

/***/ "./node_modules/tone/build/esm/source/oscillator/OscillatorInterface.js":
/*!******************************************************************************!*\
  !*** ./node_modules/tone/build/esm/source/oscillator/OscillatorInterface.js ***!
  \******************************************************************************/
/*! namespace exports */
/*! export generateWaveform [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "generateWaveform": () => /* binding */ generateWaveform
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! tslib */ "./node_modules/tone/node_modules/tslib/tslib.es6.js");
/* harmony import */ var _core_context_OfflineContext__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/context/OfflineContext */ "./node_modules/tone/build/esm/core/context/OfflineContext.js");
;

/**
 * Render a segment of the oscillator to an offline context and return the results as an array
 */
function generateWaveform(instance, length) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(this, void 0, void 0, function* () {
        const duration = length / instance.context.sampleRate;
        const context = new _core_context_OfflineContext__WEBPACK_IMPORTED_MODULE_0__.OfflineContext(1, duration, instance.context.sampleRate);
        const clone = new instance.constructor(Object.assign(instance.get(), {
            // should do 2 iterations
            frequency: 2 / duration,
            // zero out the detune
            detune: 0,
            context
        })).toDestination();
        clone.start(0);
        const buffer = yield context.render();
        return buffer.getChannelData(0);
    });
}
//# sourceMappingURL=OscillatorInterface.js.map

/***/ }),

/***/ "./node_modules/tone/build/esm/source/oscillator/PWMOscillator.js":
/*!************************************************************************!*\
  !*** ./node_modules/tone/build/esm/source/oscillator/PWMOscillator.js ***!
  \************************************************************************/
/*! namespace exports */
/*! export PWMOscillator [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "PWMOscillator": () => /* binding */ PWMOscillator
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! tslib */ "./node_modules/tone/node_modules/tslib/tslib.es6.js");
/* harmony import */ var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/util/Defaults */ "./node_modules/tone/build/esm/core/util/Defaults.js");
/* harmony import */ var _core_util_Interface__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core/util/Interface */ "./node_modules/tone/build/esm/core/util/Interface.js");
/* harmony import */ var _signal_Multiply__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../signal/Multiply */ "./node_modules/tone/build/esm/signal/Multiply.js");
/* harmony import */ var _Source__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../Source */ "./node_modules/tone/build/esm/source/Source.js");
/* harmony import */ var _Oscillator__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./Oscillator */ "./node_modules/tone/build/esm/source/oscillator/Oscillator.js");
/* harmony import */ var _OscillatorInterface__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./OscillatorInterface */ "./node_modules/tone/build/esm/source/oscillator/OscillatorInterface.js");
/* harmony import */ var _PulseOscillator__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./PulseOscillator */ "./node_modules/tone/build/esm/source/oscillator/PulseOscillator.js");
;







/**
 * PWMOscillator modulates the width of a Tone.PulseOscillator
 * at the modulationFrequency. This has the effect of continuously
 * changing the timbre of the oscillator by altering the harmonics
 * generated.
 * @example
 * return Tone.Offline(() => {
 * 	const pwm = new Tone.PWMOscillator(60, 0.3).toDestination().start();
 * }, 0.1, 1);
 * @category Source
 */
class PWMOscillator extends _Source__WEBPACK_IMPORTED_MODULE_3__.Source {
    constructor() {
        super((0,_core_util_Defaults__WEBPACK_IMPORTED_MODULE_0__.optionsFromArguments)(PWMOscillator.getDefaults(), arguments, ["frequency", "modulationFrequency"]));
        this.name = "PWMOscillator";
        this.sourceType = "pwm";
        /**
         * Scale the oscillator so it doesn't go silent
         * at the extreme values.
         */
        this._scale = new _signal_Multiply__WEBPACK_IMPORTED_MODULE_2__.Multiply({
            context: this.context,
            value: 2,
        });
        const options = (0,_core_util_Defaults__WEBPACK_IMPORTED_MODULE_0__.optionsFromArguments)(PWMOscillator.getDefaults(), arguments, ["frequency", "modulationFrequency"]);
        this._pulse = new _PulseOscillator__WEBPACK_IMPORTED_MODULE_6__.PulseOscillator({
            context: this.context,
            frequency: options.modulationFrequency,
        });
        // change the pulse oscillator type
        this._pulse.carrierType = "sine";
        this.modulationFrequency = this._pulse.frequency;
        this._modulator = new _Oscillator__WEBPACK_IMPORTED_MODULE_4__.Oscillator({
            context: this.context,
            detune: options.detune,
            frequency: options.frequency,
            onstop: () => this.onstop(this),
            phase: options.phase,
        });
        this.frequency = this._modulator.frequency;
        this.detune = this._modulator.detune;
        // connections
        this._modulator.chain(this._scale, this._pulse.width);
        this._pulse.connect(this.output);
        (0,_core_util_Interface__WEBPACK_IMPORTED_MODULE_1__.readOnly)(this, ["modulationFrequency", "frequency", "detune"]);
    }
    static getDefaults() {
        return Object.assign(_Source__WEBPACK_IMPORTED_MODULE_3__.Source.getDefaults(), {
            detune: 0,
            frequency: 440,
            modulationFrequency: 0.4,
            phase: 0,
            type: "pwm",
        });
    }
    /**
     * start the oscillator
     */
    _start(time) {
        time = this.toSeconds(time);
        this._modulator.start(time);
        this._pulse.start(time);
    }
    /**
     * stop the oscillator
     */
    _stop(time) {
        time = this.toSeconds(time);
        this._modulator.stop(time);
        this._pulse.stop(time);
    }
    /**
     * restart the oscillator
     */
    _restart(time) {
        this._modulator.restart(time);
        this._pulse.restart(time);
    }
    /**
     * The type of the oscillator. Always returns "pwm".
     */
    get type() {
        return "pwm";
    }
    /**
     * The baseType of the oscillator. Always returns "pwm".
     */
    get baseType() {
        return "pwm";
    }
    /**
     * The partials of the waveform. Cannot set partials for this waveform type
     */
    get partials() {
        return [];
    }
    /**
     * No partials for this waveform type.
     */
    get partialCount() {
        return 0;
    }
    /**
     * The phase of the oscillator in degrees.
     */
    get phase() {
        return this._modulator.phase;
    }
    set phase(phase) {
        this._modulator.phase = phase;
    }
    asArray(length = 1024) {
        return (0,tslib__WEBPACK_IMPORTED_MODULE_7__.__awaiter)(this, void 0, void 0, function* () {
            return (0,_OscillatorInterface__WEBPACK_IMPORTED_MODULE_5__.generateWaveform)(this, length);
        });
    }
    /**
     * Clean up.
     */
    dispose() {
        super.dispose();
        this._pulse.dispose();
        this._scale.dispose();
        this._modulator.dispose();
        return this;
    }
}
//# sourceMappingURL=PWMOscillator.js.map

/***/ }),

/***/ "./node_modules/tone/build/esm/source/oscillator/PulseOscillator.js":
/*!**************************************************************************!*\
  !*** ./node_modules/tone/build/esm/source/oscillator/PulseOscillator.js ***!
  \**************************************************************************/
/*! namespace exports */
/*! export PulseOscillator [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "PulseOscillator": () => /* binding */ PulseOscillator
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! tslib */ "./node_modules/tone/node_modules/tslib/tslib.es6.js");
/* harmony import */ var _core_context_Gain__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/context/Gain */ "./node_modules/tone/build/esm/core/context/Gain.js");
/* harmony import */ var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core/util/Defaults */ "./node_modules/tone/build/esm/core/util/Defaults.js");
/* harmony import */ var _core_util_Interface__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/util/Interface */ "./node_modules/tone/build/esm/core/util/Interface.js");
/* harmony import */ var _signal_Signal__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../signal/Signal */ "./node_modules/tone/build/esm/signal/Signal.js");
/* harmony import */ var _signal_WaveShaper__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../signal/WaveShaper */ "./node_modules/tone/build/esm/signal/WaveShaper.js");
/* harmony import */ var _Source__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../Source */ "./node_modules/tone/build/esm/source/Source.js");
/* harmony import */ var _Oscillator__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./Oscillator */ "./node_modules/tone/build/esm/source/oscillator/Oscillator.js");
/* harmony import */ var _OscillatorInterface__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./OscillatorInterface */ "./node_modules/tone/build/esm/source/oscillator/OscillatorInterface.js");
;








/**
 * PulseOscillator is an oscillator with control over pulse width,
 * also known as the duty cycle. At 50% duty cycle (width = 0) the wave is
 * a square wave.
 * [Read more](https://wigglewave.wordpress.com/2014/08/16/pulse-waveforms-and-harmonics/).
 * ```
 *    width = -0.25        width = 0.0          width = 0.25
 *
 *   +-----+            +-------+       +    +-------+     +-+
 *   |     |            |       |       |            |     |
 *   |     |            |       |       |            |     |
 * +-+     +-------+    +       +-------+            +-----+
 *
 *
 *    width = -0.5                              width = 0.5
 *
 *     +---+                                 +-------+   +---+
 *     |   |                                         |   |
 *     |   |                                         |   |
 * +---+   +-------+                                 +---+
 *
 *
 *    width = -0.75                             width = 0.75
 *
 *       +-+                                 +-------+ +-----+
 *       | |                                         | |
 *       | |                                         | |
 * +-----+ +-------+                                 +-+
 * ```
 * @example
 * return Tone.Offline(() => {
 * 	const pulse = new Tone.PulseOscillator(50, 0.4).toDestination().start();
 * }, 0.1, 1);
 * @category Source
 */
class PulseOscillator extends _Source__WEBPACK_IMPORTED_MODULE_5__.Source {
    constructor() {
        super((0,_core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__.optionsFromArguments)(PulseOscillator.getDefaults(), arguments, ["frequency", "width"]));
        this.name = "PulseOscillator";
        /**
         * gate the width amount
         */
        this._widthGate = new _core_context_Gain__WEBPACK_IMPORTED_MODULE_0__.Gain({
            context: this.context,
            gain: 0,
        });
        /**
         * Threshold the signal to turn it into a square
         */
        this._thresh = new _signal_WaveShaper__WEBPACK_IMPORTED_MODULE_4__.WaveShaper({
            context: this.context,
            mapping: val => val <= 0 ? -1 : 1,
        });
        const options = (0,_core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__.optionsFromArguments)(PulseOscillator.getDefaults(), arguments, ["frequency", "width"]);
        this.width = new _signal_Signal__WEBPACK_IMPORTED_MODULE_3__.Signal({
            context: this.context,
            units: "audioRange",
            value: options.width,
        });
        this._triangle = new _Oscillator__WEBPACK_IMPORTED_MODULE_6__.Oscillator({
            context: this.context,
            detune: options.detune,
            frequency: options.frequency,
            onstop: () => this.onstop(this),
            phase: options.phase,
            type: "triangle",
        });
        this.frequency = this._triangle.frequency;
        this.detune = this._triangle.detune;
        // connections
        this._triangle.chain(this._thresh, this.output);
        this.width.chain(this._widthGate, this._thresh);
        (0,_core_util_Interface__WEBPACK_IMPORTED_MODULE_2__.readOnly)(this, ["width", "frequency", "detune"]);
    }
    static getDefaults() {
        return Object.assign(_Source__WEBPACK_IMPORTED_MODULE_5__.Source.getDefaults(), {
            detune: 0,
            frequency: 440,
            phase: 0,
            type: "pulse",
            width: 0.2,
        });
    }
    /**
     * start the oscillator
     */
    _start(time) {
        time = this.toSeconds(time);
        this._triangle.start(time);
        this._widthGate.gain.setValueAtTime(1, time);
    }
    /**
     * stop the oscillator
     */
    _stop(time) {
        time = this.toSeconds(time);
        this._triangle.stop(time);
        // the width is still connected to the output.
        // that needs to be stopped also
        this._widthGate.gain.cancelScheduledValues(time);
        this._widthGate.gain.setValueAtTime(0, time);
    }
    _restart(time) {
        this._triangle.restart(time);
        this._widthGate.gain.cancelScheduledValues(time);
        this._widthGate.gain.setValueAtTime(1, time);
    }
    /**
     * The phase of the oscillator in degrees.
     */
    get phase() {
        return this._triangle.phase;
    }
    set phase(phase) {
        this._triangle.phase = phase;
    }
    /**
     * The type of the oscillator. Always returns "pulse".
     */
    get type() {
        return "pulse";
    }
    /**
     * The baseType of the oscillator. Always returns "pulse".
     */
    get baseType() {
        return "pulse";
    }
    /**
     * The partials of the waveform. Cannot set partials for this waveform type
     */
    get partials() {
        return [];
    }
    /**
     * No partials for this waveform type.
     */
    get partialCount() {
        return 0;
    }
    /**
     * *Internal use* The carrier oscillator type is fed through the
     * waveshaper node to create the pulse. Using different carrier oscillators
     * changes oscillator's behavior.
     */
    set carrierType(type) {
        this._triangle.type = type;
    }
    asArray(length = 1024) {
        return (0,tslib__WEBPACK_IMPORTED_MODULE_8__.__awaiter)(this, void 0, void 0, function* () {
            return (0,_OscillatorInterface__WEBPACK_IMPORTED_MODULE_7__.generateWaveform)(this, length);
        });
    }
    /**
     * Clean up method.
     */
    dispose() {
        super.dispose();
        this._triangle.dispose();
        this.width.dispose();
        this._widthGate.dispose();
        this._thresh.dispose();
        return this;
    }
}
//# sourceMappingURL=PulseOscillator.js.map

/***/ }),

/***/ "./node_modules/tone/build/esm/source/oscillator/ToneOscillatorNode.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/tone/build/esm/source/oscillator/ToneOscillatorNode.js ***!
  \*****************************************************************************/
/*! namespace exports */
/*! export ToneOscillatorNode [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ToneOscillatorNode": () => /* binding */ ToneOscillatorNode
/* harmony export */ });
/* harmony import */ var _core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/context/ToneAudioNode */ "./node_modules/tone/build/esm/core/context/ToneAudioNode.js");
/* harmony import */ var _core_context_Param__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core/context/Param */ "./node_modules/tone/build/esm/core/context/Param.js");
/* harmony import */ var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/util/Defaults */ "./node_modules/tone/build/esm/core/util/Defaults.js");
/* harmony import */ var _OneShotSource__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../OneShotSource */ "./node_modules/tone/build/esm/source/OneShotSource.js");
/* harmony import */ var _core_util_Interface__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../core/util/Interface */ "./node_modules/tone/build/esm/core/util/Interface.js");
;




/**
 * Wrapper around the native fire-and-forget OscillatorNode.
 * Adds the ability to reschedule the stop method.
 * ***[[Oscillator]] is better for most use-cases***
 * @category Source
 */
class ToneOscillatorNode extends _OneShotSource__WEBPACK_IMPORTED_MODULE_3__.OneShotSource {
    constructor() {
        super((0,_core_util_Defaults__WEBPACK_IMPORTED_MODULE_2__.optionsFromArguments)(ToneOscillatorNode.getDefaults(), arguments, ["frequency", "type"]));
        this.name = "ToneOscillatorNode";
        /**
         * The oscillator
         */
        this._oscillator = this.context.createOscillator();
        this._internalChannels = [this._oscillator];
        const options = (0,_core_util_Defaults__WEBPACK_IMPORTED_MODULE_2__.optionsFromArguments)(ToneOscillatorNode.getDefaults(), arguments, ["frequency", "type"]);
        (0,_core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_0__.connect)(this._oscillator, this._gainNode);
        this.type = options.type;
        this.frequency = new _core_context_Param__WEBPACK_IMPORTED_MODULE_1__.Param({
            context: this.context,
            param: this._oscillator.frequency,
            units: "frequency",
            value: options.frequency,
        });
        this.detune = new _core_context_Param__WEBPACK_IMPORTED_MODULE_1__.Param({
            context: this.context,
            param: this._oscillator.detune,
            units: "cents",
            value: options.detune,
        });
        (0,_core_util_Interface__WEBPACK_IMPORTED_MODULE_4__.readOnly)(this, ["frequency", "detune"]);
    }
    static getDefaults() {
        return Object.assign(_OneShotSource__WEBPACK_IMPORTED_MODULE_3__.OneShotSource.getDefaults(), {
            detune: 0,
            frequency: 440,
            type: "sine",
        });
    }
    /**
     * Start the oscillator node at the given time
     * @param  time When to start the oscillator
     */
    start(time) {
        const computedTime = this.toSeconds(time);
        this.log("start", computedTime);
        this._startGain(computedTime);
        this._oscillator.start(computedTime);
        return this;
    }
    _stopSource(time) {
        this._oscillator.stop(time);
    }
    /**
     * Sets an arbitrary custom periodic waveform given a PeriodicWave.
     * @param  periodicWave PeriodicWave should be created with context.createPeriodicWave
     */
    setPeriodicWave(periodicWave) {
        this._oscillator.setPeriodicWave(periodicWave);
        return this;
    }
    /**
     * The oscillator type. Either 'sine', 'sawtooth', 'square', or 'triangle'
     */
    get type() {
        return this._oscillator.type;
    }
    set type(type) {
        this._oscillator.type = type;
    }
    /**
     * Clean up.
     */
    dispose() {
        super.dispose();
        if (this.state === "started") {
            this.stop();
        }
        this._oscillator.disconnect();
        this.frequency.dispose();
        this.detune.dispose();
        return this;
    }
}
//# sourceMappingURL=ToneOscillatorNode.js.map

/***/ }),

/***/ "./node_modules/tone/build/esm/version.js":
/*!************************************************!*\
  !*** ./node_modules/tone/build/esm/version.js ***!
  \************************************************/
/*! namespace exports */
/*! export version [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "version": () => /* binding */ version
/* harmony export */ });
const version = "14.7.58";
//# sourceMappingURL=version.js.map

/***/ }),

/***/ "./node_modules/tone/node_modules/tslib/tslib.es6.js":
/*!***********************************************************!*\
  !*** ./node_modules/tone/node_modules/tslib/tslib.es6.js ***!
  \***********************************************************/
/*! namespace exports */
/*! export __assign [provided] [no usage info] [missing usage info prevents renaming] */
/*! export __asyncDelegator [provided] [no usage info] [missing usage info prevents renaming] */
/*! export __asyncGenerator [provided] [no usage info] [missing usage info prevents renaming] */
/*! export __asyncValues [provided] [no usage info] [missing usage info prevents renaming] */
/*! export __await [provided] [no usage info] [missing usage info prevents renaming] */
/*! export __awaiter [provided] [no usage info] [missing usage info prevents renaming] */
/*! export __classPrivateFieldGet [provided] [no usage info] [missing usage info prevents renaming] */
/*! export __classPrivateFieldSet [provided] [no usage info] [missing usage info prevents renaming] */
/*! export __createBinding [provided] [no usage info] [missing usage info prevents renaming] */
/*! export __decorate [provided] [no usage info] [missing usage info prevents renaming] */
/*! export __exportStar [provided] [no usage info] [missing usage info prevents renaming] */
/*! export __extends [provided] [no usage info] [missing usage info prevents renaming] */
/*! export __generator [provided] [no usage info] [missing usage info prevents renaming] */
/*! export __importDefault [provided] [no usage info] [missing usage info prevents renaming] */
/*! export __importStar [provided] [no usage info] [missing usage info prevents renaming] */
/*! export __makeTemplateObject [provided] [no usage info] [missing usage info prevents renaming] */
/*! export __metadata [provided] [no usage info] [missing usage info prevents renaming] */
/*! export __param [provided] [no usage info] [missing usage info prevents renaming] */
/*! export __read [provided] [no usage info] [missing usage info prevents renaming] */
/*! export __rest [provided] [no usage info] [missing usage info prevents renaming] */
/*! export __spread [provided] [no usage info] [missing usage info prevents renaming] */
/*! export __spreadArrays [provided] [no usage info] [missing usage info prevents renaming] */
/*! export __values [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "__extends": () => /* binding */ __extends,
/* harmony export */   "__assign": () => /* binding */ __assign,
/* harmony export */   "__rest": () => /* binding */ __rest,
/* harmony export */   "__decorate": () => /* binding */ __decorate,
/* harmony export */   "__param": () => /* binding */ __param,
/* harmony export */   "__metadata": () => /* binding */ __metadata,
/* harmony export */   "__awaiter": () => /* binding */ __awaiter,
/* harmony export */   "__generator": () => /* binding */ __generator,
/* harmony export */   "__createBinding": () => /* binding */ __createBinding,
/* harmony export */   "__exportStar": () => /* binding */ __exportStar,
/* harmony export */   "__values": () => /* binding */ __values,
/* harmony export */   "__read": () => /* binding */ __read,
/* harmony export */   "__spread": () => /* binding */ __spread,
/* harmony export */   "__spreadArrays": () => /* binding */ __spreadArrays,
/* harmony export */   "__await": () => /* binding */ __await,
/* harmony export */   "__asyncGenerator": () => /* binding */ __asyncGenerator,
/* harmony export */   "__asyncDelegator": () => /* binding */ __asyncDelegator,
/* harmony export */   "__asyncValues": () => /* binding */ __asyncValues,
/* harmony export */   "__makeTemplateObject": () => /* binding */ __makeTemplateObject,
/* harmony export */   "__importStar": () => /* binding */ __importStar,
/* harmony export */   "__importDefault": () => /* binding */ __importDefault,
/* harmony export */   "__classPrivateFieldGet": () => /* binding */ __classPrivateFieldGet,
/* harmony export */   "__classPrivateFieldSet": () => /* binding */ __classPrivateFieldSet
/* harmony export */ });
/*! *****************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */
/* global Reflect, Promise */

var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
    return extendStatics(d, b);
};

function __extends(d, b) {
    extendStatics(d, b);
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
}

var __assign = function() {
    __assign = Object.assign || function __assign(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
        }
        return t;
    }
    return __assign.apply(this, arguments);
}

function __rest(s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
}

function __decorate(decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
}

function __param(paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
}

function __metadata(metadataKey, metadataValue) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(metadataKey, metadataValue);
}

function __awaiter(thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
}

function __generator(thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
}

var __createBinding = Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
});

function __exportStar(m, o) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);
}

function __values(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
}

function __read(o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
}

function __spread() {
    for (var ar = [], i = 0; i < arguments.length; i++)
        ar = ar.concat(__read(arguments[i]));
    return ar;
}

function __spreadArrays() {
    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
    for (var r = Array(s), k = 0, i = 0; i < il; i++)
        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
            r[k] = a[j];
    return r;
};

function __await(v) {
    return this instanceof __await ? (this.v = v, this) : new __await(v);
}

function __asyncGenerator(thisArg, _arguments, generator) {
    if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
    var g = generator.apply(thisArg, _arguments || []), i, q = [];
    return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i;
    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }
    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }
    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }
    function fulfill(value) { resume("next", value); }
    function reject(value) { resume("throw", value); }
    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }
}

function __asyncDelegator(o) {
    var i, p;
    return i = {}, verb("next"), verb("throw", function (e) { throw e; }), verb("return"), i[Symbol.iterator] = function () { return this; }, i;
    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === "return" } : f ? f(v) : v; } : f; }
}

function __asyncValues(o) {
    if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
    var m = o[Symbol.asyncIterator], i;
    return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i);
    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }
    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }
}

function __makeTemplateObject(cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};

var __setModuleDefault = Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
};

function __importStar(mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
}

function __importDefault(mod) {
    return (mod && mod.__esModule) ? mod : { default: mod };
}

function __classPrivateFieldGet(receiver, privateMap) {
    if (!privateMap.has(receiver)) {
        throw new TypeError("attempted to get private field on non-instance");
    }
    return privateMap.get(receiver);
}

function __classPrivateFieldSet(receiver, privateMap, value) {
    if (!privateMap.has(receiver)) {
        throw new TypeError("attempted to set private field on non-instance");
    }
    privateMap.set(receiver, value);
    return value;
}


/***/ }),

/***/ "./node_modules/tslib/tslib.es6.js":
/*!*****************************************!*\
  !*** ./node_modules/tslib/tslib.es6.js ***!
  \*****************************************/
/*! namespace exports */
/*! export __assign [provided] [no usage info] [missing usage info prevents renaming] */
/*! export __asyncDelegator [provided] [no usage info] [missing usage info prevents renaming] */
/*! export __asyncGenerator [provided] [no usage info] [missing usage info prevents renaming] */
/*! export __asyncValues [provided] [no usage info] [missing usage info prevents renaming] */
/*! export __await [provided] [no usage info] [missing usage info prevents renaming] */
/*! export __awaiter [provided] [no usage info] [missing usage info prevents renaming] */
/*! export __classPrivateFieldGet [provided] [no usage info] [missing usage info prevents renaming] */
/*! export __classPrivateFieldSet [provided] [no usage info] [missing usage info prevents renaming] */
/*! export __createBinding [provided] [no usage info] [missing usage info prevents renaming] */
/*! export __decorate [provided] [no usage info] [missing usage info prevents renaming] */
/*! export __exportStar [provided] [no usage info] [missing usage info prevents renaming] */
/*! export __extends [provided] [no usage info] [missing usage info prevents renaming] */
/*! export __generator [provided] [no usage info] [missing usage info prevents renaming] */
/*! export __importDefault [provided] [no usage info] [missing usage info prevents renaming] */
/*! export __importStar [provided] [no usage info] [missing usage info prevents renaming] */
/*! export __makeTemplateObject [provided] [no usage info] [missing usage info prevents renaming] */
/*! export __metadata [provided] [no usage info] [missing usage info prevents renaming] */
/*! export __param [provided] [no usage info] [missing usage info prevents renaming] */
/*! export __read [provided] [no usage info] [missing usage info prevents renaming] */
/*! export __rest [provided] [no usage info] [missing usage info prevents renaming] */
/*! export __spread [provided] [no usage info] [missing usage info prevents renaming] */
/*! export __spreadArrays [provided] [no usage info] [missing usage info prevents renaming] */
/*! export __values [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "__extends": () => /* binding */ __extends,
/* harmony export */   "__assign": () => /* binding */ __assign,
/* harmony export */   "__rest": () => /* binding */ __rest,
/* harmony export */   "__decorate": () => /* binding */ __decorate,
/* harmony export */   "__param": () => /* binding */ __param,
/* harmony export */   "__metadata": () => /* binding */ __metadata,
/* harmony export */   "__awaiter": () => /* binding */ __awaiter,
/* harmony export */   "__generator": () => /* binding */ __generator,
/* harmony export */   "__createBinding": () => /* binding */ __createBinding,
/* harmony export */   "__exportStar": () => /* binding */ __exportStar,
/* harmony export */   "__values": () => /* binding */ __values,
/* harmony export */   "__read": () => /* binding */ __read,
/* harmony export */   "__spread": () => /* binding */ __spread,
/* harmony export */   "__spreadArrays": () => /* binding */ __spreadArrays,
/* harmony export */   "__await": () => /* binding */ __await,
/* harmony export */   "__asyncGenerator": () => /* binding */ __asyncGenerator,
/* harmony export */   "__asyncDelegator": () => /* binding */ __asyncDelegator,
/* harmony export */   "__asyncValues": () => /* binding */ __asyncValues,
/* harmony export */   "__makeTemplateObject": () => /* binding */ __makeTemplateObject,
/* harmony export */   "__importStar": () => /* binding */ __importStar,
/* harmony export */   "__importDefault": () => /* binding */ __importDefault,
/* harmony export */   "__classPrivateFieldGet": () => /* binding */ __classPrivateFieldGet,
/* harmony export */   "__classPrivateFieldSet": () => /* binding */ __classPrivateFieldSet
/* harmony export */ });
/*! *****************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */
/* global Reflect, Promise */

var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return extendStatics(d, b);
};

function __extends(d, b) {
    extendStatics(d, b);
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
}

var __assign = function() {
    __assign = Object.assign || function __assign(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
        }
        return t;
    }
    return __assign.apply(this, arguments);
}

function __rest(s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
}

function __decorate(decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
}

function __param(paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
}

function __metadata(metadataKey, metadataValue) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(metadataKey, metadataValue);
}

function __awaiter(thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
}

function __generator(thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
}

function __createBinding(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}

function __exportStar(m, exports) {
    for (var p in m) if (p !== "default" && !exports.hasOwnProperty(p)) exports[p] = m[p];
}

function __values(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
}

function __read(o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
}

function __spread() {
    for (var ar = [], i = 0; i < arguments.length; i++)
        ar = ar.concat(__read(arguments[i]));
    return ar;
}

function __spreadArrays() {
    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
    for (var r = Array(s), k = 0, i = 0; i < il; i++)
        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
            r[k] = a[j];
    return r;
};

function __await(v) {
    return this instanceof __await ? (this.v = v, this) : new __await(v);
}

function __asyncGenerator(thisArg, _arguments, generator) {
    if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
    var g = generator.apply(thisArg, _arguments || []), i, q = [];
    return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i;
    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }
    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }
    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }
    function fulfill(value) { resume("next", value); }
    function reject(value) { resume("throw", value); }
    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }
}

function __asyncDelegator(o) {
    var i, p;
    return i = {}, verb("next"), verb("throw", function (e) { throw e; }), verb("return"), i[Symbol.iterator] = function () { return this; }, i;
    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === "return" } : f ? f(v) : v; } : f; }
}

function __asyncValues(o) {
    if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
    var m = o[Symbol.asyncIterator], i;
    return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i);
    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }
    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }
}

function __makeTemplateObject(cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};

function __importStar(mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result.default = mod;
    return result;
}

function __importDefault(mod) {
    return (mod && mod.__esModule) ? mod : { default: mod };
}

function __classPrivateFieldGet(receiver, privateMap) {
    if (!privateMap.has(receiver)) {
        throw new TypeError("attempted to get private field on non-instance");
    }
    return privateMap.get(receiver);
}

function __classPrivateFieldSet(receiver, privateMap, value) {
    if (!privateMap.has(receiver)) {
        throw new TypeError("attempted to set private field on non-instance");
    }
    privateMap.set(receiver, value);
    return value;
}


/***/ }),

/***/ "./node_modules/uuid/index.js":
/*!************************************!*\
  !*** ./node_modules/uuid/index.js ***!
  \************************************/
/*! unknown exports (runtime-defined) */
/*! runtime requirements: module, __webpack_require__ */
/*! CommonJS bailout: module.exports is used directly at 8:0-14 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var v1 = __webpack_require__(/*! ./v1 */ "./node_modules/uuid/v1.js");
var v4 = __webpack_require__(/*! ./v4 */ "./node_modules/uuid/v4.js");

var uuid = v4;
uuid.v1 = v1;
uuid.v4 = v4;

module.exports = uuid;


/***/ }),

/***/ "./node_modules/uuid/lib/bytesToUuid.js":
/*!**********************************************!*\
  !*** ./node_modules/uuid/lib/bytesToUuid.js ***!
  \**********************************************/
/*! unknown exports (runtime-defined) */
/*! runtime requirements: module */
/*! CommonJS bailout: module.exports is used directly at 26:0-14 */
/***/ ((module) => {

/**
 * Convert array of 16 byte values to UUID string format of the form:
 * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX
 */
var byteToHex = [];
for (var i = 0; i < 256; ++i) {
  byteToHex[i] = (i + 0x100).toString(16).substr(1);
}

function bytesToUuid(buf, offset) {
  var i = offset || 0;
  var bth = byteToHex;
  // join used to fix memory issue caused by concatenation: https://bugs.chromium.org/p/v8/issues/detail?id=3175#c4
  return ([
    bth[buf[i++]], bth[buf[i++]],
    bth[buf[i++]], bth[buf[i++]], '-',
    bth[buf[i++]], bth[buf[i++]], '-',
    bth[buf[i++]], bth[buf[i++]], '-',
    bth[buf[i++]], bth[buf[i++]], '-',
    bth[buf[i++]], bth[buf[i++]],
    bth[buf[i++]], bth[buf[i++]],
    bth[buf[i++]], bth[buf[i++]]
  ]).join('');
}

module.exports = bytesToUuid;


/***/ }),

/***/ "./node_modules/uuid/lib/rng-browser.js":
/*!**********************************************!*\
  !*** ./node_modules/uuid/lib/rng-browser.js ***!
  \**********************************************/
/*! unknown exports (runtime-defined) */
/*! runtime requirements: module */
/*! CommonJS bailout: module.exports is used directly at 15:2-16 */
/*! CommonJS bailout: module.exports is used directly at 26:2-16 */
/***/ ((module) => {

// Unique ID creation requires a high quality random # generator.  In the
// browser this is a little complicated due to unknown quality of Math.random()
// and inconsistent support for the `crypto` API.  We do the best we can via
// feature-detection

// getRandomValues needs to be invoked in a context where "this" is a Crypto
// implementation. Also, find the complete implementation of crypto on IE11.
var getRandomValues = (typeof(crypto) != 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto)) ||
                      (typeof(msCrypto) != 'undefined' && typeof window.msCrypto.getRandomValues == 'function' && msCrypto.getRandomValues.bind(msCrypto));

if (getRandomValues) {
  // WHATWG crypto RNG - http://wiki.whatwg.org/wiki/Crypto
  var rnds8 = new Uint8Array(16); // eslint-disable-line no-undef

  module.exports = function whatwgRNG() {
    getRandomValues(rnds8);
    return rnds8;
  };
} else {
  // Math.random()-based (RNG)
  //
  // If all else fails, use Math.random().  It's fast, but is of unspecified
  // quality.
  var rnds = new Array(16);

  module.exports = function mathRNG() {
    for (var i = 0, r; i < 16; i++) {
      if ((i & 0x03) === 0) r = Math.random() * 0x100000000;
      rnds[i] = r >>> ((i & 0x03) << 3) & 0xff;
    }

    return rnds;
  };
}


/***/ }),

/***/ "./node_modules/uuid/v1.js":
/*!*********************************!*\
  !*** ./node_modules/uuid/v1.js ***!
  \*********************************/
/*! unknown exports (runtime-defined) */
/*! runtime requirements: module, __webpack_require__ */
/*! CommonJS bailout: module.exports is used directly at 109:0-14 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var rng = __webpack_require__(/*! ./lib/rng */ "./node_modules/uuid/lib/rng-browser.js");
var bytesToUuid = __webpack_require__(/*! ./lib/bytesToUuid */ "./node_modules/uuid/lib/bytesToUuid.js");

// **`v1()` - Generate time-based UUID**
//
// Inspired by https://github.com/LiosK/UUID.js
// and http://docs.python.org/library/uuid.html

var _nodeId;
var _clockseq;

// Previous uuid creation time
var _lastMSecs = 0;
var _lastNSecs = 0;

// See https://github.com/uuidjs/uuid for API details
function v1(options, buf, offset) {
  var i = buf && offset || 0;
  var b = buf || [];

  options = options || {};
  var node = options.node || _nodeId;
  var clockseq = options.clockseq !== undefined ? options.clockseq : _clockseq;

  // node and clockseq need to be initialized to random values if they're not
  // specified.  We do this lazily to minimize issues related to insufficient
  // system entropy.  See #189
  if (node == null || clockseq == null) {
    var seedBytes = rng();
    if (node == null) {
      // Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)
      node = _nodeId = [
        seedBytes[0] | 0x01,
        seedBytes[1], seedBytes[2], seedBytes[3], seedBytes[4], seedBytes[5]
      ];
    }
    if (clockseq == null) {
      // Per 4.2.2, randomize (14 bit) clockseq
      clockseq = _clockseq = (seedBytes[6] << 8 | seedBytes[7]) & 0x3fff;
    }
  }

  // UUID timestamps are 100 nano-second units since the Gregorian epoch,
  // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so
  // time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'
  // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.
  var msecs = options.msecs !== undefined ? options.msecs : new Date().getTime();

  // Per 4.2.1.2, use count of uuid's generated during the current clock
  // cycle to simulate higher resolution clock
  var nsecs = options.nsecs !== undefined ? options.nsecs : _lastNSecs + 1;

  // Time since last uuid creation (in msecs)
  var dt = (msecs - _lastMSecs) + (nsecs - _lastNSecs)/10000;

  // Per 4.2.1.2, Bump clockseq on clock regression
  if (dt < 0 && options.clockseq === undefined) {
    clockseq = clockseq + 1 & 0x3fff;
  }

  // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new
  // time interval
  if ((dt < 0 || msecs > _lastMSecs) && options.nsecs === undefined) {
    nsecs = 0;
  }

  // Per 4.2.1.2 Throw error if too many uuids are requested
  if (nsecs >= 10000) {
    throw new Error('uuid.v1(): Can\'t create more than 10M uuids/sec');
  }

  _lastMSecs = msecs;
  _lastNSecs = nsecs;
  _clockseq = clockseq;

  // Per 4.1.4 - Convert from unix epoch to Gregorian epoch
  msecs += 12219292800000;

  // `time_low`
  var tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;
  b[i++] = tl >>> 24 & 0xff;
  b[i++] = tl >>> 16 & 0xff;
  b[i++] = tl >>> 8 & 0xff;
  b[i++] = tl & 0xff;

  // `time_mid`
  var tmh = (msecs / 0x100000000 * 10000) & 0xfffffff;
  b[i++] = tmh >>> 8 & 0xff;
  b[i++] = tmh & 0xff;

  // `time_high_and_version`
  b[i++] = tmh >>> 24 & 0xf | 0x10; // include version
  b[i++] = tmh >>> 16 & 0xff;

  // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)
  b[i++] = clockseq >>> 8 | 0x80;

  // `clock_seq_low`
  b[i++] = clockseq & 0xff;

  // `node`
  for (var n = 0; n < 6; ++n) {
    b[i + n] = node[n];
  }

  return buf ? buf : bytesToUuid(b);
}

module.exports = v1;


/***/ }),

/***/ "./node_modules/uuid/v4.js":
/*!*********************************!*\
  !*** ./node_modules/uuid/v4.js ***!
  \*********************************/
/*! unknown exports (runtime-defined) */
/*! runtime requirements: module, __webpack_require__ */
/*! CommonJS bailout: module.exports is used directly at 29:0-14 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var rng = __webpack_require__(/*! ./lib/rng */ "./node_modules/uuid/lib/rng-browser.js");
var bytesToUuid = __webpack_require__(/*! ./lib/bytesToUuid */ "./node_modules/uuid/lib/bytesToUuid.js");

function v4(options, buf, offset) {
  var i = buf && offset || 0;

  if (typeof(options) == 'string') {
    buf = options === 'binary' ? new Array(16) : null;
    options = null;
  }
  options = options || {};

  var rnds = options.random || (options.rng || rng)();

  // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`
  rnds[6] = (rnds[6] & 0x0f) | 0x40;
  rnds[8] = (rnds[8] & 0x3f) | 0x80;

  // Copy bytes to buffer, if provided
  if (buf) {
    for (var ii = 0; ii < 16; ++ii) {
      buf[i + ii] = rnds[ii];
    }
  }

  return buf || bytesToUuid(rnds);
}

module.exports = v4;


/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		if(__webpack_module_cache__[moduleId]) {
/******/ 			return __webpack_module_cache__[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			id: moduleId,
/******/ 			loaded: false,
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = __webpack_modules__;
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	(() => {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = (module) => {
/******/ 			var getter = module && module.__esModule ?
/******/ 				() => module['default'] :
/******/ 				() => module;
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/ensure chunk */
/******/ 	(() => {
/******/ 		__webpack_require__.f = {};
/******/ 		// This file contains only the entry chunk.
/******/ 		// The chunk loading function for additional chunks
/******/ 		__webpack_require__.e = (chunkId) => {
/******/ 			return Promise.all(Object.keys(__webpack_require__.f).reduce((promises, key) => {
/******/ 				__webpack_require__.f[key](chunkId, promises);
/******/ 				return promises;
/******/ 			}, []));
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/get javascript chunk filename */
/******/ 	(() => {
/******/ 		// This function allow to reference async chunks
/******/ 		__webpack_require__.u = (chunkId) => {
/******/ 			// return url for filenames based on template
/******/ 			return "" + chunkId + ".soundmain.js";
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/get mini-css chunk filename */
/******/ 	(() => {
/******/ 		// This function allow to reference all chunks
/******/ 		__webpack_require__.miniCssF = (chunkId) => {
/******/ 			// return url for filenames based on template
/******/ 			return "main." + {"node_modules_audio-recorder-polyfill_index_js":"716a96017a48a86b9227","fallback":"1db4f3d89a1b5af0965e","src_app_samples_fallback_aac":"a8c71d5257bdcdfcb064"}[chunkId] + ".css";
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/global */
/******/ 	(() => {
/******/ 		__webpack_require__.g = (function() {
/******/ 			if (typeof globalThis === 'object') return globalThis;
/******/ 			try {
/******/ 				return this || new Function('return this')();
/******/ 			} catch (e) {
/******/ 				if (typeof window === 'object') return window;
/******/ 			}
/******/ 		})();
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop)
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/load script */
/******/ 	(() => {
/******/ 		var inProgress = {};
/******/ 		var dataWebpackPrefix = "my-webpack-project:";
/******/ 		// loadScript function to load a script via script tag
/******/ 		__webpack_require__.l = (url, done, key) => {
/******/ 			if(inProgress[url]) { inProgress[url].push(done); return; }
/******/ 			var script, needAttach;
/******/ 			if(key !== undefined) {
/******/ 				var scripts = document.getElementsByTagName("script");
/******/ 				for(var i = 0; i < scripts.length; i++) {
/******/ 					var s = scripts[i];
/******/ 					if(s.getAttribute("src") == url || s.getAttribute("data-webpack") == dataWebpackPrefix + key) { script = s; break; }
/******/ 				}
/******/ 			}
/******/ 			if(!script) {
/******/ 				needAttach = true;
/******/ 				script = document.createElement('script');
/******/ 		
/******/ 				script.charset = 'utf-8';
/******/ 				script.timeout = 120;
/******/ 				if (__webpack_require__.nc) {
/******/ 					script.setAttribute("nonce", __webpack_require__.nc);
/******/ 				}
/******/ 				script.setAttribute("data-webpack", dataWebpackPrefix + key);
/******/ 				script.src = url;
/******/ 			}
/******/ 			inProgress[url] = [done];
/******/ 			var onScriptComplete = (prev, event) => {
/******/ 				// avoid mem leaks in IE.
/******/ 				script.onerror = script.onload = null;
/******/ 				clearTimeout(timeout);
/******/ 				var doneFns = inProgress[url];
/******/ 				delete inProgress[url];
/******/ 				script.parentNode && script.parentNode.removeChild(script);
/******/ 				doneFns && doneFns.forEach((fn) => fn(event));
/******/ 				if(prev) return prev(event);
/******/ 			}
/******/ 			;
/******/ 			var timeout = setTimeout(onScriptComplete.bind(null, undefined, { type: 'timeout', target: script }), 120000);
/******/ 			script.onerror = onScriptComplete.bind(null, script.onerror);
/******/ 			script.onload = onScriptComplete.bind(null, script.onload);
/******/ 			needAttach && document.head.appendChild(script);
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/node module decorator */
/******/ 	(() => {
/******/ 		__webpack_require__.nmd = (module) => {
/******/ 			module.paths = [];
/******/ 			if (!module.children) module.children = [];
/******/ 			return module;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/publicPath */
/******/ 	(() => {
/******/ 		var scriptUrl;
/******/ 		if (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + "";
/******/ 		var document = __webpack_require__.g.document;
/******/ 		if (!scriptUrl && document) {
/******/ 			if (document.currentScript)
/******/ 				scriptUrl = document.currentScript.src
/******/ 			if (!scriptUrl) {
/******/ 				var scripts = document.getElementsByTagName("script");
/******/ 				if(scripts.length) scriptUrl = scripts[scripts.length - 1].src
/******/ 			}
/******/ 		}
/******/ 		// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration
/******/ 		// or pass an empty string ("") and set the __webpack_public_path__ variable from your code to use your own logic.
/******/ 		if (!scriptUrl) throw new Error("Automatic publicPath is not supported in this browser");
/******/ 		scriptUrl = scriptUrl.replace(/#.*$/, "").replace(/\?.*$/, "").replace(/\/[^\/]+$/, "/");
/******/ 		__webpack_require__.p = scriptUrl;
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/jsonp chunk loading */
/******/ 	(() => {
/******/ 		// no baseURI
/******/ 		
/******/ 		// object to store loaded and loading chunks
/******/ 		// undefined = chunk not loaded, null = chunk preloaded/prefetched
/******/ 		// Promise = chunk loading, 0 = chunk loaded
/******/ 		var installedChunks = {
/******/ 			"main": 0
/******/ 		};
/******/ 		
/******/ 		
/******/ 		__webpack_require__.f.j = (chunkId, promises) => {
/******/ 				// JSONP chunk loading for javascript
/******/ 				var installedChunkData = __webpack_require__.o(installedChunks, chunkId) ? installedChunks[chunkId] : undefined;
/******/ 				if(installedChunkData !== 0) { // 0 means "already installed".
/******/ 		
/******/ 					// a Promise means "currently loading".
/******/ 					if(installedChunkData) {
/******/ 						promises.push(installedChunkData[2]);
/******/ 					} else {
/******/ 						if(true) { // all chunks have JS
/******/ 							// setup Promise in chunk cache
/******/ 							var promise = new Promise((resolve, reject) => {
/******/ 								installedChunkData = installedChunks[chunkId] = [resolve, reject];
/******/ 							});
/******/ 							promises.push(installedChunkData[2] = promise);
/******/ 		
/******/ 							// start chunk loading
/******/ 							var url = __webpack_require__.p + __webpack_require__.u(chunkId);
/******/ 							// create error before stack unwound to get useful stacktrace later
/******/ 							var error = new Error();
/******/ 							var loadingEnded = (event) => {
/******/ 								if(__webpack_require__.o(installedChunks, chunkId)) {
/******/ 									installedChunkData = installedChunks[chunkId];
/******/ 									if(installedChunkData !== 0) installedChunks[chunkId] = undefined;
/******/ 									if(installedChunkData) {
/******/ 										var errorType = event && (event.type === 'load' ? 'missing' : event.type);
/******/ 										var realSrc = event && event.target && event.target.src;
/******/ 										error.message = 'Loading chunk ' + chunkId + ' failed.\n(' + errorType + ': ' + realSrc + ')';
/******/ 										error.name = 'ChunkLoadError';
/******/ 										error.type = errorType;
/******/ 										error.request = realSrc;
/******/ 										installedChunkData[1](error);
/******/ 									}
/******/ 								}
/******/ 							};
/******/ 							__webpack_require__.l(url, loadingEnded, "chunk-" + chunkId);
/******/ 						} else installedChunks[chunkId] = 0;
/******/ 					}
/******/ 				}
/******/ 		};
/******/ 		
/******/ 		// no prefetching
/******/ 		
/******/ 		// no preloaded
/******/ 		
/******/ 		// no HMR
/******/ 		
/******/ 		// no HMR manifest
/******/ 		
/******/ 		// no deferred startup
/******/ 		
/******/ 		// install a JSONP callback for chunk loading
/******/ 		var webpackJsonpCallback = (data) => {
/******/ 			var [chunkIds, moreModules, runtime] = data;
/******/ 			// add "moreModules" to the modules object,
/******/ 			// then flag all "chunkIds" as loaded and fire callback
/******/ 			var moduleId, chunkId, i = 0, resolves = [];
/******/ 			for(;i < chunkIds.length; i++) {
/******/ 				chunkId = chunkIds[i];
/******/ 				if(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {
/******/ 					resolves.push(installedChunks[chunkId][0]);
/******/ 				}
/******/ 				installedChunks[chunkId] = 0;
/******/ 			}
/******/ 			for(moduleId in moreModules) {
/******/ 				if(__webpack_require__.o(moreModules, moduleId)) {
/******/ 					__webpack_require__.m[moduleId] = moreModules[moduleId];
/******/ 				}
/******/ 			}
/******/ 			if(runtime) runtime(__webpack_require__);
/******/ 			parentChunkLoadingFunction(data);
/******/ 			while(resolves.length) {
/******/ 				resolves.shift()();
/******/ 			}
/******/ 		
/******/ 		}
/******/ 		
/******/ 		var chunkLoadingGlobal = self["webpackChunkmy_webpack_project"] = self["webpackChunkmy_webpack_project"] || [];
/******/ 		var parentChunkLoadingFunction = chunkLoadingGlobal.push.bind(chunkLoadingGlobal);
/******/ 		chunkLoadingGlobal.push = webpackJsonpCallback;
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	// startup
/******/ 	// Load entry module
/******/ 	__webpack_require__("./src/app/index.js");
/******/ 	// This entry module used 'exports' so it can't be inlined
/******/ })()
;